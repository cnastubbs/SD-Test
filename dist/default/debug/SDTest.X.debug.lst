

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 28 15:13:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=3
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=3
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   131                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   134   000000                     
   135                           ; Generated 12/10/2023 GMT
   136                           ; 
   137                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution. Publication is not required when
   151                           ;        this file is used in an embedded application.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F26K83 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169   000000                     
   170 ;; Function _can_send_rdy is unused but had its address taken
   171   000000                     
   172 ;; Function _SPI1_WriteBlock is unused but had its address taken
   173   000000                     
   174 ;; Function _SPI1_ReadBlock is unused but had its address taken
   175   000000                     
   176 ;; Function _SPI1_WriteByte is unused but had its address taken
   177   000000                     
   178 ;; Function _SPI1_ReadByte is unused but had its address taken
   179   000000                     
   180                           	psect	idataCOMRAM
   181   00919A                     __pidataCOMRAM:
   182                           	callstack 0
   183                           
   184                           ;initializer for _mediaInformation
   185   00919A  00                 	db	0
   186   00919B  0200               	dw	512
   187   00919D  00                 	db	0
   188   00919E  0000               	dw	0
   189   0091A0  0000               	dw	0
   190   0091A2  00                 	db	0
   191                           
   192                           	psect	mediumconst
   193   00FEC4                     __pmediumconst:
   194                           	callstack 0
   195   00FEC4  00                 	db	0
   196   00FEC5                     _ExCvt:
   197                           	callstack 0
   198   00FEC5  80                 	db	128
   199   00FEC6  9A                 	db	154
   200   00FEC7  45                 	db	69
   201   00FEC8  41                 	db	65
   202   00FEC9  8E                 	db	142
   203   00FECA  41                 	db	65
   204   00FECB  8F                 	db	143
   205   00FECC  80                 	db	128
   206   00FECD  45                 	db	69
   207   00FECE  45                 	db	69
   208   00FECF  45                 	db	69
   209   00FED0  49                 	db	73
   210   00FED1  49                 	db	73
   211   00FED2  49                 	db	73
   212   00FED3  8E                 	db	142
   213   00FED4  8F                 	db	143
   214   00FED5  90                 	db	144
   215   00FED6  92                 	db	146
   216   00FED7  92                 	db	146
   217   00FED8  4F                 	db	79
   218   00FED9  99                 	db	153
   219   00FEDA  4F                 	db	79
   220   00FEDB  55                 	db	85
   221   00FEDC  55                 	db	85
   222   00FEDD  59                 	db	89
   223   00FEDE  99                 	db	153
   224   00FEDF  9A                 	db	154
   225   00FEE0  9B                 	db	155
   226   00FEE1  9C                 	db	156
   227   00FEE2  9D                 	db	157
   228   00FEE3  9E                 	db	158
   229   00FEE4  9F                 	db	159
   230   00FEE5  41                 	db	65
   231   00FEE6  49                 	db	73
   232   00FEE7  4F                 	db	79
   233   00FEE8  55                 	db	85
   234   00FEE9  A5                 	db	165
   235   00FEEA  A5                 	db	165
   236   00FEEB  A6                 	db	166
   237   00FEEC  A7                 	db	167
   238   00FEED  A8                 	db	168
   239   00FEEE  A9                 	db	169
   240   00FEEF  AA                 	db	170
   241   00FEF0  AB                 	db	171
   242   00FEF1  AC                 	db	172
   243   00FEF2  AD                 	db	173
   244   00FEF3  AE                 	db	174
   245   00FEF4  AF                 	db	175
   246   00FEF5  B0                 	db	176
   247   00FEF6  B1                 	db	177
   248   00FEF7  B2                 	db	178
   249   00FEF8  B3                 	db	179
   250   00FEF9  B4                 	db	180
   251   00FEFA  B5                 	db	181
   252   00FEFB  B6                 	db	182
   253   00FEFC  B7                 	db	183
   254   00FEFD  B8                 	db	184
   255   00FEFE  B9                 	db	185
   256   00FEFF  BA                 	db	186
   257   00FF00  BB                 	db	187
   258   00FF01  BC                 	db	188
   259   00FF02  BD                 	db	189
   260   00FF03  BE                 	db	190
   261   00FF04  BF                 	db	191
   262   00FF05  C0                 	db	192
   263   00FF06  C1                 	db	193
   264   00FF07  C2                 	db	194
   265   00FF08  C3                 	db	195
   266   00FF09  C4                 	db	196
   267   00FF0A  C5                 	db	197
   268   00FF0B  C6                 	db	198
   269   00FF0C  C7                 	db	199
   270   00FF0D  C8                 	db	200
   271   00FF0E  C9                 	db	201
   272   00FF0F  CA                 	db	202
   273   00FF10  CB                 	db	203
   274   00FF11  CC                 	db	204
   275   00FF12  CD                 	db	205
   276   00FF13  CE                 	db	206
   277   00FF14  CF                 	db	207
   278   00FF15  D0                 	db	208
   279   00FF16  D1                 	db	209
   280   00FF17  D2                 	db	210
   281   00FF18  D3                 	db	211
   282   00FF19  D4                 	db	212
   283   00FF1A  D5                 	db	213
   284   00FF1B  D6                 	db	214
   285   00FF1C  D7                 	db	215
   286   00FF1D  D8                 	db	216
   287   00FF1E  D9                 	db	217
   288   00FF1F  DA                 	db	218
   289   00FF20  DB                 	db	219
   290   00FF21  DC                 	db	220
   291   00FF22  DD                 	db	221
   292   00FF23  DE                 	db	222
   293   00FF24  DF                 	db	223
   294   00FF25  E0                 	db	224
   295   00FF26  E1                 	db	225
   296   00FF27  E2                 	db	226
   297   00FF28  E3                 	db	227
   298   00FF29  E4                 	db	228
   299   00FF2A  E5                 	db	229
   300   00FF2B  E6                 	db	230
   301   00FF2C  E7                 	db	231
   302   00FF2D  E8                 	db	232
   303   00FF2E  E9                 	db	233
   304   00FF2F  EA                 	db	234
   305   00FF30  EB                 	db	235
   306   00FF31  EC                 	db	236
   307   00FF32  ED                 	db	237
   308   00FF33  EE                 	db	238
   309   00FF34  EF                 	db	239
   310   00FF35  F0                 	db	240
   311   00FF36  F1                 	db	241
   312   00FF37  F2                 	db	242
   313   00FF38  F3                 	db	243
   314   00FF39  F4                 	db	244
   315   00FF3A  F5                 	db	245
   316   00FF3B  F6                 	db	246
   317   00FF3C  F7                 	db	247
   318   00FF3D  F8                 	db	248
   319   00FF3E  F9                 	db	249
   320   00FF3F  FA                 	db	250
   321   00FF40  FB                 	db	251
   322   00FF41  FC                 	db	252
   323   00FF42  FD                 	db	253
   324   00FF43  FE                 	db	254
   325   00FF44  FF                 	db	255
   326   00FF45                     __end_of_ExCvt:
   327                           	callstack 0
   328   00FF45                     _sdmmc_cmdtable:
   329                           	callstack 0
   330   00FF45  00                 	db	0
   331   00FF46  95                 	db	149
   332   00FF47  00                 	db	0
   333   00FF48  00                 	db	0
   334   00FF49  01                 	db	1
   335   00FF4A  F9                 	db	249
   336   00FF4B  00                 	db	0
   337   00FF4C  00                 	db	0
   338   00FF4D  08                 	db	8
   339   00FF4E  87                 	db	135
   340   00FF4F  04                 	db	4
   341   00FF50  00                 	db	0
   342   00FF51  09                 	db	9
   343   00FF52  AF                 	db	175
   344   00FF53  00                 	db	0
   345   00FF54  01                 	db	1
   346   00FF55  0A                 	db	10
   347   00FF56  1B                 	db	27
   348   00FF57  00                 	db	0
   349   00FF58  01                 	db	1
   350   00FF59  0C                 	db	12
   351   00FF5A  C3                 	db	195
   352   00FF5B  01                 	db	1
   353   00FF5C  00                 	db	0
   354   00FF5D  0D                 	db	13
   355   00FF5E  AF                 	db	175
   356   00FF5F  02                 	db	2
   357   00FF60  00                 	db	0
   358   00FF61  10                 	db	16
   359   00FF62  FF                 	db	255
   360   00FF63  00                 	db	0
   361   00FF64  00                 	db	0
   362   00FF65  11                 	db	17
   363   00FF66  FF                 	db	255
   364   00FF67  00                 	db	0
   365   00FF68  01                 	db	1
   366   00FF69  12                 	db	18
   367   00FF6A  FF                 	db	255
   368   00FF6B  00                 	db	0
   369   00FF6C  01                 	db	1
   370   00FF6D  18                 	db	24
   371   00FF6E  FF                 	db	255
   372   00FF6F  00                 	db	0
   373   00FF70  01                 	db	1
   374   00FF71  19                 	db	25
   375   00FF72  FF                 	db	255
   376   00FF73  00                 	db	0
   377   00FF74  01                 	db	1
   378   00FF75  20                 	db	32
   379   00FF76  FF                 	db	255
   380   00FF77  00                 	db	0
   381   00FF78  00                 	db	0
   382   00FF79  21                 	db	33
   383   00FF7A  FF                 	db	255
   384   00FF7B  00                 	db	0
   385   00FF7C  00                 	db	0
   386   00FF7D  26                 	db	38
   387   00FF7E  DF                 	db	223
   388   00FF7F  01                 	db	1
   389   00FF80  00                 	db	0
   390   00FF81  37                 	db	55
   391   00FF82  73                 	db	115
   392   00FF83  00                 	db	0
   393   00FF84  00                 	db	0
   394   00FF85  3A                 	db	58
   395   00FF86  25                 	db	37
   396   00FF87  04                 	db	4
   397   00FF88  00                 	db	0
   398   00FF89  3B                 	db	59
   399   00FF8A  25                 	db	37
   400   00FF8B  00                 	db	0
   401   00FF8C  00                 	db	0
   402   00FF8D  29                 	db	41
   403   00FF8E  FF                 	db	255
   404   00FF8F  04                 	db	4
   405   00FF90  00                 	db	0
   406   00FF91  17                 	db	23
   407   00FF92  FF                 	db	255
   408   00FF93  00                 	db	0
   409   00FF94  00                 	db	0
   410   00FF95                     __end_of_sdmmc_cmdtable:
   411                           	callstack 0
   412   00FF95                     _spiMaster:
   413                           	callstack 0
   414   00FF95  B4                 	db	low _SPI1_Close
   415   00FF96  91                 	db	high _SPI1_Close
   416   00FF97  A4                 	db	low _SDFAST_open
   417   00FF98  91                 	db	high _SDFAST_open
   418   00FF99  FC                 	db	low _SPI1_ExchangeByte
   419   00FF9A  8F                 	db	high _SPI1_ExchangeByte
   420   00FF9B  D4                 	db	low _SPI1_ExchangeBlock
   421   00FF9C  81                 	db	high _SPI1_ExchangeBlock
   422   00FF9D  00                 	db	0
   423   00FF9E  00                 	db	0
   424   00FF9F  00                 	db	0
   425   00FFA0  00                 	db	0
   426   00FFA1  00                 	db	0
   427   00FFA2  00                 	db	0
   428   00FFA3  00                 	db	0
   429   00FFA4  00                 	db	0
   430   00FFA5  00                 	db	0
   431   00FFA6  00                 	db	0
   432   00FFA7  00                 	db	0
   433   00FFA8  00                 	db	0
   434   00FFA9  B4                 	db	low _SPI1_Close
   435   00FFAA  91                 	db	high _SPI1_Close
   436   00FFAB  AC                 	db	low _SDSLOW_open
   437   00FFAC  91                 	db	high _SDSLOW_open
   438   00FFAD  FC                 	db	low _SPI1_ExchangeByte
   439   00FFAE  8F                 	db	high _SPI1_ExchangeByte
   440   00FFAF  D4                 	db	low _SPI1_ExchangeBlock
   441   00FFB0  81                 	db	high _SPI1_ExchangeBlock
   442   00FFB1  00                 	db	0
   443   00FFB2  00                 	db	0
   444   00FFB3  00                 	db	0
   445   00FFB4  00                 	db	0
   446   00FFB5  00                 	db	0
   447   00FFB6  00                 	db	0
   448   00FFB7  00                 	db	0
   449   00FFB8  00                 	db	0
   450   00FFB9  00                 	db	0
   451   00FFBA  00                 	db	0
   452   00FFBB  00                 	db	0
   453   00FFBC  00                 	db	0
   454   00FFBD                     __end_of_spiMaster:
   455                           	callstack 0
   456   00FFBD                     _spi1_configuration:
   457                           	callstack 0
   458   00FFBD  02                 	db	2
   459   00FFBE  20                 	db	32
   460   00FFBF  00                 	db	0
   461   00FFC0  01                 	db	1
   462   00FFC1  00                 	db	0
   463   00FFC2  02                 	db	2
   464   00FFC3  20                 	db	32
   465   00FFC4  00                 	db	0
   466   00FFC5  0E                 	db	14
   467   00FFC6  00                 	db	0
   468   00FFC7  02                 	db	2
   469   00FFC8  40                 	db	64
   470   00FFC9  00                 	db	0
   471   00FFCA  00                 	db	0
   472   00FFCB  00                 	db	0
   473   00FFCC                     __end_of_spi1_configuration:
   474                           	callstack 0
   475   000000                     _OSCTUNE	set	14814
   476   000000                     _OSCFRQ	set	14815
   477   000000                     _ADERRL	set	16098
   478   000000                     _ADERRH	set	16099
   479   000000                     _ADPREVL	set	16109
   480   000000                     _ADPREVH	set	16110
   481   000000                     _ADFLTRL	set	16102
   482   000000                     _ADFLTRH	set	16103
   483   000000                     _ADACCL	set	16104
   484   000000                     _ADACCH	set	16105
   485   000000                     _ADCNT	set	16107
   486   000000                     _ADRESL	set	16111
   487   000000                     _ADRESH	set	16112
   488   000000                     _ADCON0	set	16120
   489   000000                     _ADCON1	set	16121
   490   000000                     _ADPREH	set	16119
   491   000000                     _ADPREL	set	16118
   492   000000                     _ADCAP	set	16117
   493   000000                     _ADACQH	set	16116
   494   000000                     _ADPCH	set	16113
   495   000000                     _ADRPT	set	16108
   496   000000                     _ADACCU	set	16106
   497   000000                     _ADSTPTH	set	16101
   498   000000                     _ADSTPTL	set	16100
   499   000000                     _ADUTHH	set	16097
   500   000000                     _ADUTHL	set	16096
   501   000000                     _ADLTHH	set	16095
   502   000000                     _COMSTATbits	set	16272
   503   000000                     _ECANCONbits	set	16273
   504   000000                     _PIR5	set	14757
   505   000000                     _ANSELC0	set	119552
   506   000000                     _I2C1CON0bits	set	15731
   507   000000                     _I2C1ERRbits	set	15734
   508   000000                     _I2C1PIRbits	set	15737
   509   000000                     _SPI1CON0bits	set	15636
   510   000000                     _ADCON1bits	set	16121
   511   000000                     _ADSTATbits	set	16124
   512   000000                     _ADCON2bits	set	16122
   513   000000                     _ADCON3bits	set	16123
   514   000000                     _ADCON0bits	set	16120
   515   000000                     _TRISCbits	set	16324
   516   000000                     _LATA	set	16314
   517   000000                     _TRISC2	set	130594
   518   000000                     _TRISA4	set	130580
   519   000000                     _TRISA3	set	130579
   520   000000                     _TRISA2	set	130578
   521   000000                     _LATB3	set	130523
   522   000000                     _TRISB3	set	130587
   523   000000                     _LATC6	set	130534
   524   000000                     _TRISC6	set	130598
   525   000000                     _TRISC0	set	130592
   526   000000                     _TRISC1	set	130593
   527   000000                     _LATC2	set	130530
   528   000000                     _LATA4	set	130516
   529   000000                     _LATA3	set	130515
   530   000000                     _LATA2	set	130514
   531   000000                     _BRGCON1bits	set	14083
   532   000000                     _CIOCONbits	set	14080
   533   000000                     _CANSTATbits	set	16270
   534   000000                     _CANCONbits	set	16271
   535   000000                     _T0CON0bits	set	16312
   536   000000                     _INTCON0bits	set	16338
   537   000000                     _RXM0SIDH	set	14264
   538   000000                     _BRGCON3bits	set	14085
   539   000000                     _BRGCON2bits	set	14084
   540   000000                     _RXM1SIDH	set	14268
   541   000000                     _RXM0SIDL	set	14265
   542   000000                     _TXB0CONbits	set	14304
   543   000000                     _PIE5bits	set	14741
   544   000000                     _RXB0CONbits	set	16256
   545   000000                     _RXM1SIDL	set	14269
   546   000000                     _RXB0DLCbits	set	16261
   547   000000                     _RXB0SIDL	set	16258
   548   000000                     _RXB0SIDH	set	16257
   549   000000                     _PIR1bits	set	14753
   550   000000                     _PIR5bits	set	14757
   551   000000                     _TXB0DLCbits	set	14309
   552   000000                     _TXB0SIDL	set	14306
   553   000000                     _TXB0SIDH	set	14305
   554   000000                     _RXB1CONbits	set	14320
   555   000000                     _RXB1SIDH	set	14321
   556   000000                     _TXB0D0	set	14310
   557   000000                     _PMD0	set	14784
   558   000000                     _OSCCON1	set	14809
   559   000000                     _ADLTHL	set	16094
   560   000000                     _RXB0D0	set	16262
   561   000000                     _RXB1DLCbits	set	14325
   562   000000                     _RXB1SIDL	set	14322
   563   000000                     _PIE3bits	set	14739
   564   000000                     _RXB1D0	set	14326
   565   000000                     _TRISA	set	16322
   566   000000                     _LATC	set	16316
   567   000000                     _LATB	set	16315
   568   000000                     _LATAbits	set	16314
   569   000000                     _T0CON1bits	set	16313
   570   000000                     _ADACQL	set	16115
   571   000000                     _ADCLK	set	16127
   572   000000                     _ADACT	set	16126
   573   000000                     _ADREF	set	16125
   574   000000                     _ADSTAT	set	16124
   575   000000                     _ADCON3	set	16123
   576   000000                     _ADCON2	set	16122
   577   000000                     _PIR3bits	set	14755
   578   000000                     _PIR2bits	set	14754
   579   000000                     _OSCCON3	set	14811
   580   000000                     _OSCEN	set	14813
   581   000000                     _RC1PPS	set	14865
   582   000000                     _RC3PPS	set	14867
   583   000000                     _ANSELA	set	14912
   584   000000                     _ANSELB	set	14928
   585   000000                     _ANSELC	set	14944
   586   000000                     _PMD7	set	14791
   587   000000                     _PMD6	set	14790
   588   000000                     _PMD5	set	14789
   589   000000                     _PMD4	set	14788
   590   000000                     _PMD3	set	14787
   591   000000                     _PMD2	set	14786
   592   000000                     _PMD1	set	14785
   593   000000                     _TRISC	set	16324
   594   000000                     _TRISB	set	16323
   595   000000                     _INLVLC	set	14948
   596   000000                     _SLRCONC	set	14947
   597   000000                     _ODCONC	set	14946
   598   000000                     _WPUC	set	14945
   599   000000                     _WPUE	set	14977
   600   000000                     _INLVLB	set	14932
   601   000000                     _SLRCONB	set	14931
   602   000000                     _ODCONB	set	14930
   603   000000                     _WPUB	set	14929
   604   000000                     _INLVLA	set	14916
   605   000000                     _SLRCONA	set	14915
   606   000000                     _ODCONA	set	14914
   607   000000                     _WPUA	set	14913
   608   000000                     _INLVLE	set	14980
   609   000000                     _SPI1SCKPPS	set	15072
   610   000000                     _CANRXPPS	set	15085
   611   000000                     _CLKRCON	set	15589
   612   000000                     _SPI1RXB	set	15632
   613   000000                     _SPI1TXB	set	15633
   614   000000                     _SPI1TCNTL	set	15634
   615   000000                     _SPI1CON0	set	15636
   616   000000                     _SPI1SDIPPS	set	15073
   617   000000                     _RC5PPS	set	14869
   618   000000                     _SPI1BAUD	set	15641
   619   000000                     _SPI1CLK	set	15644
   620   000000                     _SPI1CON2	set	15638
   621   000000                     _SPI1CON1	set	15637
   622   000000                     _I2C1RXB	set	15722
   623   000000                     _I2C1TXB	set	15723
   624   000000                     _I2C1CNT	set	15724
   625   000000                     _I2C1ADB1	set	15726
   626   000000                     _I2C1CON0	set	15731
   627   000000                     _I2C1STAT1bits	set	15736
   628   000000                     _I2C1ERR	set	15734
   629   000000                     _I2C1PIR	set	15737
   630   000000                     _I2C1CLK	set	15739
   631   000000                     _I2C1CON2	set	15733
   632   000000                     _I2C1CON1	set	15732
   633   000000                     _CLKRCLK	set	15590
   634   00FFCC                     STR_1:
   635   00FFCC  22                 	db	34
   636   00FFCD  2A                 	db	42
   637   00FFCE  2B                 	db	43
   638   00FFCF  2C                 	db	44
   639   00FFD0  3A                 	db	58	;':'
   640   00FFD1  3B                 	db	59	;';'
   641   00FFD2  3C                 	db	60	;'<'
   642   00FFD3  3D                 	db	61	;'='
   643   00FFD4  3E                 	db	62	;'>'
   644   00FFD5  3F                 	db	63	;'?'
   645   00FFD6  5B                 	db	91	;'['
   646   00FFD7  5D                 	db	93	;']'
   647   00FFD8  7C                 	db	124
   648   00FFD9  7F                 	db	127
   649   00FFDA  00                 	db	0
   650   00FFDB                     STR_9:
   651   00FFDB  42                 	db	66	;'B'
   652   00FFDC  45                 	db	69	;'E'
   653   00FFDD  47                 	db	71	;'G'
   654   00FFDE  49                 	db	73	;'I'
   655   00FFDF  4E                 	db	78	;'N'
   656   00FFE0  20                 	db	32
   657   00FFE1  4C                 	db	76	;'L'
   658   00FFE2  4F                 	db	79	;'O'
   659   00FFE3  47                 	db	71	;'G'
   660   00FFE4  0D                 	db	13
   661   00FFE5  0A                 	db	10
   662   00FFE6  00                 	db	0
   663   00FFE7                     STR_8:
   664   00FFE7  44                 	db	68	;'D'
   665   00FFE8  61                 	db	97	;'a'
   666   00FFE9  74                 	db	116	;'t'
   667   00FFEA  61                 	db	97	;'a'
   668   00FFEB  2E                 	db	46
   669   00FFEC  74                 	db	116	;'t'
   670   00FFED  78                 	db	120	;'x'
   671   00FFEE  74                 	db	116	;'t'
   672   00FFEF  00                 	db	0
   673   00FFF0                     STR_5:
   674   00FFF0  46                 	db	70	;'F'
   675   00FFF1  41                 	db	65	;'A'
   676   00FFF2  54                 	db	84	;'T'
   677   00FFF3  33                 	db	51	;'3'
   678   00FFF4  32                 	db	50	;'2'
   679   00FFF5  00                 	db	0
   680   00FFF6                     STR_11:
   681   00FFF6  25                 	db	37
   682   00FFF7  64                 	db	100	;'d'
   683   00FFF8  0D                 	db	13
   684   00FFF9  0A                 	db	10
   685   00FFFA  00                 	db	0
   686   00FFFB                     STR_3:
   687   00FFFB  46                 	db	70	;'F'
   688   00FFFC  41                 	db	65	;'A'
   689   00FFFD  54                 	db	84	;'T'
   690   00FFFE  00                 	db	0
   691   00FFFF  00                 	db	0	; dummy byte at the end
   692   000000                     
   693                           ; #config settings
   694                           
   695                           	psect	cinit
   696   008796                     __pcinit:
   697                           	callstack 0
   698   008796                     start_initialization:
   699                           	callstack 0
   700   008796                     __initialization:
   701                           	callstack 0
   702                           
   703                           ; Initialize objects allocated to COMRAM (9 bytes)
   704                           ; load TBLPTR registers with __pidataCOMRAM
   705   008796  0E9A               	movlw	low __pidataCOMRAM
   706   008798  6EF6               	movwf	tblptrl,c
   707   00879A  0E91               	movlw	high __pidataCOMRAM
   708   00879C  6EF7               	movwf	tblptrh,c
   709   00879E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   710   0087A0  6EF8               	movwf	tblptru,c
   711   0087A2  EE00  F050         	lfsr	0,__pdataCOMRAM
   712   0087A6  EE10 F009          	lfsr	1,9
   713   0087AA                     copy_data0:
   714   0087AA  0009               	tblrd		*+
   715   0087AC  006F FFD7 FFEE     	movff	tablat,postinc0
   716   0087B2  50E5               	movf	postdec1,w,c
   717   0087B4  50E1               	movf	fsr1l,w,c
   718   0087B6  E1F9               	bnz	copy_data0
   719                           
   720                           ; Clear objects allocated to BIGRAM (1109 bytes)
   721   0087B8  EE00  F284         	lfsr	0,__pbssBIGRAM
   722   0087BC  EE11 F055          	lfsr	1,1109
   723   0087C0                     clear_0:
   724   0087C0  6AEE               	clrf	postinc0,c
   725   0087C2  50E5               	movf	postdec1,w,c
   726   0087C4  50E1               	movf	fsr1l,w,c
   727   0087C6  E1FC               	bnz	clear_0
   728   0087C8  50E2               	movf	fsr1h,w,c
   729   0087CA  E1FA               	bnz	clear_0
   730                           
   731                           ; Clear objects allocated to BANK2 (132 bytes)
   732   0087CC  EE00  F200         	lfsr	0,__pbssBANK2
   733   0087D0  0E84               	movlw	132
   734   0087D2                     clear_1:
   735   0087D2  6AEE               	clrf	postinc0,c
   736   0087D4  06E8               	decf	wreg,f,c
   737   0087D6  E1FD               	bnz	clear_1
   738                           
   739                           ; Clear objects allocated to BANK1 (43 bytes)
   740   0087D8  EE00  F1CF         	lfsr	0,__pbssBANK1
   741   0087DC  0E2B               	movlw	43
   742   0087DE                     clear_2:
   743   0087DE  6AEE               	clrf	postinc0,c
   744   0087E0  06E8               	decf	wreg,f,c
   745   0087E2  E1FD               	bnz	clear_2
   746                           
   747                           ; Clear objects allocated to COMRAM (35 bytes)
   748   0087E4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   749   0087E8  0E23               	movlw	35
   750   0087EA                     clear_3:
   751   0087EA  6AEE               	clrf	postinc0,c
   752   0087EC  06E8               	decf	wreg,f,c
   753   0087EE  E1FD               	bnz	clear_3
   754                           
   755                           ;
   756                           ; Setup IVTBASE
   757                           ;
   758   0087F0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   759   0087F2  6ED5               	movwf	213,c
   760   0087F4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   761   0087F6  6ED6               	movwf	214,c
   762   0087F8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   763   0087FA  6ED7               	movwf	215,c
   764   0087FC                     end_of_initialization:
   765                           	callstack 0
   766   0087FC                     __end_of__initialization:
   767                           	callstack 0
   768   0087FC  0100               	movlb	0
   769   0087FE  EF44  F02C         	goto	_main	;jump to C main() function
   770                           
   771                           	psect	bssCOMRAM
   772   00002D                     __pbssCOMRAM:
   773                           	callstack 0
   774   00002D                     _ioInfo:
   775                           	callstack 0
   776   00002D                     	ds	13
   777   00003A                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   778                           	callstack 0
   779   00003A                     	ds	4
   780   00003E                     _millis_counter:
   781                           	callstack 0
   782   00003E                     	ds	4
   783   000042                     SD_SPI_AsyncWriteTasks@blockCounter:
   784                           	callstack 0
   785   000042                     	ds	2
   786   000044                     SD_SPI_AsyncReadTasks@blockCounter:
   787                           	callstack 0
   788   000044                     	ds	2
   789   000046                     _can_rcv_cb:
   790                           	callstack 0
   791   000046                     	ds	2
   792   000048                     _flags:
   793                           	callstack 0
   794   000048                     	ds	1
   795   000049                     _seen_can_message:
   796                           	callstack 0
   797   000049                     	ds	1
   798   00004A                     SD_SPI_AsyncWriteTasks@command:
   799                           	callstack 0
   800   00004A                     	ds	1
   801   00004B                     SD_SPI_AsyncWriteTasks@data_byte:
   802                           	callstack 0
   803   00004B                     	ds	1
   804   00004C                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   805                           	callstack 0
   806   00004C                     	ds	1
   807   00004D                     _CurrVol:
   808                           	callstack 0
   809   00004D                     	ds	1
   810   00004E                     _overflow_flag:
   811                           	callstack 0
   812   00004E                     	ds	1
   813   00004F                     timer0_handle_interrupt@internal_count:
   814                           	callstack 0
   815   00004F                     	ds	1
   816                           
   817                           	psect	dataCOMRAM
   818   000050                     __pdataCOMRAM:
   819                           	callstack 0
   820   000050                     _mediaInformation:
   821                           	callstack 0
   822   000050                     	ds	9
   823                           
   824                           	psect	bssBANK1
   825   0001CF                     __pbssBANK1:
   826                           	callstack 0
   827   0001CF                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   828                           	callstack 0
   829   0001CF                     	ds	4
   830   0001D3                     _ctx:
   831                           	callstack 0
   832   0001D3                     	ds	4
   833   0001D7                     	ds	3
   834   0001DA                     _width:
   835                           	callstack 0
   836   0001DA                     	ds	2
   837   0001DC                     _prec:
   838                           	callstack 0
   839   0001DC                     	ds	2
   840   0001DE                     	ds	2
   841   0001E0                     _Fsid:
   842                           	callstack 0
   843   0001E0                     	ds	2
   844   0001E2                     _FatFs@ff$F2407:
   845                           	callstack 0
   846   0001E2                     	ds	2
   847   0001E4                     _buf@can_tx_buffer$F1072:
   848                           	callstack 0
   849   0001E4                     	ds	10
   850   0001EE                     _buf:
   851                           	callstack 0
   852   0001EE                     	ds	10
   853   0001F8                     _bw:
   854                           	callstack 0
   855   0001F8                     	ds	2
   856                           
   857                           	psect	bssBANK2
   858   000200                     __pbssBANK2:
   859                           	callstack 0
   860   000200                     _dbuf:
   861                           	callstack 0
   862   000200                     	ds	32
   863   000220                     _tx_pool:
   864                           	callstack 0
   865   000220                     	ds	100
   866                           
   867                           	psect	bssBIGRAM
   868   000284                     __pbssBIGRAM:
   869                           	callstack 0
   870   000284                     _FatFs:
   871                           	callstack 0
   872   000284                     	ds	563
   873   0004B7                     _Fil:
   874                           	callstack 0
   875   0004B7                     	ds	546
   876                           
   877                           	psect	cstackBANK1
   878   000100                     __pcstackBANK1:
   879                           	callstack 0
   880   000100                     ??_remove_chain:
   881   000100                     ??_create_chain:
   882   000100                     dir_sdi@csz:
   883                           	callstack 0
   884   000100                     find_volume@br:
   885                           	callstack 0
   886                           
   887                           ; 16 bytes @ 0x0
   888   000100                     	ds	4
   889   000104                     dir_sdi@clst:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x4
   893   000104                     	ds	4
   894   000108                     create_chain@res:
   895                           	callstack 0
   896   000108                     dir_sdi@fs:
   897                           	callstack 0
   898   000108                     remove_chain@nxt:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x8
   902   000108                     	ds	1
   903   000109                     create_chain@scl:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x9
   907   000109                     	ds	3
   908   00010C                     remove_chain@res:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0xC
   912   00010C                     	ds	1
   913   00010D                     remove_chain@fs:
   914                           	callstack 0
   915   00010D                     create_chain@ncl:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0xD
   919   00010D                     	ds	3
   920   000110                     _find_volume$3099:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x10
   924   000110                     	ds	1
   925   000111                     create_chain@fs:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x11
   929   000111                     	ds	2
   930   000113                     create_chain@cs:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x13
   934   000113                     	ds	1
   935   000114                     _find_volume$3100:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x14
   939   000114                     	ds	2
   940   000116                     find_volume@szbfat:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x16
   944   000116                     	ds	1
   945   000117                     ??_dir_next:
   946   000117                     f_write@fp:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x17
   950   000117                     	ds	2
   951   000119                     f_write@buff:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x19
   955   000119                     	ds	1
   956   00011A                     find_volume@pt:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1A
   960   00011A                     	ds	1
   961   00011B                     f_write@btw:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x1B
   965   00011B                     	ds	1
   966   00011C                     find_volume@sysect:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x1C
   970   00011C                     	ds	1
   971   00011D                     f_write@bw:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x1D
   975   00011D                     	ds	2
   976   00011F                     ??_f_write:
   977                           
   978                           ; 1 bytes @ 0x1F
   979   00011F                     	ds	1
   980   000120                     find_volume@vol:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x20
   984   000120                     	ds	2
   985   000122                     find_volume@nrsv:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x22
   989   000122                     	ds	1
   990   000123                     dir_next@ofs:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x23
   994   000123                     	ds	1
   995   000124                     find_volume@tsect:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x24
   999   000124                     	ds	3
  1000   000127                     dir_next@fs:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x27
  1004   000127                     	ds	1
  1005   000128                     find_volume@stat:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x28
  1009   000128                     	ds	1
  1010   000129                     dir_next@clst:
  1011                           	callstack 0
  1012   000129                     find_volume@nclst:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x29
  1016   000129                     	ds	2
  1017   00012B                     _f_write$3415:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x2B
  1021   00012B                     	ds	2
  1022   00012D                     dir_alloc@dp:
  1023                           	callstack 0
  1024   00012D                     dir_find@dp:
  1025                           	callstack 0
  1026   00012D                     find_volume@fasize:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x2D
  1030   00012D                     	ds	2
  1031   00012F                     dir_alloc@nent:
  1032                           	callstack 0
  1033   00012F                     dir_find@fs:
  1034                           	callstack 0
  1035   00012F                     f_write@wbuff:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x2F
  1039   00012F                     	ds	2
  1040   000131                     ??_dir_alloc:
  1041   000131                     dir_find@c:
  1042                           	callstack 0
  1043   000131                     f_write@res:
  1044                           	callstack 0
  1045   000131                     find_volume@bsect:
  1046                           	callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x31
  1049   000131                     	ds	1
  1050   000132                     dir_find@res:
  1051                           	callstack 0
  1052   000132                     f_write@csect:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x32
  1056   000132                     	ds	1
  1057   000133                     follow_path@dp:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x33
  1061   000133                     	ds	1
  1062   000134                     dir_alloc@fs:
  1063                           	callstack 0
  1064   000134                     f_write@cc:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x34
  1068   000134                     	ds	1
  1069   000135                     follow_path@path:
  1070                           	callstack 0
  1071   000135                     find_volume@i:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x35
  1075   000135                     	ds	1
  1076   000136                     dir_alloc@n:
  1077                           	callstack 0
  1078   000136                     f_write@sect:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x36
  1082   000136                     	ds	1
  1083   000137                     ??_follow_path:
  1084   000137                     find_volume@fmt:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x37
  1088   000137                     	ds	1
  1089   000138                     dir_alloc@res:
  1090                           	callstack 0
  1091   000138                     find_volume@fs:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x38
  1095   000138                     	ds	1
  1096   000139                     dir_register@dp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x39
  1100   000139                     	ds	1
  1101   00013A                     f_write@clst:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x3A
  1105   00013A                     	ds	1
  1106   00013B                     dir_register@fs:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x3B
  1110   00013B                     	ds	2
  1111   00013D                     dir_register@res:
  1112                           	callstack 0
  1113   00013D                     follow_path@fs:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x3D
  1117   00013D                     	ds	1
  1118   00013E                     f_write@wcnt:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x3E
  1122   00013E                     	ds	1
  1123   00013F                     follow_path@ns:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x3F
  1127   00013F                     	ds	1
  1128   000140                     follow_path@res:
  1129                           	callstack 0
  1130   000140                     f_write@fs:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x40
  1134   000140                     	ds	1
  1135   000141                     f_open@fp:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x41
  1139   000141                     	ds	2
  1140   000143                     f_open@path:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x43
  1144   000143                     	ds	2
  1145   000145                     f_open@mode:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x45
  1149   000145                     	ds	1
  1150   000146                     ??_f_open:
  1151                           
  1152                           ; 1 bytes @ 0x46
  1153   000146                     	ds	8
  1154   00014E                     f_open@dw:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x4E
  1158   00014E                     	ds	4
  1159   000152                     f_open@sc:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x52
  1163   000152                     	ds	4
  1164   000156                     f_open@bcs:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x56
  1168   000156                     	ds	4
  1169   00015A                     f_open@cl:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x5A
  1173   00015A                     	ds	4
  1174   00015E                     f_open@ofs:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x5E
  1178   00015E                     	ds	4
  1179   000162                     f_open@clst:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x62
  1183   000162                     	ds	4
  1184   000166                     f_open@fs:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x66
  1188   000166                     	ds	2
  1189   000168                     f_open@res:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x68
  1193   000168                     	ds	1
  1194   000169                     f_open@dj:
  1195                           	callstack 0
  1196                           
  1197                           ; 40 bytes @ 0x69
  1198   000169                     	ds	40
  1199   000191                     send_status_ok@text:
  1200                           	callstack 0
  1201                           
  1202                           ; 32 bytes @ 0x91
  1203   000191                     	ds	32
  1204   0001B1                     send_status_ok@time:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0xB1
  1208   0001B1                     	ds	4
  1209   0001B5                     send_status_ok@board_stat_msg:
  1210                           	callstack 0
  1211                           
  1212                           ; 11 bytes @ 0xB5
  1213   0001B5                     	ds	11
  1214   0001C0                     ??_main:
  1215                           
  1216                           ; 1 bytes @ 0xC0
  1217   0001C0                     	ds	4
  1218   0001C4                     main@last_status_millis:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0xC4
  1222   0001C4                     	ds	4
  1223   0001C8                     main@can_setup:
  1224                           	callstack 0
  1225                           
  1226                           ; 7 bytes @ 0xC8
  1227   0001C8                     	ds	7
  1228                           
  1229                           	psect	cstackBANK0
  1230   000060                     __pcstackBANK0:
  1231                           	callstack 0
  1232   000060                     ??_SPI1_Open:
  1233   000060                     ?_ld_word:
  1234                           	callstack 0
  1235   000060                     ?_mem_cmp:
  1236                           	callstack 0
  1237   000060                     ?_chk_chr:
  1238                           	callstack 0
  1239   000060                     ?_dbc_1st:
  1240                           	callstack 0
  1241   000060                     ?_dbc_2nd:
  1242                           	callstack 0
  1243   000060                     ?_get_ldnumber:
  1244                           	callstack 0
  1245   000060                     ?___awdiv:
  1246                           	callstack 0
  1247   000060                     ?___awmod:
  1248                           	callstack 0
  1249   000060                     ?___lwdiv:
  1250                           	callstack 0
  1251   000060                     ?_millis:
  1252                           	callstack 0
  1253   000060                     ?_ld_dword:
  1254                           	callstack 0
  1255   000060                     ?___lmul:
  1256                           	callstack 0
  1257   000060                     ?___lldiv:
  1258                           	callstack 0
  1259   000060                     disk_status@pdrv:
  1260                           	callstack 0
  1261   000060                     disk_ioctl@cmd:
  1262                           	callstack 0
  1263   000060                     SPI1_ExchangeByte@data:
  1264                           	callstack 0
  1265   000060                     i2c_init@clkdiv:
  1266                           	callstack 0
  1267   000060                     i2c_write@data:
  1268                           	callstack 0
  1269   000060                     i2c_read@data:
  1270                           	callstack 0
  1271   000060                     SET_ACCEL_I2C_ADDR@addr:
  1272                           	callstack 0
  1273   000060                     can_init@timing:
  1274                           	callstack 0
  1275   000060                     ld_word@ptr:
  1276                           	callstack 0
  1277   000060                     ld_dword@ptr:
  1278                           	callstack 0
  1279   000060                     st_word@ptr:
  1280                           	callstack 0
  1281   000060                     st_dword@ptr:
  1282                           	callstack 0
  1283   000060                     mem_cpy@dst:
  1284                           	callstack 0
  1285   000060                     mem_set@dst:
  1286                           	callstack 0
  1287   000060                     mem_cmp@dst:
  1288                           	callstack 0
  1289   000060                     chk_chr@str:
  1290                           	callstack 0
  1291   000060                     get_ldnumber@path:
  1292                           	callstack 0
  1293   000060                     SPI1_ExchangeBlock@block:
  1294                           	callstack 0
  1295   000060                     ___awdiv@dividend:
  1296                           	callstack 0
  1297   000060                     ___awmod@dividend:
  1298                           	callstack 0
  1299   000060                     ___lwdiv@dividend:
  1300                           	callstack 0
  1301   000060                     memcpy@d1:
  1302                           	callstack 0
  1303   000060                     memset@dest:
  1304                           	callstack 0
  1305   000060                     fputc@c:
  1306                           	callstack 0
  1307   000060                     can_generate_timing_params@can_frequency:
  1308                           	callstack 0
  1309   000060                     write_timestamp_3bytes@timestamp:
  1310                           	callstack 0
  1311   000060                     ___lmul@multiplier:
  1312                           	callstack 0
  1313   000060                     ___lldiv@dividend:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x0
  1317   000060                     	ds	1
  1318   000061                     ??_SD_SPI_DelayMilliseconds:
  1319   000061                     disk_status@stat:
  1320                           	callstack 0
  1321   000061                     SPI1_Open@spi1UniqueConfiguration:
  1322                           	callstack 0
  1323   000061                     i2c_write@len:
  1324                           	callstack 0
  1325   000061                     i2c_read@len:
  1326                           	callstack 0
  1327   000061                     disk_ioctl@buff:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x1
  1331   000061                     	ds	1
  1332   000062                     ??_ld_word:
  1333   000062                     ??_get_ldnumber:
  1334   000062                     ??_i2c_write:
  1335   000062                     ??_i2c_read:
  1336   000062                     dbc_1st@c:
  1337                           	callstack 0
  1338   000062                     dbc_2nd@c:
  1339                           	callstack 0
  1340   000062                     fputc@fp:
  1341                           	callstack 0
  1342   000062                     can_init@receive_callback:
  1343                           	callstack 0
  1344   000062                     st_word@val:
  1345                           	callstack 0
  1346   000062                     mem_cpy@src:
  1347                           	callstack 0
  1348   000062                     mem_set@val:
  1349                           	callstack 0
  1350   000062                     mem_cmp@src:
  1351                           	callstack 0
  1352   000062                     chk_chr@chr:
  1353                           	callstack 0
  1354   000062                     validate@obj:
  1355                           	callstack 0
  1356   000062                     SPI1_ExchangeBlock@blockSize:
  1357                           	callstack 0
  1358   000062                     ___awdiv@divisor:
  1359                           	callstack 0
  1360   000062                     ___awmod@divisor:
  1361                           	callstack 0
  1362   000062                     ___lwdiv@divisor:
  1363                           	callstack 0
  1364   000062                     memcpy@s1:
  1365                           	callstack 0
  1366   000062                     memset@c:
  1367                           	callstack 0
  1368   000062                     st_dword@val:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x2
  1372   000062                     	ds	1
  1373   000063                     ??_fputc:
  1374   000063                     disk_ioctl@pdrv:
  1375                           	callstack 0
  1376   000063                     SD_SPI_DelayMilliseconds@milliseconds:
  1377                           	callstack 0
  1378   000063                     i2c_write@address:
  1379                           	callstack 0
  1380   000063                     i2c_read@address:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x3
  1384   000063                     	ds	1
  1385   000064                     ??_can_init:
  1386   000064                     ??_ld_dword:
  1387   000064                     ??_chk_chr:
  1388   000064                     ___awdiv@counter:
  1389                           	callstack 0
  1390   000064                     ___awmod@counter:
  1391                           	callstack 0
  1392   000064                     ___lwdiv@counter:
  1393                           	callstack 0
  1394   000064                     can_generate_timing_params@timing:
  1395                           	callstack 0
  1396   000064                     write_timestamp_3bytes@output:
  1397                           	callstack 0
  1398   000064                     mem_cpy@cnt:
  1399                           	callstack 0
  1400   000064                     mem_set@cnt:
  1401                           	callstack 0
  1402   000064                     mem_cmp@cnt:
  1403                           	callstack 0
  1404   000064                     st_clust@fs:
  1405                           	callstack 0
  1406   000064                     get_ldnumber@i:
  1407                           	callstack 0
  1408   000064                     validate@rfs:
  1409                           	callstack 0
  1410   000064                     SD_SPI_DelayMilliseconds@timeout:
  1411                           	callstack 0
  1412   000064                     SPI1_ExchangeBlock@data:
  1413                           	callstack 0
  1414   000064                     i2c_write@timeout:
  1415                           	callstack 0
  1416   000064                     i2c_read@timeout:
  1417                           	callstack 0
  1418   000064                     memcpy@n:
  1419                           	callstack 0
  1420   000064                     memset@n:
  1421                           	callstack 0
  1422   000064                     millis@res:
  1423                           	callstack 0
  1424   000064                     ___lmul@multiplicand:
  1425                           	callstack 0
  1426   000064                     ___lldiv@divisor:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x4
  1430   000064                     	ds	1
  1431   000065                     ___awdiv@sign:
  1432                           	callstack 0
  1433   000065                     ___awmod@sign:
  1434                           	callstack 0
  1435   000065                     ld_word@rv:
  1436                           	callstack 0
  1437   000065                     ___lwdiv@quotient:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x5
  1441   000065                     	ds	1
  1442   000066                     ??_can_generate_timing_params:
  1443   000066                     ??_mem_cmp:
  1444   000066                     ??_validate:
  1445   000066                     ?_abs:
  1446                           	callstack 0
  1447   000066                     get_ldnumber@tc:
  1448                           	callstack 0
  1449   000066                     i2c_write_reg8@reg:
  1450                           	callstack 0
  1451   000066                     i2c_read_reg8@reg:
  1452                           	callstack 0
  1453   000066                     memcpy@tmp:
  1454                           	callstack 0
  1455   000066                     mem_cpy@d:
  1456                           	callstack 0
  1457   000066                     mem_set@d:
  1458                           	callstack 0
  1459   000066                     st_clust@dir:
  1460                           	callstack 0
  1461   000066                     ___awdiv@quotient:
  1462                           	callstack 0
  1463   000066                     memset@p:
  1464                           	callstack 0
  1465   000066                     abs@a:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x6
  1469   000066                     	ds	1
  1470   000067                     ?_ld_clust:
  1471                           	callstack 0
  1472   000067                     i2c_write_reg8@val:
  1473                           	callstack 0
  1474   000067                     srb_init@ctx:
  1475                           	callstack 0
  1476   000067                     ld_clust@fs:
  1477                           	callstack 0
  1478   000067                     get_ldnumber@tt:
  1479                           	callstack 0
  1480   000067                     i2c_read_reg8@value:
  1481                           	callstack 0
  1482   000067                     memcpy@d:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x7
  1486   000067                     	ds	1
  1487   000068                     ??_abs:
  1488   000068                     i2c_write_reg8@address:
  1489                           	callstack 0
  1490   000068                     mem_cpy@s:
  1491                           	callstack 0
  1492   000068                     mem_cmp@d:
  1493                           	callstack 0
  1494   000068                     create_name@dp:
  1495                           	callstack 0
  1496   000068                     build_board_stat_msg@timestamp:
  1497                           	callstack 0
  1498   000068                     st_clust@cl:
  1499                           	callstack 0
  1500   000068                     ___lmul@product:
  1501                           	callstack 0
  1502   000068                     ___lldiv@quotient:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x8
  1506   000068                     	ds	1
  1507   000069                     i2c_read_reg8@address:
  1508                           	callstack 0
  1509   000069                     srb_init@pool:
  1510                           	callstack 0
  1511   000069                     ld_clust@dir:
  1512                           	callstack 0
  1513   000069                     get_ldnumber@vol:
  1514                           	callstack 0
  1515   000069                     i2c_write_reg8@data:
  1516                           	callstack 0
  1517   000069                     memcpy@s:
  1518                           	callstack 0
  1519   000069                     ld_dword@rv:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x9
  1523   000069                     	ds	1
  1524   00006A                     i2c_read_reg8@success:
  1525                           	callstack 0
  1526   00006A                     vfpfcnvrt@fp:
  1527                           	callstack 0
  1528   00006A                     mem_cmp@s:
  1529                           	callstack 0
  1530   00006A                     create_name@path:
  1531                           	callstack 0
  1532   00006A                     _validate$3131:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0xA
  1536   00006A                     	ds	1
  1537   00006B                     ??_ld_clust:
  1538   00006B                     ?_SD_SendCmd:
  1539                           	callstack 0
  1540   00006B                     i2c_read_reg8@data:
  1541                           	callstack 0
  1542   00006B                     vfpfcnvrt@fmt:
  1543                           	callstack 0
  1544   00006B                     can_send@message:
  1545                           	callstack 0
  1546   00006B                     srb_init@pool_size:
  1547                           	callstack 0
  1548   00006B                     get_ldnumber@tp:
  1549                           	callstack 0
  1550   00006B                     SD_SendCmd@address:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0xB
  1554   00006B                     	ds	1
  1555   00006C                     ??_fxls_init:
  1556   00006C                     ??_create_name:
  1557   00006C                     ?_clst2sect:
  1558                           	callstack 0
  1559   00006C                     build_board_stat_msg@error_code:
  1560                           	callstack 0
  1561   00006C                     validate@res:
  1562                           	callstack 0
  1563   00006C                     fxls_get_prod_rev@res:
  1564                           	callstack 0
  1565   00006C                     fxls_get_whoami@res:
  1566                           	callstack 0
  1567   00006C                     ___lldiv@counter:
  1568                           	callstack 0
  1569   00006C                     vfpfcnvrt@ap:
  1570                           	callstack 0
  1571   00006C                     mem_cmp@r:
  1572                           	callstack 0
  1573   00006C                     clst2sect@fs:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0xC
  1577   00006C                     	ds	1
  1578   00006D                     ??_can_send:
  1579   00006D                     ??_vfpfcnvrt:
  1580   00006D                     srb_init@element_size:
  1581                           	callstack 0
  1582   00006D                     build_board_stat_msg@error_data:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0xD
  1586   00006D                     	ds	1
  1587   00006E                     fxls_init@sens_config4:
  1588                           	callstack 0
  1589   00006E                     _create_name$2961:
  1590                           	callstack 0
  1591   00006E                     clst2sect@clst:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0xE
  1595   00006E                     	ds	1
  1596   00006F                     build_board_stat_msg@error_data_len:
  1597                           	callstack 0
  1598   00006F                     fxls_init@sens_config1:
  1599                           	callstack 0
  1600   00006F                     vfpfcnvrt@done:
  1601                           	callstack 0
  1602   00006F                     txb_init@pool:
  1603                           	callstack 0
  1604   00006F                     ld_clust@cl:
  1605                           	callstack 0
  1606                           
  1607                           ; 4 bytes @ 0xF
  1608   00006F                     	ds	1
  1609   000070                     ??_SD_SendCmd:
  1610   000070                     fxls_init@buf_config1:
  1611                           	callstack 0
  1612   000070                     build_board_stat_msg@output:
  1613                           	callstack 0
  1614   000070                     _create_name$2966:
  1615                           	callstack 0
  1616   000070                     vfpfcnvrt@cp:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x10
  1620   000070                     	ds	1
  1621   000071                     fxls_init@int_en:
  1622                           	callstack 0
  1623   000071                     txb_init@pool_size:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x11
  1627   000071                     	ds	1
  1628   000072                     ??_build_board_stat_msg:
  1629   000072                     ??_clst2sect:
  1630   000072                     create_name@d:
  1631                           	callstack 0
  1632   000072                     fxls_init@int_pin_sel:
  1633                           	callstack 0
  1634   000072                     SD_SendCmd@longTimeout:
  1635                           	callstack 0
  1636   000072                     vfpfcnvrt@convarg:
  1637                           	callstack 0
  1638                           
  1639                           ; 4 bytes @ 0x12
  1640   000072                     	ds	1
  1641   000073                     fxls_init@sens_config3:
  1642                           	callstack 0
  1643   000073                     txb_init@can_send_fp:
  1644                           	callstack 0
  1645   000073                     create_name@ni:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x13
  1649   000073                     	ds	1
  1650   000074                     fxls_init@sens_config2:
  1651                           	callstack 0
  1652                           
  1653                           ; 1 bytes @ 0x14
  1654   000074                     	ds	1
  1655   000075                     fxls_init@sys_mode:
  1656                           	callstack 0
  1657   000075                     txb_init@can_tx_ready:
  1658                           	callstack 0
  1659   000075                     build_board_stat_msg@i:
  1660                           	callstack 0
  1661   000075                     create_name@p:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x15
  1665   000075                     	ds	1
  1666   000076                     vfpfcnvrt@c:
  1667                           	callstack 0
  1668   000076                     SD_SendCmd@timeout:
  1669                           	callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x16
  1672   000076                     	ds	1
  1673   000077                     ?_vfprintf:
  1674                           	callstack 0
  1675   000077                     vfprintf@fp:
  1676                           	callstack 0
  1677   000077                     create_name@i:
  1678                           	callstack 0
  1679   000077                     send_status_err@board_stat_msg:
  1680                           	callstack 0
  1681                           
  1682                           ; 11 bytes @ 0x17
  1683   000077                     	ds	1
  1684   000078                     vfprintf@fmt:
  1685                           	callstack 0
  1686   000078                     SD_SendCmd@address_bytes:
  1687                           	callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x18
  1690   000078                     	ds	1
  1691   000079                     create_name@sfn:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x19
  1695   000079                     	ds	1
  1696   00007A                     vfprintf@ap:
  1697                           	callstack 0
  1698                           
  1699                           ; 1 bytes @ 0x1A
  1700   00007A                     	ds	1
  1701   00007B                     create_name@si:
  1702                           	callstack 0
  1703   00007B                     vfprintf@cfmt:
  1704                           	callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x1B
  1707   00007B                     	ds	1
  1708   00007C                     SD_SendCmd@cmd:
  1709                           	callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x1C
  1712   00007C                     	ds	1
  1713   00007D                     ?_sprintf:
  1714                           	callstack 0
  1715   00007D                     create_name@c:
  1716                           	callstack 0
  1717   00007D                     sprintf@s:
  1718                           	callstack 0
  1719   00007D                     SD_SendCmd@response:
  1720                           	callstack 0
  1721                           
  1722                           ; 5 bytes @ 0x1D
  1723   00007D                     	ds	2
  1724   00007F                     sprintf@fmt:
  1725                           	callstack 0
  1726                           
  1727                           ; 2 bytes @ 0x1F
  1728   00007F                     	ds	3
  1729   000082                     ??_SD_SPI_MediaInitialize:
  1730   000082                     SD_SPI_AsyncReadTasks@info:
  1731                           	callstack 0
  1732   000082                     SD_SPI_AsyncWriteTasks@info:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x22
  1736   000082                     	ds	1
  1737   000083                     ??_SD_SPI_AsyncReadTasks:
  1738   000083                     ??_SD_SPI_AsyncWriteTasks:
  1739                           
  1740                           ; 1 bytes @ 0x23
  1741   000083                     	ds	2
  1742   000085                     sprintf@ap:
  1743                           	callstack 0
  1744                           
  1745                           ; 1 bytes @ 0x25
  1746   000085                     	ds	1
  1747   000086                     sprintf@f:
  1748                           	callstack 0
  1749                           
  1750                           ; 12 bytes @ 0x26
  1751   000086                     	ds	1
  1752   000087                     SD_SPI_AsyncReadTasks@response:
  1753                           	callstack 0
  1754   000087                     SD_SPI_AsyncWriteTasks@response:
  1755                           	callstack 0
  1756                           
  1757                           ; 5 bytes @ 0x27
  1758   000087                     	ds	5
  1759   00008C                     SD_SPI_AsyncReadTasks@bData:
  1760                           	callstack 0
  1761   00008C                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1762                           	callstack 0
  1763                           
  1764                           ; 4 bytes @ 0x2C
  1765   00008C                     	ds	1
  1766   00008D                     SD_SPI_SectorRead@sector_address:
  1767                           	callstack 0
  1768   00008D                     SD_SPI_MediaInitialize@CSDResponse:
  1769                           	callstack 0
  1770                           
  1771                           ; 20 bytes @ 0x2D
  1772   00008D                     	ds	3
  1773   000090                     SD_SPI_SectorWrite@sector_address:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x30
  1777   000090                     	ds	1
  1778   000091                     SD_SPI_SectorRead@buffer:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x31
  1782   000091                     	ds	2
  1783   000093                     SD_SPI_SectorRead@sector_count:
  1784                           	callstack 0
  1785                           
  1786                           ; 2 bytes @ 0x33
  1787   000093                     	ds	1
  1788   000094                     SD_SPI_SectorWrite@buffer:
  1789                           	callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x34
  1792   000094                     	ds	1
  1793   000095                     ??_SD_SPI_SectorRead:
  1794                           
  1795                           ; 1 bytes @ 0x35
  1796   000095                     	ds	1
  1797   000096                     SD_SPI_SectorWrite@sector_count:
  1798                           	callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x36
  1801   000096                     	ds	1
  1802   000097                     SD_SPI_SectorRead@result:
  1803                           	callstack 0
  1804                           
  1805                           ; 1 bytes @ 0x37
  1806   000097                     	ds	1
  1807   000098                     ??_SD_SPI_SectorWrite:
  1808   000098                     SD_SPI_SectorRead@status:
  1809                           	callstack 0
  1810                           
  1811                           ; 1 bytes @ 0x38
  1812   000098                     	ds	1
  1813   000099                     SD_SPI_SectorRead@i:
  1814                           	callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x39
  1817   000099                     	ds	1
  1818   00009A                     SD_SPI_SectorWrite@result:
  1819                           	callstack 0
  1820                           
  1821                           ; 1 bytes @ 0x3A
  1822   00009A                     	ds	1
  1823   00009B                     SD_SPI_SectorWrite@status:
  1824                           	callstack 0
  1825   00009B                     SD_SPI_SectorRead@info:
  1826                           	callstack 0
  1827                           
  1828                           ; 13 bytes @ 0x3B
  1829   00009B                     	ds	1
  1830   00009C                     SD_SPI_SectorWrite@i:
  1831                           	callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x3C
  1834   00009C                     	ds	2
  1835   00009E                     SD_SPI_SectorWrite@info:
  1836                           	callstack 0
  1837                           
  1838                           ; 13 bytes @ 0x3E
  1839   00009E                     	ds	3
  1840   0000A1                     _SD_SPI_MediaInitialize$6530:
  1841                           	callstack 0
  1842                           
  1843                           ; 4 bytes @ 0x41
  1844   0000A1                     	ds	4
  1845   0000A5                     SD_SPI_MediaInitialize@c_size_mult:
  1846                           	callstack 0
  1847                           
  1848                           ; 1 bytes @ 0x45
  1849   0000A5                     	ds	1
  1850   0000A6                     SD_SPI_MediaInitialize@index:
  1851                           	callstack 0
  1852                           
  1853                           ; 1 bytes @ 0x46
  1854   0000A6                     	ds	1
  1855   0000A7                     SD_SPI_MediaInitialize@block_len:
  1856                           	callstack 0
  1857                           
  1858                           ; 1 bytes @ 0x47
  1859   0000A7                     	ds	1
  1860   0000A8                     SD_SPI_MediaInitialize@count:
  1861                           	callstack 0
  1862   0000A8                     disk_read@buff:
  1863                           	callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x48
  1866   0000A8                     	ds	1
  1867   0000A9                     SD_SPI_MediaInitialize@c_size:
  1868                           	callstack 0
  1869                           
  1870                           ; 4 bytes @ 0x49
  1871   0000A9                     	ds	1
  1872   0000AA                     disk_read@sector:
  1873                           	callstack 0
  1874                           
  1875                           ; 4 bytes @ 0x4A
  1876   0000AA                     	ds	1
  1877   0000AB                     disk_write@buff:
  1878                           	callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x4B
  1881   0000AB                     	ds	2
  1882   0000AD                     disk_write@sector:
  1883                           	callstack 0
  1884   0000AD                     SD_SPI_MediaInitialize@response:
  1885                           	callstack 0
  1886                           
  1887                           ; 5 bytes @ 0x4D
  1888   0000AD                     	ds	1
  1889   0000AE                     disk_read@count:
  1890                           	callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x4E
  1893   0000AE                     	ds	2
  1894   0000B0                     disk_read@pdrv:
  1895                           	callstack 0
  1896                           
  1897                           ; 1 bytes @ 0x50
  1898   0000B0                     	ds	1
  1899   0000B1                     disk_read@res:
  1900                           	callstack 0
  1901   0000B1                     disk_write@count:
  1902                           	callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x51
  1905   0000B1                     	ds	1
  1906   0000B2                     SD_SPI_MediaInitialize@timeout:
  1907                           	callstack 0
  1908                           
  1909                           ; 2 bytes @ 0x52
  1910   0000B2                     	ds	1
  1911   0000B3                     disk_write@pdrv:
  1912                           	callstack 0
  1913                           
  1914                           ; 1 bytes @ 0x53
  1915   0000B3                     	ds	1
  1916   0000B4                     disk_initialize@pdrv:
  1917                           	callstack 0
  1918   0000B4                     disk_write@res:
  1919                           	callstack 0
  1920                           
  1921                           ; 1 bytes @ 0x54
  1922   0000B4                     	ds	1
  1923   0000B5                     disk_initialize@stat:
  1924                           	callstack 0
  1925   0000B5                     sync_window@fs:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x55
  1929   0000B5                     	ds	2
  1930   0000B7                     ??_sync_window:
  1931                           
  1932                           ; 1 bytes @ 0x57
  1933   0000B7                     	ds	16
  1934   0000C7                     sync_window@res:
  1935                           	callstack 0
  1936                           
  1937                           ; 1 bytes @ 0x67
  1938   0000C7                     	ds	1
  1939   0000C8                     move_window@fs:
  1940                           	callstack 0
  1941   0000C8                     sync_fs@fs:
  1942                           	callstack 0
  1943   0000C8                     dir_clear@fs:
  1944                           	callstack 0
  1945                           
  1946                           ; 2 bytes @ 0x68
  1947   0000C8                     	ds	2
  1948   0000CA                     ??_sync_fs:
  1949   0000CA                     move_window@sector:
  1950                           	callstack 0
  1951   0000CA                     dir_clear@clst:
  1952                           	callstack 0
  1953                           
  1954                           ; 4 bytes @ 0x6A
  1955   0000CA                     	ds	4
  1956   0000CE                     
  1957                           ; 1 bytes @ 0x6E
  1958   0000CE                     	ds	2
  1959   0000D0                     dir_clear@ibuf:
  1960                           	callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x70
  1963   0000D0                     	ds	2
  1964   0000D2                     move_window@res:
  1965                           	callstack 0
  1966   0000D2                     sync_fs@res:
  1967                           	callstack 0
  1968   0000D2                     dir_clear@sect:
  1969                           	callstack 0
  1970                           
  1971                           ; 4 bytes @ 0x72
  1972   0000D2                     	ds	1
  1973   0000D3                     ?_get_fat:
  1974                           	callstack 0
  1975   0000D3                     get_fat@obj:
  1976                           	callstack 0
  1977   0000D3                     put_fat@fs:
  1978                           	callstack 0
  1979   0000D3                     check_fs@fs:
  1980                           	callstack 0
  1981   0000D3                     f_sync@fp:
  1982                           	callstack 0
  1983                           
  1984                           ; 2 bytes @ 0x73
  1985   0000D3                     	ds	2
  1986   0000D5                     f_sync@res:
  1987                           	callstack 0
  1988   0000D5                     get_fat@clst:
  1989                           	callstack 0
  1990   0000D5                     put_fat@clst:
  1991                           	callstack 0
  1992   0000D5                     check_fs@sect:
  1993                           	callstack 0
  1994                           
  1995                           ; 4 bytes @ 0x75
  1996   0000D5                     	ds	1
  1997   0000D6                     dir_clear@szb:
  1998                           	callstack 0
  1999   0000D6                     f_sync@dir:
  2000                           	callstack 0
  2001                           
  2002                           ; 2 bytes @ 0x76
  2003   0000D6                     	ds	2
  2004   0000D8                     dir_clear@n:
  2005                           	callstack 0
  2006   0000D8                     f_sync@fs:
  2007                           	callstack 0
  2008                           
  2009                           ; 2 bytes @ 0x78
  2010   0000D8                     	ds	1
  2011   0000D9                     ??_get_fat:
  2012   0000D9                     put_fat@val:
  2013                           	callstack 0
  2014                           
  2015                           ; 4 bytes @ 0x79
  2016   0000D9                     	ds	1
  2017   0000DA                     find_volume@path:
  2018                           	callstack 0
  2019   0000DA                     f_close@fp:
  2020                           	callstack 0
  2021                           
  2022                           ; 2 bytes @ 0x7A
  2023   0000DA                     	ds	2
  2024   0000DC                     find_volume@rfs:
  2025                           	callstack 0
  2026   0000DC                     f_close@fs:
  2027                           	callstack 0
  2028                           
  2029                           ; 2 bytes @ 0x7C
  2030   0000DC                     	ds	1
  2031   0000DD                     ??_put_fat:
  2032                           
  2033                           ; 1 bytes @ 0x7D
  2034   0000DD                     	ds	1
  2035   0000DE                     find_volume@mode:
  2036                           	callstack 0
  2037   0000DE                     f_close@res:
  2038                           	callstack 0
  2039                           
  2040                           ; 1 bytes @ 0x7E
  2041   0000DE                     	ds	1
  2042   0000DF                     ??_find_volume:
  2043                           
  2044                           ; 1 bytes @ 0x7F
  2045   0000DF                     	ds	2
  2046   0000E1                     _get_fat$2577:
  2047                           	callstack 0
  2048                           
  2049                           ; 2 bytes @ 0x81
  2050   0000E1                     	ds	2
  2051   0000E3                     get_fat@wc:
  2052                           	callstack 0
  2053                           
  2054                           ; 2 bytes @ 0x83
  2055   0000E3                     	ds	2
  2056   0000E5                     get_fat@val:
  2057                           	callstack 0
  2058                           
  2059                           ; 4 bytes @ 0x85
  2060   0000E5                     	ds	2
  2061   0000E7                     f_mount@fs:
  2062                           	callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x87
  2065   0000E7                     	ds	2
  2066   0000E9                     get_fat@bc:
  2067                           	callstack 0
  2068   0000E9                     f_mount@path:
  2069                           	callstack 0
  2070                           
  2071                           ; 2 bytes @ 0x89
  2072   0000E9                     	ds	2
  2073   0000EB                     f_mount@opt:
  2074                           	callstack 0
  2075   0000EB                     get_fat@fs:
  2076                           	callstack 0
  2077   0000EB                     _put_fat$2606:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x8B
  2081   0000EB                     	ds	1
  2082   0000EC                     f_mount@res:
  2083                           	callstack 0
  2084                           
  2085                           ; 1 bytes @ 0x8C
  2086   0000EC                     	ds	1
  2087   0000ED                     _put_fat$2607:
  2088                           	callstack 0
  2089   0000ED                     dir_sdi@dp:
  2090                           	callstack 0
  2091   0000ED                     f_mount@rp:
  2092                           	callstack 0
  2093                           
  2094                           ; 2 bytes @ 0x8D
  2095   0000ED                     	ds	2
  2096   0000EF                     put_fat@p:
  2097                           	callstack 0
  2098   0000EF                     f_mount@cfs:
  2099                           	callstack 0
  2100   0000EF                     dir_sdi@ofs:
  2101                           	callstack 0
  2102                           
  2103                           ; 4 bytes @ 0x8F
  2104   0000EF                     	ds	2
  2105   0000F1                     put_fat@bc:
  2106                           	callstack 0
  2107   0000F1                     f_mount@vol:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x91
  2111   0000F1                     	ds	2
  2112   0000F3                     ??_dir_sdi:
  2113   0000F3                     put_fat@res:
  2114                           	callstack 0
  2115                           
  2116                           ; 1 bytes @ 0x93
  2117   0000F3                     	ds	1
  2118   0000F4                     ?_create_chain:
  2119                           	callstack 0
  2120   0000F4                     remove_chain@obj:
  2121                           	callstack 0
  2122   0000F4                     create_chain@obj:
  2123                           	callstack 0
  2124                           
  2125                           ; 2 bytes @ 0x94
  2126   0000F4                     	ds	2
  2127   0000F6                     remove_chain@clst:
  2128                           	callstack 0
  2129   0000F6                     create_chain@clst:
  2130                           	callstack 0
  2131                           
  2132                           ; 4 bytes @ 0x96
  2133   0000F6                     	ds	4
  2134   0000FA                     dir_next@dp:
  2135                           	callstack 0
  2136   0000FA                     remove_chain@pclst:
  2137                           	callstack 0
  2138                           
  2139                           ; 4 bytes @ 0x9A
  2140   0000FA                     	ds	2
  2141   0000FC                     dir_next@stretch:
  2142                           	callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x9C
  2145   0000FC                     	ds	2
  2146   0000FE                     ??_dir_find:
  2147   0000FE                     
  2148                           ; 1 bytes @ 0x9E
  2149   0000FE                     	ds	2
  2150   000100                     
  2151                           ; 1 bytes @ 0xA0
  2152                           
  2153                           	psect	cstackCOMRAM
  2154   000001                     __pcstackCOMRAM:
  2155                           	callstack 0
  2156   000001                     ?_get_message_type:
  2157                           	callstack 0
  2158   000001                     get_message_type@msg:
  2159                           	callstack 0
  2160   000001                     get_board_unique_id@msg:
  2161                           	callstack 0
  2162   000001                     i2memcpy@d1:
  2163                           	callstack 0
  2164                           
  2165                           ; 2 bytes @ 0x0
  2166   000001                     	ds	1
  2167   000002                     
  2168                           ; 1 bytes @ 0x1
  2169   000002                     	ds	1
  2170   000003                     ??_get_message_type:
  2171   000003                     i2memcpy@s1:
  2172                           	callstack 0
  2173                           
  2174                           ; 2 bytes @ 0x2
  2175   000003                     	ds	2
  2176   000005                     ?_get_reset_board_id:
  2177                           	callstack 0
  2178   000005                     get_reset_board_id@msg:
  2179                           	callstack 0
  2180   000005                     i2memcpy@n:
  2181                           	callstack 0
  2182                           
  2183                           ; 2 bytes @ 0x4
  2184   000005                     	ds	2
  2185   000007                     ??_get_reset_board_id:
  2186   000007                     i2memcpy@d:
  2187                           	callstack 0
  2188                           
  2189                           ; 2 bytes @ 0x6
  2190   000007                     	ds	1
  2191   000008                     get_reset_board_id@msg_type:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x7
  2195   000008                     	ds	1
  2196   000009                     i2memcpy@s:
  2197                           	callstack 0
  2198                           
  2199                           ; 2 bytes @ 0x8
  2200   000009                     	ds	1
  2201   00000A                     can_msg_handler@msg:
  2202                           	callstack 0
  2203                           
  2204                           ; 1 bytes @ 0x9
  2205   00000A                     	ds	1
  2206   00000B                     ??_can_msg_handler:
  2207   00000B                     i2memcpy@tmp:
  2208                           	callstack 0
  2209                           
  2210                           ; 1 bytes @ 0xA
  2211   00000B                     	ds	2
  2212   00000D                     can_msg_handler@msg_type:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0xC
  2216   00000D                     	ds	2
  2217   00000F                     can_msg_handler@dest_id:
  2218                           	callstack 0
  2219                           
  2220                           ; 2 bytes @ 0xE
  2221   00000F                     	ds	2
  2222   000011                     ??_can_handle_interrupt:
  2223                           
  2224                           ; 1 bytes @ 0x10
  2225   000011                     	ds	4
  2226   000015                     can_handle_interrupt@rcvd_msg:
  2227                           	callstack 0
  2228                           
  2229                           ; 11 bytes @ 0x14
  2230   000015                     	ds	11
  2231   000020                     can_handle_interrupt@rcvd_msg_753:
  2232                           	callstack 0
  2233                           
  2234                           ; 11 bytes @ 0x1F
  2235   000020                     	ds	11
  2236   00002B                     ??_interrupt_handler:
  2237                           
  2238                           ; 1 bytes @ 0x2A
  2239   00002B                     	ds	2
  2240                           
  2241 ;;
  2242 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2243 ;;
  2244 ;; *************** function _main *****************
  2245 ;; Defined at:
  2246 ;;		line 34 in file "main.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  msg            11    0        struct .
  2251 ;;  can_setup       7  200[BANK1 ] struct .
  2252 ;;  last_status_    4  196[BANK1 ] unsigned long 
  2253 ;;  last_message    4    0        unsigned long 
  2254 ;;  prod_rev        1    0        unsigned char 
  2255 ;;  whoami          1    0        unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:       15 bytes
  2270 ;; Hardware stack levels required when called: 19
  2271 ;; This function calls:
  2272 ;;		_ADCC_Initialize
  2273 ;;		_SET_ACCEL_I2C_ADDR
  2274 ;;		_SYSTEM_Initialize
  2275 ;;		_can_generate_timing_params
  2276 ;;		_can_init
  2277 ;;		_f_close
  2278 ;;		_f_mount
  2279 ;;		_f_open
  2280 ;;		_f_write
  2281 ;;		_fxls_get_prod_rev
  2282 ;;		_fxls_get_whoami
  2283 ;;		_fxls_init
  2284 ;;		_i2c_init
  2285 ;;		_millis
  2286 ;;		_send_status_err
  2287 ;;		_send_status_ok
  2288 ;;		_timer0_init
  2289 ;;		_txb_init
  2290 ;; This function is called by:
  2291 ;;		Startup code after reset
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text0
  2296   005888                     __ptext0:
  2297                           	callstack 0
  2298   005888                     _main:
  2299                           	callstack 12
  2300   005888                     
  2301                           ;main.c: 36:     SYSTEM_Initialize();
  2302   005888  ECB8  F048         	call	_SYSTEM_Initialize	;wreg free
  2303                           
  2304                           ;main.c: 37:     ADCC_Initialize();
  2305   00588C  EC03  F045         	call	_ADCC_Initialize	;wreg free
  2306   005890                     
  2307                           ;main.c: 40:     INTCON0bits.GIE = 1;
  2308   005890  8ED2               	bsf	210,7,c	;volatile
  2309                           
  2310                           ;main.c: 43:     timer0_init();
  2311   005892  EC58  F048         	call	_timer0_init	;wreg free
  2312   005896                     
  2313                           ;main.c: 44:     uint32_t last_status_millis = millis();
  2314   005896  ECD8  F047         	call	_millis	;wreg free
  2315   00589A  C060  F1C4         	movff	?_millis,main@last_status_millis
  2316   00589E  C061  F1C5         	movff	?_millis+1,main@last_status_millis+1
  2317   0058A2  C062  F1C6         	movff	?_millis+2,main@last_status_millis+2
  2318   0058A6  C063  F1C7         	movff	?_millis+3,main@last_status_millis+3
  2319   0058AA  ECD8  F047         	call	_millis	;wreg free
  2320   0058AE                     
  2321                           ;main.c: 48:     TRISC1 = 0;
  2322   0058AE  92C4               	bcf	16324,1,c	;volatile
  2323   0058B0                     
  2324                           ;main.c: 49:     RC1PPS = 0x33;
  2325   0058B0  0E33               	movlw	51
  2326   0058B2  013A               	movlb	58	; () banked
  2327   0058B4  6F11               	movwf	17,b	;volatile
  2328   0058B6                     
  2329                           ; BSR set to: 58
  2330                           ;main.c: 52:     TRISC0 = 1;
  2331   0058B6  80C4               	bsf	16324,0,c	;volatile
  2332   0058B8                     
  2333                           ; BSR set to: 58
  2334                           ;main.c: 53:     ANSELC0 = 0;
  2335   0058B8  9160               	bcf	96,0,b	;volatile
  2336   0058BA                     
  2337                           ; BSR set to: 58
  2338                           ;main.c: 54:     CANRXPPS = 0b00010000;
  2339   0058BA  0E10               	movlw	16
  2340   0058BC  6FED               	movwf	237,b	;volatile
  2341   0058BE                     
  2342                           ; BSR set to: 58
  2343                           ;main.c: 57:     can_timing_t can_setup;;main.c: 58:     can_generate_timing_params(1200
      +                          0000, &can_setup);
  2344   0058BE  0E00               	movlw	0
  2345   0058C0  0100               	movlb	0	; () banked
  2346   0058C2  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
  2347   0058C4  0E1B               	movlw	27
  2348   0058C6  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
  2349   0058C8  0EB7               	movlw	183
  2350   0058CA  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
  2351   0058CC  0E00               	movlw	0
  2352   0058CE  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
  2353   0058D0  0EC8               	movlw	low main@can_setup
  2354   0058D2  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
  2355   0058D4  0E01               	movlw	high main@can_setup
  2356   0058D6  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
  2357   0058D8  EC9A  F031         	call	_can_generate_timing_params	;wreg free
  2358   0058DC                     
  2359                           ;main.c: 59:     can_init(&can_setup, can_msg_handler);
  2360   0058DC  0EC8               	movlw	low main@can_setup
  2361   0058DE  0100               	movlb	0	; () banked
  2362   0058E0  6F60               	movwf	can_init@timing& (0+255),b
  2363   0058E2  0E01               	movlw	high main@can_setup
  2364   0058E4  6F61               	movwf	(can_init@timing+1)& (0+255),b
  2365   0058E6  0E08               	movlw	low _can_msg_handler
  2366   0058E8  6F62               	movwf	can_init@receive_callback& (0+255),b
  2367   0058EA  0E7E               	movlw	high _can_msg_handler
  2368   0058EC  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
  2369   0058EE  EC4D  F034         	call	_can_init	;wreg free
  2370   0058F2                     
  2371                           ;main.c: 61:     txb_init(tx_pool, sizeof (tx_pool), can_send, can_send_rdy);
  2372   0058F2  0E20               	movlw	low _tx_pool
  2373   0058F4  0100               	movlb	0	; () banked
  2374   0058F6  6F6F               	movwf	txb_init@pool& (0+255),b
  2375   0058F8  0E02               	movlw	high _tx_pool
  2376   0058FA  6F70               	movwf	(txb_init@pool+1)& (0+255),b
  2377   0058FC  0E00               	movlw	0
  2378   0058FE  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
  2379   005900  0E64               	movlw	100
  2380   005902  6F71               	movwf	txb_init@pool_size& (0+255),b
  2381   005904  0E88               	movlw	low _can_send
  2382   005906  6F73               	movwf	txb_init@can_send_fp& (0+255),b
  2383   005908  0E74               	movlw	high _can_send
  2384   00590A  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
  2385   00590C  0E00               	movlw	0
  2386   00590E  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
  2387   005910  0E00               	movlw	0
  2388   005912  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
  2389   005914  EC6E  F047         	call	_txb_init	;wreg free
  2390   005918                     
  2391                           ;main.c: 63:     can_msg_t msg;;main.c: 66:     SET_ACCEL_I2C_ADDR(0x18);
  2392   005918  0E18               	movlw	24
  2393   00591A  EC85  F048         	call	_SET_ACCEL_I2C_ADDR
  2394   00591E                     
  2395                           ;main.c: 67:     i2c_init(0b000);
  2396   00591E  0E00               	movlw	0
  2397   005920  ECC0  F047         	call	_i2c_init
  2398   005924                     
  2399                           ;main.c: 68:     fxls_init();
  2400   005924  EC19  F039         	call	_fxls_init	;wreg free
  2401   005928                     
  2402                           ;main.c: 71:     TRISC6 = 0;
  2403   005928  9CC4               	bcf	16324,6,c	;volatile
  2404   00592A                     
  2405                           ;main.c: 72:     LATC6 = 1;
  2406   00592A  8CBC               	bsf	16316,6,c	;volatile
  2407   00592C  EC67  F048         	call	_fxls_get_whoami	;wreg free
  2408   005930  EC76  F048         	call	_fxls_get_prod_rev	;wreg free
  2409   005934                     
  2410                           ;main.c: 78:     TRISB3 = 0;
  2411   005934  96C3               	bcf	16323,3,c	;volatile
  2412   005936                     
  2413                           ;main.c: 79:     LATB3 = 0;
  2414   005936  96BB               	bcf	16315,3,c	;volatile
  2415   005938                     
  2416                           ;main.c: 81:     TRISA2 = 0;
  2417   005938  94C2               	bcf	16322,2,c	;volatile
  2418   00593A                     
  2419                           ;main.c: 82:     TRISA3 = 0;
  2420   00593A  96C2               	bcf	16322,3,c	;volatile
  2421   00593C                     
  2422                           ;main.c: 83:     TRISA4 = 0;
  2423   00593C  98C2               	bcf	16322,4,c	;volatile
  2424   00593E                     
  2425                           ;main.c: 84:     TRISC2 = 0;
  2426   00593E  94C4               	bcf	16324,2,c	;volatile
  2427   005940                     
  2428                           ;main.c: 86:     if (f_mount(&FatFs, "", 1) == FR_OK) {
  2429   005940  0E84               	movlw	low _FatFs
  2430   005942  0100               	movlb	0	; () banked
  2431   005944  6FE7               	movwf	f_mount@fs& (0+255),b
  2432   005946  0E02               	movlw	high _FatFs
  2433   005948  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2434   00594A  0EE6               	movlw	low (STR_9+11)
  2435   00594C  6FE9               	movwf	f_mount@path& (0+255),b
  2436   00594E  0EFF               	movlw	high (STR_9+11)
  2437   005950  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2438   005952  0E01               	movlw	1
  2439   005954  6FEB               	movwf	f_mount@opt& (0+255),b
  2440   005956  EC4D  F03D         	call	_f_mount	;wreg free
  2441   00595A  0900               	iorlw	0
  2442   00595C  A4D8               	btfss	status,2,c
  2443   00595E  EFB3  F02C         	goto	u21851
  2444   005962  EFB5  F02C         	goto	u21850
  2445   005966                     u21851:
  2446   005966  EF17  F02D         	goto	l18027
  2447   00596A                     u21850:
  2448   00596A                     
  2449                           ;main.c: 87:         if (f_open(&Fil, "Data.txt", 0x04 | 0x01 | 0x02) == FR_OK) {
  2450   00596A  0EB7               	movlw	low _Fil
  2451   00596C  0101               	movlb	1	; () banked
  2452   00596E  6F41               	movwf	f_open@fp& (0+255),b
  2453   005970  0E04               	movlw	high _Fil
  2454   005972  6F42               	movwf	(f_open@fp+1)& (0+255),b
  2455   005974  0EE7               	movlw	low STR_8
  2456   005976  6F43               	movwf	f_open@path& (0+255),b
  2457   005978  0EFF               	movlw	high STR_8
  2458   00597A  6F44               	movwf	(f_open@path+1)& (0+255),b
  2459   00597C  0E07               	movlw	7
  2460   00597E  6F45               	movwf	f_open@mode& (0+255),b
  2461   005980  ECA0  F00F         	call	_f_open	;wreg free
  2462   005984  0900               	iorlw	0
  2463   005986  A4D8               	btfss	status,2,c
  2464   005988  EFC8  F02C         	goto	u21861
  2465   00598C  EFCA  F02C         	goto	u21860
  2466   005990                     u21861:
  2467   005990  EF2C  F02D         	goto	l2186
  2468   005994                     u21860:
  2469   005994                     
  2470                           ;main.c: 88:             f_write(&Fil, "BEGIN LOG\r\n", 10, &bw);
  2471   005994  0EB7               	movlw	low _Fil
  2472   005996  0101               	movlb	1	; () banked
  2473   005998  6F17               	movwf	f_write@fp& (0+255),b
  2474   00599A  0E04               	movlw	high _Fil
  2475   00599C  6F18               	movwf	(f_write@fp+1)& (0+255),b
  2476   00599E  0EDB               	movlw	low STR_9
  2477   0059A0  6F19               	movwf	f_write@buff& (0+255),b
  2478   0059A2  0EFF               	movlw	high STR_9
  2479   0059A4  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  2480   0059A6  0E00               	movlw	0
  2481   0059A8  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  2482   0059AA  0E0A               	movlw	10
  2483   0059AC  6F1B               	movwf	f_write@btw& (0+255),b
  2484   0059AE  0EF8               	movlw	low _bw
  2485   0059B0  6F1D               	movwf	f_write@bw& (0+255),b
  2486   0059B2  0E01               	movlw	high _bw
  2487   0059B4  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  2488   0059B6  EC69  F007         	call	_f_write	;wreg free
  2489                           
  2490                           ;main.c: 89:             f_close(&Fil);
  2491   0059BA  0EB7               	movlw	low _Fil
  2492   0059BC  0100               	movlb	0	; () banked
  2493   0059BE  6FDA               	movwf	f_close@fp& (0+255),b
  2494   0059C0  0E04               	movlw	high _Fil
  2495   0059C2  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  2496   0059C4  ECBF  F045         	call	_f_close	;wreg free
  2497   0059C8  EF2C  F02D         	goto	l2186
  2498   0059CC                     l18021:
  2499                           
  2500                           ;main.c: 93:             if (millis() - last_status_millis > 500) {
  2501   0059CC  ECD8  F047         	call	_millis	;wreg free
  2502   0059D0  0101               	movlb	1	; () banked
  2503   0059D2  51C4               	movf	main@last_status_millis& (0+255),w,b
  2504   0059D4  0100               	movlb	0	; () banked
  2505   0059D6  5D60               	subwf	?_millis& (0+255),w,b
  2506   0059D8  0101               	movlb	1	; () banked
  2507   0059DA  6FC0               	movwf	??_main& (0+255),b
  2508   0059DC  51C5               	movf	(main@last_status_millis+1)& (0+255),w,b
  2509   0059DE  0100               	movlb	0	; () banked
  2510   0059E0  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2511   0059E2  0101               	movlb	1	; () banked
  2512   0059E4  6FC1               	movwf	(??_main+1)& (0+255),b
  2513   0059E6  51C6               	movf	(main@last_status_millis+2)& (0+255),w,b
  2514   0059E8  0100               	movlb	0	; () banked
  2515   0059EA  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2516   0059EC  0101               	movlb	1	; () banked
  2517   0059EE  6FC2               	movwf	(??_main+2)& (0+255),b
  2518   0059F0  51C7               	movf	(main@last_status_millis+3)& (0+255),w,b
  2519   0059F2  0100               	movlb	0	; () banked
  2520   0059F4  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2521   0059F6  0101               	movlb	1	; () banked
  2522   0059F8  6FC3               	movwf	(??_main+3)& (0+255),b
  2523   0059FA  51C3               	movf	(??_main+3)& (0+255),w,b
  2524   0059FC  11C2               	iorwf	(??_main+2)& (0+255),w,b
  2525   0059FE  E10B               	bnz	u21870
  2526   005A00  0EF5               	movlw	245
  2527   005A02  5DC0               	subwf	??_main& (0+255),w,b
  2528   005A04  0E01               	movlw	1
  2529   005A06  59C1               	subwfb	(??_main+1)& (0+255),w,b
  2530   005A08  A0D8               	btfss	status,0,c
  2531   005A0A  EF09  F02D         	goto	u21871
  2532   005A0E  EF0B  F02D         	goto	u21870
  2533   005A12                     u21871:
  2534   005A12  EF17  F02D         	goto	l18027
  2535   005A16                     u21870:
  2536   005A16                     
  2537                           ; BSR set to: 1
  2538                           ;main.c: 94:                 last_status_millis = millis();
  2539   005A16  ECD8  F047         	call	_millis	;wreg free
  2540   005A1A  C060  F1C4         	movff	?_millis,main@last_status_millis
  2541   005A1E  C061  F1C5         	movff	?_millis+1,main@last_status_millis+1
  2542   005A22  C062  F1C6         	movff	?_millis+2,main@last_status_millis+2
  2543   005A26  C063  F1C7         	movff	?_millis+3,main@last_status_millis+3
  2544   005A2A                     
  2545                           ;main.c: 95:                 send_status_err();
  2546   005A2A  ECD6  F046         	call	_send_status_err	;wreg free
  2547   005A2E                     l18027:
  2548                           
  2549                           ;main.c: 92:         while (f_mount(&FatFs, "", 1) != FR_OK) {
  2550   005A2E  0E84               	movlw	low _FatFs
  2551   005A30  0100               	movlb	0	; () banked
  2552   005A32  6FE7               	movwf	f_mount@fs& (0+255),b
  2553   005A34  0E02               	movlw	high _FatFs
  2554   005A36  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2555   005A38  0EE6               	movlw	low (STR_9+11)
  2556   005A3A  6FE9               	movwf	f_mount@path& (0+255),b
  2557   005A3C  0EFF               	movlw	high (STR_9+11)
  2558   005A3E  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2559   005A40  0E01               	movlw	1
  2560   005A42  6FEB               	movwf	f_mount@opt& (0+255),b
  2561   005A44  EC4D  F03D         	call	_f_mount	;wreg free
  2562   005A48  0900               	iorlw	0
  2563   005A4A  A4D8               	btfss	status,2,c
  2564   005A4C  EF2A  F02D         	goto	u21881
  2565   005A50  EF2C  F02D         	goto	u21880
  2566   005A54                     u21881:
  2567   005A54  EFE6  F02C         	goto	l18021
  2568   005A58                     u21880:
  2569   005A58                     l2186:
  2570   005A58  0004               	clrwdt		;# 
  2571   005A5A                     
  2572                           ;main.c: 106:         if (millis() - last_status_millis > 500) {
  2573   005A5A  ECD8  F047         	call	_millis	;wreg free
  2574   005A5E  0101               	movlb	1	; () banked
  2575   005A60  51C4               	movf	main@last_status_millis& (0+255),w,b
  2576   005A62  0100               	movlb	0	; () banked
  2577   005A64  5D60               	subwf	?_millis& (0+255),w,b
  2578   005A66  0101               	movlb	1	; () banked
  2579   005A68  6FC0               	movwf	??_main& (0+255),b
  2580   005A6A  51C5               	movf	(main@last_status_millis+1)& (0+255),w,b
  2581   005A6C  0100               	movlb	0	; () banked
  2582   005A6E  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2583   005A70  0101               	movlb	1	; () banked
  2584   005A72  6FC1               	movwf	(??_main+1)& (0+255),b
  2585   005A74  51C6               	movf	(main@last_status_millis+2)& (0+255),w,b
  2586   005A76  0100               	movlb	0	; () banked
  2587   005A78  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2588   005A7A  0101               	movlb	1	; () banked
  2589   005A7C  6FC2               	movwf	(??_main+2)& (0+255),b
  2590   005A7E  51C7               	movf	(main@last_status_millis+3)& (0+255),w,b
  2591   005A80  0100               	movlb	0	; () banked
  2592   005A82  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2593   005A84  0101               	movlb	1	; () banked
  2594   005A86  6FC3               	movwf	(??_main+3)& (0+255),b
  2595   005A88  51C3               	movf	(??_main+3)& (0+255),w,b
  2596   005A8A  11C2               	iorwf	(??_main+2)& (0+255),w,b
  2597   005A8C  E10B               	bnz	u21890
  2598   005A8E  0EF5               	movlw	245
  2599   005A90  5DC0               	subwf	??_main& (0+255),w,b
  2600   005A92  0E01               	movlw	1
  2601   005A94  59C1               	subwfb	(??_main+1)& (0+255),w,b
  2602   005A96  A0D8               	btfss	status,0,c
  2603   005A98  EF50  F02D         	goto	u21891
  2604   005A9C  EF52  F02D         	goto	u21890
  2605   005AA0                     u21891:
  2606   005AA0  EF2C  F02D         	goto	l2186
  2607   005AA4                     u21890:
  2608   005AA4                     
  2609                           ; BSR set to: 1
  2610                           ;main.c: 107:             last_status_millis = millis();
  2611   005AA4  ECD8  F047         	call	_millis	;wreg free
  2612   005AA8  C060  F1C4         	movff	?_millis,main@last_status_millis
  2613   005AAC  C061  F1C5         	movff	?_millis+1,main@last_status_millis+1
  2614   005AB0  C062  F1C6         	movff	?_millis+2,main@last_status_millis+2
  2615   005AB4  C063  F1C7         	movff	?_millis+3,main@last_status_millis+3
  2616   005AB8                     
  2617                           ;main.c: 108:             send_status_ok();
  2618   005AB8  ECBD  F03D         	call	_send_status_ok	;wreg free
  2619   005ABC  EF2C  F02D         	goto	l2186
  2620   005AC0  EF0D  F000         	goto	start
  2621   005AC4                     __end_of_main:
  2622                           	callstack 0
  2623                           
  2624 ;; *************** function _txb_init *****************
  2625 ;; Defined at:
  2626 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  pool            2   15[BANK0 ] PTR void 
  2629 ;;		 -> tx_pool(100), 
  2630 ;;  pool_size       2   17[BANK0 ] unsigned int 
  2631 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  2632 ;;		 -> can_send(1), 
  2633 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()_Bool 
  2634 ;;		 -> can_send_rdy(1), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        8 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 7
  2653 ;; This function calls:
  2654 ;;		_srb_init
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text1
  2661   008EDC                     __ptext1:
  2662                           	callstack 0
  2663   008EDC                     _txb_init:
  2664                           	callstack 23
  2665   008EDC                     
  2666                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  2667   008EDC  C073  F1D3         	movff	txb_init@can_send_fp,_ctx
  2668   008EE0  C074  F1D4         	movff	txb_init@can_send_fp+1,_ctx+1
  2669                           
  2670                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  2671   008EE4  C075  F1D5         	movff	txb_init@can_tx_ready,_ctx+2
  2672   008EE8  C076  F1D6         	movff	txb_init@can_tx_ready+1,_ctx+3
  2673   008EEC                     
  2674                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  2675   008EEC  0EE4               	movlw	low _buf@can_tx_buffer$F1072
  2676   008EEE  0100               	movlb	0	; () banked
  2677   008EF0  6F67               	movwf	srb_init@ctx& (0+255),b
  2678   008EF2  0E01               	movlw	high _buf@can_tx_buffer$F1072
  2679   008EF4  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  2680   008EF6  C06F  F069         	movff	txb_init@pool,srb_init@pool
  2681   008EFA  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  2682   008EFE  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  2683   008F02  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  2684   008F06  0E00               	movlw	0
  2685   008F08  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  2686   008F0A  0E0B               	movlw	11
  2687   008F0C  6F6D               	movwf	srb_init@element_size& (0+255),b
  2688   008F0E  EC64  F042         	call	_srb_init	;wreg free
  2689   008F12  0012               	return		;funcret
  2690   008F14                     __end_of_txb_init:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _srb_init *****************
  2694 ;; Defined at:
  2695 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  ctx             2    7[BANK0 ] PTR struct .
  2698 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  2699 ;;  pool            2    9[BANK0 ] PTR void 
  2700 ;;		 -> tx_pool(100), 
  2701 ;;  pool_size       2   11[BANK0 ] unsigned int 
  2702 ;;  element_size    2   13[BANK0 ] unsigned int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        8 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 6
  2721 ;; This function calls:
  2722 ;;		___lwdiv
  2723 ;; This function is called by:
  2724 ;;		_txb_init
  2725 ;;		_rcvb_init
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text2
  2730   0084C8                     __ptext2:
  2731                           	callstack 0
  2732   0084C8                     _srb_init:
  2733                           	callstack 23
  2734   0084C8                     
  2735                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  2736   0084C8  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  2737   0084CE  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  2738   0084D4  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  2739   0084DA  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  2740   0084E0                     
  2741                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  2742   0084E0  0100               	movlb	0	; () banked
  2743   0084E2  EE20 F002          	lfsr	2,2
  2744   0084E6  5167               	movf	srb_init@ctx& (0+255),w,b
  2745   0084E8  26D9               	addwf	fsr2l,f,c
  2746   0084EA  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2747   0084EC  22DA               	addwfc	fsr2h,f,c
  2748   0084EE  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  2749   0084F4  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  2750   0084FA                     
  2751                           ; BSR set to: 0
  2752                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  2753   0084FA  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  2754   0084FE  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  2755   008502  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  2756   008506  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  2757   00850A  ECE5  F042         	call	___lwdiv	;wreg free
  2758   00850E  0100               	movlb	0	; () banked
  2759   008510  EE20 F004          	lfsr	2,4
  2760   008514  5167               	movf	srb_init@ctx& (0+255),w,b
  2761   008516  26D9               	addwf	fsr2l,f,c
  2762   008518  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2763   00851A  22DA               	addwfc	fsr2h,f,c
  2764   00851C  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  2765   008522  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  2766   008528                     
  2767                           ; BSR set to: 0
  2768                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  2769   008528  EE20 F006          	lfsr	2,6
  2770   00852C  5167               	movf	srb_init@ctx& (0+255),w,b
  2771   00852E  26D9               	addwf	fsr2l,f,c
  2772   008530  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2773   008532  22DA               	addwfc	fsr2h,f,c
  2774   008534  6ADE               	clrf	postinc2,c
  2775   008536  6ADD               	clrf	postdec2,c
  2776   008538                     
  2777                           ; BSR set to: 0
  2778                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  2779   008538  EE20 F008          	lfsr	2,8
  2780   00853C  5167               	movf	srb_init@ctx& (0+255),w,b
  2781   00853E  26D9               	addwf	fsr2l,f,c
  2782   008540  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2783   008542  22DA               	addwfc	fsr2h,f,c
  2784   008544  6ADE               	clrf	postinc2,c
  2785   008546  6ADD               	clrf	postdec2,c
  2786   008548                     
  2787                           ; BSR set to: 0
  2788   008548  0012               	return		;funcret
  2789   00854A                     __end_of_srb_init:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function ___lwdiv *****************
  2793 ;; Defined at:
  2794 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  dividend        2    0[BANK0 ] unsigned int 
  2797 ;;  divisor         2    2[BANK0 ] unsigned int 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  quotient        2    5[BANK0 ] unsigned int 
  2800 ;;  counter         1    4[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2    0[BANK0 ] unsigned int 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        7 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 5
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_srb_init
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text3
  2825   0085CA                     __ptext3:
  2826                           	callstack 0
  2827   0085CA                     ___lwdiv:
  2828                           	callstack 23
  2829   0085CA  0E00               	movlw	0
  2830   0085CC  0100               	movlb	0	; () banked
  2831   0085CE  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2832   0085D0  0E00               	movlw	0
  2833   0085D2  6F65               	movwf	___lwdiv@quotient& (0+255),b
  2834   0085D4                     
  2835                           ; BSR set to: 0
  2836   0085D4  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2837   0085D6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2838   0085D8  B4D8               	btfsc	status,2,c
  2839   0085DA  EFF1  F042         	goto	u19881
  2840   0085DE  EFF3  F042         	goto	u19880
  2841   0085E2                     u19881:
  2842   0085E2  EF1B  F043         	goto	l2740
  2843   0085E6                     u19880:
  2844   0085E6                     
  2845                           ; BSR set to: 0
  2846   0085E6  0E01               	movlw	1
  2847   0085E8  6F64               	movwf	___lwdiv@counter& (0+255),b
  2848   0085EA  EFFB  F042         	goto	l16195
  2849   0085EE                     l16193:
  2850                           
  2851                           ; BSR set to: 0
  2852   0085EE  90D8               	bcf	status,0,c
  2853   0085F0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  2854   0085F2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2855   0085F4  2B64               	incf	___lwdiv@counter& (0+255),f,b
  2856   0085F6                     l16195:
  2857                           
  2858                           ; BSR set to: 0
  2859   0085F6  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2860   0085F8  EF00  F043         	goto	u19891
  2861   0085FC  EF02  F043         	goto	u19890
  2862   008600                     u19891:
  2863   008600  EFF7  F042         	goto	l16193
  2864   008604                     u19890:
  2865   008604                     l16197:
  2866                           
  2867                           ; BSR set to: 0
  2868   008604  90D8               	bcf	status,0,c
  2869   008606  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  2870   008608  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2871   00860A                     
  2872                           ; BSR set to: 0
  2873   00860A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2874   00860C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  2875   00860E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2876   008610  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2877   008612  A0D8               	btfss	status,0,c
  2878   008614  EF0E  F043         	goto	u19901
  2879   008618  EF10  F043         	goto	u19900
  2880   00861C                     u19901:
  2881   00861C  EF15  F043         	goto	l16205
  2882   008620                     u19900:
  2883   008620                     
  2884                           ; BSR set to: 0
  2885   008620  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2886   008622  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  2887   008624  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2888   008626  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2889   008628                     
  2890                           ; BSR set to: 0
  2891   008628  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  2892   00862A                     l16205:
  2893                           
  2894                           ; BSR set to: 0
  2895   00862A  90D8               	bcf	status,0,c
  2896   00862C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2897   00862E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  2898   008630                     
  2899                           ; BSR set to: 0
  2900   008630  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  2901   008632  EF02  F043         	goto	l16197
  2902   008636                     l2740:
  2903                           
  2904                           ; BSR set to: 0
  2905   008636  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  2906   00863A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2907   00863E                     
  2908                           ; BSR set to: 0
  2909   00863E  0012               	return		;funcret
  2910   008640                     __end_of___lwdiv:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _timer0_init *****************
  2914 ;; Defined at:
  2915 ;;		line 33 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; Hardware stack levels required when called: 5
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text4
  2944   0090B0                     __ptext4:
  2945                           	callstack 0
  2946   0090B0                     _timer0_init:
  2947                           	callstack 25
  2948   0090B0                     
  2949                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 34:     PIE3bits.TMR0IE = 1;
  2950   0090B0  0139               	movlb	57	; () banked
  2951   0090B2  8F93               	bsf	147,7,b	;volatile
  2952                           
  2953                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 36:     T0CON0bits.EN = 0;
  2954   0090B4  9EB8               	bcf	184,7,c	;volatile
  2955                           
  2956                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 37:     T0CON0bits.MD16 = 0;
  2957   0090B6  98B8               	bcf	184,4,c	;volatile
  2958   0090B8                     
  2959                           ; BSR set to: 57
  2960                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 39:     T0CON0bits.OUTPS = 0;
  2961   0090B8  0EF0               	movlw	-16
  2962   0090BA  16B8               	andwf	184,f,c	;volatile
  2963                           
  2964                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 40:     T0CON1bits.CKPS = 0;
  2965   0090BC  0EF0               	movlw	-16
  2966   0090BE  16B9               	andwf	185,f,c	;volatile
  2967                           
  2968                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 42:     T0CON1bits.CS = 0x5;
  2969   0090C0  50B9               	movf	185,w,c	;volatile
  2970   0090C2  0B1F               	andlw	-225
  2971   0090C4  09A0               	iorlw	160
  2972   0090C6  6EB9               	movwf	185,c	;volatile
  2973   0090C8                     
  2974                           ; BSR set to: 57
  2975                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 43:     T0CON1bits.ASYNC = 0;
  2976   0090C8  98B9               	bcf	185,4,c	;volatile
  2977   0090CA                     
  2978                           ; BSR set to: 57
  2979                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 46:     T0CON0bits.EN = 1;
  2980   0090CA  8EB8               	bsf	184,7,c	;volatile
  2981   0090CC                     
  2982                           ; BSR set to: 57
  2983   0090CC  0012               	return		;funcret
  2984   0090CE                     __end_of_timer0_init:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _send_status_ok *****************
  2988 ;; Defined at:
  2989 ;;		line 214 in file "main.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  text           32  145[BANK1 ] unsigned char [32]
  2994 ;;  board_stat_m   11  181[BANK1 ] struct .
  2995 ;;  time            4  177[BANK1 ] unsigned long 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:       47 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 18
  3012 ;; This function calls:
  3013 ;;		_BLUE_LED_TOGGLE
  3014 ;;		_build_board_stat_msg
  3015 ;;		_can_send
  3016 ;;		_f_close
  3017 ;;		_f_open
  3018 ;;		_f_write
  3019 ;;		_millis
  3020 ;;		_sprintf
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text5
  3027   007B7A                     __ptext5:
  3028                           	callstack 0
  3029   007B7A                     _send_status_ok:
  3030                           	callstack 12
  3031   007B7A                     
  3032                           ;main.c: 215:     can_msg_t board_stat_msg;;main.c: 216:     build_board_stat_msg(millis
      +                          (), E_NOMINAL, ((void*)0), 0, &board_stat_msg);
  3033   007B7A  ECD8  F047         	call	_millis	;wreg free
  3034   007B7E  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
  3035   007B82  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  3036   007B86  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  3037   007B8A  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  3038   007B8E  0E00               	movlw	0
  3039   007B90  0100               	movlb	0	; () banked
  3040   007B92  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
  3041   007B94  0E00               	movlw	0
  3042   007B96  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
  3043   007B98  0E00               	movlw	0
  3044   007B9A  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  3045   007B9C  0E00               	movlw	0
  3046   007B9E  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  3047   007BA0  0EB5               	movlw	low send_status_ok@board_stat_msg
  3048   007BA2  6F70               	movwf	build_board_stat_msg@output& (0+255),b
  3049   007BA4  0E01               	movlw	high send_status_ok@board_stat_msg
  3050   007BA6  6F71               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  3051   007BA8  ECCD  F03A         	call	_build_board_stat_msg	;wreg free
  3052   007BAC                     
  3053                           ;main.c: 217:     can_send(&board_stat_msg);
  3054   007BAC  0EB5               	movlw	low send_status_ok@board_stat_msg
  3055   007BAE  0100               	movlb	0	; () banked
  3056   007BB0  6F6B               	movwf	can_send@message& (0+255),b
  3057   007BB2  0E01               	movlw	high send_status_ok@board_stat_msg
  3058   007BB4  6F6C               	movwf	(can_send@message+1)& (0+255),b
  3059   007BB6  EC44  F03A         	call	_can_send	;wreg free
  3060   007BBA                     
  3061                           ;main.c: 219:     uint32_t time = millis();
  3062   007BBA  ECD8  F047         	call	_millis	;wreg free
  3063   007BBE  C060  F1B1         	movff	?_millis,send_status_ok@time
  3064   007BC2  C061  F1B2         	movff	?_millis+1,send_status_ok@time+1
  3065   007BC6  C062  F1B3         	movff	?_millis+2,send_status_ok@time+2
  3066   007BCA  C063  F1B4         	movff	?_millis+3,send_status_ok@time+3
  3067   007BCE                     
  3068                           ;main.c: 220:     char text[32];;main.c: 222:     sprintf(text, "%d\r\n", time);
  3069   007BCE  0E91               	movlw	low send_status_ok@text
  3070   007BD0  0100               	movlb	0	; () banked
  3071   007BD2  6F7D               	movwf	sprintf@s& (0+255),b
  3072   007BD4  0E01               	movlw	high send_status_ok@text
  3073   007BD6  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  3074   007BD8  0EF6               	movlw	low STR_11
  3075   007BDA  6F7F               	movwf	sprintf@fmt& (0+255),b
  3076   007BDC  0EFF               	movlw	high STR_11
  3077   007BDE  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  3078   007BE0  C1B1  F081         	movff	send_status_ok@time,?_sprintf+4
  3079   007BE4  C1B2  F082         	movff	send_status_ok@time+1,?_sprintf+5
  3080   007BE8  C1B3  F083         	movff	send_status_ok@time+2,?_sprintf+6
  3081   007BEC  C1B4  F084         	movff	send_status_ok@time+3,?_sprintf+7
  3082   007BF0  ECB4  F046         	call	_sprintf	;wreg free
  3083   007BF4                     
  3084                           ;main.c: 224:     if (f_open(&Fil, "Data.txt", 0x30 | 0x01 | 0x02) == FR_OK) {
  3085   007BF4  0EB7               	movlw	low _Fil
  3086   007BF6  0101               	movlb	1	; () banked
  3087   007BF8  6F41               	movwf	f_open@fp& (0+255),b
  3088   007BFA  0E04               	movlw	high _Fil
  3089   007BFC  6F42               	movwf	(f_open@fp+1)& (0+255),b
  3090   007BFE  0EE7               	movlw	low STR_8
  3091   007C00  6F43               	movwf	f_open@path& (0+255),b
  3092   007C02  0EFF               	movlw	high STR_8
  3093   007C04  6F44               	movwf	(f_open@path+1)& (0+255),b
  3094   007C06  0E33               	movlw	51
  3095   007C08  6F45               	movwf	f_open@mode& (0+255),b
  3096   007C0A  ECA0  F00F         	call	_f_open	;wreg free
  3097   007C0E  0900               	iorlw	0
  3098   007C10  A4D8               	btfss	status,2,c
  3099   007C12  EF0D  F03E         	goto	u21031
  3100   007C16  EF0F  F03E         	goto	u21030
  3101   007C1A                     u21031:
  3102   007C1A  EF2B  F03E         	goto	l2207
  3103   007C1E                     u21030:
  3104   007C1E                     
  3105                           ;main.c: 226:         f_write(&Fil, text, sizeof (text), &bw);
  3106   007C1E  0EB7               	movlw	low _Fil
  3107   007C20  0101               	movlb	1	; () banked
  3108   007C22  6F17               	movwf	f_write@fp& (0+255),b
  3109   007C24  0E04               	movlw	high _Fil
  3110   007C26  6F18               	movwf	(f_write@fp+1)& (0+255),b
  3111   007C28  0E91               	movlw	low send_status_ok@text
  3112   007C2A  6F19               	movwf	f_write@buff& (0+255),b
  3113   007C2C  0E01               	movlw	high send_status_ok@text
  3114   007C2E  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  3115   007C30  0E00               	movlw	0
  3116   007C32  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3117   007C34  0E20               	movlw	32
  3118   007C36  6F1B               	movwf	f_write@btw& (0+255),b
  3119   007C38  0EF8               	movlw	low _bw
  3120   007C3A  6F1D               	movwf	f_write@bw& (0+255),b
  3121   007C3C  0E01               	movlw	high _bw
  3122   007C3E  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  3123   007C40  EC69  F007         	call	_f_write	;wreg free
  3124                           
  3125                           ;main.c: 227:         f_close(&Fil);
  3126   007C44  0EB7               	movlw	low _Fil
  3127   007C46  0100               	movlb	0	; () banked
  3128   007C48  6FDA               	movwf	f_close@fp& (0+255),b
  3129   007C4A  0E04               	movlw	high _Fil
  3130   007C4C  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  3131   007C4E  ECBF  F045         	call	_f_close	;wreg free
  3132   007C52                     
  3133                           ;main.c: 229:         BLUE_LED_TOGGLE();
  3134   007C52  ECDD  F048         	call	_BLUE_LED_TOGGLE	;wreg free
  3135   007C56                     l2207:
  3136   007C56  0012               	return		;funcret
  3137   007C58                     __end_of_send_status_ok:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _sprintf *****************
  3141 ;; Defined at:
  3142 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  s               2   29[BANK0 ] PTR unsigned char 
  3145 ;;		 -> send_status_ok@text(32), 
  3146 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  3147 ;;		 -> STR_11(5), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  f              12   38[BANK0 ] struct _IO_FILE
  3150 ;;  ret             2    0        int 
  3151 ;;  ap              1   37[BANK0 ] PTR void [1]
  3152 ;;		 -> ?_sprintf(2), 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2   29[BANK0 ] int 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;Total ram usage:       21 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 9
  3169 ;; This function calls:
  3170 ;;		_vfprintf
  3171 ;; This function is called by:
  3172 ;;		_send_status_ok
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text6
  3177   008D68                     __ptext6:
  3178                           	callstack 0
  3179   008D68                     _sprintf:
  3180                           	callstack 20
  3181   008D68  0E81               	movlw	low (?_sprintf+4)
  3182   008D6A  0100               	movlb	0	; () banked
  3183   008D6C  6F85               	movwf	sprintf@ap& (0+255),b
  3184   008D6E  C07D  F086         	movff	sprintf@s,sprintf@f
  3185   008D72  C07E  F087         	movff	sprintf@s+1,sprintf@f+1
  3186   008D76                     
  3187                           ; BSR set to: 0
  3188   008D76  0E00               	movlw	0
  3189   008D78  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  3190   008D7A  0E00               	movlw	0
  3191   008D7C  6F89               	movwf	(sprintf@f+3)& (0+255),b
  3192   008D7E                     
  3193                           ; BSR set to: 0
  3194   008D7E  0E00               	movlw	0
  3195   008D80  6F91               	movwf	(sprintf@f+11)& (0+255),b
  3196   008D82  0E00               	movlw	0
  3197   008D84  6F90               	movwf	(sprintf@f+10)& (0+255),b
  3198   008D86                     
  3199                           ; BSR set to: 0
  3200   008D86  0E86               	movlw	low sprintf@f
  3201   008D88  6F77               	movwf	vfprintf@fp& (0+255),b
  3202   008D8A  C07F  F078         	movff	sprintf@fmt,vfprintf@fmt
  3203   008D8E  C080  F079         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3204   008D92  0E85               	movlw	low sprintf@ap
  3205   008D94  6F7A               	movwf	vfprintf@ap& (0+255),b
  3206   008D96  EC6A  F046         	call	_vfprintf	;wreg free
  3207   008D9A  0100               	movlb	0	; () banked
  3208   008D9C  5189               	movf	(sprintf@f+3)& (0+255),w,b
  3209   008D9E  257D               	addwf	sprintf@s& (0+255),w,b
  3210   008DA0  6ED9               	movwf	fsr2l,c
  3211   008DA2  518A               	movf	(sprintf@f+4)& (0+255),w,b
  3212   008DA4  217E               	addwfc	(sprintf@s+1)& (0+255),w,b
  3213   008DA6  6EDA               	movwf	fsr2h,c
  3214   008DA8  6ADF               	clrf	indf2,c
  3215   008DAA                     
  3216                           ; BSR set to: 0
  3217   008DAA  0012               	return		;funcret
  3218   008DAC                     __end_of_sprintf:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _vfprintf *****************
  3222 ;; Defined at:
  3223 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  3226 ;;		 -> sprintf@f(12), 
  3227 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  3228 ;;		 -> STR_11(5), 
  3229 ;;  ap              1   26[BANK0 ] PTR PTR void 
  3230 ;;		 -> sprintf@ap(1), 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  3233 ;;		 -> STR_11(5), 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2   23[BANK0 ] int 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;Total ram usage:        6 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 8
  3250 ;; This function calls:
  3251 ;;		_vfpfcnvrt
  3252 ;; This function is called by:
  3253 ;;		_sprintf
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text7
  3258   008CD4                     __ptext7:
  3259                           	callstack 0
  3260   008CD4                     _vfprintf:
  3261                           	callstack 20
  3262   008CD4                     
  3263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3264   008CD4  C078  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  3265   008CD8  C079  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3268   008CDC  EF79  F046         	goto	l16213
  3269   008CE0                     l16211:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3272   008CE0  C077  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  3273   008CE4  0E7B               	movlw	low vfprintf@cfmt
  3274   008CE6  0100               	movlb	0	; () banked
  3275   008CE8  6F6B               	movwf	vfpfcnvrt@fmt& (0+255),b
  3276   008CEA  C07A  F06C         	movff	vfprintf@ap,vfpfcnvrt@ap
  3277   008CEE  EC94  F02F         	call	_vfpfcnvrt	;wreg free
  3278   008CF2                     l16213:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3281   008CF2  0060  F1EF  FFF6   	movff	vfprintf@cfmt,tblptrl
  3282   008CF8  0060  F1F3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3283   008CFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3284   008CFE  6AF8               	clrf	tblptru,c
  3285   008D00                     	endif
  3286   008D00                     	if	0	;tblptru may be non-zero
  3287   008D00                     	endif
  3288   008D00  0008               	tblrd		*
  3289   008D02  50F5               	movf	tablat,w,c
  3290   008D04  0900               	iorlw	0
  3291   008D06  A4D8               	btfss	status,2,c
  3292   008D08  EF88  F046         	goto	u19911
  3293   008D0C  EF8A  F046         	goto	u19910
  3294   008D10                     u19911:
  3295   008D10  EF70  F046         	goto	l16211
  3296   008D14                     u19910:
  3297   008D14                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3299   008D14  0E00               	movlw	0
  3300   008D16  0100               	movlb	0	; () banked
  3301   008D18  6F78               	movwf	(?_vfprintf+1)& (0+255),b
  3302   008D1A  0E00               	movlw	0
  3303   008D1C  6F77               	movwf	?_vfprintf& (0+255),b
  3304   008D1E                     
  3305                           ; BSR set to: 0
  3306   008D1E  0012               	return		;funcret
  3307   008D20                     __end_of_vfprintf:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _vfpfcnvrt *****************
  3311 ;; Defined at:
  3312 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  3315 ;;		 -> sprintf@f(12), 
  3316 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  3317 ;;		 -> vfprintf@cfmt(2), 
  3318 ;;  ap              1   12[BANK0 ] PTR PTR void 
  3319 ;;		 -> sprintf@ap(1), 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  convarg         4   18[BANK0 ] struct .
  3322 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  3323 ;;		 -> STR_11(5), 
  3324 ;;  c               1   22[BANK0 ] unsigned char 
  3325 ;;  done            1   15[BANK0 ] _Bool 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3335 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;Total ram usage:       13 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 7
  3342 ;; This function calls:
  3343 ;;		___awdiv
  3344 ;;		___awmod
  3345 ;;		_abs
  3346 ;;		_fputc
  3347 ;; This function is called by:
  3348 ;;		_vfprintf
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text8
  3353   005F28                     __ptext8:
  3354                           	callstack 0
  3355   005F28                     _vfpfcnvrt:
  3356                           	callstack 20
  3357   005F28                     
  3358                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3359   005F28  0100               	movlb	0	; () banked
  3360   005F2A  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3361   005F2C  6ED9               	movwf	fsr2l,c
  3362   005F2E  6ADA               	clrf	fsr2h,c
  3363   005F30  006F FF7B FFF6     	movff	postinc2,tblptrl
  3364   005F36  006F FF77 FFF7     	movff	postdec2,tblptrh
  3365   005F3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3366   005F3C  6AF8               	clrf	tblptru,c
  3367   005F3E                     	endif
  3368   005F3E                     	if	0	;tblptru may be non-zero
  3369   005F3E                     	endif
  3370   005F3E  0008               	tblrd		*
  3371   005F40  50F5               	movf	tablat,w,c
  3372   005F42  0A25               	xorlw	37
  3373   005F44  A4D8               	btfss	status,2,c
  3374   005F46  EFA7  F02F         	goto	u18821
  3375   005F4A  EFA9  F02F         	goto	u18820
  3376   005F4E                     u18821:
  3377   005F4E  EF88  F030         	goto	l15625
  3378   005F52                     u18820:
  3379   005F52                     
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3382   005F52  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3383   005F54  6ED9               	movwf	fsr2l,c
  3384   005F56  6ADA               	clrf	fsr2h,c
  3385   005F58  2ADE               	incf	postinc2,f,c
  3386   005F5A  0E00               	movlw	0
  3387   005F5C  22DD               	addwfc	postdec2,f,c
  3388   005F5E                     
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3391   005F5E  0E00               	movlw	0
  3392   005F60  0101               	movlb	1	; () banked
  3393   005F62  6FDB               	movwf	(_width+1)& (0+255),b
  3394   005F64  0E00               	movlw	0
  3395   005F66  6FDA               	movwf	_width& (0+255),b
  3396   005F68  C1DA  F048         	movff	_width,_flags
  3397   005F6C                     
  3398                           ; BSR set to: 1
  3399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3400   005F6C  69DC               	setf	_prec& (0+255),b
  3401   005F6E  69DD               	setf	(_prec+1)& (0+255),b
  3402   005F70                     
  3403                           ; BSR set to: 1
  3404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3405   005F70  0100               	movlb	0	; () banked
  3406   005F72  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3407   005F74  6ED9               	movwf	fsr2l,c
  3408   005F76  6ADA               	clrf	fsr2h,c
  3409   005F78  006F FF78  F070    	movff	postinc2,vfpfcnvrt@cp
  3410   005F7E  006F FF74  F071    	movff	postdec2,vfpfcnvrt@cp+1
  3411   005F84                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3414   005F84  0060  F1C3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3415   005F8A  0060  F1C7  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  3416   005F90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3417   005F90  6AF8               	clrf	tblptru,c
  3418   005F92                     	endif
  3419   005F92                     	if	0	;tblptru may be non-zero
  3420   005F92                     	endif
  3421   005F92  0008               	tblrd		*
  3422   005F94  50F5               	movf	tablat,w,c
  3423   005F96  0A64               	xorlw	100
  3424   005F98  B4D8               	btfsc	status,2,c
  3425   005F9A  EFD1  F02F         	goto	u18831
  3426   005F9E  EFD3  F02F         	goto	u18830
  3427   005FA2                     u18831:
  3428   005FA2  EFE4  F02F         	goto	l15595
  3429   005FA6                     u18830:
  3430   005FA6                     
  3431                           ; BSR set to: 0
  3432   005FA6  0060  F1C3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3433   005FAC  0060  F1C7  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  3434   005FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3435   005FB2  6AF8               	clrf	tblptru,c
  3436   005FB4                     	endif
  3437   005FB4                     	if	0	;tblptru may be non-zero
  3438   005FB4                     	endif
  3439   005FB4  0008               	tblrd		*
  3440   005FB6  50F5               	movf	tablat,w,c
  3441   005FB8  0A69               	xorlw	105
  3442   005FBA  A4D8               	btfss	status,2,c
  3443   005FBC  EFE2  F02F         	goto	u18841
  3444   005FC0  EFE4  F02F         	goto	u18840
  3445   005FC4                     u18841:
  3446   005FC4  EF7F  F030         	goto	l15621
  3447   005FC8                     u18840:
  3448   005FC8                     l15595:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3452   005FC8  516C               	movf	vfpfcnvrt@ap& (0+255),w,b
  3453   005FCA  6ED9               	movwf	fsr2l,c
  3454   005FCC  6ADA               	clrf	fsr2h,c
  3455   005FCE  0E02               	movlw	2
  3456   005FD0  26DF               	addwf	indf2,f,c
  3457   005FD2  5CDF               	subwf	indf2,w,c
  3458   005FD4  6ED9               	movwf	fsr2l,c
  3459   005FD6  6ADA               	clrf	fsr2h,c
  3460   005FD8  006F FF78  F072    	movff	postinc2,vfpfcnvrt@convarg
  3461   005FDE  006F FF78  F073    	movff	postinc2,vfpfcnvrt@convarg+1
  3462   005FE4                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3465   005FE4  0E01               	movlw	1
  3466   005FE6  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3467   005FE8  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  3468   005FEA  0E00               	movlw	0
  3469   005FEC  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3470   005FEE  6F6E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3471   005FF0  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3472   005FF2  6ED9               	movwf	fsr2l,c
  3473   005FF4  6ADA               	clrf	fsr2h,c
  3474   005FF6  0060  F1B7  FFDE   	movff	??_vfpfcnvrt,postinc2
  3475   005FFC  0060  F1BB  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  3476   006002                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3479   006002  0E20               	movlw	32
  3480   006004  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3483   006006  BF73               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3484   006008  EF08  F030         	goto	u18851
  3485   00600C  EF0B  F030         	goto	u18850
  3486   006010                     u18851:
  3487   006010  0E01               	movlw	1
  3488   006012  EF0C  F030         	goto	u18860
  3489   006016                     u18850:
  3490   006016  0E00               	movlw	0
  3491   006018                     u18860:
  3492   006018  6F6F               	movwf	vfpfcnvrt@done& (0+255),b
  3493   00601A                     l15601:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3497   00601A  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  3498   00601C  0E00               	movlw	low _dbuf
  3499   00601E  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  3500   006020  6ED9               	movwf	fsr2l,c
  3501   006022  6ADA               	clrf	fsr2h,c
  3502   006024  0E02               	movlw	high _dbuf
  3503   006026  22DA               	addwfc	fsr2h,f,c
  3504   006028  C072  F060         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3505   00602C  C073  F061         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3506   006030  0E00               	movlw	0
  3507   006032  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3508   006034  0E0A               	movlw	10
  3509   006036  6F62               	movwf	___awmod@divisor& (0+255),b
  3510   006038  EC91  F040         	call	___awmod	;wreg free
  3511   00603C  C060  F066         	movff	?___awmod,abs@a
  3512   006040  C061  F067         	movff	?___awmod+1,abs@a+1
  3513   006044  EC8A  F047         	call	_abs	;wreg free
  3514   006048  0100               	movlb	0	; () banked
  3515   00604A  5166               	movf	?_abs& (0+255),w,b
  3516   00604C  0F30               	addlw	48
  3517   00604E  6EDF               	movwf	indf2,c
  3518   006050                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3521   006050  C072  F060         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3522   006054  C073  F061         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3523   006058  0E00               	movlw	0
  3524   00605A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3525   00605C  0E0A               	movlw	10
  3526   00605E  6F62               	movwf	___awdiv@divisor& (0+255),b
  3527   006060  ECCF  F03F         	call	___awdiv	;wreg free
  3528   006064  C060  F072         	movff	?___awdiv,vfpfcnvrt@convarg
  3529   006068  C061  F073         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3530   00606C                     
  3531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3532   00606C  0100               	movlb	0	; () banked
  3533   00606E  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  3534   006070  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  3535   006072  B4D8               	btfsc	status,2,c
  3536   006074  EF3E  F030         	goto	u18871
  3537   006078  EF40  F030         	goto	u18870
  3538   00607C                     u18871:
  3539   00607C  EF48  F030         	goto	l15609
  3540   006080                     u18870:
  3541   006080                     
  3542                           ; BSR set to: 0
  3543   006080  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3544   006082  A4D8               	btfss	status,2,c
  3545   006084  EF46  F030         	goto	u18881
  3546   006088  EF48  F030         	goto	u18880
  3547   00608C                     u18881:
  3548   00608C  EF0D  F030         	goto	l15601
  3549   006090                     u18880:
  3550   006090                     l15609:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3554   006090  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3555   006092  B4D8               	btfsc	status,2,c
  3556   006094  EF4E  F030         	goto	u18891
  3557   006098  EF50  F030         	goto	u18890
  3558   00609C                     u18891:
  3559   00609C  EF74  F030         	goto	l15619
  3560   0060A0                     u18890:
  3561   0060A0                     
  3562                           ; BSR set to: 0
  3563   0060A0  516F               	movf	vfpfcnvrt@done& (0+255),w,b
  3564   0060A2  B4D8               	btfsc	status,2,c
  3565   0060A4  EF56  F030         	goto	u18901
  3566   0060A8  EF58  F030         	goto	u18900
  3567   0060AC                     u18901:
  3568   0060AC  EF74  F030         	goto	l15619
  3569   0060B0                     u18900:
  3570   0060B0                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3573   0060B0  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  3574   0060B2  0E00               	movlw	low _dbuf
  3575   0060B4  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  3576   0060B6  6ED9               	movwf	fsr2l,c
  3577   0060B8  6ADA               	clrf	fsr2h,c
  3578   0060BA  0E02               	movlw	high _dbuf
  3579   0060BC  22DA               	addwfc	fsr2h,f,c
  3580   0060BE  0E2D               	movlw	45
  3581   0060C0  6EDF               	movwf	indf2,c
  3582   0060C2  EF74  F030         	goto	l15619
  3583   0060C6                     l15615:
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3587   0060C6  0E00               	movlw	low _dbuf
  3588   0060C8  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  3589   0060CA  6ED9               	movwf	fsr2l,c
  3590   0060CC  6ADA               	clrf	fsr2h,c
  3591   0060CE  0E02               	movlw	high _dbuf
  3592   0060D0  22DA               	addwfc	fsr2h,f,c
  3593   0060D2  50DF               	movf	indf2,w,c
  3594   0060D4  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  3595   0060D6  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  3596   0060D8  6F60               	movwf	fputc@c& (0+255),b
  3597   0060DA  6B61               	clrf	(fputc@c+1)& (0+255),b
  3598   0060DC  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3599   0060E0  EC6C  F03F         	call	_fputc	;wreg free
  3600   0060E4  0100               	movlb	0	; () banked
  3601   0060E6  2B76               	incf	vfpfcnvrt@c& (0+255),f,b
  3602   0060E8                     l15619:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3606   0060E8  0E20               	movlw	32
  3607   0060EA  1976               	xorwf	vfpfcnvrt@c& (0+255),w,b
  3608   0060EC  A4D8               	btfss	status,2,c
  3609   0060EE  EF7B  F030         	goto	u18911
  3610   0060F2  EF7D  F030         	goto	u18910
  3611   0060F6                     u18911:
  3612   0060F6  EF63  F030         	goto	l15615
  3613   0060FA                     u18910:
  3614   0060FA  EF9C  F030         	goto	l2977
  3615   0060FE                     l15621:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3618   0060FE  0100               	movlb	0	; () banked
  3619   006100  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3620   006102  6ED9               	movwf	fsr2l,c
  3621   006104  6ADA               	clrf	fsr2h,c
  3622   006106  2ADE               	incf	postinc2,f,c
  3623   006108  0E00               	movlw	0
  3624   00610A  22DD               	addwfc	postdec2,f,c
  3625   00610C  EF9C  F030         	goto	l2977
  3626   006110                     l15625:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3630   006110  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3631   006112  6ED9               	movwf	fsr2l,c
  3632   006114  6ADA               	clrf	fsr2h,c
  3633   006116  006F FF7B FFF6     	movff	postinc2,tblptrl
  3634   00611C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3635   006122                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3636   006122  6AF8               	clrf	tblptru,c
  3637   006124                     	endif
  3638   006124                     	if	0	;tblptru may be non-zero
  3639   006124                     	endif
  3640   006124  0008               	tblrd		*
  3641   006126  50F5               	movf	tablat,w,c
  3642   006128  6F60               	movwf	fputc@c& (0+255),b
  3643   00612A  6B61               	clrf	(fputc@c+1)& (0+255),b
  3644   00612C  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3645   006130  EC6C  F03F         	call	_fputc	;wreg free
  3646   006134  EF7F  F030         	goto	l15621
  3647   006138                     l2977:
  3648                           
  3649                           ; BSR set to: 0
  3650   006138  0012               	return		;funcret
  3651   00613A                     __end_of_vfpfcnvrt:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _fputc *****************
  3655 ;; Defined at:
  3656 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  c               2    0[BANK0 ] int 
  3659 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  3660 ;;		 -> sprintf@f(12), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2    0[BANK0 ] int 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        8 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 6
  3679 ;; This function calls:
  3680 ;;		_putch
  3681 ;; This function is called by:
  3682 ;;		_vfpfcnvrt
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text9
  3687   007ED8                     __ptext9:
  3688                           	callstack 0
  3689   007ED8                     _fputc:
  3690                           	callstack 20
  3691   007ED8  0100               	movlb	0	; () banked
  3692   007EDA  5162               	movf	fputc@fp& (0+255),w,b
  3693   007EDC  B4D8               	btfsc	status,2,c
  3694   007EDE  EF73  F03F         	goto	u18051
  3695   007EE2  EF75  F03F         	goto	u18050
  3696   007EE6                     u18051:
  3697   007EE6  EF7D  F03F         	goto	l15169
  3698   007EEA                     u18050:
  3699   007EEA                     
  3700                           ; BSR set to: 0
  3701   007EEA  5162               	movf	fputc@fp& (0+255),w,b
  3702   007EEC  A4D8               	btfss	status,2,c
  3703   007EEE  EF7B  F03F         	goto	u18061
  3704   007EF2  EF7D  F03F         	goto	u18060
  3705   007EF6                     u18061:
  3706   007EF6  EF82  F03F         	goto	l15171
  3707   007EFA                     u18060:
  3708   007EFA                     l15169:
  3709                           
  3710                           ; BSR set to: 0
  3711   007EFA  5160               	movf	fputc@c& (0+255),w,b
  3712   007EFC  ECF1  F048         	call	_putch
  3713   007F00  EFCE  F03F         	goto	l3002
  3714   007F04                     l15171:
  3715                           
  3716                           ; BSR set to: 0
  3717   007F04  5162               	movf	fputc@fp& (0+255),w,b
  3718   007F06  6ED9               	movwf	fsr2l,c
  3719   007F08  6ADA               	clrf	fsr2h,c
  3720   007F0A  0E0A               	movlw	10
  3721   007F0C  26D9               	addwf	fsr2l,f,c
  3722   007F0E  50DE               	movf	postinc2,w,c
  3723   007F10  10DE               	iorwf	postinc2,w,c
  3724   007F12  B4D8               	btfsc	status,2,c
  3725   007F14  EF8E  F03F         	goto	u18071
  3726   007F18  EF90  F03F         	goto	u18070
  3727   007F1C                     u18071:
  3728   007F1C  EFA9  F03F         	goto	l15175
  3729   007F20                     u18070:
  3730   007F20                     
  3731                           ; BSR set to: 0
  3732   007F20  5162               	movf	fputc@fp& (0+255),w,b
  3733   007F22  6ED9               	movwf	fsr2l,c
  3734   007F24  6ADA               	clrf	fsr2h,c
  3735   007F26  0E0A               	movlw	10
  3736   007F28  26D9               	addwf	fsr2l,f,c
  3737   007F2A  5162               	movf	fputc@fp& (0+255),w,b
  3738   007F2C  6EE1               	movwf	fsr1l,c
  3739   007F2E  6AE2               	clrf	fsr1h,c
  3740   007F30  0E03               	movlw	3
  3741   007F32  26E1               	addwf	fsr1l,f,c
  3742   007F34  50DE               	movf	postinc2,w,c
  3743   007F36  5CE6               	subwf	postinc1,w,c
  3744   007F38  50E6               	movf	postinc1,w,c
  3745   007F3A  0A80               	xorlw	128
  3746   007F3C  6F67               	movwf	(??_fputc+4)& (0+255),b
  3747   007F3E  50DE               	movf	postinc2,w,c
  3748   007F40  0A80               	xorlw	128
  3749   007F42  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  3750   007F44  B0D8               	btfsc	status,0,c
  3751   007F46  EFA7  F03F         	goto	u18081
  3752   007F4A  EFA9  F03F         	goto	u18080
  3753   007F4E                     u18081:
  3754   007F4E  EFCE  F03F         	goto	l3002
  3755   007F52                     u18080:
  3756   007F52                     l15175:
  3757                           
  3758                           ; BSR set to: 0
  3759   007F52  5162               	movf	fputc@fp& (0+255),w,b
  3760   007F54  6ED9               	movwf	fsr2l,c
  3761   007F56  6ADA               	clrf	fsr2h,c
  3762   007F58  0E03               	movlw	3
  3763   007F5A  26D9               	addwf	fsr2l,f,c
  3764   007F5C  006F FF78  F063    	movff	postinc2,??_fputc
  3765   007F62  006F FF74  F064    	movff	postdec2,??_fputc+1
  3766   007F68  5162               	movf	fputc@fp& (0+255),w,b
  3767   007F6A  6ED9               	movwf	fsr2l,c
  3768   007F6C  6ADA               	clrf	fsr2h,c
  3769   007F6E  006F FF78  F065    	movff	postinc2,??_fputc+2
  3770   007F74  006F FF74  F066    	movff	postdec2,??_fputc+3
  3771   007F7A  5163               	movf	??_fputc& (0+255),w,b
  3772   007F7C  2565               	addwf	(??_fputc+2)& (0+255),w,b
  3773   007F7E  6ED9               	movwf	fsr2l,c
  3774   007F80  5164               	movf	(??_fputc+1)& (0+255),w,b
  3775   007F82  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  3776   007F84  6EDA               	movwf	fsr2h,c
  3777   007F86  0060  F183  FFDF   	movff	fputc@c,indf2
  3778   007F8C  5162               	movf	fputc@fp& (0+255),w,b
  3779   007F8E  6ED9               	movwf	fsr2l,c
  3780   007F90  6ADA               	clrf	fsr2h,c
  3781   007F92  0E03               	movlw	3
  3782   007F94  26D9               	addwf	fsr2l,f,c
  3783   007F96  2ADE               	incf	postinc2,f,c
  3784   007F98  0E00               	movlw	0
  3785   007F9A  22DD               	addwfc	postdec2,f,c
  3786   007F9C                     l3002:
  3787   007F9C  0012               	return		;funcret
  3788   007F9E                     __end_of_fputc:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _putch *****************
  3792 ;; Defined at:
  3793 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  c               1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  c               1    0[COMRAM] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 5
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_fputc
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text10
  3822   0091E2                     __ptext10:
  3823                           	callstack 0
  3824   0091E2                     _putch:
  3825                           	callstack 20
  3826   0091E2  0012               	return		;funcret
  3827   0091E4                     __end_of_putch:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _abs *****************
  3831 ;; Defined at:
  3832 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  a               2    6[BANK0 ] int 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2    6[BANK0 ] int 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        4 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 5
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_vfpfcnvrt
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text11
  3861   008F14                     __ptext11:
  3862                           	callstack 0
  3863   008F14                     _abs:
  3864                           	callstack 21
  3865   008F14  0100               	movlb	0	; () banked
  3866   008F16  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  3867   008F18  EF90  F047         	goto	u10481
  3868   008F1C  EF92  F047         	goto	u10480
  3869   008F20                     u10481:
  3870   008F20  EF98  F047         	goto	l2987
  3871   008F24                     u10480:
  3872   008F24                     
  3873                           ; BSR set to: 0
  3874   008F24  C066  F066         	movff	abs@a,?_abs
  3875   008F28  C067  F067         	movff	abs@a+1,?_abs+1
  3876   008F2C  EFA4  F047         	goto	l2990
  3877   008F30                     l2987:
  3878                           
  3879                           ; BSR set to: 0
  3880   008F30  C066  F068         	movff	abs@a,??_abs
  3881   008F34  C067  F069         	movff	abs@a+1,??_abs+1
  3882   008F38  1F68               	comf	??_abs& (0+255),f,b
  3883   008F3A  1F69               	comf	(??_abs+1)& (0+255),f,b
  3884   008F3C  4B68               	infsnz	??_abs& (0+255),f,b
  3885   008F3E  2B69               	incf	(??_abs+1)& (0+255),f,b
  3886   008F40  C068  F066         	movff	??_abs,?_abs
  3887   008F44  C069  F067         	movff	??_abs+1,?_abs+1
  3888   008F48                     l2990:
  3889                           
  3890                           ; BSR set to: 0
  3891   008F48  0012               	return		;funcret
  3892   008F4A                     __end_of_abs:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function ___awmod *****************
  3896 ;; Defined at:
  3897 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  dividend        2    0[BANK0 ] int 
  3900 ;;  divisor         2    2[BANK0 ] int 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  sign            1    5[BANK0 ] unsigned char 
  3903 ;;  counter         1    4[BANK0 ] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2    0[BANK0 ] int 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        6 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 5
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_vfpfcnvrt
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text12
  3928   008122                     __ptext12:
  3929                           	callstack 0
  3930   008122                     ___awmod:
  3931                           	callstack 21
  3932   008122  0E00               	movlw	0
  3933   008124  0100               	movlb	0	; () banked
  3934   008126  6F65               	movwf	___awmod@sign& (0+255),b
  3935   008128                     
  3936                           ; BSR set to: 0
  3937   008128  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3938   00812A  EF9B  F040         	goto	u17990
  3939   00812E  EF99  F040         	goto	u17991
  3940   008132                     u17991:
  3941   008132  EFA1  F040         	goto	l15137
  3942   008136                     u17990:
  3943   008136                     
  3944                           ; BSR set to: 0
  3945   008136  6D60               	negf	___awmod@dividend& (0+255),b
  3946   008138  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3947   00813A  B0D8               	btfsc	status,0,c
  3948   00813C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3949   00813E                     
  3950                           ; BSR set to: 0
  3951   00813E  0E01               	movlw	1
  3952   008140  6F65               	movwf	___awmod@sign& (0+255),b
  3953   008142                     l15137:
  3954                           
  3955                           ; BSR set to: 0
  3956   008142  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3957   008144  EFA8  F040         	goto	u18000
  3958   008148  EFA6  F040         	goto	u18001
  3959   00814C                     u18001:
  3960   00814C  EFAC  F040         	goto	l15141
  3961   008150                     u18000:
  3962   008150                     
  3963                           ; BSR set to: 0
  3964   008150  6D62               	negf	___awmod@divisor& (0+255),b
  3965   008152  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3966   008154  B0D8               	btfsc	status,0,c
  3967   008156  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3968   008158                     l15141:
  3969                           
  3970                           ; BSR set to: 0
  3971   008158  5162               	movf	___awmod@divisor& (0+255),w,b
  3972   00815A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3973   00815C  B4D8               	btfsc	status,2,c
  3974   00815E  EFB3  F040         	goto	u18011
  3975   008162  EFB5  F040         	goto	u18010
  3976   008166                     u18011:
  3977   008166  EFD9  F040         	goto	l15157
  3978   00816A                     u18010:
  3979   00816A                     
  3980                           ; BSR set to: 0
  3981   00816A  0E01               	movlw	1
  3982   00816C  6F64               	movwf	___awmod@counter& (0+255),b
  3983   00816E  EFBD  F040         	goto	l15147
  3984   008172                     l15145:
  3985                           
  3986                           ; BSR set to: 0
  3987   008172  90D8               	bcf	status,0,c
  3988   008174  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3989   008176  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3990   008178  2B64               	incf	___awmod@counter& (0+255),f,b
  3991   00817A                     l15147:
  3992                           
  3993                           ; BSR set to: 0
  3994   00817A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3995   00817C  EFC2  F040         	goto	u18021
  3996   008180  EFC4  F040         	goto	u18020
  3997   008184                     u18021:
  3998   008184  EFB9  F040         	goto	l15145
  3999   008188                     u18020:
  4000   008188                     l15149:
  4001                           
  4002                           ; BSR set to: 0
  4003   008188  5162               	movf	___awmod@divisor& (0+255),w,b
  4004   00818A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  4005   00818C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4006   00818E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4007   008190  A0D8               	btfss	status,0,c
  4008   008192  EFCD  F040         	goto	u18031
  4009   008196  EFCF  F040         	goto	u18030
  4010   00819A                     u18031:
  4011   00819A  EFD3  F040         	goto	l15153
  4012   00819E                     u18030:
  4013   00819E                     
  4014                           ; BSR set to: 0
  4015   00819E  5162               	movf	___awmod@divisor& (0+255),w,b
  4016   0081A0  5F60               	subwf	___awmod@dividend& (0+255),f,b
  4017   0081A2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4018   0081A4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4019   0081A6                     l15153:
  4020                           
  4021                           ; BSR set to: 0
  4022   0081A6  90D8               	bcf	status,0,c
  4023   0081A8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4024   0081AA  3362               	rrcf	___awmod@divisor& (0+255),f,b
  4025   0081AC                     
  4026                           ; BSR set to: 0
  4027   0081AC  2F64               	decfsz	___awmod@counter& (0+255),f,b
  4028   0081AE  EFC4  F040         	goto	l15149
  4029   0081B2                     l15157:
  4030                           
  4031                           ; BSR set to: 0
  4032   0081B2  5165               	movf	___awmod@sign& (0+255),w,b
  4033   0081B4  B4D8               	btfsc	status,2,c
  4034   0081B6  EFDF  F040         	goto	u18041
  4035   0081BA  EFE1  F040         	goto	u18040
  4036   0081BE                     u18041:
  4037   0081BE  EFE5  F040         	goto	l15161
  4038   0081C2                     u18040:
  4039   0081C2                     
  4040                           ; BSR set to: 0
  4041   0081C2  6D60               	negf	___awmod@dividend& (0+255),b
  4042   0081C4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4043   0081C6  B0D8               	btfsc	status,0,c
  4044   0081C8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4045   0081CA                     l15161:
  4046                           
  4047                           ; BSR set to: 0
  4048   0081CA  C060  F060         	movff	___awmod@dividend,?___awmod
  4049   0081CE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  4050   0081D2                     
  4051                           ; BSR set to: 0
  4052   0081D2  0012               	return		;funcret
  4053   0081D4                     __end_of___awmod:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function ___awdiv *****************
  4057 ;; Defined at:
  4058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  dividend        2    0[BANK0 ] int 
  4061 ;;  divisor         2    2[BANK0 ] int 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  quotient        2    6[BANK0 ] int 
  4064 ;;  sign            1    5[BANK0 ] unsigned char 
  4065 ;;  counter         1    4[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2    0[BANK0 ] int 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;Total ram usage:        8 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 5
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_vfpfcnvrt
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text13
  4090   007F9E                     __ptext13:
  4091                           	callstack 0
  4092   007F9E                     ___awdiv:
  4093                           	callstack 21
  4094   007F9E  0E00               	movlw	0
  4095   007FA0  0100               	movlb	0	; () banked
  4096   007FA2  6F65               	movwf	___awdiv@sign& (0+255),b
  4097   007FA4                     
  4098                           ; BSR set to: 0
  4099   007FA4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4100   007FA6  EFD9  F03F         	goto	u17930
  4101   007FAA  EFD7  F03F         	goto	u17931
  4102   007FAE                     u17931:
  4103   007FAE  EFDF  F03F         	goto	l15093
  4104   007FB2                     u17930:
  4105   007FB2                     
  4106                           ; BSR set to: 0
  4107   007FB2  6D62               	negf	___awdiv@divisor& (0+255),b
  4108   007FB4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4109   007FB6  B0D8               	btfsc	status,0,c
  4110   007FB8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4111   007FBA                     
  4112                           ; BSR set to: 0
  4113   007FBA  0E01               	movlw	1
  4114   007FBC  6F65               	movwf	___awdiv@sign& (0+255),b
  4115   007FBE                     l15093:
  4116                           
  4117                           ; BSR set to: 0
  4118   007FBE  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4119   007FC0  EFE6  F03F         	goto	u17940
  4120   007FC4  EFE4  F03F         	goto	u17941
  4121   007FC8                     u17941:
  4122   007FC8  EFEC  F03F         	goto	l15099
  4123   007FCC                     u17940:
  4124   007FCC                     
  4125                           ; BSR set to: 0
  4126   007FCC  6D60               	negf	___awdiv@dividend& (0+255),b
  4127   007FCE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4128   007FD0  B0D8               	btfsc	status,0,c
  4129   007FD2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4130   007FD4                     
  4131                           ; BSR set to: 0
  4132   007FD4  0E01               	movlw	1
  4133   007FD6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4134   007FD8                     l15099:
  4135                           
  4136                           ; BSR set to: 0
  4137   007FD8  0E00               	movlw	0
  4138   007FDA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4139   007FDC  0E00               	movlw	0
  4140   007FDE  6F66               	movwf	___awdiv@quotient& (0+255),b
  4141   007FE0                     
  4142                           ; BSR set to: 0
  4143   007FE0  5162               	movf	___awdiv@divisor& (0+255),w,b
  4144   007FE2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4145   007FE4  B4D8               	btfsc	status,2,c
  4146   007FE6  EFF7  F03F         	goto	u17951
  4147   007FEA  EFF9  F03F         	goto	u17950
  4148   007FEE                     u17951:
  4149   007FEE  EF21  F040         	goto	l15121
  4150   007FF2                     u17950:
  4151   007FF2                     
  4152                           ; BSR set to: 0
  4153   007FF2  0E01               	movlw	1
  4154   007FF4  6F64               	movwf	___awdiv@counter& (0+255),b
  4155   007FF6  EF01  F040         	goto	l15107
  4156   007FFA                     l15105:
  4157                           
  4158                           ; BSR set to: 0
  4159   007FFA  90D8               	bcf	status,0,c
  4160   007FFC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4161   007FFE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4162   008000  2B64               	incf	___awdiv@counter& (0+255),f,b
  4163   008002                     l15107:
  4164                           
  4165                           ; BSR set to: 0
  4166   008002  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4167   008004  EF06  F040         	goto	u17961
  4168   008008  EF08  F040         	goto	u17960
  4169   00800C                     u17961:
  4170   00800C  EFFD  F03F         	goto	l15105
  4171   008010                     u17960:
  4172   008010                     l15109:
  4173                           
  4174                           ; BSR set to: 0
  4175   008010  90D8               	bcf	status,0,c
  4176   008012  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4177   008014  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4178   008016                     
  4179                           ; BSR set to: 0
  4180   008016  5162               	movf	___awdiv@divisor& (0+255),w,b
  4181   008018  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4182   00801A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4183   00801C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4184   00801E  A0D8               	btfss	status,0,c
  4185   008020  EF14  F040         	goto	u17971
  4186   008024  EF16  F040         	goto	u17970
  4187   008028                     u17971:
  4188   008028  EF1B  F040         	goto	l15117
  4189   00802C                     u17970:
  4190   00802C                     
  4191                           ; BSR set to: 0
  4192   00802C  5162               	movf	___awdiv@divisor& (0+255),w,b
  4193   00802E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4194   008030  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4195   008032  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4196   008034                     
  4197                           ; BSR set to: 0
  4198   008034  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4199   008036                     l15117:
  4200                           
  4201                           ; BSR set to: 0
  4202   008036  90D8               	bcf	status,0,c
  4203   008038  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4204   00803A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4205   00803C                     
  4206                           ; BSR set to: 0
  4207   00803C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4208   00803E  EF08  F040         	goto	l15109
  4209   008042                     l15121:
  4210                           
  4211                           ; BSR set to: 0
  4212   008042  5165               	movf	___awdiv@sign& (0+255),w,b
  4213   008044  B4D8               	btfsc	status,2,c
  4214   008046  EF27  F040         	goto	u17981
  4215   00804A  EF29  F040         	goto	u17980
  4216   00804E                     u17981:
  4217   00804E  EF2D  F040         	goto	l15125
  4218   008052                     u17980:
  4219   008052                     
  4220                           ; BSR set to: 0
  4221   008052  6D66               	negf	___awdiv@quotient& (0+255),b
  4222   008054  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4223   008056  B0D8               	btfsc	status,0,c
  4224   008058  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4225   00805A                     l15125:
  4226                           
  4227                           ; BSR set to: 0
  4228   00805A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4229   00805E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4230   008062                     
  4231                           ; BSR set to: 0
  4232   008062  0012               	return		;funcret
  4233   008064                     __end_of___awdiv:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _f_write *****************
  4237 ;; Defined at:
  4238 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  fp              2   23[BANK1 ] PTR struct .
  4241 ;;		 -> Fil(546), pb$fp(3), 
  4242 ;;  buff            2   25[BANK1 ] PTR const void 
  4243 ;;		 -> pb$buf(64), send_status_ok@text(32), STR_9(12), f_printf@pb(70), 
  4244 ;;		 -> f_puts@pb(70), f_putc@pb(70), 
  4245 ;;  btw             2   27[BANK1 ] unsigned int 
  4246 ;;  bw              2   29[BANK1 ] PTR unsigned int 
  4247 ;;		 -> bw(2), putc_flush@nw(2), putc_bfd@n(2), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  clst            4   58[BANK1 ] unsigned long 
  4250 ;;  sect            4   54[BANK1 ] unsigned long 
  4251 ;;  fs              2   64[BANK1 ] PTR struct .
  4252 ;;		 -> FatFs(563), NULL(0), 
  4253 ;;  wcnt            2   62[BANK1 ] unsigned int 
  4254 ;;  cc              2   52[BANK1 ] unsigned int 
  4255 ;;  csect           2   50[BANK1 ] unsigned int 
  4256 ;;  wbuff           2   47[BANK1 ] PTR const unsigned char 
  4257 ;;		 -> pb$buf(64), send_status_ok@text(32), STR_9(12), f_printf@pb(70), 
  4258 ;;		 -> f_puts@pb(70), f_putc@pb(70), 
  4259 ;;  res             1   49[BANK1 ] enum E68
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      enum E68
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:       43 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 14
  4276 ;; This function calls:
  4277 ;;		_clst2sect
  4278 ;;		_create_chain
  4279 ;;		_disk_read
  4280 ;;		_disk_write
  4281 ;;		_mem_cpy
  4282 ;;		_validate
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;;		_send_status_ok
  4286 ;;		_putc_bfd
  4287 ;;		_putc_flush
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text14
  4292   000ED2                     __ptext14:
  4293                           	callstack 0
  4294   000ED2                     _f_write:
  4295                           	callstack 15
  4296   000ED2                     
  4297                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  4298   000ED2  C119  F12F         	movff	f_write@buff,f_write@wbuff
  4299   000ED6  C11A  F130         	movff	f_write@buff+1,f_write@wbuff+1
  4300   000EDA                     
  4301                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  4302   000EDA  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  4303   000EE0  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  4304   000EE6  6ADE               	clrf	postinc2,c
  4305   000EE8  6ADD               	clrf	postdec2,c
  4306   000EEA                     
  4307                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  4308   000EEA  C117  F062         	movff	f_write@fp,validate@obj
  4309   000EEE  C118  F063         	movff	f_write@fp+1,validate@obj+1
  4310   000EF2  0E40               	movlw	low f_write@fs
  4311   000EF4  0100               	movlb	0	; () banked
  4312   000EF6  6F64               	movwf	validate@rfs& (0+255),b
  4313   000EF8  0E01               	movlw	high f_write@fs
  4314   000EFA  6F65               	movwf	(validate@rfs+1)& (0+255),b
  4315   000EFC  ECAF  F039         	call	_validate	;wreg free
  4316   000F00  0101               	movlb	1	; () banked
  4317   000F02  6F31               	movwf	f_write@res& (0+255),b
  4318   000F04                     
  4319                           ; BSR set to: 1
  4320                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  4321   000F04  5131               	movf	f_write@res& (0+255),w,b
  4322   000F06  A4D8               	btfss	status,2,c
  4323   000F08  EF88  F007         	goto	u20341
  4324   000F0C  EF8A  F007         	goto	u20340
  4325   000F10                     u20341:
  4326   000F10  EF9A  F007         	goto	l16447
  4327   000F14                     u20340:
  4328   000F14                     
  4329                           ; BSR set to: 1
  4330   000F14  EE20 F00F          	lfsr	2,15
  4331   000F18  5117               	movf	f_write@fp& (0+255),w,b
  4332   000F1A  26D9               	addwf	fsr2l,f,c
  4333   000F1C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4334   000F1E  22DA               	addwfc	fsr2h,f,c
  4335   000F20  50DF               	movf	indf2,w,c
  4336   000F22  6F31               	movwf	f_write@res& (0+255),b
  4337   000F24  5131               	movf	f_write@res& (0+255),w,b
  4338   000F26  B4D8               	btfsc	status,2,c
  4339   000F28  EF98  F007         	goto	u20351
  4340   000F2C  EF9A  F007         	goto	u20350
  4341   000F30                     u20351:
  4342   000F30  EF9D  F007         	goto	l16451
  4343   000F34                     u20350:
  4344   000F34                     l16447:
  4345                           
  4346                           ; BSR set to: 1
  4347   000F34  5131               	movf	f_write@res& (0+255),w,b
  4348   000F36  EF91  F00B         	goto	l1355
  4349   000F3A                     l16451:
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  4353   000F3A  EE20 F00E          	lfsr	2,14
  4354   000F3E  5117               	movf	f_write@fp& (0+255),w,b
  4355   000F40  26D9               	addwf	fsr2l,f,c
  4356   000F42  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4357   000F44  22DA               	addwfc	fsr2h,f,c
  4358   000F46  B2DF               	btfsc	indf2,1,c
  4359   000F48  EFA8  F007         	goto	u20361
  4360   000F4C  EFAA  F007         	goto	u20360
  4361   000F50                     u20361:
  4362   000F50  EFAD  F007         	goto	l16459
  4363   000F54                     u20360:
  4364   000F54                     
  4365                           ; BSR set to: 1
  4366   000F54  0E07               	movlw	7
  4367   000F56  EF91  F00B         	goto	l1355
  4368   000F5A                     l16459:
  4369                           
  4370                           ; BSR set to: 1
  4371   000F5A  EE20 F010          	lfsr	2,16
  4372   000F5E  5117               	movf	f_write@fp& (0+255),w,b
  4373   000F60  26D9               	addwf	fsr2l,f,c
  4374   000F62  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4375   000F64  22DA               	addwfc	fsr2h,f,c
  4376   000F66  EE10 F010          	lfsr	1,16
  4377   000F6A  5117               	movf	f_write@fp& (0+255),w,b
  4378   000F6C  26E1               	addwf	fsr1l,f,c
  4379   000F6E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4380   000F70  22E2               	addwfc	fsr1h,f,c
  4381   000F72  006F FF98  F123    	movff	postinc1,??_f_write+4
  4382   000F78  006F FF98  F124    	movff	postinc1,??_f_write+5
  4383   000F7E  006F FF98  F125    	movff	postinc1,??_f_write+6
  4384   000F84  006F FF98  F126    	movff	postinc1,??_f_write+7
  4385   000F8A  511B               	movf	f_write@btw& (0+255),w,b
  4386   000F8C  2523               	addwf	(??_f_write+4)& (0+255),w,b
  4387   000F8E  6F27               	movwf	(??_f_write+8)& (0+255),b
  4388   000F90  511C               	movf	(f_write@btw+1)& (0+255),w,b
  4389   000F92  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  4390   000F94  6F28               	movwf	(??_f_write+9)& (0+255),b
  4391   000F96  0E00               	movlw	0
  4392   000F98  2125               	addwfc	(??_f_write+6)& (0+255),w,b
  4393   000F9A  6F29               	movwf	(??_f_write+10)& (0+255),b
  4394   000F9C  0E00               	movlw	0
  4395   000F9E  2126               	addwfc	(??_f_write+7)& (0+255),w,b
  4396   000FA0  6F2A               	movwf	(??_f_write+11)& (0+255),b
  4397   000FA2  50DE               	movf	postinc2,w,c
  4398   000FA4  5D27               	subwf	(??_f_write+8)& (0+255),w,b
  4399   000FA6  50DE               	movf	postinc2,w,c
  4400   000FA8  5928               	subwfb	(??_f_write+9)& (0+255),w,b
  4401   000FAA  50DE               	movf	postinc2,w,c
  4402   000FAC  5929               	subwfb	(??_f_write+10)& (0+255),w,b
  4403   000FAE  50DE               	movf	postinc2,w,c
  4404   000FB0  592A               	subwfb	(??_f_write+11)& (0+255),w,b
  4405   000FB2  B0D8               	btfsc	status,0,c
  4406   000FB4  EFDE  F007         	goto	u20371
  4407   000FB8  EFE0  F007         	goto	u20370
  4408   000FBC                     u20371:
  4409   000FBC  EF7F  F00B         	goto	l16579
  4410   000FC0                     u20370:
  4411   000FC0                     
  4412                           ; BSR set to: 1
  4413                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  4414   000FC0  EE20 F010          	lfsr	2,16
  4415   000FC4  5117               	movf	f_write@fp& (0+255),w,b
  4416   000FC6  26D9               	addwf	fsr2l,f,c
  4417   000FC8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4418   000FCA  22DA               	addwfc	fsr2h,f,c
  4419   000FCC  006F FF78  F11F    	movff	postinc2,??_f_write
  4420   000FD2  006F FF74  F120    	movff	postdec2,??_f_write+1
  4421   000FD8  1D1F               	comf	??_f_write& (0+255),w,b
  4422   000FDA  6F1B               	movwf	f_write@btw& (0+255),b
  4423   000FDC  1D20               	comf	(??_f_write+1)& (0+255),w,b
  4424   000FDE  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  4425   000FE0  EF7F  F00B         	goto	l16579
  4426   000FE4                     l16463:
  4427                           
  4428                           ; BSR set to: 1
  4429                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  4430   000FE4  EE20 F010          	lfsr	2,16
  4431   000FE8  5117               	movf	f_write@fp& (0+255),w,b
  4432   000FEA  26D9               	addwf	fsr2l,f,c
  4433   000FEC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4434   000FEE  22DA               	addwfc	fsr2h,f,c
  4435   000FF0  0EFF               	movlw	255
  4436   000FF2  14DE               	andwf	postinc2,w,c
  4437   000FF4  6F1F               	movwf	??_f_write& (0+255),b
  4438   000FF6  0E01               	movlw	1
  4439   000FF8  14DE               	andwf	postinc2,w,c
  4440   000FFA  6F20               	movwf	(??_f_write+1)& (0+255),b
  4441   000FFC  0E00               	movlw	0
  4442   000FFE  14DE               	andwf	postinc2,w,c
  4443   001000  6F21               	movwf	(??_f_write+2)& (0+255),b
  4444   001002  0E00               	movlw	0
  4445   001004  14DE               	andwf	postinc2,w,c
  4446   001006  6F22               	movwf	(??_f_write+3)& (0+255),b
  4447   001008  511F               	movf	??_f_write& (0+255),w,b
  4448   00100A  1120               	iorwf	(??_f_write+1)& (0+255),w,b
  4449   00100C  1121               	iorwf	(??_f_write+2)& (0+255),w,b
  4450   00100E  1122               	iorwf	(??_f_write+3)& (0+255),w,b
  4451   001010  A4D8               	btfss	status,2,c
  4452   001012  EF0D  F008         	goto	u20381
  4453   001016  EF0F  F008         	goto	u20380
  4454   00101A                     u20381:
  4455   00101A  EFB0  F00A         	goto	l1362
  4456   00101E                     u20380:
  4457   00101E                     
  4458                           ; BSR set to: 1
  4459                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  4460   00101E  EE20 F010          	lfsr	2,16
  4461   001022  5117               	movf	f_write@fp& (0+255),w,b
  4462   001024  26D9               	addwf	fsr2l,f,c
  4463   001026  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4464   001028  22DA               	addwfc	fsr2h,f,c
  4465   00102A  006F FF78  F11F    	movff	postinc2,??_f_write
  4466   001030  006F FF78  F120    	movff	postinc2,??_f_write+1
  4467   001036  006F FF78  F121    	movff	postinc2,??_f_write+2
  4468   00103C  006F FF78  F122    	movff	postinc2,??_f_write+3
  4469   001042  0E0A               	movlw	10
  4470   001044  EF29  F008         	goto	u20390
  4471   001048                     u20395:
  4472   001048  90D8               	bcf	status,0,c
  4473   00104A  3322               	rrcf	(??_f_write+3)& (0+255),f,b
  4474   00104C  3321               	rrcf	(??_f_write+2)& (0+255),f,b
  4475   00104E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  4476   001050  331F               	rrcf	??_f_write& (0+255),f,b
  4477   001052                     u20390:
  4478   001052  2EE8               	decfsz	wreg,f,c
  4479   001054  EF24  F008         	goto	u20395
  4480   001058  EE20 F009          	lfsr	2,9
  4481   00105C  5140               	movf	f_write@fs& (0+255),w,b
  4482   00105E  26D9               	addwf	fsr2l,f,c
  4483   001060  5141               	movf	(f_write@fs+1)& (0+255),w,b
  4484   001062  22DA               	addwfc	fsr2h,f,c
  4485   001064  006F FF78  F123    	movff	postinc2,??_f_write+4
  4486   00106A  006F FF74  F124    	movff	postdec2,??_f_write+5
  4487   001070  0EFF               	movlw	255
  4488   001072  2523               	addwf	(??_f_write+4)& (0+255),w,b
  4489   001074  6F25               	movwf	(??_f_write+6)& (0+255),b
  4490   001076  0EFF               	movlw	255
  4491   001078  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  4492   00107A  6F26               	movwf	(??_f_write+7)& (0+255),b
  4493   00107C  511F               	movf	??_f_write& (0+255),w,b
  4494   00107E  1525               	andwf	(??_f_write+6)& (0+255),w,b
  4495   001080  6F32               	movwf	f_write@csect& (0+255),b
  4496   001082  5120               	movf	(??_f_write+1)& (0+255),w,b
  4497   001084  1526               	andwf	(??_f_write+7)& (0+255),w,b
  4498   001086  6F33               	movwf	(f_write@csect+1)& (0+255),b
  4499   001088                     
  4500                           ; BSR set to: 1
  4501                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  4502   001088  5132               	movf	f_write@csect& (0+255),w,b
  4503   00108A  1133               	iorwf	(f_write@csect+1)& (0+255),w,b
  4504   00108C  A4D8               	btfss	status,2,c
  4505   00108E  EF4B  F008         	goto	u20401
  4506   001092  EF4D  F008         	goto	u20400
  4507   001096                     u20401:
  4508   001096  EF26  F009         	goto	l1363
  4509   00109A                     u20400:
  4510   00109A                     
  4511                           ; BSR set to: 1
  4512                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  4513   00109A  EE20 F010          	lfsr	2,16
  4514   00109E  5117               	movf	f_write@fp& (0+255),w,b
  4515   0010A0  26D9               	addwf	fsr2l,f,c
  4516   0010A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4517   0010A4  22DA               	addwfc	fsr2h,f,c
  4518   0010A6  50DE               	movf	postinc2,w,c
  4519   0010A8  10DE               	iorwf	postinc2,w,c
  4520   0010AA  10DE               	iorwf	postinc2,w,c
  4521   0010AC  10DE               	iorwf	postinc2,w,c
  4522   0010AE  A4D8               	btfss	status,2,c
  4523   0010B0  EF5C  F008         	goto	u20411
  4524   0010B4  EF5E  F008         	goto	u20410
  4525   0010B8                     u20411:
  4526   0010B8  EF94  F008         	goto	l16477
  4527   0010BC                     u20410:
  4528   0010BC                     
  4529                           ; BSR set to: 1
  4530                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  4531   0010BC  EE20 F006          	lfsr	2,6
  4532   0010C0  5117               	movf	f_write@fp& (0+255),w,b
  4533   0010C2  26D9               	addwf	fsr2l,f,c
  4534   0010C4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4535   0010C6  22DA               	addwfc	fsr2h,f,c
  4536   0010C8  006F FF78  F13A    	movff	postinc2,f_write@clst
  4537   0010CE  006F FF78  F13B    	movff	postinc2,f_write@clst+1
  4538   0010D4  006F FF78  F13C    	movff	postinc2,f_write@clst+2
  4539   0010DA  006F FF78  F13D    	movff	postinc2,f_write@clst+3
  4540   0010E0                     
  4541                           ; BSR set to: 1
  4542                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  4543   0010E0  513A               	movf	f_write@clst& (0+255),w,b
  4544   0010E2  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  4545   0010E4  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  4546   0010E6  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  4547   0010E8  A4D8               	btfss	status,2,c
  4548   0010EA  EF79  F008         	goto	u20421
  4549   0010EE  EF7B  F008         	goto	u20420
  4550   0010F2                     u20421:
  4551   0010F2  EFB4  F008         	goto	l16479
  4552   0010F6                     u20420:
  4553   0010F6                     
  4554                           ; BSR set to: 1
  4555                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  4556   0010F6  C117  F0F4         	movff	f_write@fp,create_chain@obj
  4557   0010FA  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  4558   0010FE  0E00               	movlw	0
  4559   001100  0100               	movlb	0	; () banked
  4560   001102  6FF6               	movwf	create_chain@clst& (0+255),b
  4561   001104  0E00               	movlw	0
  4562   001106  6FF7               	movwf	(create_chain@clst+1)& (0+255),b
  4563   001108  0E00               	movlw	0
  4564   00110A  6FF8               	movwf	(create_chain@clst+2)& (0+255),b
  4565   00110C  0E00               	movlw	0
  4566   00110E  6FF9               	movwf	(create_chain@clst+3)& (0+255),b
  4567   001110  ECFA  F016         	call	_create_chain	;wreg free
  4568   001114  C0F4  F13A         	movff	?_create_chain,f_write@clst
  4569   001118  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  4570   00111C  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  4571   001120  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  4572   001124  EFB4  F008         	goto	l16479
  4573   001128                     l16477:
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  4577   001128  C117  F0F4         	movff	f_write@fp,create_chain@obj
  4578   00112C  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  4579   001130  EE20 F014          	lfsr	2,20
  4580   001134  5117               	movf	f_write@fp& (0+255),w,b
  4581   001136  26D9               	addwf	fsr2l,f,c
  4582   001138  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4583   00113A  22DA               	addwfc	fsr2h,f,c
  4584   00113C  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  4585   001142  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  4586   001148  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  4587   00114E  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  4588   001154  ECFA  F016         	call	_create_chain	;wreg free
  4589   001158  C0F4  F13A         	movff	?_create_chain,f_write@clst
  4590   00115C  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  4591   001160  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  4592   001164  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  4593   001168                     l16479:
  4594                           
  4595                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  4596   001168  0101               	movlb	1	; () banked
  4597   00116A  513A               	movf	f_write@clst& (0+255),w,b
  4598   00116C  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  4599   00116E  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  4600   001170  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  4601   001172  A4D8               	btfss	status,2,c
  4602   001174  EFBE  F008         	goto	u20431
  4603   001178  EFC0  F008         	goto	u20430
  4604   00117C                     u20431:
  4605   00117C  EFC2  F008         	goto	l16483
  4606   001180                     u20430:
  4607   001180  EF88  F00B         	goto	l16581
  4608   001184                     l16483:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  4612   001184  053A               	decf	f_write@clst& (0+255),w,b
  4613   001186  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  4614   001188  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  4615   00118A  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  4616   00118C  A4D8               	btfss	status,2,c
  4617   00118E  EFCB  F008         	goto	u20441
  4618   001192  EFCD  F008         	goto	u20440
  4619   001196                     u20441:
  4620   001196  EFD8  F008         	goto	l16491
  4621   00119A                     u20440:
  4622   00119A                     
  4623                           ; BSR set to: 1
  4624   00119A  EE20 F00F          	lfsr	2,15
  4625   00119E  5117               	movf	f_write@fp& (0+255),w,b
  4626   0011A0  26D9               	addwf	fsr2l,f,c
  4627   0011A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4628   0011A4  22DA               	addwfc	fsr2h,f,c
  4629   0011A6  0E02               	movlw	2
  4630   0011A8  6EDF               	movwf	indf2,c
  4631   0011AA                     l16487:
  4632                           
  4633                           ; BSR set to: 1
  4634   0011AA  0E02               	movlw	2
  4635   0011AC  EF91  F00B         	goto	l1355
  4636   0011B0                     l16491:
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  4640   0011B0  293A               	incf	f_write@clst& (0+255),w,b
  4641   0011B2  E10A               	bnz	u20451
  4642   0011B4  293B               	incf	(f_write@clst+1)& (0+255),w,b
  4643   0011B6  E108               	bnz	u20451
  4644   0011B8  293C               	incf	(f_write@clst+2)& (0+255),w,b
  4645   0011BA  E106               	bnz	u20451
  4646   0011BC  293D               	incf	(f_write@clst+3)& (0+255),w,b
  4647   0011BE  A4D8               	btfss	status,2,c
  4648   0011C0  EFE4  F008         	goto	u20451
  4649   0011C4  EFE6  F008         	goto	u20450
  4650   0011C8                     u20451:
  4651   0011C8  EFF1  F008         	goto	l16499
  4652   0011CC                     u20450:
  4653   0011CC                     
  4654                           ; BSR set to: 1
  4655   0011CC  EE20 F00F          	lfsr	2,15
  4656   0011D0  5117               	movf	f_write@fp& (0+255),w,b
  4657   0011D2  26D9               	addwf	fsr2l,f,c
  4658   0011D4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4659   0011D6  22DA               	addwfc	fsr2h,f,c
  4660   0011D8  0E01               	movlw	1
  4661   0011DA  6EDF               	movwf	indf2,c
  4662   0011DC                     l16495:
  4663                           
  4664                           ; BSR set to: 1
  4665   0011DC  0E01               	movlw	1
  4666   0011DE  EF91  F00B         	goto	l1355
  4667   0011E2                     l16499:
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  4671   0011E2  EE20 F014          	lfsr	2,20
  4672   0011E6  5117               	movf	f_write@fp& (0+255),w,b
  4673   0011E8  26D9               	addwf	fsr2l,f,c
  4674   0011EA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4675   0011EC  22DA               	addwfc	fsr2h,f,c
  4676   0011EE  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  4677   0011F4  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  4678   0011FA  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  4679   001200  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  4680                           
  4681                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  4682   001206  EE20 F006          	lfsr	2,6
  4683   00120A  5117               	movf	f_write@fp& (0+255),w,b
  4684   00120C  26D9               	addwf	fsr2l,f,c
  4685   00120E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4686   001210  22DA               	addwfc	fsr2h,f,c
  4687   001212  50DE               	movf	postinc2,w,c
  4688   001214  10DE               	iorwf	postinc2,w,c
  4689   001216  10DE               	iorwf	postinc2,w,c
  4690   001218  10DE               	iorwf	postinc2,w,c
  4691   00121A  A4D8               	btfss	status,2,c
  4692   00121C  EF12  F009         	goto	u20461
  4693   001220  EF14  F009         	goto	u20460
  4694   001224                     u20461:
  4695   001224  EF26  F009         	goto	l1363
  4696   001228                     u20460:
  4697   001228                     
  4698                           ; BSR set to: 1
  4699   001228  EE20 F006          	lfsr	2,6
  4700   00122C  5117               	movf	f_write@fp& (0+255),w,b
  4701   00122E  26D9               	addwf	fsr2l,f,c
  4702   001230  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4703   001232  22DA               	addwfc	fsr2h,f,c
  4704   001234  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  4705   00123A  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  4706   001240  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  4707   001246  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  4708   00124C                     l1363:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  4712   00124C  EE20 F00E          	lfsr	2,14
  4713   001250  5117               	movf	f_write@fp& (0+255),w,b
  4714   001252  26D9               	addwf	fsr2l,f,c
  4715   001254  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4716   001256  22DA               	addwfc	fsr2h,f,c
  4717   001258  AEDF               	btfss	indf2,7,c
  4718   00125A  EF31  F009         	goto	u20471
  4719   00125E  EF33  F009         	goto	u20470
  4720   001262                     u20471:
  4721   001262  EF7A  F009         	goto	l16513
  4722   001266                     u20470:
  4723   001266                     
  4724                           ; BSR set to: 1
  4725                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  4726   001266  0E22               	movlw	34
  4727   001268  2517               	addwf	f_write@fp& (0+255),w,b
  4728   00126A  0100               	movlb	0	; () banked
  4729   00126C  6FAB               	movwf	disk_write@buff& (0+255),b
  4730   00126E  0E00               	movlw	0
  4731   001270  0101               	movlb	1	; () banked
  4732   001272  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  4733   001274  0100               	movlb	0	; () banked
  4734   001276  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
  4735   001278  0101               	movlb	1	; () banked
  4736   00127A  EE20 F018          	lfsr	2,24
  4737   00127E  5117               	movf	f_write@fp& (0+255),w,b
  4738   001280  26D9               	addwf	fsr2l,f,c
  4739   001282  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4740   001284  22DA               	addwfc	fsr2h,f,c
  4741   001286  006F FF78  F0AD    	movff	postinc2,disk_write@sector
  4742   00128C  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
  4743   001292  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
  4744   001298  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
  4745   00129E  0E00               	movlw	0
  4746   0012A0  0100               	movlb	0	; () banked
  4747   0012A2  6FB2               	movwf	(disk_write@count+1)& (0+255),b
  4748   0012A4  0E01               	movlw	1
  4749   0012A6  6FB1               	movwf	disk_write@count& (0+255),b
  4750   0012A8  0101               	movlb	1	; () banked
  4751   0012AA  EE20 F001          	lfsr	2,1
  4752   0012AE  5140               	movf	f_write@fs& (0+255),w,b
  4753   0012B0  26D9               	addwf	fsr2l,f,c
  4754   0012B2  5141               	movf	(f_write@fs+1)& (0+255),w,b
  4755   0012B4  22DA               	addwfc	fsr2h,f,c
  4756   0012B6  50DF               	movf	indf2,w,c
  4757   0012B8  EC37  F044         	call	_disk_write
  4758   0012BC  0900               	iorlw	0
  4759   0012BE  B4D8               	btfsc	status,2,c
  4760   0012C0  EF64  F009         	goto	u20481
  4761   0012C4  EF66  F009         	goto	u20480
  4762   0012C8                     u20481:
  4763   0012C8  EF71  F009         	goto	l16511
  4764   0012CC                     u20480:
  4765   0012CC  0101               	movlb	1	; () banked
  4766   0012CE  EE20 F00F          	lfsr	2,15
  4767   0012D2  5117               	movf	f_write@fp& (0+255),w,b
  4768   0012D4  26D9               	addwf	fsr2l,f,c
  4769   0012D6  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4770   0012D8  22DA               	addwfc	fsr2h,f,c
  4771   0012DA  0E01               	movlw	1
  4772   0012DC  6EDF               	movwf	indf2,c
  4773   0012DE  EFEE  F008         	goto	l16495
  4774   0012E2                     l16511:
  4775                           
  4776                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  4777   0012E2  0101               	movlb	1	; () banked
  4778   0012E4  EE20 F00E          	lfsr	2,14
  4779   0012E8  5117               	movf	f_write@fp& (0+255),w,b
  4780   0012EA  26D9               	addwf	fsr2l,f,c
  4781   0012EC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4782   0012EE  22DA               	addwfc	fsr2h,f,c
  4783   0012F0  0E7F               	movlw	127
  4784   0012F2  16DF               	andwf	indf2,f,c
  4785   0012F4                     l16513:
  4786                           
  4787                           ; BSR set to: 1
  4788                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  4789   0012F4  C140  F06C         	movff	f_write@fs,clst2sect@fs
  4790   0012F8  C141  F06D         	movff	f_write@fs+1,clst2sect@fs+1
  4791   0012FC  EE20 F014          	lfsr	2,20
  4792   001300  5117               	movf	f_write@fp& (0+255),w,b
  4793   001302  26D9               	addwf	fsr2l,f,c
  4794   001304  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4795   001306  22DA               	addwfc	fsr2h,f,c
  4796   001308  006F FF78  F06E    	movff	postinc2,clst2sect@clst
  4797   00130E  006F FF78  F06F    	movff	postinc2,clst2sect@clst+1
  4798   001314  006F FF78  F070    	movff	postinc2,clst2sect@clst+2
  4799   00131A  006F FF78  F071    	movff	postinc2,clst2sect@clst+3
  4800   001320  EC2C  F03E         	call	_clst2sect	;wreg free
  4801   001324  C06C  F136         	movff	?_clst2sect,f_write@sect
  4802   001328  C06D  F137         	movff	?_clst2sect+1,f_write@sect+1
  4803   00132C  C06E  F138         	movff	?_clst2sect+2,f_write@sect+2
  4804   001330  C06F  F139         	movff	?_clst2sect+3,f_write@sect+3
  4805   001334                     
  4806                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  4807   001334  0101               	movlb	1	; () banked
  4808   001336  5136               	movf	f_write@sect& (0+255),w,b
  4809   001338  1137               	iorwf	(f_write@sect+1)& (0+255),w,b
  4810   00133A  1138               	iorwf	(f_write@sect+2)& (0+255),w,b
  4811   00133C  1139               	iorwf	(f_write@sect+3)& (0+255),w,b
  4812   00133E  A4D8               	btfss	status,2,c
  4813   001340  EFA4  F009         	goto	u20491
  4814   001344  EFA6  F009         	goto	u20490
  4815   001348                     u20491:
  4816   001348  EFB0  F009         	goto	l16523
  4817   00134C                     u20490:
  4818   00134C                     
  4819                           ; BSR set to: 1
  4820   00134C  EE20 F00F          	lfsr	2,15
  4821   001350  5117               	movf	f_write@fp& (0+255),w,b
  4822   001352  26D9               	addwf	fsr2l,f,c
  4823   001354  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4824   001356  22DA               	addwfc	fsr2h,f,c
  4825   001358  0E02               	movlw	2
  4826   00135A  6EDF               	movwf	indf2,c
  4827   00135C  EFD5  F008         	goto	l16487
  4828   001360                     l16523:
  4829                           
  4830                           ; BSR set to: 1
  4831                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  4832   001360  5132               	movf	f_write@csect& (0+255),w,b
  4833   001362  2736               	addwf	f_write@sect& (0+255),f,b
  4834   001364  5133               	movf	(f_write@csect+1)& (0+255),w,b
  4835   001366  2337               	addwfc	(f_write@sect+1)& (0+255),f,b
  4836   001368  0E00               	movlw	0
  4837   00136A  2338               	addwfc	(f_write@sect+2)& (0+255),f,b
  4838   00136C  0E00               	movlw	0
  4839   00136E  2339               	addwfc	(f_write@sect+3)& (0+255),f,b
  4840   001370                     
  4841                           ; BSR set to: 1
  4842                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  4843   001370  C11B  F11F         	movff	f_write@btw,??_f_write
  4844   001374  C11C  F120         	movff	f_write@btw+1,??_f_write+1
  4845   001378  0E09               	movlw	9
  4846   00137A  6F21               	movwf	(??_f_write+2)& (0+255),b
  4847   00137C                     u20505:
  4848   00137C  90D8               	bcf	status,0,c
  4849   00137E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  4850   001380  331F               	rrcf	??_f_write& (0+255),f,b
  4851   001382  2F21               	decfsz	(??_f_write+2)& (0+255),f,b
  4852   001384  EFBE  F009         	goto	u20505
  4853   001388  C11F  F134         	movff	??_f_write,f_write@cc
  4854   00138C  C120  F135         	movff	??_f_write+1,f_write@cc+1
  4855   001390                     
  4856                           ; BSR set to: 1
  4857                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  4858   001390  5134               	movf	f_write@cc& (0+255),w,b
  4859   001392  1135               	iorwf	(f_write@cc+1)& (0+255),w,b
  4860   001394  B4D8               	btfsc	status,2,c
  4861   001396  EFCF  F009         	goto	u20511
  4862   00139A  EFD1  F009         	goto	u20510
  4863   00139E                     u20511:
  4864   00139E  EF38  F00A         	goto	l16543
  4865   0013A2                     u20510:
  4866   0013A2                     
  4867                           ; BSR set to: 1
  4868                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  4869   0013A2  5134               	movf	f_write@cc& (0+255),w,b
  4870   0013A4  2532               	addwf	f_write@csect& (0+255),w,b
  4871   0013A6  6F1F               	movwf	??_f_write& (0+255),b
  4872   0013A8  5135               	movf	(f_write@cc+1)& (0+255),w,b
  4873   0013AA  2133               	addwfc	(f_write@csect+1)& (0+255),w,b
  4874   0013AC  6F20               	movwf	(??_f_write+1)& (0+255),b
  4875   0013AE  EE20 F009          	lfsr	2,9
  4876   0013B2  5140               	movf	f_write@fs& (0+255),w,b
  4877   0013B4  26D9               	addwf	fsr2l,f,c
  4878   0013B6  5141               	movf	(f_write@fs+1)& (0+255),w,b
  4879   0013B8  22DA               	addwfc	fsr2h,f,c
  4880   0013BA  511F               	movf	??_f_write& (0+255),w,b
  4881   0013BC  5CDE               	subwf	postinc2,w,c
  4882   0013BE  5120               	movf	(??_f_write+1)& (0+255),w,b
  4883   0013C0  58DE               	subwfb	postinc2,w,c
  4884   0013C2  B0D8               	btfsc	status,0,c
  4885   0013C4  EFE6  F009         	goto	u20521
  4886   0013C8  EFE8  F009         	goto	u20520
  4887   0013CC                     u20521:
  4888   0013CC  EFFA  F009         	goto	l16533
  4889   0013D0                     u20520:
  4890   0013D0                     
  4891                           ; BSR set to: 1
  4892                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  4893   0013D0  EE20 F009          	lfsr	2,9
  4894   0013D4  5140               	movf	f_write@fs& (0+255),w,b
  4895   0013D6  26D9               	addwf	fsr2l,f,c
  4896   0013D8  5141               	movf	(f_write@fs+1)& (0+255),w,b
  4897   0013DA  22DA               	addwfc	fsr2h,f,c
  4898   0013DC  006F FF78  F11F    	movff	postinc2,??_f_write
  4899   0013E2  006F FF74  F120    	movff	postdec2,??_f_write+1
  4900   0013E8  5132               	movf	f_write@csect& (0+255),w,b
  4901   0013EA  5D1F               	subwf	??_f_write& (0+255),w,b
  4902   0013EC  6F34               	movwf	f_write@cc& (0+255),b
  4903   0013EE  5133               	movf	(f_write@csect+1)& (0+255),w,b
  4904   0013F0  5920               	subwfb	(??_f_write+1)& (0+255),w,b
  4905   0013F2  6F35               	movwf	(f_write@cc+1)& (0+255),b
  4906   0013F4                     l16533:
  4907                           
  4908                           ; BSR set to: 1
  4909                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  4910   0013F4  C12F  F0AB         	movff	f_write@wbuff,disk_write@buff
  4911   0013F8  C130  F0AC         	movff	f_write@wbuff+1,disk_write@buff+1
  4912   0013FC  C136  F0AD         	movff	f_write@sect,disk_write@sector
  4913   001400  C137  F0AE         	movff	f_write@sect+1,disk_write@sector+1
  4914   001404  C138  F0AF         	movff	f_write@sect+2,disk_write@sector+2
  4915   001408  C139  F0B0         	movff	f_write@sect+3,disk_write@sector+3
  4916   00140C  C134  F0B1         	movff	f_write@cc,disk_write@count
  4917   001410  C135  F0B2         	movff	f_write@cc+1,disk_write@count+1
  4918   001414  EE20 F001          	lfsr	2,1
  4919   001418  5140               	movf	f_write@fs& (0+255),w,b
  4920   00141A  26D9               	addwf	fsr2l,f,c
  4921   00141C  5141               	movf	(f_write@fs+1)& (0+255),w,b
  4922   00141E  22DA               	addwfc	fsr2h,f,c
  4923   001420  50DF               	movf	indf2,w,c
  4924   001422  EC37  F044         	call	_disk_write
  4925   001426  0900               	iorlw	0
  4926   001428  B4D8               	btfsc	status,2,c
  4927   00142A  EF19  F00A         	goto	u20531
  4928   00142E  EF1B  F00A         	goto	u20530
  4929   001432                     u20531:
  4930   001432  EF26  F00A         	goto	l16541
  4931   001436                     u20530:
  4932   001436  0101               	movlb	1	; () banked
  4933   001438  EE20 F00F          	lfsr	2,15
  4934   00143C  5117               	movf	f_write@fp& (0+255),w,b
  4935   00143E  26D9               	addwf	fsr2l,f,c
  4936   001440  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4937   001442  22DA               	addwfc	fsr2h,f,c
  4938   001444  0E01               	movlw	1
  4939   001446  6EDF               	movwf	indf2,c
  4940   001448  EFEE  F008         	goto	l16495
  4941   00144C                     l16541:
  4942                           
  4943                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  4944   00144C  C134  F11F         	movff	f_write@cc,??_f_write
  4945   001450  C135  F120         	movff	f_write@cc+1,??_f_write+1
  4946   001454  0E09               	movlw	9
  4947   001456                     u20545:
  4948   001456  90D8               	bcf	status,0,c
  4949   001458  0101               	movlb	1	; () banked
  4950   00145A  371F               	rlcf	??_f_write& (0+255),f,b
  4951   00145C  3720               	rlcf	(??_f_write+1)& (0+255),f,b
  4952   00145E  2EE8               	decfsz	wreg,f,c
  4953   001460  EF2B  F00A         	goto	u20545
  4954   001464  C11F  F13E         	movff	??_f_write,f_write@wcnt
  4955   001468  C120  F13F         	movff	??_f_write+1,f_write@wcnt+1
  4956                           
  4957                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  4958   00146C  EF0D  F00B         	goto	l16565
  4959   001470                     l16543:
  4960                           
  4961                           ; BSR set to: 1
  4962                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  4963   001470  EE20 F018          	lfsr	2,24
  4964   001474  5117               	movf	f_write@fp& (0+255),w,b
  4965   001476  26D9               	addwf	fsr2l,f,c
  4966   001478  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4967   00147A  22DA               	addwfc	fsr2h,f,c
  4968   00147C  5136               	movf	f_write@sect& (0+255),w,b
  4969   00147E  18DE               	xorwf	postinc2,w,c
  4970   001480  E10F               	bnz	u20550
  4971   001482  5137               	movf	(f_write@sect+1)& (0+255),w,b
  4972   001484  18DE               	xorwf	postinc2,w,c
  4973   001486  E10C               	bnz	u20550
  4974   001488  5138               	movf	(f_write@sect+2)& (0+255),w,b
  4975   00148A  18DE               	xorwf	postinc2,w,c
  4976   00148C  E109               	bnz	u20550
  4977   00148E  5139               	movf	(f_write@sect+3)& (0+255),w,b
  4978   001490  18DE               	xorwf	postinc2,w,c
  4979   001492  B4D8               	btfsc	status,2,c
  4980   001494  EF4E  F00A         	goto	u20551
  4981   001498  EF50  F00A         	goto	u20550
  4982   00149C                     u20551:
  4983   00149C  EF9D  F00A         	goto	l16555
  4984   0014A0                     u20550:
  4985   0014A0                     
  4986                           ; BSR set to: 1
  4987   0014A0  EE20 F00A          	lfsr	2,10
  4988   0014A4  5117               	movf	f_write@fp& (0+255),w,b
  4989   0014A6  26D9               	addwf	fsr2l,f,c
  4990   0014A8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4991   0014AA  22DA               	addwfc	fsr2h,f,c
  4992   0014AC  EE10 F010          	lfsr	1,16
  4993   0014B0  5117               	movf	f_write@fp& (0+255),w,b
  4994   0014B2  26E1               	addwf	fsr1l,f,c
  4995   0014B4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4996   0014B6  22E2               	addwfc	fsr1h,f,c
  4997   0014B8  50DE               	movf	postinc2,w,c
  4998   0014BA  5CE6               	subwf	postinc1,w,c
  4999   0014BC  50DE               	movf	postinc2,w,c
  5000   0014BE  58E6               	subwfb	postinc1,w,c
  5001   0014C0  50DE               	movf	postinc2,w,c
  5002   0014C2  58E6               	subwfb	postinc1,w,c
  5003   0014C4  50DE               	movf	postinc2,w,c
  5004   0014C6  58E6               	subwfb	postinc1,w,c
  5005   0014C8  B0D8               	btfsc	status,0,c
  5006   0014CA  EF69  F00A         	goto	u20561
  5007   0014CE  EF6B  F00A         	goto	u20560
  5008   0014D2                     u20561:
  5009   0014D2  EF9D  F00A         	goto	l16555
  5010   0014D6                     u20560:
  5011   0014D6                     
  5012                           ; BSR set to: 1
  5013   0014D6  0E22               	movlw	34
  5014   0014D8  2517               	addwf	f_write@fp& (0+255),w,b
  5015   0014DA  0100               	movlb	0	; () banked
  5016   0014DC  6FA8               	movwf	disk_read@buff& (0+255),b
  5017   0014DE  0E00               	movlw	0
  5018   0014E0  0101               	movlb	1	; () banked
  5019   0014E2  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5020   0014E4  0100               	movlb	0	; () banked
  5021   0014E6  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  5022   0014E8  C136  F0AA         	movff	f_write@sect,disk_read@sector
  5023   0014EC  C137  F0AB         	movff	f_write@sect+1,disk_read@sector+1
  5024   0014F0  C138  F0AC         	movff	f_write@sect+2,disk_read@sector+2
  5025   0014F4  C139  F0AD         	movff	f_write@sect+3,disk_read@sector+3
  5026   0014F8  0E00               	movlw	0
  5027   0014FA  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  5028   0014FC  0E01               	movlw	1
  5029   0014FE  6FAE               	movwf	disk_read@count& (0+255),b
  5030   001500  0101               	movlb	1	; () banked
  5031   001502  EE20 F001          	lfsr	2,1
  5032   001506  5140               	movf	f_write@fs& (0+255),w,b
  5033   001508  26D9               	addwf	fsr2l,f,c
  5034   00150A  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5035   00150C  22DA               	addwfc	fsr2h,f,c
  5036   00150E  50DF               	movf	indf2,w,c
  5037   001510  EC6B  F044         	call	_disk_read
  5038   001514  0900               	iorlw	0
  5039   001516  B4D8               	btfsc	status,2,c
  5040   001518  EF90  F00A         	goto	u20571
  5041   00151C  EF92  F00A         	goto	u20570
  5042   001520                     u20571:
  5043   001520  EF9D  F00A         	goto	l16555
  5044   001524                     u20570:
  5045   001524                     
  5046                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  5047   001524  0101               	movlb	1	; () banked
  5048   001526  EE20 F00F          	lfsr	2,15
  5049   00152A  5117               	movf	f_write@fp& (0+255),w,b
  5050   00152C  26D9               	addwf	fsr2l,f,c
  5051   00152E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5052   001530  22DA               	addwfc	fsr2h,f,c
  5053   001532  0E01               	movlw	1
  5054   001534  6EDF               	movwf	indf2,c
  5055   001536  EFEE  F008         	goto	l16495
  5056   00153A                     l16555:
  5057                           
  5058                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  5059   00153A  0101               	movlb	1	; () banked
  5060   00153C  EE20 F018          	lfsr	2,24
  5061   001540  5117               	movf	f_write@fp& (0+255),w,b
  5062   001542  26D9               	addwf	fsr2l,f,c
  5063   001544  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5064   001546  22DA               	addwfc	fsr2h,f,c
  5065   001548  0060  F4DB  FFDE   	movff	f_write@sect,postinc2
  5066   00154E  0060  F4DF  FFDE   	movff	f_write@sect+1,postinc2
  5067   001554  0060  F4E3  FFDE   	movff	f_write@sect+2,postinc2
  5068   00155A  0060  F4E7  FFDE   	movff	f_write@sect+3,postinc2
  5069   001560                     l1362:
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  5073   001560  EE20 F010          	lfsr	2,16
  5074   001564  5117               	movf	f_write@fp& (0+255),w,b
  5075   001566  26D9               	addwf	fsr2l,f,c
  5076   001568  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5077   00156A  22DA               	addwfc	fsr2h,f,c
  5078   00156C  006F FF78  F11F    	movff	postinc2,??_f_write
  5079   001572  006F FF74  F120    	movff	postdec2,??_f_write+1
  5080   001578  0EFF               	movlw	255
  5081   00157A  151F               	andwf	??_f_write& (0+255),w,b
  5082   00157C  6F21               	movwf	(??_f_write+2)& (0+255),b
  5083   00157E  0E01               	movlw	1
  5084   001580  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5085   001582  6F22               	movwf	(??_f_write+3)& (0+255),b
  5086   001584  5121               	movf	(??_f_write+2)& (0+255),w,b
  5087   001586  0800               	sublw	0
  5088   001588  6F3E               	movwf	f_write@wcnt& (0+255),b
  5089   00158A  5122               	movf	(??_f_write+3)& (0+255),w,b
  5090   00158C  A0D8               	btfss	status,0,c
  5091   00158E  2AE8               	incf	wreg,f,c
  5092   001590  0802               	sublw	2
  5093   001592  6F3F               	movwf	(f_write@wcnt+1)& (0+255),b
  5094   001594                     
  5095                           ; BSR set to: 1
  5096                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  5097   001594  513E               	movf	f_write@wcnt& (0+255),w,b
  5098   001596  5D1B               	subwf	f_write@btw& (0+255),w,b
  5099   001598  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5100   00159A  591C               	subwfb	(f_write@btw+1)& (0+255),w,b
  5101   00159C  B0D8               	btfsc	status,0,c
  5102   00159E  EFD3  F00A         	goto	u20581
  5103   0015A2  EFD5  F00A         	goto	u20580
  5104   0015A6                     u20581:
  5105   0015A6  EFD9  F00A         	goto	l16561
  5106   0015AA                     u20580:
  5107   0015AA                     
  5108                           ; BSR set to: 1
  5109   0015AA  C11B  F13E         	movff	f_write@btw,f_write@wcnt
  5110   0015AE  C11C  F13F         	movff	f_write@btw+1,f_write@wcnt+1
  5111   0015B2                     l16561:
  5112                           
  5113                           ; BSR set to: 1
  5114                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  5115   0015B2  EE20 F010          	lfsr	2,16
  5116   0015B6  5117               	movf	f_write@fp& (0+255),w,b
  5117   0015B8  26D9               	addwf	fsr2l,f,c
  5118   0015BA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5119   0015BC  22DA               	addwfc	fsr2h,f,c
  5120   0015BE  006F FF78  F11F    	movff	postinc2,??_f_write
  5121   0015C4  006F FF74  F120    	movff	postdec2,??_f_write+1
  5122   0015CA  0EFF               	movlw	255
  5123   0015CC  151F               	andwf	??_f_write& (0+255),w,b
  5124   0015CE  6F21               	movwf	(??_f_write+2)& (0+255),b
  5125   0015D0  0E01               	movlw	1
  5126   0015D2  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5127   0015D4  6F22               	movwf	(??_f_write+3)& (0+255),b
  5128   0015D6  5121               	movf	(??_f_write+2)& (0+255),w,b
  5129   0015D8  2517               	addwf	f_write@fp& (0+255),w,b
  5130   0015DA  6F23               	movwf	(??_f_write+4)& (0+255),b
  5131   0015DC  5122               	movf	(??_f_write+3)& (0+255),w,b
  5132   0015DE  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5133   0015E0  6F24               	movwf	(??_f_write+5)& (0+255),b
  5134   0015E2  0E22               	movlw	34
  5135   0015E4  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5136   0015E6  0100               	movlb	0	; () banked
  5137   0015E8  6F60               	movwf	mem_cpy@dst& (0+255),b
  5138   0015EA  0E00               	movlw	0
  5139   0015EC  0101               	movlb	1	; () banked
  5140   0015EE  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5141   0015F0  0100               	movlb	0	; () banked
  5142   0015F2  6F61               	movwf	(mem_cpy@dst+1)& (0+255),b
  5143   0015F4  C12F  F062         	movff	f_write@wbuff,mem_cpy@src
  5144   0015F8  C130  F063         	movff	f_write@wbuff+1,mem_cpy@src+1
  5145   0015FC  C13E  F064         	movff	f_write@wcnt,mem_cpy@cnt
  5146   001600  C13F  F065         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  5147   001604  ECA5  F042         	call	_mem_cpy	;wreg free
  5148   001608                     
  5149                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  5150   001608  0101               	movlb	1	; () banked
  5151   00160A  EE20 F00E          	lfsr	2,14
  5152   00160E  5117               	movf	f_write@fp& (0+255),w,b
  5153   001610  26D9               	addwf	fsr2l,f,c
  5154   001612  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5155   001614  22DA               	addwfc	fsr2h,f,c
  5156   001616  0E00               	movlw	0
  5157   001618  8EDB               	bsf	plusw2,7,c
  5158   00161A                     l16565:
  5159                           
  5160                           ; BSR set to: 1
  5161   00161A  513E               	movf	f_write@wcnt& (0+255),w,b
  5162   00161C  5F1B               	subwf	f_write@btw& (0+255),f,b
  5163   00161E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5164   001620  5B1C               	subwfb	(f_write@btw+1)& (0+255),f,b
  5165   001622                     
  5166                           ; BSR set to: 1
  5167   001622  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  5168   001628  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  5169   00162E  513E               	movf	f_write@wcnt& (0+255),w,b
  5170   001630  26DE               	addwf	postinc2,f,c
  5171   001632  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5172   001634  22DD               	addwfc	postdec2,f,c
  5173   001636                     
  5174                           ; BSR set to: 1
  5175   001636  513E               	movf	f_write@wcnt& (0+255),w,b
  5176   001638  272F               	addwf	f_write@wbuff& (0+255),f,b
  5177   00163A  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5178   00163C  2330               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  5179   00163E                     
  5180                           ; BSR set to: 1
  5181   00163E  EE20 F010          	lfsr	2,16
  5182   001642  5117               	movf	f_write@fp& (0+255),w,b
  5183   001644  26D9               	addwf	fsr2l,f,c
  5184   001646  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5185   001648  22DA               	addwfc	fsr2h,f,c
  5186   00164A  513E               	movf	f_write@wcnt& (0+255),w,b
  5187   00164C  26DE               	addwf	postinc2,f,c
  5188   00164E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5189   001650  22DE               	addwfc	postinc2,f,c
  5190   001652  0E00               	movlw	0
  5191   001654  22DE               	addwfc	postinc2,f,c
  5192   001656  22DE               	addwfc	postinc2,f,c
  5193   001658                     
  5194                           ; BSR set to: 1
  5195   001658  EE20 F010          	lfsr	2,16
  5196   00165C  5117               	movf	f_write@fp& (0+255),w,b
  5197   00165E  26D9               	addwf	fsr2l,f,c
  5198   001660  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5199   001662  22DA               	addwfc	fsr2h,f,c
  5200   001664  EE10 F00A          	lfsr	1,10
  5201   001668  5117               	movf	f_write@fp& (0+255),w,b
  5202   00166A  26E1               	addwf	fsr1l,f,c
  5203   00166C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5204   00166E  22E2               	addwfc	fsr1h,f,c
  5205   001670  50DE               	movf	postinc2,w,c
  5206   001672  5CE6               	subwf	postinc1,w,c
  5207   001674  50DE               	movf	postinc2,w,c
  5208   001676  58E6               	subwfb	postinc1,w,c
  5209   001678  50DE               	movf	postinc2,w,c
  5210   00167A  58E6               	subwfb	postinc1,w,c
  5211   00167C  50DE               	movf	postinc2,w,c
  5212   00167E  58E6               	subwfb	postinc1,w,c
  5213   001680  A0D8               	btfss	status,0,c
  5214   001682  EF45  F00B         	goto	u20591
  5215   001686  EF47  F00B         	goto	u20590
  5216   00168A                     u20591:
  5217   00168A  EF5B  F00B         	goto	l16577
  5218   00168E                     u20590:
  5219   00168E                     
  5220                           ; BSR set to: 1
  5221   00168E  EE20 F00A          	lfsr	2,10
  5222   001692  5117               	movf	f_write@fp& (0+255),w,b
  5223   001694  26D9               	addwf	fsr2l,f,c
  5224   001696  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5225   001698  22DA               	addwfc	fsr2h,f,c
  5226   00169A  006F FF78  F12B    	movff	postinc2,_f_write$3415
  5227   0016A0  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  5228   0016A6  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  5229   0016AC  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  5230   0016B2  EF6D  F00B         	goto	l1384
  5231   0016B6                     l16577:
  5232                           
  5233                           ; BSR set to: 1
  5234   0016B6  EE20 F010          	lfsr	2,16
  5235   0016BA  5117               	movf	f_write@fp& (0+255),w,b
  5236   0016BC  26D9               	addwf	fsr2l,f,c
  5237   0016BE  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5238   0016C0  22DA               	addwfc	fsr2h,f,c
  5239   0016C2  006F FF78  F12B    	movff	postinc2,_f_write$3415
  5240   0016C8  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  5241   0016CE  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  5242   0016D4  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  5243   0016DA                     l1384:
  5244                           
  5245                           ; BSR set to: 1
  5246   0016DA  EE20 F00A          	lfsr	2,10
  5247   0016DE  5117               	movf	f_write@fp& (0+255),w,b
  5248   0016E0  26D9               	addwf	fsr2l,f,c
  5249   0016E2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5250   0016E4  22DA               	addwfc	fsr2h,f,c
  5251   0016E6  0060  F4AF  FFDE   	movff	_f_write$3415,postinc2
  5252   0016EC  0060  F4B3  FFDE   	movff	_f_write$3415+1,postinc2
  5253   0016F2  0060  F4B7  FFDE   	movff	_f_write$3415+2,postinc2
  5254   0016F8  0060  F4BB  FFDE   	movff	_f_write$3415+3,postinc2
  5255   0016FE                     l16579:
  5256                           
  5257                           ; BSR set to: 1
  5258   0016FE  511B               	movf	f_write@btw& (0+255),w,b
  5259   001700  111C               	iorwf	(f_write@btw+1)& (0+255),w,b
  5260   001702  A4D8               	btfss	status,2,c
  5261   001704  EF86  F00B         	goto	u20601
  5262   001708  EF88  F00B         	goto	u20600
  5263   00170C                     u20601:
  5264   00170C  EFF2  F007         	goto	l16463
  5265   001710                     u20600:
  5266   001710                     l16581:
  5267                           
  5268                           ; BSR set to: 1
  5269                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  5270   001710  EE20 F00E          	lfsr	2,14
  5271   001714  5117               	movf	f_write@fp& (0+255),w,b
  5272   001716  26D9               	addwf	fsr2l,f,c
  5273   001718  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5274   00171A  22DA               	addwfc	fsr2h,f,c
  5275   00171C  0E00               	movlw	0
  5276   00171E  8CDB               	bsf	plusw2,6,c
  5277   001720                     
  5278                           ; BSR set to: 1
  5279                           ;mcc_generated_files/fatfs/ff.c: 3921:  return FR_OK;
  5280   001720  0E00               	movlw	0
  5281   001722                     l1355:
  5282                           
  5283                           ; BSR set to: 1
  5284   001722  0012               	return		;funcret
  5285   001724                     __end_of_f_write:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _f_open *****************
  5289 ;; Defined at:
  5290 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  fp              2   65[BANK1 ] PTR struct .
  5293 ;;		 -> Fil(546), 
  5294 ;;  path            2   67[BANK1 ] PTR const unsigned char 
  5295 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  5296 ;;  mode            1   69[BANK1 ] unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  dj             40  105[BANK1 ] struct .
  5299 ;;  clst            4   98[BANK1 ] unsigned long 
  5300 ;;  ofs             4   94[BANK1 ] unsigned long 
  5301 ;;  cl              4   90[BANK1 ] unsigned long 
  5302 ;;  bcs             4   86[BANK1 ] unsigned long 
  5303 ;;  sc              4   82[BANK1 ] unsigned long 
  5304 ;;  dw              4   78[BANK1 ] unsigned long 
  5305 ;;  fs              2  102[BANK1 ] PTR struct .
  5306 ;;		 -> FatFs(563), NULL(0), 
  5307 ;;  res             1  104[BANK1 ] enum E68
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      enum E68
  5310 ;; Registers used:
  5311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5317 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;Total ram usage:       80 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 17
  5324 ;; This function calls:
  5325 ;;		_clst2sect
  5326 ;;		_dir_register
  5327 ;;		_disk_read
  5328 ;;		_find_volume
  5329 ;;		_follow_path
  5330 ;;		_get_fat
  5331 ;;		_ld_clust
  5332 ;;		_ld_dword
  5333 ;;		_mem_set
  5334 ;;		_move_window
  5335 ;;		_remove_chain
  5336 ;;		_st_clust
  5337 ;;		_st_dword
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;;		_send_status_ok
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text15
  5345   001F40                     __ptext15:
  5346                           	callstack 0
  5347   001F40                     _f_open:
  5348                           	callstack 12
  5349   001F40                     
  5350                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  5351   001F40  0101               	movlb	1	; () banked
  5352   001F42  5141               	movf	f_open@fp& (0+255),w,b
  5353   001F44  1142               	iorwf	(f_open@fp+1)& (0+255),w,b
  5354   001F46  A4D8               	btfss	status,2,c
  5355   001F48  EFA8  F00F         	goto	u20011
  5356   001F4C  EFAA  F00F         	goto	u20010
  5357   001F50                     u20011:
  5358   001F50  EFAD  F00F         	goto	l16291
  5359   001F54                     u20010:
  5360   001F54                     
  5361                           ; BSR set to: 1
  5362   001F54  0E09               	movlw	9
  5363   001F56  EF96  F013         	goto	l1284
  5364   001F5A                     l16291:
  5365   001F5A                     
  5366                           ; BSR set to: 1
  5367   001F5A  0E3F               	movlw	63
  5368   001F5C  1745               	andwf	f_open@mode& (0+255),f,b
  5369   001F5E                     
  5370                           ; BSR set to: 1
  5371                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  5372   001F5E  0E43               	movlw	low f_open@path
  5373   001F60  0100               	movlb	0	; () banked
  5374   001F62  6FDA               	movwf	find_volume@path& (0+255),b
  5375   001F64  0E01               	movlw	high f_open@path
  5376   001F66  6FDB               	movwf	(find_volume@path+1)& (0+255),b
  5377   001F68  0E66               	movlw	low f_open@fs
  5378   001F6A  6FDC               	movwf	find_volume@rfs& (0+255),b
  5379   001F6C  0E01               	movlw	high f_open@fs
  5380   001F6E  6FDD               	movwf	(find_volume@rfs+1)& (0+255),b
  5381   001F70  C145  F0DE         	movff	f_open@mode,find_volume@mode
  5382   001F74  EC0F  F000         	call	_find_volume	;wreg free
  5383   001F78  0101               	movlb	1	; () banked
  5384   001F7A  6F68               	movwf	f_open@res& (0+255),b
  5385   001F7C                     
  5386                           ; BSR set to: 1
  5387                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  5388   001F7C  5168               	movf	f_open@res& (0+255),w,b
  5389   001F7E  A4D8               	btfss	status,2,c
  5390   001F80  EFC4  F00F         	goto	u20021
  5391   001F84  EFC6  F00F         	goto	u20020
  5392   001F88                     u20021:
  5393   001F88  EF84  F013         	goto	l1289
  5394   001F8C                     u20020:
  5395   001F8C                     
  5396                           ; BSR set to: 1
  5397                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  5398   001F8C  C166  F169         	movff	f_open@fs,f_open@dj
  5399   001F90  C167  F16A         	movff	f_open@fs+1,f_open@dj+1
  5400   001F94                     
  5401                           ; BSR set to: 1
  5402                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  5403   001F94  0E69               	movlw	low f_open@dj
  5404   001F96  6F33               	movwf	follow_path@dp& (0+255),b
  5405   001F98  0E01               	movlw	high f_open@dj
  5406   001F9A  6F34               	movwf	(follow_path@dp+1)& (0+255),b
  5407   001F9C  C143  F135         	movff	f_open@path,follow_path@path
  5408   001FA0  C144  F136         	movff	f_open@path+1,follow_path@path+1
  5409   001FA4  ECC9  F029         	call	_follow_path	;wreg free
  5410   001FA8  0101               	movlb	1	; () banked
  5411   001FAA  6F68               	movwf	f_open@res& (0+255),b
  5412   001FAC                     
  5413                           ; BSR set to: 1
  5414                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  5415   001FAC  5168               	movf	f_open@res& (0+255),w,b
  5416   001FAE  A4D8               	btfss	status,2,c
  5417   001FB0  EFDC  F00F         	goto	u20031
  5418   001FB4  EFDE  F00F         	goto	u20030
  5419   001FB8                     u20031:
  5420   001FB8  EFE7  F00F         	goto	l16311
  5421   001FBC                     u20030:
  5422   001FBC                     
  5423                           ; BSR set to: 1
  5424                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  5425   001FBC  AF90               	btfss	(f_open@dj+39)& (0+255),7,b
  5426   001FBE  EFE3  F00F         	goto	u20041
  5427   001FC2  EFE5  F00F         	goto	u20040
  5428   001FC6                     u20041:
  5429   001FC6  EFE7  F00F         	goto	l16311
  5430   001FCA                     u20040:
  5431   001FCA                     
  5432                           ; BSR set to: 1
  5433                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  5434   001FCA  0E06               	movlw	6
  5435   001FCC  6F68               	movwf	f_open@res& (0+255),b
  5436   001FCE                     l16311:
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  5440   001FCE  C145  F146         	movff	f_open@mode,??_f_open
  5441   001FD2  0E1C               	movlw	28
  5442   001FD4  1746               	andwf	??_f_open& (0+255),f,b
  5443   001FD6  B4D8               	btfsc	status,2,c
  5444   001FD8  EFF0  F00F         	goto	u20051
  5445   001FDC  EFF2  F00F         	goto	u20050
  5446   001FE0                     u20051:
  5447   001FE0  EF02  F011         	goto	l16351
  5448   001FE4                     u20050:
  5449   001FE4                     
  5450                           ; BSR set to: 1
  5451                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  5452   001FE4  5168               	movf	f_open@res& (0+255),w,b
  5453   001FE6  B4D8               	btfsc	status,2,c
  5454   001FE8  EFF8  F00F         	goto	u20061
  5455   001FEC  EFFA  F00F         	goto	u20060
  5456   001FF0                     u20061:
  5457   001FF0  EF0E  F010         	goto	l16321
  5458   001FF4                     u20060:
  5459   001FF4                     
  5460                           ; BSR set to: 1
  5461                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  5462   001FF4  0E04               	movlw	4
  5463   001FF6  1968               	xorwf	f_open@res& (0+255),w,b
  5464   001FF8  A4D8               	btfss	status,2,c
  5465   001FFA  EF01  F010         	goto	u20071
  5466   001FFE  EF03  F010         	goto	u20070
  5467   002002                     u20071:
  5468   002002  EF0B  F010         	goto	l16319
  5469   002006                     u20070:
  5470   002006                     
  5471                           ; BSR set to: 1
  5472                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  5473   002006  0E69               	movlw	low f_open@dj
  5474   002008  6F39               	movwf	dir_register@dp& (0+255),b
  5475   00200A  0E01               	movlw	high f_open@dj
  5476   00200C  6F3A               	movwf	(dir_register@dp+1)& (0+255),b
  5477   00200E  EC55  F03C         	call	_dir_register	;wreg free
  5478   002012  0101               	movlb	1	; () banked
  5479   002014  6F68               	movwf	f_open@res& (0+255),b
  5480   002016                     l16319:
  5481                           
  5482                           ; BSR set to: 1
  5483                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  5484   002016  8745               	bsf	f_open@mode& (0+255),3,b
  5485                           
  5486                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  5487   002018  EF26  F010         	goto	l1295
  5488   00201C                     l16321:
  5489                           
  5490                           ; BSR set to: 1
  5491                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  5492   00201C  C16D  F146         	movff	f_open@dj+4,??_f_open
  5493   002020  0E11               	movlw	17
  5494   002022  1746               	andwf	??_f_open& (0+255),f,b
  5495   002024  B4D8               	btfsc	status,2,c
  5496   002026  EF17  F010         	goto	u20081
  5497   00202A  EF19  F010         	goto	u20080
  5498   00202E                     u20081:
  5499   00202E  EF1D  F010         	goto	l1296
  5500   002032                     u20080:
  5501   002032                     
  5502                           ; BSR set to: 1
  5503                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  5504   002032  0E07               	movlw	7
  5505   002034  6F68               	movwf	f_open@res& (0+255),b
  5506                           
  5507                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  5508   002036  EF26  F010         	goto	l1295
  5509   00203A                     l1296:
  5510                           
  5511                           ; BSR set to: 1
  5512                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  5513   00203A  A545               	btfss	f_open@mode& (0+255),2,b
  5514   00203C  EF22  F010         	goto	u20091
  5515   002040  EF24  F010         	goto	u20090
  5516   002044                     u20091:
  5517   002044  EF26  F010         	goto	l1295
  5518   002048                     u20090:
  5519   002048                     
  5520                           ; BSR set to: 1
  5521   002048  0E08               	movlw	8
  5522   00204A  6F68               	movwf	f_open@res& (0+255),b
  5523   00204C                     l1295:
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  5527   00204C  5168               	movf	f_open@res& (0+255),w,b
  5528   00204E  A4D8               	btfss	status,2,c
  5529   002050  EF2C  F010         	goto	u20101
  5530   002054  EF2E  F010         	goto	u20100
  5531   002058                     u20101:
  5532   002058  EF25  F011         	goto	l1302
  5533   00205C                     u20100:
  5534   00205C                     
  5535                           ; BSR set to: 1
  5536   00205C  A745               	btfss	f_open@mode& (0+255),3,b
  5537   00205E  EF33  F010         	goto	u20111
  5538   002062  EF35  F010         	goto	u20110
  5539   002066                     u20111:
  5540   002066  EF25  F011         	goto	l1302
  5541   00206A                     u20110:
  5542   00206A                     
  5543                           ; BSR set to: 1
  5544                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  5545   00206A  C166  F067         	movff	f_open@fs,ld_clust@fs
  5546   00206E  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  5547   002072  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  5548   002076  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  5549   00207A  ECDC  F041         	call	_ld_clust	;wreg free
  5550   00207E  C067  F15A         	movff	?_ld_clust,f_open@cl
  5551   002082  C068  F15B         	movff	?_ld_clust+1,f_open@cl+1
  5552   002086  C069  F15C         	movff	?_ld_clust+2,f_open@cl+2
  5553   00208A  C06A  F15D         	movff	?_ld_clust+3,f_open@cl+3
  5554                           
  5555                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2024 - 1980) 
      +                          << 25 | (DWORD)7 << 21 | (DWORD)23 << 16));
  5556   00208E  0E0E               	movlw	14
  5557   002090  0101               	movlb	1	; () banked
  5558   002092  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  5559   002094  0100               	movlb	0	; () banked
  5560   002096  6F60               	movwf	st_dword@ptr& (0+255),b
  5561   002098  0E00               	movlw	0
  5562   00209A  0101               	movlb	1	; () banked
  5563   00209C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  5564   00209E  0100               	movlb	0	; () banked
  5565   0020A0  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  5566   0020A2  0E00               	movlw	0
  5567   0020A4  6F62               	movwf	st_dword@val& (0+255),b
  5568   0020A6  0E00               	movlw	0
  5569   0020A8  6F63               	movwf	(st_dword@val+1)& (0+255),b
  5570   0020AA  0EF7               	movlw	247
  5571   0020AC  6F64               	movwf	(st_dword@val+2)& (0+255),b
  5572   0020AE  0E58               	movlw	88
  5573   0020B0  6F65               	movwf	(st_dword@val+3)& (0+255),b
  5574   0020B2  EC21  F042         	call	_st_dword	;wreg free
  5575   0020B6                     
  5576                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  5577   0020B6  0101               	movlb	1	; () banked
  5578   0020B8  EE20 F00B          	lfsr	2,11
  5579   0020BC  5183               	movf	(f_open@dj+26)& (0+255),w,b
  5580   0020BE  26D9               	addwf	fsr2l,f,c
  5581   0020C0  5184               	movf	(f_open@dj+27)& (0+255),w,b
  5582   0020C2  22DA               	addwfc	fsr2h,f,c
  5583   0020C4  0E20               	movlw	32
  5584   0020C6  6EDF               	movwf	indf2,c
  5585   0020C8                     
  5586                           ; BSR set to: 1
  5587                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  5588   0020C8  C166  F064         	movff	f_open@fs,st_clust@fs
  5589   0020CC  C167  F065         	movff	f_open@fs+1,st_clust@fs+1
  5590   0020D0  C183  F066         	movff	f_open@dj+26,st_clust@dir
  5591   0020D4  C184  F067         	movff	f_open@dj+27,st_clust@dir+1
  5592   0020D8  0E00               	movlw	0
  5593   0020DA  0100               	movlb	0	; () banked
  5594   0020DC  6F68               	movwf	st_clust@cl& (0+255),b
  5595   0020DE  0E00               	movlw	0
  5596   0020E0  6F69               	movwf	(st_clust@cl+1)& (0+255),b
  5597   0020E2  0E00               	movlw	0
  5598   0020E4  6F6A               	movwf	(st_clust@cl+2)& (0+255),b
  5599   0020E6  0E00               	movlw	0
  5600   0020E8  6F6B               	movwf	(st_clust@cl+3)& (0+255),b
  5601   0020EA  EC16  F046         	call	_st_clust	;wreg free
  5602   0020EE                     
  5603                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  5604   0020EE  0E1C               	movlw	28
  5605   0020F0  0101               	movlb	1	; () banked
  5606   0020F2  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  5607   0020F4  0100               	movlb	0	; () banked
  5608   0020F6  6F60               	movwf	st_dword@ptr& (0+255),b
  5609   0020F8  0E00               	movlw	0
  5610   0020FA  0101               	movlb	1	; () banked
  5611   0020FC  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  5612   0020FE  0100               	movlb	0	; () banked
  5613   002100  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  5614   002102  0E00               	movlw	0
  5615   002104  6F62               	movwf	st_dword@val& (0+255),b
  5616   002106  0E00               	movlw	0
  5617   002108  6F63               	movwf	(st_dword@val+1)& (0+255),b
  5618   00210A  0E00               	movlw	0
  5619   00210C  6F64               	movwf	(st_dword@val+2)& (0+255),b
  5620   00210E  0E00               	movlw	0
  5621   002110  6F65               	movwf	(st_dword@val+3)& (0+255),b
  5622   002112  EC21  F042         	call	_st_dword	;wreg free
  5623   002116                     
  5624                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  5625   002116  0101               	movlb	1	; () banked
  5626   002118  EE20 F003          	lfsr	2,3
  5627   00211C  5166               	movf	f_open@fs& (0+255),w,b
  5628   00211E  26D9               	addwf	fsr2l,f,c
  5629   002120  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5630   002122  22DA               	addwfc	fsr2h,f,c
  5631   002124  0E01               	movlw	1
  5632   002126  6EDF               	movwf	indf2,c
  5633   002128                     
  5634                           ; BSR set to: 1
  5635                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  5636   002128  515A               	movf	f_open@cl& (0+255),w,b
  5637   00212A  115B               	iorwf	(f_open@cl+1)& (0+255),w,b
  5638   00212C  115C               	iorwf	(f_open@cl+2)& (0+255),w,b
  5639   00212E  115D               	iorwf	(f_open@cl+3)& (0+255),w,b
  5640   002130  B4D8               	btfsc	status,2,c
  5641   002132  EF9D  F010         	goto	u20121
  5642   002136  EF9F  F010         	goto	u20120
  5643   00213A                     u20121:
  5644   00213A  EF25  F011         	goto	l1302
  5645   00213E                     u20120:
  5646   00213E                     
  5647                           ; BSR set to: 1
  5648                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  5649   00213E  EE20 F02F          	lfsr	2,47
  5650   002142  5166               	movf	f_open@fs& (0+255),w,b
  5651   002144  26D9               	addwf	fsr2l,f,c
  5652   002146  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5653   002148  22DA               	addwfc	fsr2h,f,c
  5654   00214A  006F FF78  F14E    	movff	postinc2,f_open@dw
  5655   002150  006F FF78  F14F    	movff	postinc2,f_open@dw+1
  5656   002156  006F FF78  F150    	movff	postinc2,f_open@dw+2
  5657   00215C  006F FF78  F151    	movff	postinc2,f_open@dw+3
  5658   002162                     
  5659                           ; BSR set to: 1
  5660                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  5661   002162  0E69               	movlw	low f_open@dj
  5662   002164  0100               	movlb	0	; () banked
  5663   002166  6FF4               	movwf	remove_chain@obj& (0+255),b
  5664   002168  0E01               	movlw	high f_open@dj
  5665   00216A  6FF5               	movwf	(remove_chain@obj+1)& (0+255),b
  5666   00216C  C15A  F0F6         	movff	f_open@cl,remove_chain@clst
  5667   002170  C15B  F0F7         	movff	f_open@cl+1,remove_chain@clst+1
  5668   002174  C15C  F0F8         	movff	f_open@cl+2,remove_chain@clst+2
  5669   002178  C15D  F0F9         	movff	f_open@cl+3,remove_chain@clst+3
  5670   00217C  0E00               	movlw	0
  5671   00217E  6FFA               	movwf	remove_chain@pclst& (0+255),b
  5672   002180  0E00               	movlw	0
  5673   002182  6FFB               	movwf	(remove_chain@pclst+1)& (0+255),b
  5674   002184  0E00               	movlw	0
  5675   002186  6FFC               	movwf	(remove_chain@pclst+2)& (0+255),b
  5676   002188  0E00               	movlw	0
  5677   00218A  6FFD               	movwf	(remove_chain@pclst+3)& (0+255),b
  5678   00218C  EC23  F02B         	call	_remove_chain	;wreg free
  5679   002190  0101               	movlb	1	; () banked
  5680   002192  6F68               	movwf	f_open@res& (0+255),b
  5681   002194                     
  5682                           ; BSR set to: 1
  5683                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  5684   002194  5168               	movf	f_open@res& (0+255),w,b
  5685   002196  A4D8               	btfss	status,2,c
  5686   002198  EFD0  F010         	goto	u20131
  5687   00219C  EFD2  F010         	goto	u20130
  5688   0021A0                     u20131:
  5689   0021A0  EF25  F011         	goto	l1302
  5690   0021A4                     u20130:
  5691   0021A4                     
  5692                           ; BSR set to: 1
  5693                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  5694   0021A4  C166  F0C8         	movff	f_open@fs,move_window@fs
  5695   0021A8  C167  F0C9         	movff	f_open@fs+1,move_window@fs+1
  5696   0021AC  C14E  F0CA         	movff	f_open@dw,move_window@sector
  5697   0021B0  C14F  F0CB         	movff	f_open@dw+1,move_window@sector+1
  5698   0021B4  C150  F0CC         	movff	f_open@dw+2,move_window@sector+2
  5699   0021B8  C151  F0CD         	movff	f_open@dw+3,move_window@sector+3
  5700   0021BC  EC9A  F03E         	call	_move_window	;wreg free
  5701   0021C0  0101               	movlb	1	; () banked
  5702   0021C2  6F68               	movwf	f_open@res& (0+255),b
  5703   0021C4                     
  5704                           ; BSR set to: 1
  5705                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  5706   0021C4  0EFF               	movlw	255
  5707   0021C6  255A               	addwf	f_open@cl& (0+255),w,b
  5708   0021C8  6F46               	movwf	??_f_open& (0+255),b
  5709   0021CA  0EFF               	movlw	255
  5710   0021CC  215B               	addwfc	(f_open@cl+1)& (0+255),w,b
  5711   0021CE  6F47               	movwf	(??_f_open+1)& (0+255),b
  5712   0021D0  0EFF               	movlw	255
  5713   0021D2  215C               	addwfc	(f_open@cl+2)& (0+255),w,b
  5714   0021D4  6F48               	movwf	(??_f_open+2)& (0+255),b
  5715   0021D6  0EFF               	movlw	255
  5716   0021D8  215D               	addwfc	(f_open@cl+3)& (0+255),w,b
  5717   0021DA  6F49               	movwf	(??_f_open+3)& (0+255),b
  5718   0021DC  EE20 F00B          	lfsr	2,11
  5719   0021E0  5166               	movf	f_open@fs& (0+255),w,b
  5720   0021E2  26D9               	addwf	fsr2l,f,c
  5721   0021E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5722   0021E6  22DA               	addwfc	fsr2h,f,c
  5723   0021E8  0060  F51B  FFDE   	movff	??_f_open,postinc2
  5724   0021EE  0060  F51F  FFDE   	movff	??_f_open+1,postinc2
  5725   0021F4  0060  F523  FFDE   	movff	??_f_open+2,postinc2
  5726   0021FA  0060  F527  FFDE   	movff	??_f_open+3,postinc2
  5727   002200  EF25  F011         	goto	l1302
  5728   002204                     l16351:
  5729                           
  5730                           ; BSR set to: 1
  5731                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  5732   002204  5168               	movf	f_open@res& (0+255),w,b
  5733   002206  A4D8               	btfss	status,2,c
  5734   002208  EF08  F011         	goto	u20141
  5735   00220C  EF0A  F011         	goto	u20140
  5736   002210                     u20141:
  5737   002210  EF25  F011         	goto	l1302
  5738   002214                     u20140:
  5739   002214                     
  5740                           ; BSR set to: 1
  5741                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  5742   002214  A96D               	btfss	(f_open@dj+4)& (0+255),4,b
  5743   002216  EF0F  F011         	goto	u20151
  5744   00221A  EF11  F011         	goto	u20150
  5745   00221E                     u20151:
  5746   00221E  EF15  F011         	goto	l1304
  5747   002222                     u20150:
  5748   002222                     
  5749                           ; BSR set to: 1
  5750                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  5751   002222  0E04               	movlw	4
  5752   002224  6F68               	movwf	f_open@res& (0+255),b
  5753                           
  5754                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  5755   002226  EF25  F011         	goto	l1302
  5756   00222A                     l1304:
  5757                           
  5758                           ; BSR set to: 1
  5759                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  5760   00222A  A345               	btfss	f_open@mode& (0+255),1,b
  5761   00222C  EF1A  F011         	goto	u20161
  5762   002230  EF1C  F011         	goto	u20160
  5763   002234                     u20161:
  5764   002234  EF25  F011         	goto	l1302
  5765   002238                     u20160:
  5766   002238                     
  5767                           ; BSR set to: 1
  5768   002238  A16D               	btfss	(f_open@dj+4)& (0+255),0,b
  5769   00223A  EF21  F011         	goto	u20171
  5770   00223E  EF23  F011         	goto	u20170
  5771   002242                     u20171:
  5772   002242  EF25  F011         	goto	l1302
  5773   002246                     u20170:
  5774   002246                     
  5775                           ; BSR set to: 1
  5776                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  5777   002246  0E07               	movlw	7
  5778   002248  6F68               	movwf	f_open@res& (0+255),b
  5779   00224A                     l1302:
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  5783   00224A  5168               	movf	f_open@res& (0+255),w,b
  5784   00224C  A4D8               	btfss	status,2,c
  5785   00224E  EF2B  F011         	goto	u20181
  5786   002252  EF2D  F011         	goto	u20180
  5787   002256                     u20181:
  5788   002256  EF59  F011         	goto	l16369
  5789   00225A                     u20180:
  5790   00225A                     
  5791                           ; BSR set to: 1
  5792                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  5793   00225A  A745               	btfss	f_open@mode& (0+255),3,b
  5794   00225C  EF32  F011         	goto	u20191
  5795   002260  EF34  F011         	goto	u20190
  5796   002264                     u20191:
  5797   002264  EF35  F011         	goto	l16365
  5798   002268                     u20190:
  5799   002268                     
  5800                           ; BSR set to: 1
  5801   002268  8D45               	bsf	f_open@mode& (0+255),6,b
  5802   00226A                     l16365:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  5806   00226A  EE20 F02F          	lfsr	2,47
  5807   00226E  5166               	movf	f_open@fs& (0+255),w,b
  5808   002270  26D9               	addwf	fsr2l,f,c
  5809   002272  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5810   002274  22DA               	addwfc	fsr2h,f,c
  5811   002276  EE10 F01C          	lfsr	1,28
  5812   00227A  5141               	movf	f_open@fp& (0+255),w,b
  5813   00227C  26E1               	addwf	fsr1l,f,c
  5814   00227E  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5815   002280  22E2               	addwfc	fsr1h,f,c
  5816   002282  006F FF7B FFE6     	movff	postinc2,postinc1
  5817   002288  006F FF7B FFE6     	movff	postinc2,postinc1
  5818   00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  5819   002294  006F FF7B FFE6     	movff	postinc2,postinc1
  5820   00229A                     
  5821                           ; BSR set to: 1
  5822                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  5823   00229A  EE20 F020          	lfsr	2,32
  5824   00229E  5141               	movf	f_open@fp& (0+255),w,b
  5825   0022A0  26D9               	addwf	fsr2l,f,c
  5826   0022A2  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5827   0022A4  22DA               	addwfc	fsr2h,f,c
  5828   0022A6  0060  F60F  FFDE   	movff	f_open@dj+26,postinc2
  5829   0022AC  0060  F613  FFDD   	movff	f_open@dj+27,postdec2
  5830   0022B2                     l16369:
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  5834   0022B2  5168               	movf	f_open@res& (0+255),w,b
  5835   0022B4  A4D8               	btfss	status,2,c
  5836   0022B6  EF5F  F011         	goto	u20201
  5837   0022BA  EF61  F011         	goto	u20200
  5838   0022BE                     u20201:
  5839   0022BE  EF84  F013         	goto	l1289
  5840   0022C2                     u20200:
  5841   0022C2                     
  5842                           ; BSR set to: 1
  5843                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  5844   0022C2  C166  F067         	movff	f_open@fs,ld_clust@fs
  5845   0022C6  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  5846   0022CA  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  5847   0022CE  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  5848   0022D2  ECDC  F041         	call	_ld_clust	;wreg free
  5849   0022D6  0101               	movlb	1	; () banked
  5850   0022D8  EE20 F006          	lfsr	2,6
  5851   0022DC  5141               	movf	f_open@fp& (0+255),w,b
  5852   0022DE  26D9               	addwf	fsr2l,f,c
  5853   0022E0  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5854   0022E2  22DA               	addwfc	fsr2h,f,c
  5855   0022E4  0100               	movlb	0	; () banked
  5856   0022E6  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  5857   0022EC  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  5858   0022F2  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  5859   0022F8  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  5860                           
  5861                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  5862   0022FE  0E1C               	movlw	28
  5863   002300  0101               	movlb	1	; () banked
  5864   002302  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  5865   002304  0100               	movlb	0	; () banked
  5866   002306  6F60               	movwf	ld_dword@ptr& (0+255),b
  5867   002308  0E00               	movlw	0
  5868   00230A  0101               	movlb	1	; () banked
  5869   00230C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  5870   00230E  0100               	movlb	0	; () banked
  5871   002310  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
  5872   002312  EC32  F040         	call	_ld_dword	;wreg free
  5873   002316  0101               	movlb	1	; () banked
  5874   002318  EE20 F00A          	lfsr	2,10
  5875   00231C  5141               	movf	f_open@fp& (0+255),w,b
  5876   00231E  26D9               	addwf	fsr2l,f,c
  5877   002320  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5878   002322  22DA               	addwfc	fsr2h,f,c
  5879   002324  0100               	movlb	0	; () banked
  5880   002326  0060  F183  FFDE   	movff	?_ld_dword,postinc2
  5881   00232C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
  5882   002332  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
  5883   002338  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
  5884   00233E                     
  5885                           ; BSR set to: 0
  5886                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  5887   00233E  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  5888   002344  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  5889   00234A  0060  F59B  FFDE   	movff	f_open@fs,postinc2
  5890   002350  0060  F59F  FFDD   	movff	f_open@fs+1,postdec2
  5891   002356                     
  5892                           ; BSR set to: 0
  5893                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  5894   002356  0101               	movlb	1	; () banked
  5895   002358  EE20 F005          	lfsr	2,5
  5896   00235C  5166               	movf	f_open@fs& (0+255),w,b
  5897   00235E  26D9               	addwf	fsr2l,f,c
  5898   002360  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5899   002362  22DA               	addwfc	fsr2h,f,c
  5900   002364  EE10 F002          	lfsr	1,2
  5901   002368  5141               	movf	f_open@fp& (0+255),w,b
  5902   00236A  26E1               	addwf	fsr1l,f,c
  5903   00236C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5904   00236E  22E2               	addwfc	fsr1h,f,c
  5905   002370  006F FF7B FFE6     	movff	postinc2,postinc1
  5906   002376  006F FF77 FFE5     	movff	postdec2,postdec1
  5907   00237C                     
  5908                           ; BSR set to: 1
  5909                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  5910   00237C  EE20 F00E          	lfsr	2,14
  5911   002380  5141               	movf	f_open@fp& (0+255),w,b
  5912   002382  26D9               	addwf	fsr2l,f,c
  5913   002384  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5914   002386  22DA               	addwfc	fsr2h,f,c
  5915   002388  0060  F517  FFDF   	movff	f_open@mode,indf2
  5916   00238E                     
  5917                           ; BSR set to: 1
  5918                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  5919   00238E  EE20 F00F          	lfsr	2,15
  5920   002392  5141               	movf	f_open@fp& (0+255),w,b
  5921   002394  26D9               	addwf	fsr2l,f,c
  5922   002396  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5923   002398  22DA               	addwfc	fsr2h,f,c
  5924   00239A  6ADF               	clrf	indf2,c
  5925   00239C                     
  5926                           ; BSR set to: 1
  5927                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  5928   00239C  EE20 F018          	lfsr	2,24
  5929   0023A0  5141               	movf	f_open@fp& (0+255),w,b
  5930   0023A2  26D9               	addwf	fsr2l,f,c
  5931   0023A4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5932   0023A6  22DA               	addwfc	fsr2h,f,c
  5933   0023A8  6ADE               	clrf	postinc2,c
  5934   0023AA  6ADE               	clrf	postinc2,c
  5935   0023AC  6ADE               	clrf	postinc2,c
  5936   0023AE  6ADD               	clrf	postdec2,c
  5937   0023B0                     
  5938                           ; BSR set to: 1
  5939                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  5940   0023B0  EE20 F010          	lfsr	2,16
  5941   0023B4  5141               	movf	f_open@fp& (0+255),w,b
  5942   0023B6  26D9               	addwf	fsr2l,f,c
  5943   0023B8  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5944   0023BA  22DA               	addwfc	fsr2h,f,c
  5945   0023BC  6ADE               	clrf	postinc2,c
  5946   0023BE  6ADE               	clrf	postinc2,c
  5947   0023C0  6ADE               	clrf	postinc2,c
  5948   0023C2  6ADD               	clrf	postdec2,c
  5949   0023C4                     
  5950                           ; BSR set to: 1
  5951                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  5952   0023C4  0E22               	movlw	34
  5953   0023C6  2541               	addwf	f_open@fp& (0+255),w,b
  5954   0023C8  0100               	movlb	0	; () banked
  5955   0023CA  6F60               	movwf	mem_set@dst& (0+255),b
  5956   0023CC  0E00               	movlw	0
  5957   0023CE  0101               	movlb	1	; () banked
  5958   0023D0  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  5959   0023D2  0100               	movlb	0	; () banked
  5960   0023D4  6F61               	movwf	(mem_set@dst+1)& (0+255),b
  5961   0023D6  0E00               	movlw	0
  5962   0023D8  6F63               	movwf	(mem_set@val+1)& (0+255),b
  5963   0023DA  0E00               	movlw	0
  5964   0023DC  6F62               	movwf	mem_set@val& (0+255),b
  5965   0023DE  0E02               	movlw	2
  5966   0023E0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  5967   0023E2  0E00               	movlw	0
  5968   0023E4  6F64               	movwf	mem_set@cnt& (0+255),b
  5969   0023E6  EC34  F047         	call	_mem_set	;wreg free
  5970   0023EA                     
  5971                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  5972   0023EA  0101               	movlb	1	; () banked
  5973   0023EC  AB45               	btfss	f_open@mode& (0+255),5,b
  5974   0023EE  EFFB  F011         	goto	u20211
  5975   0023F2  EFFD  F011         	goto	u20210
  5976   0023F6                     u20211:
  5977   0023F6  EF84  F013         	goto	l1289
  5978   0023FA                     u20210:
  5979   0023FA                     
  5980                           ; BSR set to: 1
  5981   0023FA  EE20 F00A          	lfsr	2,10
  5982   0023FE  5141               	movf	f_open@fp& (0+255),w,b
  5983   002400  26D9               	addwf	fsr2l,f,c
  5984   002402  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5985   002404  22DA               	addwfc	fsr2h,f,c
  5986   002406  50DE               	movf	postinc2,w,c
  5987   002408  10DE               	iorwf	postinc2,w,c
  5988   00240A  10DE               	iorwf	postinc2,w,c
  5989   00240C  10DE               	iorwf	postinc2,w,c
  5990   00240E  B4D8               	btfsc	status,2,c
  5991   002410  EF0C  F012         	goto	u20221
  5992   002414  EF0E  F012         	goto	u20220
  5993   002418                     u20221:
  5994   002418  EF84  F013         	goto	l1289
  5995   00241C                     u20220:
  5996   00241C                     
  5997                           ; BSR set to: 1
  5998                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  5999   00241C  EE20 F00A          	lfsr	2,10
  6000   002420  5141               	movf	f_open@fp& (0+255),w,b
  6001   002422  26D9               	addwf	fsr2l,f,c
  6002   002424  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6003   002426  22DA               	addwfc	fsr2h,f,c
  6004   002428  EE10 F010          	lfsr	1,16
  6005   00242C  5141               	movf	f_open@fp& (0+255),w,b
  6006   00242E  26E1               	addwf	fsr1l,f,c
  6007   002430  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6008   002432  22E2               	addwfc	fsr1h,f,c
  6009   002434  006F FF7B FFE6     	movff	postinc2,postinc1
  6010   00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  6011   002440  006F FF7B FFE6     	movff	postinc2,postinc1
  6012   002446  006F FF7B FFE6     	movff	postinc2,postinc1
  6013   00244C                     
  6014                           ; BSR set to: 1
  6015                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  6016   00244C  EE20 F009          	lfsr	2,9
  6017   002450  5166               	movf	f_open@fs& (0+255),w,b
  6018   002452  26D9               	addwf	fsr2l,f,c
  6019   002454  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6020   002456  22DA               	addwfc	fsr2h,f,c
  6021   002458  006F FF78  F146    	movff	postinc2,??_f_open
  6022   00245E  006F FF74  F147    	movff	postdec2,??_f_open+1
  6023   002464  5146               	movf	??_f_open& (0+255),w,b
  6024   002466  6F48               	movwf	(??_f_open+2)& (0+255),b
  6025   002468  5147               	movf	(??_f_open+1)& (0+255),w,b
  6026   00246A  6F49               	movwf	(??_f_open+3)& (0+255),b
  6027   00246C  6B4A               	clrf	(??_f_open+4)& (0+255),b
  6028   00246E  6B4B               	clrf	(??_f_open+5)& (0+255),b
  6029   002470  0E09               	movlw	9
  6030   002472                     u20235:
  6031   002472  90D8               	bcf	status,0,c
  6032   002474  3748               	rlcf	(??_f_open+2)& (0+255),f,b
  6033   002476  3749               	rlcf	(??_f_open+3)& (0+255),f,b
  6034   002478  374A               	rlcf	(??_f_open+4)& (0+255),f,b
  6035   00247A  374B               	rlcf	(??_f_open+5)& (0+255),f,b
  6036   00247C  2EE8               	decfsz	wreg,f,c
  6037   00247E  EF39  F012         	goto	u20235
  6038   002482  C148  F156         	movff	??_f_open+2,f_open@bcs
  6039   002486  C149  F157         	movff	??_f_open+3,f_open@bcs+1
  6040   00248A  C14A  F158         	movff	??_f_open+4,f_open@bcs+2
  6041   00248E  C14B  F159         	movff	??_f_open+5,f_open@bcs+3
  6042   002492                     
  6043                           ; BSR set to: 1
  6044                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  6045   002492  EE20 F006          	lfsr	2,6
  6046   002496  5141               	movf	f_open@fp& (0+255),w,b
  6047   002498  26D9               	addwf	fsr2l,f,c
  6048   00249A  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6049   00249C  22DA               	addwfc	fsr2h,f,c
  6050   00249E  006F FF78  F162    	movff	postinc2,f_open@clst
  6051   0024A4  006F FF78  F163    	movff	postinc2,f_open@clst+1
  6052   0024AA  006F FF78  F164    	movff	postinc2,f_open@clst+2
  6053   0024B0  006F FF78  F165    	movff	postinc2,f_open@clst+3
  6054   0024B6                     
  6055                           ; BSR set to: 1
  6056                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  6057   0024B6  EE20 F00A          	lfsr	2,10
  6058   0024BA  5141               	movf	f_open@fp& (0+255),w,b
  6059   0024BC  26D9               	addwf	fsr2l,f,c
  6060   0024BE  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6061   0024C0  22DA               	addwfc	fsr2h,f,c
  6062   0024C2  006F FF78  F15E    	movff	postinc2,f_open@ofs
  6063   0024C8  006F FF78  F15F    	movff	postinc2,f_open@ofs+1
  6064   0024CE  006F FF78  F160    	movff	postinc2,f_open@ofs+2
  6065   0024D4  006F FF78  F161    	movff	postinc2,f_open@ofs+3
  6066   0024DA  EFAD  F012         	goto	l16411
  6067   0024DE                     l16399:
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  6071   0024DE  C141  F0D3         	movff	f_open@fp,get_fat@obj
  6072   0024E2  C142  F0D4         	movff	f_open@fp+1,get_fat@obj+1
  6073   0024E6  C162  F0D5         	movff	f_open@clst,get_fat@clst
  6074   0024EA  C163  F0D6         	movff	f_open@clst+1,get_fat@clst+1
  6075   0024EE  C164  F0D7         	movff	f_open@clst+2,get_fat@clst+2
  6076   0024F2  C165  F0D8         	movff	f_open@clst+3,get_fat@clst+3
  6077   0024F6  ECBC  F025         	call	_get_fat	;wreg free
  6078   0024FA  C0D3  F162         	movff	?_get_fat,f_open@clst
  6079   0024FE  C0D4  F163         	movff	?_get_fat+1,f_open@clst+1
  6080   002502  C0D5  F164         	movff	?_get_fat+2,f_open@clst+2
  6081   002506  C0D6  F165         	movff	?_get_fat+3,f_open@clst+3
  6082   00250A                     
  6083                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  6084   00250A  0101               	movlb	1	; () banked
  6085   00250C  5165               	movf	(f_open@clst+3)& (0+255),w,b
  6086   00250E  1164               	iorwf	(f_open@clst+2)& (0+255),w,b
  6087   002510  1163               	iorwf	(f_open@clst+1)& (0+255),w,b
  6088   002512  E107               	bnz	u20241
  6089   002514  0E02               	movlw	2
  6090   002516  5D62               	subwf	f_open@clst& (0+255),w,b
  6091   002518  B0D8               	btfsc	status,0,c
  6092   00251A  EF91  F012         	goto	u20241
  6093   00251E  EF93  F012         	goto	u20240
  6094   002522                     u20241:
  6095   002522  EF95  F012         	goto	l16405
  6096   002526                     u20240:
  6097   002526                     
  6098                           ; BSR set to: 1
  6099   002526  0E02               	movlw	2
  6100   002528  6F68               	movwf	f_open@res& (0+255),b
  6101   00252A                     l16405:
  6102                           
  6103                           ; BSR set to: 1
  6104                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  6105   00252A  2962               	incf	f_open@clst& (0+255),w,b
  6106   00252C  E10A               	bnz	u20251
  6107   00252E  2963               	incf	(f_open@clst+1)& (0+255),w,b
  6108   002530  E108               	bnz	u20251
  6109   002532  2964               	incf	(f_open@clst+2)& (0+255),w,b
  6110   002534  E106               	bnz	u20251
  6111   002536  2965               	incf	(f_open@clst+3)& (0+255),w,b
  6112   002538  A4D8               	btfss	status,2,c
  6113   00253A  EFA1  F012         	goto	u20251
  6114   00253E  EFA3  F012         	goto	u20250
  6115   002542                     u20251:
  6116   002542  EFA5  F012         	goto	l16409
  6117   002546                     u20250:
  6118   002546                     
  6119                           ; BSR set to: 1
  6120   002546  0E01               	movlw	1
  6121   002548  6F68               	movwf	f_open@res& (0+255),b
  6122   00254A                     l16409:
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  6126   00254A  5156               	movf	f_open@bcs& (0+255),w,b
  6127   00254C  5F5E               	subwf	f_open@ofs& (0+255),f,b
  6128   00254E  5157               	movf	(f_open@bcs+1)& (0+255),w,b
  6129   002550  5B5F               	subwfb	(f_open@ofs+1)& (0+255),f,b
  6130   002552  5158               	movf	(f_open@bcs+2)& (0+255),w,b
  6131   002554  5B60               	subwfb	(f_open@ofs+2)& (0+255),f,b
  6132   002556  5159               	movf	(f_open@bcs+3)& (0+255),w,b
  6133   002558  5B61               	subwfb	(f_open@ofs+3)& (0+255),f,b
  6134   00255A                     l16411:
  6135                           
  6136                           ; BSR set to: 1
  6137   00255A  5168               	movf	f_open@res& (0+255),w,b
  6138   00255C  A4D8               	btfss	status,2,c
  6139   00255E  EFB3  F012         	goto	u20261
  6140   002562  EFB5  F012         	goto	u20260
  6141   002566                     u20261:
  6142   002566  EFC4  F012         	goto	l16415
  6143   00256A                     u20260:
  6144   00256A                     
  6145                           ; BSR set to: 1
  6146   00256A  515E               	movf	f_open@ofs& (0+255),w,b
  6147   00256C  5D56               	subwf	f_open@bcs& (0+255),w,b
  6148   00256E  515F               	movf	(f_open@ofs+1)& (0+255),w,b
  6149   002570  5957               	subwfb	(f_open@bcs+1)& (0+255),w,b
  6150   002572  5160               	movf	(f_open@ofs+2)& (0+255),w,b
  6151   002574  5958               	subwfb	(f_open@bcs+2)& (0+255),w,b
  6152   002576  5161               	movf	(f_open@ofs+3)& (0+255),w,b
  6153   002578  5959               	subwfb	(f_open@bcs+3)& (0+255),w,b
  6154   00257A  A0D8               	btfss	status,0,c
  6155   00257C  EFC2  F012         	goto	u20271
  6156   002580  EFC4  F012         	goto	u20270
  6157   002584                     u20271:
  6158   002584  EF6F  F012         	goto	l16399
  6159   002588                     u20270:
  6160   002588                     l16415:
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  6164   002588  EE20 F014          	lfsr	2,20
  6165   00258C  5141               	movf	f_open@fp& (0+255),w,b
  6166   00258E  26D9               	addwf	fsr2l,f,c
  6167   002590  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6168   002592  22DA               	addwfc	fsr2h,f,c
  6169   002594  0060  F58B  FFDE   	movff	f_open@clst,postinc2
  6170   00259A  0060  F58F  FFDE   	movff	f_open@clst+1,postinc2
  6171   0025A0  0060  F593  FFDE   	movff	f_open@clst+2,postinc2
  6172   0025A6  0060  F597  FFDE   	movff	f_open@clst+3,postinc2
  6173   0025AC                     
  6174                           ; BSR set to: 1
  6175                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  6176   0025AC  5168               	movf	f_open@res& (0+255),w,b
  6177   0025AE  A4D8               	btfss	status,2,c
  6178   0025B0  EFDC  F012         	goto	u20281
  6179   0025B4  EFDE  F012         	goto	u20280
  6180   0025B8                     u20281:
  6181   0025B8  EF84  F013         	goto	l1289
  6182   0025BC                     u20280:
  6183   0025BC                     
  6184                           ; BSR set to: 1
  6185   0025BC  0EFF               	movlw	255
  6186   0025BE  155E               	andwf	f_open@ofs& (0+255),w,b
  6187   0025C0  6F46               	movwf	??_f_open& (0+255),b
  6188   0025C2  0E01               	movlw	1
  6189   0025C4  155F               	andwf	(f_open@ofs+1)& (0+255),w,b
  6190   0025C6  6F47               	movwf	(??_f_open+1)& (0+255),b
  6191   0025C8  0E00               	movlw	0
  6192   0025CA  1560               	andwf	(f_open@ofs+2)& (0+255),w,b
  6193   0025CC  6F48               	movwf	(??_f_open+2)& (0+255),b
  6194   0025CE  0E00               	movlw	0
  6195   0025D0  1561               	andwf	(f_open@ofs+3)& (0+255),w,b
  6196   0025D2  6F49               	movwf	(??_f_open+3)& (0+255),b
  6197   0025D4  5146               	movf	??_f_open& (0+255),w,b
  6198   0025D6  1147               	iorwf	(??_f_open+1)& (0+255),w,b
  6199   0025D8  1148               	iorwf	(??_f_open+2)& (0+255),w,b
  6200   0025DA  1149               	iorwf	(??_f_open+3)& (0+255),w,b
  6201   0025DC  B4D8               	btfsc	status,2,c
  6202   0025DE  EFF3  F012         	goto	u20291
  6203   0025E2  EFF5  F012         	goto	u20290
  6204   0025E6                     u20291:
  6205   0025E6  EF84  F013         	goto	l1289
  6206   0025EA                     u20290:
  6207   0025EA                     
  6208                           ; BSR set to: 1
  6209                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  6210   0025EA  C166  F06C         	movff	f_open@fs,clst2sect@fs
  6211   0025EE  C167  F06D         	movff	f_open@fs+1,clst2sect@fs+1
  6212   0025F2  C162  F06E         	movff	f_open@clst,clst2sect@clst
  6213   0025F6  C163  F06F         	movff	f_open@clst+1,clst2sect@clst+1
  6214   0025FA  C164  F070         	movff	f_open@clst+2,clst2sect@clst+2
  6215   0025FE  C165  F071         	movff	f_open@clst+3,clst2sect@clst+3
  6216   002602  EC2C  F03E         	call	_clst2sect	;wreg free
  6217   002606  C06C  F152         	movff	?_clst2sect,f_open@sc
  6218   00260A  C06D  F153         	movff	?_clst2sect+1,f_open@sc+1
  6219   00260E  C06E  F154         	movff	?_clst2sect+2,f_open@sc+2
  6220   002612  C06F  F155         	movff	?_clst2sect+3,f_open@sc+3
  6221   002616  0101               	movlb	1	; () banked
  6222   002618  5152               	movf	f_open@sc& (0+255),w,b
  6223   00261A  1153               	iorwf	(f_open@sc+1)& (0+255),w,b
  6224   00261C  1154               	iorwf	(f_open@sc+2)& (0+255),w,b
  6225   00261E  1155               	iorwf	(f_open@sc+3)& (0+255),w,b
  6226   002620  A4D8               	btfss	status,2,c
  6227   002622  EF15  F013         	goto	u20301
  6228   002626  EF17  F013         	goto	u20300
  6229   00262A                     u20301:
  6230   00262A  EF1B  F013         	goto	l16425
  6231   00262E                     u20300:
  6232   00262E                     
  6233                           ; BSR set to: 1
  6234                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  6235   00262E  0E02               	movlw	2
  6236   002630  6F68               	movwf	f_open@res& (0+255),b
  6237                           
  6238                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  6239   002632  EF84  F013         	goto	l1289
  6240   002636                     l16425:
  6241                           
  6242                           ; BSR set to: 1
  6243                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  6244   002636  C15E  F146         	movff	f_open@ofs,??_f_open
  6245   00263A  C15F  F147         	movff	f_open@ofs+1,??_f_open+1
  6246   00263E  C160  F148         	movff	f_open@ofs+2,??_f_open+2
  6247   002642  C161  F149         	movff	f_open@ofs+3,??_f_open+3
  6248   002646  0E0A               	movlw	10
  6249   002648  EF2B  F013         	goto	u20310
  6250   00264C                     u20315:
  6251   00264C  90D8               	bcf	status,0,c
  6252   00264E  3349               	rrcf	(??_f_open+3)& (0+255),f,b
  6253   002650  3348               	rrcf	(??_f_open+2)& (0+255),f,b
  6254   002652  3347               	rrcf	(??_f_open+1)& (0+255),f,b
  6255   002654  3346               	rrcf	??_f_open& (0+255),f,b
  6256   002656                     u20310:
  6257   002656  2EE8               	decfsz	wreg,f,c
  6258   002658  EF26  F013         	goto	u20315
  6259   00265C  5152               	movf	f_open@sc& (0+255),w,b
  6260   00265E  2546               	addwf	??_f_open& (0+255),w,b
  6261   002660  6F4A               	movwf	(??_f_open+4)& (0+255),b
  6262   002662  5153               	movf	(f_open@sc+1)& (0+255),w,b
  6263   002664  2147               	addwfc	(??_f_open+1)& (0+255),w,b
  6264   002666  6F4B               	movwf	(??_f_open+5)& (0+255),b
  6265   002668  5154               	movf	(f_open@sc+2)& (0+255),w,b
  6266   00266A  2148               	addwfc	(??_f_open+2)& (0+255),w,b
  6267   00266C  6F4C               	movwf	(??_f_open+6)& (0+255),b
  6268   00266E  5155               	movf	(f_open@sc+3)& (0+255),w,b
  6269   002670  2149               	addwfc	(??_f_open+3)& (0+255),w,b
  6270   002672  6F4D               	movwf	(??_f_open+7)& (0+255),b
  6271   002674  EE20 F018          	lfsr	2,24
  6272   002678  5141               	movf	f_open@fp& (0+255),w,b
  6273   00267A  26D9               	addwf	fsr2l,f,c
  6274   00267C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6275   00267E  22DA               	addwfc	fsr2h,f,c
  6276   002680  0060  F52B  FFDE   	movff	??_f_open+4,postinc2
  6277   002686  0060  F52F  FFDE   	movff	??_f_open+5,postinc2
  6278   00268C  0060  F533  FFDE   	movff	??_f_open+6,postinc2
  6279   002692  0060  F537  FFDE   	movff	??_f_open+7,postinc2
  6280   002698                     
  6281                           ; BSR set to: 1
  6282                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  6283   002698  0E22               	movlw	34
  6284   00269A  2541               	addwf	f_open@fp& (0+255),w,b
  6285   00269C  0100               	movlb	0	; () banked
  6286   00269E  6FA8               	movwf	disk_read@buff& (0+255),b
  6287   0026A0  0E00               	movlw	0
  6288   0026A2  0101               	movlb	1	; () banked
  6289   0026A4  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  6290   0026A6  0100               	movlb	0	; () banked
  6291   0026A8  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  6292   0026AA  0101               	movlb	1	; () banked
  6293   0026AC  EE20 F018          	lfsr	2,24
  6294   0026B0  5141               	movf	f_open@fp& (0+255),w,b
  6295   0026B2  26D9               	addwf	fsr2l,f,c
  6296   0026B4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6297   0026B6  22DA               	addwfc	fsr2h,f,c
  6298   0026B8  006F FF78  F0AA    	movff	postinc2,disk_read@sector
  6299   0026BE  006F FF78  F0AB    	movff	postinc2,disk_read@sector+1
  6300   0026C4  006F FF78  F0AC    	movff	postinc2,disk_read@sector+2
  6301   0026CA  006F FF78  F0AD    	movff	postinc2,disk_read@sector+3
  6302   0026D0  0E00               	movlw	0
  6303   0026D2  0100               	movlb	0	; () banked
  6304   0026D4  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  6305   0026D6  0E01               	movlw	1
  6306   0026D8  6FAE               	movwf	disk_read@count& (0+255),b
  6307   0026DA  0101               	movlb	1	; () banked
  6308   0026DC  EE20 F001          	lfsr	2,1
  6309   0026E0  5166               	movf	f_open@fs& (0+255),w,b
  6310   0026E2  26D9               	addwf	fsr2l,f,c
  6311   0026E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6312   0026E6  22DA               	addwfc	fsr2h,f,c
  6313   0026E8  50DF               	movf	indf2,w,c
  6314   0026EA  EC6B  F044         	call	_disk_read
  6315   0026EE  0900               	iorlw	0
  6316   0026F0  B4D8               	btfsc	status,2,c
  6317   0026F2  EF7D  F013         	goto	u20321
  6318   0026F6  EF7F  F013         	goto	u20320
  6319   0026FA                     u20321:
  6320   0026FA  EF84  F013         	goto	l1310
  6321   0026FE                     u20320:
  6322   0026FE  0E01               	movlw	1
  6323   002700  0101               	movlb	1	; () banked
  6324   002702  6F68               	movwf	f_open@res& (0+255),b
  6325   002704  EF84  F013         	goto	l1289
  6326   002708                     l1310:
  6327   002708                     l1289:
  6328                           
  6329                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  6330   002708  0101               	movlb	1	; () banked
  6331   00270A  5168               	movf	f_open@res& (0+255),w,b
  6332   00270C  B4D8               	btfsc	status,2,c
  6333   00270E  EF8B  F013         	goto	u20331
  6334   002712  EF8D  F013         	goto	u20330
  6335   002716                     u20331:
  6336   002716  EF95  F013         	goto	l16433
  6337   00271A                     u20330:
  6338   00271A                     
  6339                           ; BSR set to: 1
  6340   00271A  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  6341   002720  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  6342   002726  6ADE               	clrf	postinc2,c
  6343   002728  6ADD               	clrf	postdec2,c
  6344   00272A                     l16433:
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  6348   00272A  5168               	movf	f_open@res& (0+255),w,b
  6349   00272C                     l1284:
  6350                           
  6351                           ; BSR set to: 1
  6352   00272C  0012               	return		;funcret
  6353   00272E                     __end_of_f_open:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _remove_chain *****************
  6357 ;; Defined at:
  6358 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  obj             2  148[BANK0 ] PTR struct .
  6361 ;;		 -> f_open@dj(40), 
  6362 ;;  clst            4  150[BANK0 ] unsigned long 
  6363 ;;  pclst           4  154[BANK0 ] unsigned long 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  nxt             4    8[BANK1 ] unsigned long 
  6366 ;;  fs              2   13[BANK1 ] PTR struct .
  6367 ;;		 -> FatFs(563), NULL(0), 
  6368 ;;  res             1   12[BANK1 ] enum E68
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      enum E68
  6371 ;; Registers used:
  6372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6378 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Totals:         0      10      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;Total ram usage:       25 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 13
  6385 ;; This function calls:
  6386 ;;		_get_fat
  6387 ;;		_put_fat
  6388 ;; This function is called by:
  6389 ;;		_f_open
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text16
  6394   005646                     __ptext16:
  6395                           	callstack 0
  6396   005646                     _remove_chain:
  6397                           	callstack 15
  6398   005646                     
  6399                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  6400   005646  0060  F3D3  FFD9   	movff	remove_chain@obj,fsr2l
  6401   00564C  0060  F3D7  FFDA   	movff	remove_chain@obj+1,fsr2h
  6402   005652  006F FF78  F10D    	movff	postinc2,remove_chain@fs
  6403   005658  006F FF74  F10E    	movff	postdec2,remove_chain@fs+1
  6404   00565E                     
  6405                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  6406   00565E  0100               	movlb	0	; () banked
  6407   005660  51F9               	movf	(remove_chain@clst+3)& (0+255),w,b
  6408   005662  11F8               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  6409   005664  11F7               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  6410   005666  E109               	bnz	u18920
  6411   005668  0E02               	movlw	2
  6412   00566A  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  6413   00566C  A0D8               	btfss	status,0,c
  6414   00566E  EF3B  F02B         	goto	u18921
  6415   005672  EF3D  F02B         	goto	u18920
  6416   005676                     u18921:
  6417   005676  EF54  F02B         	goto	l15641
  6418   00567A                     u18920:
  6419   00567A                     
  6420                           ; BSR set to: 0
  6421   00567A  0101               	movlb	1	; () banked
  6422   00567C  EE20 F017          	lfsr	2,23
  6423   005680  510D               	movf	remove_chain@fs& (0+255),w,b
  6424   005682  26D9               	addwf	fsr2l,f,c
  6425   005684  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6426   005686  22DA               	addwfc	fsr2h,f,c
  6427   005688  50DE               	movf	postinc2,w,c
  6428   00568A  0100               	movlb	0	; () banked
  6429   00568C  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  6430   00568E  50DE               	movf	postinc2,w,c
  6431   005690  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  6432   005692  50DE               	movf	postinc2,w,c
  6433   005694  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  6434   005696  50DE               	movf	postinc2,w,c
  6435   005698  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  6436   00569A  A0D8               	btfss	status,0,c
  6437   00569C  EF52  F02B         	goto	u18931
  6438   0056A0  EF54  F02B         	goto	u18930
  6439   0056A4                     u18931:
  6440   0056A4  EF57  F02B         	goto	l15645
  6441   0056A8                     u18930:
  6442   0056A8                     l15641:
  6443   0056A8  0E02               	movlw	2
  6444   0056AA  EF43  F02C         	goto	l970
  6445   0056AE                     l15645:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  6449   0056AE  51FA               	movf	remove_chain@pclst& (0+255),w,b
  6450   0056B0  11FB               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  6451   0056B2  11FC               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  6452   0056B4  11FD               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  6453   0056B6  B4D8               	btfsc	status,2,c
  6454   0056B8  EF60  F02B         	goto	u18941
  6455   0056BC  EF62  F02B         	goto	u18940
  6456   0056C0                     u18941:
  6457   0056C0  EF85  F02B         	goto	l15661
  6458   0056C4                     u18940:
  6459   0056C4                     
  6460                           ; BSR set to: 0
  6461                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  6462   0056C4  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  6463   0056C8  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  6464   0056CC  C0FA  F0D5         	movff	remove_chain@pclst,put_fat@clst
  6465   0056D0  C0FB  F0D6         	movff	remove_chain@pclst+1,put_fat@clst+1
  6466   0056D4  C0FC  F0D7         	movff	remove_chain@pclst+2,put_fat@clst+2
  6467   0056D8  C0FD  F0D8         	movff	remove_chain@pclst+3,put_fat@clst+3
  6468   0056DC  0EFF               	movlw	255
  6469   0056DE  6FD9               	movwf	put_fat@val& (0+255),b
  6470   0056E0  0EFF               	movlw	255
  6471   0056E2  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  6472   0056E4  0EFF               	movlw	255
  6473   0056E6  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  6474   0056E8  0EFF               	movlw	255
  6475   0056EA  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  6476   0056EC  ECF0  F019         	call	_put_fat	;wreg free
  6477   0056F0  0101               	movlb	1	; () banked
  6478   0056F2  6F0C               	movwf	remove_chain@res& (0+255),b
  6479   0056F4                     
  6480                           ; BSR set to: 1
  6481                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  6482   0056F4  510C               	movf	remove_chain@res& (0+255),w,b
  6483   0056F6  B4D8               	btfsc	status,2,c
  6484   0056F8  EF80  F02B         	goto	u18951
  6485   0056FC  EF82  F02B         	goto	u18950
  6486   005700                     u18951:
  6487   005700  EF85  F02B         	goto	l15661
  6488   005704                     u18950:
  6489   005704                     l15657:
  6490                           
  6491                           ; BSR set to: 1
  6492   005704  510C               	movf	remove_chain@res& (0+255),w,b
  6493   005706  EF43  F02C         	goto	l970
  6494   00570A                     l15661:
  6495                           
  6496                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  6497   00570A  C0F4  F0D3         	movff	remove_chain@obj,get_fat@obj
  6498   00570E  C0F5  F0D4         	movff	remove_chain@obj+1,get_fat@obj+1
  6499   005712  C0F6  F0D5         	movff	remove_chain@clst,get_fat@clst
  6500   005716  C0F7  F0D6         	movff	remove_chain@clst+1,get_fat@clst+1
  6501   00571A  C0F8  F0D7         	movff	remove_chain@clst+2,get_fat@clst+2
  6502   00571E  C0F9  F0D8         	movff	remove_chain@clst+3,get_fat@clst+3
  6503   005722  ECBC  F025         	call	_get_fat	;wreg free
  6504   005726  C0D3  F108         	movff	?_get_fat,remove_chain@nxt
  6505   00572A  C0D4  F109         	movff	?_get_fat+1,remove_chain@nxt+1
  6506   00572E  C0D5  F10A         	movff	?_get_fat+2,remove_chain@nxt+2
  6507   005732  C0D6  F10B         	movff	?_get_fat+3,remove_chain@nxt+3
  6508   005736                     
  6509                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  6510   005736  0101               	movlb	1	; () banked
  6511   005738  5108               	movf	remove_chain@nxt& (0+255),w,b
  6512   00573A  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  6513   00573C  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  6514   00573E  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  6515   005740  A4D8               	btfss	status,2,c
  6516   005742  EFA5  F02B         	goto	u18961
  6517   005746  EFA7  F02B         	goto	u18960
  6518   00574A                     u18961:
  6519   00574A  EFA9  F02B         	goto	l15667
  6520   00574E                     u18960:
  6521   00574E  EF42  F02C         	goto	l15695
  6522   005752                     l15667:
  6523                           
  6524                           ; BSR set to: 1
  6525                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  6526   005752  0508               	decf	remove_chain@nxt& (0+255),w,b
  6527   005754  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  6528   005756  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  6529   005758  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  6530   00575A  A4D8               	btfss	status,2,c
  6531   00575C  EFB2  F02B         	goto	u18971
  6532   005760  EFB4  F02B         	goto	u18970
  6533   005764                     u18971:
  6534   005764  EFB6  F02B         	goto	l15673
  6535   005768                     u18970:
  6536   005768  EF54  F02B         	goto	l15641
  6537   00576C                     l15673:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  6541   00576C  2908               	incf	remove_chain@nxt& (0+255),w,b
  6542   00576E  E10A               	bnz	u18981
  6543   005770  2909               	incf	(remove_chain@nxt+1)& (0+255),w,b
  6544   005772  E108               	bnz	u18981
  6545   005774  290A               	incf	(remove_chain@nxt+2)& (0+255),w,b
  6546   005776  E106               	bnz	u18981
  6547   005778  290B               	incf	(remove_chain@nxt+3)& (0+255),w,b
  6548   00577A  A4D8               	btfss	status,2,c
  6549   00577C  EFC2  F02B         	goto	u18981
  6550   005780  EFC4  F02B         	goto	u18980
  6551   005784                     u18981:
  6552   005784  EFC7  F02B         	goto	l15681
  6553   005788                     u18980:
  6554   005788                     
  6555                           ; BSR set to: 1
  6556   005788  0E01               	movlw	1
  6557   00578A  EF43  F02C         	goto	l970
  6558   00578E                     l15681:
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  6562   00578E  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  6563   005792  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  6564   005796  C0F6  F0D5         	movff	remove_chain@clst,put_fat@clst
  6565   00579A  C0F7  F0D6         	movff	remove_chain@clst+1,put_fat@clst+1
  6566   00579E  C0F8  F0D7         	movff	remove_chain@clst+2,put_fat@clst+2
  6567   0057A2  C0F9  F0D8         	movff	remove_chain@clst+3,put_fat@clst+3
  6568   0057A6  0E00               	movlw	0
  6569   0057A8  0100               	movlb	0	; () banked
  6570   0057AA  6FD9               	movwf	put_fat@val& (0+255),b
  6571   0057AC  0E00               	movlw	0
  6572   0057AE  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  6573   0057B0  0E00               	movlw	0
  6574   0057B2  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  6575   0057B4  0E00               	movlw	0
  6576   0057B6  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  6577   0057B8  ECF0  F019         	call	_put_fat	;wreg free
  6578   0057BC  0101               	movlb	1	; () banked
  6579   0057BE  6F0C               	movwf	remove_chain@res& (0+255),b
  6580   0057C0                     
  6581                           ; BSR set to: 1
  6582                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  6583   0057C0  510C               	movf	remove_chain@res& (0+255),w,b
  6584   0057C2  B4D8               	btfsc	status,2,c
  6585   0057C4  EFE6  F02B         	goto	u18991
  6586   0057C8  EFE8  F02B         	goto	u18990
  6587   0057CC                     u18991:
  6588   0057CC  EFEA  F02B         	goto	l15689
  6589   0057D0                     u18990:
  6590   0057D0  EF82  F02B         	goto	l15657
  6591   0057D4                     l15689:
  6592                           
  6593                           ; BSR set to: 1
  6594                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  6595   0057D4  EE20 F017          	lfsr	2,23
  6596   0057D8  510D               	movf	remove_chain@fs& (0+255),w,b
  6597   0057DA  26D9               	addwf	fsr2l,f,c
  6598   0057DC  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6599   0057DE  22DA               	addwfc	fsr2h,f,c
  6600   0057E0  0EFE               	movlw	254
  6601   0057E2  24DE               	addwf	postinc2,w,c
  6602   0057E4  6F00               	movwf	??_remove_chain& (0+255),b
  6603   0057E6  0EFF               	movlw	255
  6604   0057E8  20DE               	addwfc	postinc2,w,c
  6605   0057EA  6F01               	movwf	(??_remove_chain+1)& (0+255),b
  6606   0057EC  0EFF               	movlw	255
  6607   0057EE  20DE               	addwfc	postinc2,w,c
  6608   0057F0  6F02               	movwf	(??_remove_chain+2)& (0+255),b
  6609   0057F2  0EFF               	movlw	255
  6610   0057F4  20DE               	addwfc	postinc2,w,c
  6611   0057F6  6F03               	movwf	(??_remove_chain+3)& (0+255),b
  6612   0057F8  EE20 F00F          	lfsr	2,15
  6613   0057FC  510D               	movf	remove_chain@fs& (0+255),w,b
  6614   0057FE  26D9               	addwf	fsr2l,f,c
  6615   005800  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6616   005802  22DA               	addwfc	fsr2h,f,c
  6617   005804  5100               	movf	??_remove_chain& (0+255),w,b
  6618   005806  5CDE               	subwf	postinc2,w,c
  6619   005808  5101               	movf	(??_remove_chain+1)& (0+255),w,b
  6620   00580A  58DE               	subwfb	postinc2,w,c
  6621   00580C  5102               	movf	(??_remove_chain+2)& (0+255),w,b
  6622   00580E  58DE               	subwfb	postinc2,w,c
  6623   005810  5103               	movf	(??_remove_chain+3)& (0+255),w,b
  6624   005812  58DE               	subwfb	postinc2,w,c
  6625   005814  B0D8               	btfsc	status,0,c
  6626   005816  EF0F  F02C         	goto	u19001
  6627   00581A  EF11  F02C         	goto	u19000
  6628   00581E                     u19001:
  6629   00581E  EF24  F02C         	goto	l15693
  6630   005822                     u19000:
  6631   005822                     
  6632                           ; BSR set to: 1
  6633                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  6634   005822  EE20 F00F          	lfsr	2,15
  6635   005826  510D               	movf	remove_chain@fs& (0+255),w,b
  6636   005828  26D9               	addwf	fsr2l,f,c
  6637   00582A  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6638   00582C  22DA               	addwfc	fsr2h,f,c
  6639   00582E  2ADE               	incf	postinc2,f,c
  6640   005830  0E00               	movlw	0
  6641   005832  22DE               	addwfc	postinc2,f,c
  6642   005834  22DE               	addwfc	postinc2,f,c
  6643   005836  22DE               	addwfc	postinc2,f,c
  6644                           
  6645                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  6646   005838  EE20 F004          	lfsr	2,4
  6647   00583C  510D               	movf	remove_chain@fs& (0+255),w,b
  6648   00583E  26D9               	addwf	fsr2l,f,c
  6649   005840  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6650   005842  22DA               	addwfc	fsr2h,f,c
  6651   005844  0E00               	movlw	0
  6652   005846  80DB               	bsf	plusw2,0,c
  6653   005848                     l15693:
  6654                           
  6655                           ; BSR set to: 1
  6656                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  6657   005848  C108  F0F6         	movff	remove_chain@nxt,remove_chain@clst
  6658   00584C  C109  F0F7         	movff	remove_chain@nxt+1,remove_chain@clst+1
  6659   005850  C10A  F0F8         	movff	remove_chain@nxt+2,remove_chain@clst+2
  6660   005854  C10B  F0F9         	movff	remove_chain@nxt+3,remove_chain@clst+3
  6661                           
  6662                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  6663   005858  EE20 F017          	lfsr	2,23
  6664   00585C  510D               	movf	remove_chain@fs& (0+255),w,b
  6665   00585E  26D9               	addwf	fsr2l,f,c
  6666   005860  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  6667   005862  22DA               	addwfc	fsr2h,f,c
  6668   005864  50DE               	movf	postinc2,w,c
  6669   005866  0100               	movlb	0	; () banked
  6670   005868  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  6671   00586A  50DE               	movf	postinc2,w,c
  6672   00586C  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  6673   00586E  50DE               	movf	postinc2,w,c
  6674   005870  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  6675   005872  50DE               	movf	postinc2,w,c
  6676   005874  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  6677   005876  A0D8               	btfss	status,0,c
  6678   005878  EF40  F02C         	goto	u19011
  6679   00587C  EF42  F02C         	goto	u19010
  6680   005880                     u19011:
  6681   005880  EF85  F02B         	goto	l15661
  6682   005884                     u19010:
  6683   005884                     l15695:
  6684                           
  6685                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  6686   005884  0E00               	movlw	0
  6687   005886                     l970:
  6688   005886  0012               	return		;funcret
  6689   005888                     __end_of_remove_chain:
  6690                           	callstack 0
  6691                           
  6692 ;; *************** function _follow_path *****************
  6693 ;; Defined at:
  6694 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  dp              2   51[BANK1 ] PTR struct .
  6697 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  6698 ;;  path            2   53[BANK1 ] PTR const unsigned char 
  6699 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  fs              2   61[BANK1 ] PTR struct .
  6702 ;;		 -> FatFs(563), NULL(0), 
  6703 ;;  res             1   64[BANK1 ] enum E68
  6704 ;;  ns              1   63[BANK1 ] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      enum E68
  6707 ;; Registers used:
  6708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6714 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;Total ram usage:       14 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 16
  6721 ;; This function calls:
  6722 ;;		_create_name
  6723 ;;		_dir_find
  6724 ;;		_dir_sdi
  6725 ;;		_ld_clust
  6726 ;; This function is called by:
  6727 ;;		_f_open
  6728 ;;		_f_chdir
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text17
  6733   005392                     __ptext17:
  6734                           	callstack 0
  6735   005392                     _follow_path:
  6736                           	callstack 12
  6737   005392                     
  6738                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  6739   005392  0060  F4CF  FFD9   	movff	follow_path@dp,fsr2l
  6740   005398  0060  F4D3  FFDA   	movff	follow_path@dp+1,fsr2h
  6741   00539E  006F FF78  F13D    	movff	postinc2,follow_path@fs
  6742   0053A4  006F FF74  F13E    	movff	postdec2,follow_path@fs+1
  6743   0053AA                     
  6744                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  6745   0053AA  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  6746   0053B0  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  6747   0053B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6748   0053B6  6AF8               	clrf	tblptru,c
  6749   0053B8                     	endif
  6750   0053B8                     	if	0	;tblptru may be non-zero
  6751   0053B8                     	endif
  6752   0053B8  0008               	tblrd		*
  6753   0053BA  50F5               	movf	tablat,w,c
  6754   0053BC  0A2F               	xorlw	47
  6755   0053BE  B4D8               	btfsc	status,2,c
  6756   0053C0  EFE4  F029         	goto	u19041
  6757   0053C4  EFE6  F029         	goto	u19040
  6758   0053C8                     u19041:
  6759   0053C8  EF15  F02A         	goto	l15729
  6760   0053CC                     u19040:
  6761   0053CC  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  6762   0053D2  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  6763   0053D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6764   0053D8  6AF8               	clrf	tblptru,c
  6765   0053DA                     	endif
  6766   0053DA                     	if	0	;tblptru may be non-zero
  6767   0053DA                     	endif
  6768   0053DA  0008               	tblrd		*
  6769   0053DC  50F5               	movf	tablat,w,c
  6770   0053DE  0A5C               	xorlw	92
  6771   0053E0  B4D8               	btfsc	status,2,c
  6772   0053E2  EFF5  F029         	goto	u19051
  6773   0053E6  EFF7  F029         	goto	u19050
  6774   0053EA                     u19051:
  6775   0053EA  EF15  F02A         	goto	l15729
  6776   0053EE                     u19050:
  6777   0053EE                     
  6778                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  6779   0053EE  0101               	movlb	1	; () banked
  6780   0053F0  EE20 F013          	lfsr	2,19
  6781   0053F4  513D               	movf	follow_path@fs& (0+255),w,b
  6782   0053F6  26D9               	addwf	fsr2l,f,c
  6783   0053F8  513E               	movf	(follow_path@fs+1)& (0+255),w,b
  6784   0053FA  22DA               	addwfc	fsr2h,f,c
  6785   0053FC  EE10 F006          	lfsr	1,6
  6786   005400  5133               	movf	follow_path@dp& (0+255),w,b
  6787   005402  26E1               	addwf	fsr1l,f,c
  6788   005404  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  6789   005406  22E2               	addwfc	fsr1h,f,c
  6790   005408  006F FF7B FFE6     	movff	postinc2,postinc1
  6791   00540E  006F FF7B FFE6     	movff	postinc2,postinc1
  6792   005414  006F FF7B FFE6     	movff	postinc2,postinc1
  6793   00541A  006F FF7B FFE6     	movff	postinc2,postinc1
  6794                           
  6795                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  6796   005420  EF42  F02A         	goto	l15735
  6797   005424                     l15727:
  6798   005424  0101               	movlb	1	; () banked
  6799   005426  4B35               	infsnz	follow_path@path& (0+255),f,b
  6800   005428  2B36               	incf	(follow_path@path+1)& (0+255),f,b
  6801   00542A                     l15729:
  6802   00542A  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  6803   005430  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  6804   005436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6805   005436  6AF8               	clrf	tblptru,c
  6806   005438                     	endif
  6807   005438                     	if	0	;tblptru may be non-zero
  6808   005438                     	endif
  6809   005438  0008               	tblrd		*
  6810   00543A  50F5               	movf	tablat,w,c
  6811   00543C  0A2F               	xorlw	47
  6812   00543E  B4D8               	btfsc	status,2,c
  6813   005440  EF24  F02A         	goto	u19061
  6814   005444  EF26  F02A         	goto	u19060
  6815   005448                     u19061:
  6816   005448  EF12  F02A         	goto	l15727
  6817   00544C                     u19060:
  6818   00544C  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  6819   005452  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  6820   005458                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6821   005458  6AF8               	clrf	tblptru,c
  6822   00545A                     	endif
  6823   00545A                     	if	0	;tblptru may be non-zero
  6824   00545A                     	endif
  6825   00545A  0008               	tblrd		*
  6826   00545C  50F5               	movf	tablat,w,c
  6827   00545E  0A5C               	xorlw	92
  6828   005460  B4D8               	btfsc	status,2,c
  6829   005462  EF35  F02A         	goto	u19071
  6830   005466  EF37  F02A         	goto	u19070
  6831   00546A                     u19071:
  6832   00546A  EF12  F02A         	goto	l15727
  6833   00546E                     u19070:
  6834   00546E                     
  6835                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  6836   00546E  0101               	movlb	1	; () banked
  6837   005470  EE20 F006          	lfsr	2,6
  6838   005474  5133               	movf	follow_path@dp& (0+255),w,b
  6839   005476  26D9               	addwf	fsr2l,f,c
  6840   005478  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  6841   00547A  22DA               	addwfc	fsr2h,f,c
  6842   00547C  6ADE               	clrf	postinc2,c
  6843   00547E  6ADE               	clrf	postinc2,c
  6844   005480  6ADE               	clrf	postinc2,c
  6845   005482  6ADD               	clrf	postdec2,c
  6846   005484                     l15735:
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  6850   005484  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  6851   00548A  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  6852   005490                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6853   005490  6AF8               	clrf	tblptru,c
  6854   005492                     	endif
  6855   005492                     	if	0	;tblptru may be non-zero
  6856   005492                     	endif
  6857   005492  0E20               	movlw	32
  6858   005494  0008               	tblrd		*
  6859   005496  60F5               	cpfslt	tablat,c
  6860   005498  EF50  F02A         	goto	u19081
  6861   00549C  EF52  F02A         	goto	u19080
  6862   0054A0                     u19081:
  6863   0054A0  EF6D  F02A         	goto	l15741
  6864   0054A4                     u19080:
  6865   0054A4                     
  6866                           ; BSR set to: 1
  6867                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  6868   0054A4  EE20 F027          	lfsr	2,39
  6869   0054A8  5133               	movf	follow_path@dp& (0+255),w,b
  6870   0054AA  26D9               	addwf	fsr2l,f,c
  6871   0054AC  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  6872   0054AE  22DA               	addwfc	fsr2h,f,c
  6873   0054B0  0E80               	movlw	128
  6874   0054B2  6EDF               	movwf	indf2,c
  6875   0054B4                     
  6876                           ; BSR set to: 1
  6877                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  6878   0054B4  C133  F0ED         	movff	follow_path@dp,dir_sdi@dp
  6879   0054B8  C134  F0EE         	movff	follow_path@dp+1,dir_sdi@dp+1
  6880   0054BC  0E00               	movlw	0
  6881   0054BE  0100               	movlb	0	; () banked
  6882   0054C0  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  6883   0054C2  0E00               	movlw	0
  6884   0054C4  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  6885   0054C6  0E00               	movlw	0
  6886   0054C8  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  6887   0054CA  0E00               	movlw	0
  6888   0054CC  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  6889   0054CE  ECC8  F027         	call	_dir_sdi	;wreg free
  6890   0054D2  0101               	movlb	1	; () banked
  6891   0054D4  6F40               	movwf	follow_path@res& (0+255),b
  6892                           
  6893                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  6894   0054D6  EF21  F02B         	goto	l15775
  6895   0054DA                     l15741:
  6896                           
  6897                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  6898   0054DA  C133  F068         	movff	follow_path@dp,create_name@dp
  6899   0054DE  C134  F069         	movff	follow_path@dp+1,create_name@dp+1
  6900   0054E2  0E35               	movlw	low follow_path@path
  6901   0054E4  0100               	movlb	0	; () banked
  6902   0054E6  6F6A               	movwf	create_name@path& (0+255),b
  6903   0054E8  0E01               	movlw	high follow_path@path
  6904   0054EA  6F6B               	movwf	(create_name@path+1)& (0+255),b
  6905   0054EC  EC05  F01F         	call	_create_name	;wreg free
  6906   0054F0  0101               	movlb	1	; () banked
  6907   0054F2  6F40               	movwf	follow_path@res& (0+255),b
  6908   0054F4                     
  6909                           ; BSR set to: 1
  6910                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  6911   0054F4  5140               	movf	follow_path@res& (0+255),w,b
  6912   0054F6  B4D8               	btfsc	status,2,c
  6913   0054F8  EF80  F02A         	goto	u19091
  6914   0054FC  EF82  F02A         	goto	u19090
  6915   005500                     u19091:
  6916   005500  EF84  F02A         	goto	l15747
  6917   005504                     u19090:
  6918   005504  EF21  F02B         	goto	l15775
  6919   005508                     l15747:
  6920                           
  6921                           ; BSR set to: 1
  6922                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  6923   005508  C133  F12D         	movff	follow_path@dp,dir_find@dp
  6924   00550C  C134  F12E         	movff	follow_path@dp+1,dir_find@dp+1
  6925   005510  EC79  F033         	call	_dir_find	;wreg free
  6926   005514  0101               	movlb	1	; () banked
  6927   005516  6F40               	movwf	follow_path@res& (0+255),b
  6928   005518                     
  6929                           ; BSR set to: 1
  6930                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  6931   005518  EE20 F027          	lfsr	2,39
  6932   00551C  5133               	movf	follow_path@dp& (0+255),w,b
  6933   00551E  26D9               	addwf	fsr2l,f,c
  6934   005520  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  6935   005522  22DA               	addwfc	fsr2h,f,c
  6936   005524  50DF               	movf	indf2,w,c
  6937   005526  6F3F               	movwf	follow_path@ns& (0+255),b
  6938   005528                     
  6939                           ; BSR set to: 1
  6940                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  6941   005528  5140               	movf	follow_path@res& (0+255),w,b
  6942   00552A  B4D8               	btfsc	status,2,c
  6943   00552C  EF9A  F02A         	goto	u19101
  6944   005530  EF9C  F02A         	goto	u19100
  6945   005534                     u19101:
  6946   005534  EFCC  F02A         	goto	l1173
  6947   005538                     u19100:
  6948   005538                     
  6949                           ; BSR set to: 1
  6950                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  6951   005538  0E04               	movlw	4
  6952   00553A  1940               	xorwf	follow_path@res& (0+255),w,b
  6953   00553C  A4D8               	btfss	status,2,c
  6954   00553E  EFA3  F02A         	goto	u19111
  6955   005542  EFA5  F02A         	goto	u19110
  6956   005546                     u19111:
  6957   005546  EF21  F02B         	goto	l15775
  6958   00554A                     u19110:
  6959   00554A                     
  6960                           ; BSR set to: 1
  6961   00554A  AB3F               	btfss	follow_path@ns& (0+255),5,b
  6962   00554C  EFAA  F02A         	goto	u19121
  6963   005550  EFAC  F02A         	goto	u19120
  6964   005554                     u19121:
  6965   005554  EFC1  F02A         	goto	l1175
  6966   005558                     u19120:
  6967   005558                     
  6968                           ; BSR set to: 1
  6969                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  6970   005558  B53F               	btfsc	follow_path@ns& (0+255),2,b
  6971   00555A  EFB1  F02A         	goto	u19131
  6972   00555E  EFB3  F02A         	goto	u19130
  6973   005562                     u19131:
  6974   005562  EFB5  F02A         	goto	l15761
  6975   005566                     u19130:
  6976   005566  EF6D  F02A         	goto	l15741
  6977   00556A                     l15761:
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  6981   00556A  EE20 F027          	lfsr	2,39
  6982   00556E  5133               	movf	follow_path@dp& (0+255),w,b
  6983   005570  26D9               	addwf	fsr2l,f,c
  6984   005572  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  6985   005574  22DA               	addwfc	fsr2h,f,c
  6986   005576  0E80               	movlw	128
  6987   005578  6EDF               	movwf	indf2,c
  6988   00557A                     
  6989                           ; BSR set to: 1
  6990                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  6991   00557A  0E00               	movlw	0
  6992   00557C  6F40               	movwf	follow_path@res& (0+255),b
  6993                           
  6994                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  6995   00557E  EF21  F02B         	goto	l15775
  6996   005582                     l1175:
  6997                           
  6998                           ; BSR set to: 1
  6999                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  7000   005582  B53F               	btfsc	follow_path@ns& (0+255),2,b
  7001   005584  EFC6  F02A         	goto	u19141
  7002   005588  EFC8  F02A         	goto	u19140
  7003   00558C                     u19141:
  7004   00558C  EF21  F02B         	goto	l15775
  7005   005590                     u19140:
  7006   005590                     l15765:
  7007                           
  7008                           ; BSR set to: 1
  7009   005590  0E05               	movlw	5
  7010   005592  6F40               	movwf	follow_path@res& (0+255),b
  7011   005594  EF21  F02B         	goto	l15775
  7012   005598                     l1173:
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  7016   005598  A53F               	btfss	follow_path@ns& (0+255),2,b
  7017   00559A  EFD1  F02A         	goto	u19151
  7018   00559E  EFD3  F02A         	goto	u19150
  7019   0055A2                     u19151:
  7020   0055A2  EFD5  F02A         	goto	l15769
  7021   0055A6                     u19150:
  7022   0055A6  EF21  F02B         	goto	l15775
  7023   0055AA                     l15769:
  7024                           
  7025                           ; BSR set to: 1
  7026                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  7027   0055AA  EE20 F004          	lfsr	2,4
  7028   0055AE  5133               	movf	follow_path@dp& (0+255),w,b
  7029   0055B0  26D9               	addwf	fsr2l,f,c
  7030   0055B2  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7031   0055B4  22DA               	addwfc	fsr2h,f,c
  7032   0055B6  B8DF               	btfsc	indf2,4,c
  7033   0055B8  EFE0  F02A         	goto	u19161
  7034   0055BC  EFE2  F02A         	goto	u19160
  7035   0055C0                     u19161:
  7036   0055C0  EFE4  F02A         	goto	l15773
  7037   0055C4                     u19160:
  7038   0055C4  EFC8  F02A         	goto	l15765
  7039   0055C8                     l15773:
  7040                           
  7041                           ; BSR set to: 1
  7042                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  7043   0055C8  C13D  F067         	movff	follow_path@fs,ld_clust@fs
  7044   0055CC  C13E  F068         	movff	follow_path@fs+1,ld_clust@fs+1
  7045   0055D0  EE20 F00E          	lfsr	2,14
  7046   0055D4  5133               	movf	follow_path@dp& (0+255),w,b
  7047   0055D6  26D9               	addwf	fsr2l,f,c
  7048   0055D8  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7049   0055DA  22DA               	addwfc	fsr2h,f,c
  7050   0055DC  006F FF78  F137    	movff	postinc2,??_follow_path
  7051   0055E2  006F FF74  F138    	movff	postdec2,??_follow_path+1
  7052   0055E8  0EFF               	movlw	255
  7053   0055EA  1537               	andwf	??_follow_path& (0+255),w,b
  7054   0055EC  6F39               	movwf	(??_follow_path+2)& (0+255),b
  7055   0055EE  0E01               	movlw	1
  7056   0055F0  1538               	andwf	(??_follow_path+1)& (0+255),w,b
  7057   0055F2  6F3A               	movwf	(??_follow_path+3)& (0+255),b
  7058   0055F4  5139               	movf	(??_follow_path+2)& (0+255),w,b
  7059   0055F6  253D               	addwf	follow_path@fs& (0+255),w,b
  7060   0055F8  6F3B               	movwf	(??_follow_path+4)& (0+255),b
  7061   0055FA  513A               	movf	(??_follow_path+3)& (0+255),w,b
  7062   0055FC  213E               	addwfc	(follow_path@fs+1)& (0+255),w,b
  7063   0055FE  6F3C               	movwf	(??_follow_path+5)& (0+255),b
  7064   005600  0E33               	movlw	51
  7065   005602  253B               	addwf	(??_follow_path+4)& (0+255),w,b
  7066   005604  0100               	movlb	0	; () banked
  7067   005606  6F69               	movwf	ld_clust@dir& (0+255),b
  7068   005608  0E00               	movlw	0
  7069   00560A  0101               	movlb	1	; () banked
  7070   00560C  213C               	addwfc	(??_follow_path+5)& (0+255),w,b
  7071   00560E  0100               	movlb	0	; () banked
  7072   005610  6F6A               	movwf	(ld_clust@dir+1)& (0+255),b
  7073   005612  ECDC  F041         	call	_ld_clust	;wreg free
  7074   005616  0101               	movlb	1	; () banked
  7075   005618  EE20 F006          	lfsr	2,6
  7076   00561C  5133               	movf	follow_path@dp& (0+255),w,b
  7077   00561E  26D9               	addwf	fsr2l,f,c
  7078   005620  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7079   005622  22DA               	addwfc	fsr2h,f,c
  7080   005624  0100               	movlb	0	; () banked
  7081   005626  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  7082   00562C  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  7083   005632  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  7084   005638  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  7085   00563E  EF6D  F02A         	goto	l15741
  7086   005642                     l15775:
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  7090   005642  5140               	movf	follow_path@res& (0+255),w,b
  7091   005644                     
  7092                           ; BSR set to: 1
  7093   005644  0012               	return		;funcret
  7094   005646                     __end_of_follow_path:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _ld_clust *****************
  7098 ;; Defined at:
  7099 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  fs              2    7[BANK0 ] PTR struct .
  7102 ;;		 -> FatFs(563), NULL(0), 
  7103 ;;  dir             2    9[BANK0 ] PTR const unsigned char 
  7104 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  cl              4   15[BANK0 ] unsigned long 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  4    7[BANK0 ] unsigned long 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;Total ram usage:       12 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; Hardware stack levels required when called: 6
  7123 ;; This function calls:
  7124 ;;		_ld_word
  7125 ;; This function is called by:
  7126 ;;		_follow_path
  7127 ;;		_f_open
  7128 ;;		_f_chdir
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text18
  7133   0083B8                     __ptext18:
  7134                           	callstack 0
  7135   0083B8                     _ld_clust:
  7136                           	callstack 22
  7137   0083B8                     
  7138                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  7139   0083B8  0E1A               	movlw	26
  7140   0083BA  0100               	movlb	0	; () banked
  7141   0083BC  2569               	addwf	ld_clust@dir& (0+255),w,b
  7142   0083BE  6F60               	movwf	ld_word@ptr& (0+255),b
  7143   0083C0  0E00               	movlw	0
  7144   0083C2  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  7145   0083C4  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  7146   0083C6  ECF7  F046         	call	_ld_word	;wreg free
  7147   0083CA  0100               	movlb	0	; () banked
  7148   0083CC  C060  F06F         	movff	?_ld_word,ld_clust@cl
  7149   0083D0  C061  F070         	movff	?_ld_word+1,ld_clust@cl+1
  7150   0083D4  6B71               	clrf	(ld_clust@cl+2)& (0+255),b
  7151   0083D6  6B72               	clrf	(ld_clust@cl+3)& (0+255),b
  7152   0083D8                     
  7153                           ; BSR set to: 0
  7154                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  7155   0083D8  0060  F19F  FFD9   	movff	ld_clust@fs,fsr2l
  7156   0083DE  0060  F1A3  FFDA   	movff	ld_clust@fs+1,fsr2h
  7157   0083E4  0E03               	movlw	3
  7158   0083E6  18DE               	xorwf	postinc2,w,c
  7159   0083E8  A4D8               	btfss	status,2,c
  7160   0083EA  EFF9  F041         	goto	u18241
  7161   0083EE  EFFB  F041         	goto	u18240
  7162   0083F2                     u18241:
  7163   0083F2  EF18  F042         	goto	l15267
  7164   0083F6                     u18240:
  7165   0083F6                     
  7166                           ; BSR set to: 0
  7167                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  7168   0083F6  0E14               	movlw	20
  7169   0083F8  2569               	addwf	ld_clust@dir& (0+255),w,b
  7170   0083FA  6F60               	movwf	ld_word@ptr& (0+255),b
  7171   0083FC  0E00               	movlw	0
  7172   0083FE  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  7173   008400  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  7174   008402  ECF7  F046         	call	_ld_word	;wreg free
  7175   008406  0100               	movlb	0	; () banked
  7176   008408  5160               	movf	?_ld_word& (0+255),w,b
  7177   00840A  6F6B               	movwf	??_ld_clust& (0+255),b
  7178   00840C  5161               	movf	(?_ld_word+1)& (0+255),w,b
  7179   00840E  6F6C               	movwf	(??_ld_clust+1)& (0+255),b
  7180   008410  6B6D               	clrf	(??_ld_clust+2)& (0+255),b
  7181   008412  6B6E               	clrf	(??_ld_clust+3)& (0+255),b
  7182   008414  C06C  F06E         	movff	??_ld_clust+1,??_ld_clust+3
  7183   008418  C06B  F06D         	movff	??_ld_clust,??_ld_clust+2
  7184   00841C  6B6C               	clrf	(??_ld_clust+1)& (0+255),b
  7185   00841E  6B6B               	clrf	??_ld_clust& (0+255),b
  7186   008420  516B               	movf	??_ld_clust& (0+255),w,b
  7187   008422  136F               	iorwf	ld_clust@cl& (0+255),f,b
  7188   008424  516C               	movf	(??_ld_clust+1)& (0+255),w,b
  7189   008426  1370               	iorwf	(ld_clust@cl+1)& (0+255),f,b
  7190   008428  516D               	movf	(??_ld_clust+2)& (0+255),w,b
  7191   00842A  1371               	iorwf	(ld_clust@cl+2)& (0+255),f,b
  7192   00842C  516E               	movf	(??_ld_clust+3)& (0+255),w,b
  7193   00842E  1372               	iorwf	(ld_clust@cl+3)& (0+255),f,b
  7194   008430                     l15267:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  7198   008430  C06F  F067         	movff	ld_clust@cl,?_ld_clust
  7199   008434  C070  F068         	movff	ld_clust@cl+1,?_ld_clust+1
  7200   008438  C071  F069         	movff	ld_clust@cl+2,?_ld_clust+2
  7201   00843C  C072  F06A         	movff	ld_clust@cl+3,?_ld_clust+3
  7202   008440                     
  7203                           ; BSR set to: 0
  7204   008440  0012               	return		;funcret
  7205   008442                     __end_of_ld_clust:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _dir_find *****************
  7209 ;; Defined at:
  7210 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  dp              2   45[BANK1 ] PTR struct .
  7213 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  fs              2   47[BANK1 ] PTR struct .
  7216 ;;		 -> FatFs(563), NULL(0), 
  7217 ;;  res             1   50[BANK1 ] enum E68
  7218 ;;  c               1   49[BANK1 ] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      enum E68
  7221 ;; Registers used:
  7222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7228 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;Total ram usage:        8 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 15
  7235 ;; This function calls:
  7236 ;;		_dir_next
  7237 ;;		_dir_sdi
  7238 ;;		_mem_cmp
  7239 ;;		_move_window
  7240 ;; This function is called by:
  7241 ;;		_follow_path
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text19
  7246   0066F2                     __ptext19:
  7247                           	callstack 0
  7248   0066F2                     _dir_find:
  7249                           	callstack 12
  7250   0066F2                     
  7251                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  7252   0066F2  0060  F4B7  FFD9   	movff	dir_find@dp,fsr2l
  7253   0066F8  0060  F4BB  FFDA   	movff	dir_find@dp+1,fsr2h
  7254   0066FE  006F FF78  F12F    	movff	postinc2,dir_find@fs
  7255   006704  006F FF74  F130    	movff	postdec2,dir_find@fs+1
  7256   00670A                     
  7257                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  7258   00670A  C12D  F0ED         	movff	dir_find@dp,dir_sdi@dp
  7259   00670E  C12E  F0EE         	movff	dir_find@dp+1,dir_sdi@dp+1
  7260   006712  0E00               	movlw	0
  7261   006714  0100               	movlb	0	; () banked
  7262   006716  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  7263   006718  0E00               	movlw	0
  7264   00671A  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  7265   00671C  0E00               	movlw	0
  7266   00671E  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  7267   006720  0E00               	movlw	0
  7268   006722  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  7269   006724  ECC8  F027         	call	_dir_sdi	;wreg free
  7270   006728  0101               	movlb	1	; () banked
  7271   00672A  6F32               	movwf	dir_find@res& (0+255),b
  7272   00672C                     
  7273                           ; BSR set to: 1
  7274                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  7275   00672C  5132               	movf	dir_find@res& (0+255),w,b
  7276   00672E  B4D8               	btfsc	status,2,c
  7277   006730  EF9C  F033         	goto	u18261
  7278   006734  EF9E  F033         	goto	u18260
  7279   006738                     u18261:
  7280   006738  EFA2  F033         	goto	l15287
  7281   00673C                     u18260:
  7282   00673C                     l15283:
  7283   00673C  0101               	movlb	1	; () banked
  7284   00673E  5132               	movf	dir_find@res& (0+255),w,b
  7285   006740  EF4C  F034         	goto	l1106
  7286   006744                     l15287:
  7287                           
  7288                           ; BSR set to: 1
  7289                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  7290   006744  C12F  F0C8         	movff	dir_find@fs,move_window@fs
  7291   006748  C130  F0C9         	movff	dir_find@fs+1,move_window@fs+1
  7292   00674C  EE20 F016          	lfsr	2,22
  7293   006750  512D               	movf	dir_find@dp& (0+255),w,b
  7294   006752  26D9               	addwf	fsr2l,f,c
  7295   006754  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7296   006756  22DA               	addwfc	fsr2h,f,c
  7297   006758  006F FF78  F0CA    	movff	postinc2,move_window@sector
  7298   00675E  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  7299   006764  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  7300   00676A  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  7301   006770  EC9A  F03E         	call	_move_window	;wreg free
  7302   006774  0101               	movlb	1	; () banked
  7303   006776  6F32               	movwf	dir_find@res& (0+255),b
  7304   006778                     
  7305                           ; BSR set to: 1
  7306                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  7307   006778  5132               	movf	dir_find@res& (0+255),w,b
  7308   00677A  B4D8               	btfsc	status,2,c
  7309   00677C  EFC2  F033         	goto	u18271
  7310   006780  EFC4  F033         	goto	u18270
  7311   006784                     u18271:
  7312   006784  EFC6  F033         	goto	l15293
  7313   006788                     u18270:
  7314   006788  EF9E  F033         	goto	l15283
  7315   00678C                     l15293:
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  7319   00678C  EE20 F01A          	lfsr	2,26
  7320   006790  512D               	movf	dir_find@dp& (0+255),w,b
  7321   006792  26D9               	addwf	fsr2l,f,c
  7322   006794  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7323   006796  22DA               	addwfc	fsr2h,f,c
  7324   006798  006F FF78  F0FE    	movff	postinc2,??_dir_find
  7325   00679E  006F FF74  F0FF    	movff	postdec2,??_dir_find+1
  7326   0067A4  0060  F3FB  FFD9   	movff	??_dir_find,fsr2l
  7327   0067AA  0060  F3FF  FFDA   	movff	??_dir_find+1,fsr2h
  7328   0067B0  50DF               	movf	indf2,w,c
  7329   0067B2  6F31               	movwf	dir_find@c& (0+255),b
  7330   0067B4                     
  7331                           ; BSR set to: 1
  7332                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  7333   0067B4  5131               	movf	dir_find@c& (0+255),w,b
  7334   0067B6  A4D8               	btfss	status,2,c
  7335   0067B8  EFE0  F033         	goto	u18281
  7336   0067BC  EFE2  F033         	goto	u18280
  7337   0067C0                     u18281:
  7338   0067C0  EFE6  F033         	goto	l15299
  7339   0067C4                     u18280:
  7340   0067C4                     
  7341                           ; BSR set to: 1
  7342   0067C4  0E04               	movlw	4
  7343   0067C6  6F32               	movwf	dir_find@res& (0+255),b
  7344   0067C8  EF9E  F033         	goto	l15283
  7345   0067CC                     l15299:
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  7349   0067CC  EE20 F004          	lfsr	2,4
  7350   0067D0  512D               	movf	dir_find@dp& (0+255),w,b
  7351   0067D2  26D9               	addwf	fsr2l,f,c
  7352   0067D4  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7353   0067D6  22DA               	addwfc	fsr2h,f,c
  7354   0067D8  EE10 F01A          	lfsr	1,26
  7355   0067DC  512D               	movf	dir_find@dp& (0+255),w,b
  7356   0067DE  26E1               	addwf	fsr1l,f,c
  7357   0067E0  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7358   0067E2  22E2               	addwfc	fsr1h,f,c
  7359   0067E4  EE00 F00B          	lfsr	0,11
  7360   0067E8  50E6               	movf	postinc1,w,c
  7361   0067EA  26E9               	addwf	fsr0l,f,c
  7362   0067EC  50E5               	movf	postdec1,w,c
  7363   0067EE  22EA               	addwfc	fsr0h,f,c
  7364   0067F0  50EF               	movf	indf0,w,c
  7365   0067F2  0B3F               	andlw	63
  7366   0067F4  6EDF               	movwf	indf2,c
  7367   0067F6                     
  7368                           ; BSR set to: 1
  7369                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  7370   0067F6  EE20 F01A          	lfsr	2,26
  7371   0067FA  512D               	movf	dir_find@dp& (0+255),w,b
  7372   0067FC  26D9               	addwf	fsr2l,f,c
  7373   0067FE  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7374   006800  22DA               	addwfc	fsr2h,f,c
  7375   006802  EE10 F00B          	lfsr	1,11
  7376   006806  50DE               	movf	postinc2,w,c
  7377   006808  26E1               	addwf	fsr1l,f,c
  7378   00680A  50DD               	movf	postdec2,w,c
  7379   00680C  22E2               	addwfc	fsr1h,f,c
  7380   00680E  B6E7               	btfsc	indf1,3,c
  7381   006810  EF0C  F034         	goto	u18291
  7382   006814  EF0E  F034         	goto	u18290
  7383   006818                     u18291:
  7384   006818  EF35  F034         	goto	l15307
  7385   00681C                     u18290:
  7386   00681C                     
  7387                           ; BSR set to: 1
  7388   00681C  EE20 F01A          	lfsr	2,26
  7389   006820  512D               	movf	dir_find@dp& (0+255),w,b
  7390   006822  26D9               	addwf	fsr2l,f,c
  7391   006824  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  7392   006826  22DA               	addwfc	fsr2h,f,c
  7393   006828  006F FF78  F060    	movff	postinc2,mem_cmp@dst
  7394   00682E  006F FF74  F061    	movff	postdec2,mem_cmp@dst+1
  7395   006834  0E1C               	movlw	28
  7396   006836  252D               	addwf	dir_find@dp& (0+255),w,b
  7397   006838  0100               	movlb	0	; () banked
  7398   00683A  6F62               	movwf	mem_cmp@src& (0+255),b
  7399   00683C  0E00               	movlw	0
  7400   00683E  0101               	movlb	1	; () banked
  7401   006840  212E               	addwfc	(dir_find@dp+1)& (0+255),w,b
  7402   006842  0100               	movlb	0	; () banked
  7403   006844  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
  7404   006846  0E00               	movlw	0
  7405   006848  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
  7406   00684A  0E0B               	movlw	11
  7407   00684C  6F64               	movwf	mem_cmp@cnt& (0+255),b
  7408   00684E  EC90  F041         	call	_mem_cmp	;wreg free
  7409   006852  0100               	movlb	0	; () banked
  7410   006854  5160               	movf	?_mem_cmp& (0+255),w,b
  7411   006856  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
  7412   006858  A4D8               	btfss	status,2,c
  7413   00685A  EF31  F034         	goto	u18301
  7414   00685E  EF33  F034         	goto	u18300
  7415   006862                     u18301:
  7416   006862  EF35  F034         	goto	l15307
  7417   006866                     u18300:
  7418   006866  EF9E  F033         	goto	l15283
  7419   00686A                     l15307:
  7420                           
  7421                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  7422   00686A  C12D  F0FA         	movff	dir_find@dp,dir_next@dp
  7423   00686E  C12E  F0FB         	movff	dir_find@dp+1,dir_next@dp+1
  7424   006872  0E00               	movlw	0
  7425   006874  0100               	movlb	0	; () banked
  7426   006876  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  7427   006878  0E00               	movlw	0
  7428   00687A  6FFC               	movwf	dir_next@stretch& (0+255),b
  7429   00687C  EC5A  F021         	call	_dir_next	;wreg free
  7430   006880  0101               	movlb	1	; () banked
  7431   006882  6F32               	movwf	dir_find@res& (0+255),b
  7432   006884                     
  7433                           ; BSR set to: 1
  7434                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  7435   006884  5132               	movf	dir_find@res& (0+255),w,b
  7436   006886  B4D8               	btfsc	status,2,c
  7437   006888  EF48  F034         	goto	u18311
  7438   00688C  EF4A  F034         	goto	u18310
  7439   006890                     u18311:
  7440   006890  EFA2  F033         	goto	l15287
  7441   006894                     u18310:
  7442   006894  EF9E  F033         	goto	l15283
  7443   006898                     l1106:
  7444                           
  7445                           ; BSR set to: 1
  7446   006898  0012               	return		;funcret
  7447   00689A                     __end_of_dir_find:
  7448                           	callstack 0
  7449                           
  7450 ;; *************** function _create_name *****************
  7451 ;; Defined at:
  7452 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  dp              2    8[BANK0 ] PTR struct .
  7455 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  7456 ;;  path            2   10[BANK0 ] PTR PTR const unsigned c
  7457 ;;		 -> follow_path@path(2), 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  si              2   27[BANK0 ] unsigned int 
  7460 ;;  sfn             2   25[BANK0 ] PTR unsigned char 
  7461 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
  7462 ;;  i               2   23[BANK0 ] unsigned int 
  7463 ;;  p               2   21[BANK0 ] PTR const unsigned char 
  7464 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  7465 ;;  ni              2   19[BANK0 ] unsigned int 
  7466 ;;  c               1   29[BANK0 ] unsigned char 
  7467 ;;  d               1   18[BANK0 ] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      enum E68
  7470 ;; Registers used:
  7471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;Total ram usage:       22 bytes
  7482 ;; Hardware stack levels used: 1
  7483 ;; Hardware stack levels required when called: 6
  7484 ;; This function calls:
  7485 ;;		_chk_chr
  7486 ;;		_dbc_1st
  7487 ;;		_dbc_2nd
  7488 ;;		_mem_set
  7489 ;; This function is called by:
  7490 ;;		_follow_path
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text20
  7495   003E0A                     __ptext20:
  7496                           	callstack 0
  7497   003E0A                     _create_name:
  7498                           	callstack 21
  7499   003E0A                     
  7500                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  7501   003E0A  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  7502   003E10  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  7503   003E16  006F FF78  F075    	movff	postinc2,create_name@p
  7504   003E1C  006F FF74  F076    	movff	postdec2,create_name@p+1
  7505   003E22  0E1C               	movlw	28
  7506   003E24  0100               	movlb	0	; () banked
  7507   003E26  2568               	addwf	create_name@dp& (0+255),w,b
  7508   003E28  6F79               	movwf	create_name@sfn& (0+255),b
  7509   003E2A  0E00               	movlw	0
  7510   003E2C  2169               	addwfc	(create_name@dp+1)& (0+255),w,b
  7511   003E2E  6F7A               	movwf	(create_name@sfn+1)& (0+255),b
  7512   003E30                     
  7513                           ; BSR set to: 0
  7514                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  7515   003E30  C079  F060         	movff	create_name@sfn,mem_set@dst
  7516   003E34  C07A  F061         	movff	create_name@sfn+1,mem_set@dst+1
  7517   003E38  0E00               	movlw	0
  7518   003E3A  6F63               	movwf	(mem_set@val+1)& (0+255),b
  7519   003E3C  0E20               	movlw	32
  7520   003E3E  6F62               	movwf	mem_set@val& (0+255),b
  7521   003E40  0E00               	movlw	0
  7522   003E42  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  7523   003E44  0E0B               	movlw	11
  7524   003E46  6F64               	movwf	mem_set@cnt& (0+255),b
  7525   003E48  EC34  F047         	call	_mem_set	;wreg free
  7526   003E4C                     
  7527                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  7528   003E4C  0E00               	movlw	0
  7529   003E4E  0100               	movlb	0	; () banked
  7530   003E50  6F78               	movwf	(create_name@i+1)& (0+255),b
  7531   003E52  0E00               	movlw	0
  7532   003E54  6F77               	movwf	create_name@i& (0+255),b
  7533   003E56  C077  F07B         	movff	create_name@i,create_name@si
  7534   003E5A  C078  F07C         	movff	create_name@i+1,create_name@si+1
  7535   003E5E                     
  7536                           ; BSR set to: 0
  7537   003E5E  0E00               	movlw	0
  7538   003E60  6F74               	movwf	(create_name@ni+1)& (0+255),b
  7539   003E62  0E08               	movlw	8
  7540   003E64  6F73               	movwf	create_name@ni& (0+255),b
  7541   003E66                     
  7542                           ; BSR set to: 0
  7543                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  7544   003E66  517B               	movf	create_name@si& (0+255),w,b
  7545   003E68  2575               	addwf	create_name@p& (0+255),w,b
  7546   003E6A  6F6C               	movwf	??_create_name& (0+255),b
  7547   003E6C  517C               	movf	(create_name@si+1)& (0+255),w,b
  7548   003E6E  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7549   003E70  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7550   003E72  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7551   003E78  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7552   003E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7553   003E7E  6AF8               	clrf	tblptru,c
  7554   003E80                     	endif
  7555   003E80                     	if	0	;tblptru may be non-zero
  7556   003E80                     	endif
  7557   003E80  0008               	tblrd		*
  7558   003E82  50F5               	movf	tablat,w,c
  7559   003E84  0A2E               	xorlw	46
  7560   003E86  A4D8               	btfss	status,2,c
  7561   003E88  EF48  F01F         	goto	u18321
  7562   003E8C  EF4A  F01F         	goto	u18320
  7563   003E90                     u18321:
  7564   003E90  EFCD  F01F         	goto	l15363
  7565   003E94                     u18320:
  7566   003E94                     l15327:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  7570   003E94  517B               	movf	create_name@si& (0+255),w,b
  7571   003E96  2575               	addwf	create_name@p& (0+255),w,b
  7572   003E98  6F6C               	movwf	??_create_name& (0+255),b
  7573   003E9A  517C               	movf	(create_name@si+1)& (0+255),w,b
  7574   003E9C  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7575   003E9E  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7576   003EA0  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7577   003EA6  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7578   003EAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7579   003EAC  6AF8               	clrf	tblptru,c
  7580   003EAE                     	endif
  7581   003EAE                     	if	0	;tblptru may be non-zero
  7582   003EAE                     	endif
  7583   003EAE  0008               	tblrd		*
  7584   003EB0  006F FFD4  F07D    	movff	tablat,create_name@c
  7585   003EB6                     
  7586                           ; BSR set to: 0
  7587   003EB6  4B7B               	infsnz	create_name@si& (0+255),f,b
  7588   003EB8  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  7589   003EBA                     
  7590                           ; BSR set to: 0
  7591                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  7592   003EBA  0E2E               	movlw	46
  7593   003EBC  197D               	xorwf	create_name@c& (0+255),w,b
  7594   003EBE  A4D8               	btfss	status,2,c
  7595   003EC0  EF64  F01F         	goto	u18331
  7596   003EC4  EF66  F01F         	goto	u18330
  7597   003EC8                     u18331:
  7598   003EC8  EF80  F01F         	goto	l15339
  7599   003ECC                     u18330:
  7600   003ECC                     
  7601                           ; BSR set to: 0
  7602   003ECC  517C               	movf	(create_name@si+1)& (0+255),w,b
  7603   003ECE  E109               	bnz	u18340
  7604   003ED0  0E03               	movlw	3
  7605   003ED2  5D7B               	subwf	create_name@si& (0+255),w,b
  7606   003ED4  A0D8               	btfss	status,0,c
  7607   003ED6  EF6F  F01F         	goto	u18341
  7608   003EDA  EF71  F01F         	goto	u18340
  7609   003EDE                     u18341:
  7610   003EDE  EF73  F01F         	goto	l15335
  7611   003EE2                     u18340:
  7612   003EE2  EF80  F01F         	goto	l15339
  7613   003EE6                     l15335:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  7617   003EE6  5177               	movf	create_name@i& (0+255),w,b
  7618   003EE8  2579               	addwf	create_name@sfn& (0+255),w,b
  7619   003EEA  6ED9               	movwf	fsr2l,c
  7620   003EEC  5178               	movf	(create_name@i+1)& (0+255),w,b
  7621   003EEE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  7622   003EF0  6EDA               	movwf	fsr2h,c
  7623   003EF2  0060  F1F7  FFDF   	movff	create_name@c,indf2
  7624   003EF8                     
  7625                           ; BSR set to: 0
  7626   003EF8  4B77               	infsnz	create_name@i& (0+255),f,b
  7627   003EFA  2B78               	incf	(create_name@i+1)& (0+255),f,b
  7628                           
  7629                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  7630   003EFC  EF4A  F01F         	goto	l15327
  7631   003F00                     l15339:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  7635   003F00  0E2F               	movlw	47
  7636   003F02  197D               	xorwf	create_name@c& (0+255),w,b
  7637   003F04  B4D8               	btfsc	status,2,c
  7638   003F06  EF87  F01F         	goto	u18351
  7639   003F0A  EF89  F01F         	goto	u18350
  7640   003F0E                     u18351:
  7641   003F0E  EF9D  F01F         	goto	l15349
  7642   003F12                     u18350:
  7643   003F12                     
  7644                           ; BSR set to: 0
  7645   003F12  0E5C               	movlw	92
  7646   003F14  197D               	xorwf	create_name@c& (0+255),w,b
  7647   003F16  B4D8               	btfsc	status,2,c
  7648   003F18  EF90  F01F         	goto	u18361
  7649   003F1C  EF92  F01F         	goto	u18360
  7650   003F20                     u18361:
  7651   003F20  EF9D  F01F         	goto	l15349
  7652   003F24                     u18360:
  7653   003F24                     
  7654                           ; BSR set to: 0
  7655   003F24  0E20               	movlw	32
  7656   003F26  657D               	cpfsgt	create_name@c& (0+255),b
  7657   003F28  EF98  F01F         	goto	u18371
  7658   003F2C  EF9A  F01F         	goto	u18370
  7659   003F30                     u18371:
  7660   003F30  EF9D  F01F         	goto	l15349
  7661   003F34                     u18370:
  7662   003F34                     l15345:
  7663                           
  7664                           ; BSR set to: 0
  7665   003F34  0E06               	movlw	6
  7666   003F36  EF59  F021         	goto	l1126
  7667   003F3A                     l15349:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  7671   003F3A  517B               	movf	create_name@si& (0+255),w,b
  7672   003F3C  2575               	addwf	create_name@p& (0+255),w,b
  7673   003F3E  6F6C               	movwf	??_create_name& (0+255),b
  7674   003F40  517C               	movf	(create_name@si+1)& (0+255),w,b
  7675   003F42  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7676   003F44  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7677   003F46  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  7678   003F4C  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  7679   003F52  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  7680   003F58  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  7681   003F5E                     
  7682                           ; BSR set to: 0
  7683                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  7684   003F5E  0E20               	movlw	32
  7685   003F60  657D               	cpfsgt	create_name@c& (0+255),b
  7686   003F62  EFB5  F01F         	goto	u18381
  7687   003F66  EFB7  F01F         	goto	u18380
  7688   003F6A                     u18381:
  7689   003F6A  EFBD  F01F         	goto	l15355
  7690   003F6E                     u18380:
  7691   003F6E                     
  7692                           ; BSR set to: 0
  7693   003F6E  0E00               	movlw	0
  7694   003F70  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  7695   003F72  0E20               	movlw	32
  7696   003F74  6F6E               	movwf	_create_name$2961& (0+255),b
  7697   003F76  EFC1  F01F         	goto	l15357
  7698   003F7A                     l15355:
  7699                           
  7700                           ; BSR set to: 0
  7701   003F7A  0E00               	movlw	0
  7702   003F7C  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  7703   003F7E  0E24               	movlw	36
  7704   003F80  6F6E               	movwf	_create_name$2961& (0+255),b
  7705   003F82                     l15357:
  7706                           
  7707                           ; BSR set to: 0
  7708   003F82  EE20 F00B          	lfsr	2,11
  7709   003F86  5179               	movf	create_name@sfn& (0+255),w,b
  7710   003F88  26D9               	addwf	fsr2l,f,c
  7711   003F8A  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  7712   003F8C  22DA               	addwfc	fsr2h,f,c
  7713   003F8E  0060  F1BB  FFDF   	movff	_create_name$2961,indf2
  7714   003F94                     l15359:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  7718   003F94  0E00               	movlw	0
  7719   003F96  EF59  F021         	goto	l1126
  7720   003F9A                     l15363:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  7724   003F9A  517B               	movf	create_name@si& (0+255),w,b
  7725   003F9C  2575               	addwf	create_name@p& (0+255),w,b
  7726   003F9E  6F6C               	movwf	??_create_name& (0+255),b
  7727   003FA0  517C               	movf	(create_name@si+1)& (0+255),w,b
  7728   003FA2  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7729   003FA4  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7730   003FA6  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7731   003FAC  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7732   003FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7733   003FB2  6AF8               	clrf	tblptru,c
  7734   003FB4                     	endif
  7735   003FB4                     	if	0	;tblptru may be non-zero
  7736   003FB4                     	endif
  7737   003FB4  0008               	tblrd		*
  7738   003FB6  006F FFD4  F07D    	movff	tablat,create_name@c
  7739   003FBC                     
  7740                           ; BSR set to: 0
  7741   003FBC  4B7B               	infsnz	create_name@si& (0+255),f,b
  7742   003FBE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  7743   003FC0                     
  7744                           ; BSR set to: 0
  7745                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  7746   003FC0  0E21               	movlw	33
  7747   003FC2  617D               	cpfslt	create_name@c& (0+255),b
  7748   003FC4  EFE6  F01F         	goto	u18391
  7749   003FC8  EFE8  F01F         	goto	u18390
  7750   003FCC                     u18391:
  7751   003FCC  EFEA  F01F         	goto	l15371
  7752   003FD0                     u18390:
  7753   003FD0  EF08  F021         	goto	l15435
  7754   003FD4                     l15371:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  7758   003FD4  0E2F               	movlw	47
  7759   003FD6  197D               	xorwf	create_name@c& (0+255),w,b
  7760   003FD8  B4D8               	btfsc	status,2,c
  7761   003FDA  EFF1  F01F         	goto	u18401
  7762   003FDE  EFF3  F01F         	goto	u18400
  7763   003FE2                     u18401:
  7764   003FE2  EF00  F020         	goto	l15377
  7765   003FE6                     u18400:
  7766   003FE6                     
  7767                           ; BSR set to: 0
  7768   003FE6  0E5C               	movlw	92
  7769   003FE8  197D               	xorwf	create_name@c& (0+255),w,b
  7770   003FEA  A4D8               	btfss	status,2,c
  7771   003FEC  EFFA  F01F         	goto	u18411
  7772   003FF0  EFFC  F01F         	goto	u18410
  7773   003FF4                     u18411:
  7774   003FF4  EF30  F020         	goto	l15381
  7775   003FF8                     u18410:
  7776   003FF8  EF00  F020         	goto	l15377
  7777   003FFC                     l15375:
  7778                           
  7779                           ; BSR set to: 0
  7780   003FFC  4B7B               	infsnz	create_name@si& (0+255),f,b
  7781   003FFE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  7782   004000                     l15377:
  7783                           
  7784                           ; BSR set to: 0
  7785   004000  517B               	movf	create_name@si& (0+255),w,b
  7786   004002  2575               	addwf	create_name@p& (0+255),w,b
  7787   004004  6F6C               	movwf	??_create_name& (0+255),b
  7788   004006  517C               	movf	(create_name@si+1)& (0+255),w,b
  7789   004008  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7790   00400A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7791   00400C  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7792   004012  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7793   004018                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7794   004018  6AF8               	clrf	tblptru,c
  7795   00401A                     	endif
  7796   00401A                     	if	0	;tblptru may be non-zero
  7797   00401A                     	endif
  7798   00401A  0008               	tblrd		*
  7799   00401C  50F5               	movf	tablat,w,c
  7800   00401E  0A2F               	xorlw	47
  7801   004020  B4D8               	btfsc	status,2,c
  7802   004022  EF15  F020         	goto	u18421
  7803   004026  EF17  F020         	goto	u18420
  7804   00402A                     u18421:
  7805   00402A  EFFE  F01F         	goto	l15375
  7806   00402E                     u18420:
  7807   00402E                     
  7808                           ; BSR set to: 0
  7809   00402E  517B               	movf	create_name@si& (0+255),w,b
  7810   004030  2575               	addwf	create_name@p& (0+255),w,b
  7811   004032  6F6C               	movwf	??_create_name& (0+255),b
  7812   004034  517C               	movf	(create_name@si+1)& (0+255),w,b
  7813   004036  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7814   004038  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7815   00403A  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7816   004040  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7817   004046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7818   004046  6AF8               	clrf	tblptru,c
  7819   004048                     	endif
  7820   004048                     	if	0	;tblptru may be non-zero
  7821   004048                     	endif
  7822   004048  0008               	tblrd		*
  7823   00404A  50F5               	movf	tablat,w,c
  7824   00404C  0A5C               	xorlw	92
  7825   00404E  B4D8               	btfsc	status,2,c
  7826   004050  EF2C  F020         	goto	u18431
  7827   004054  EF2E  F020         	goto	u18430
  7828   004058                     u18431:
  7829   004058  EFFE  F01F         	goto	l15375
  7830   00405C                     u18430:
  7831   00405C  EF08  F021         	goto	l15435
  7832   004060                     l15381:
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  7836   004060  0E2E               	movlw	46
  7837   004062  197D               	xorwf	create_name@c& (0+255),w,b
  7838   004064  B4D8               	btfsc	status,2,c
  7839   004066  EF37  F020         	goto	u18441
  7840   00406A  EF39  F020         	goto	u18440
  7841   00406E                     u18441:
  7842   00406E  EF44  F020         	goto	l15385
  7843   004072                     u18440:
  7844   004072                     
  7845                           ; BSR set to: 0
  7846   004072  5173               	movf	create_name@ni& (0+255),w,b
  7847   004074  5D77               	subwf	create_name@i& (0+255),w,b
  7848   004076  5174               	movf	(create_name@ni+1)& (0+255),w,b
  7849   004078  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  7850   00407A  A0D8               	btfss	status,0,c
  7851   00407C  EF42  F020         	goto	u18451
  7852   004080  EF44  F020         	goto	u18450
  7853   004084                     u18451:
  7854   004084  EF63  F020         	goto	l15395
  7855   004088                     u18450:
  7856   004088                     l15385:
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  7860   004088  0E0B               	movlw	11
  7861   00408A  1973               	xorwf	create_name@ni& (0+255),w,b
  7862   00408C  1174               	iorwf	(create_name@ni+1)& (0+255),w,b
  7863   00408E  B4D8               	btfsc	status,2,c
  7864   004090  EF4C  F020         	goto	u18461
  7865   004094  EF4E  F020         	goto	u18460
  7866   004098                     u18461:
  7867   004098  EF9A  F01F         	goto	l15345
  7868   00409C                     u18460:
  7869   00409C                     
  7870                           ; BSR set to: 0
  7871   00409C  0E2E               	movlw	46
  7872   00409E  197D               	xorwf	create_name@c& (0+255),w,b
  7873   0040A0  B4D8               	btfsc	status,2,c
  7874   0040A2  EF55  F020         	goto	u18471
  7875   0040A6  EF57  F020         	goto	u18470
  7876   0040AA                     u18471:
  7877   0040AA  EF59  F020         	goto	l15393
  7878   0040AE                     u18470:
  7879   0040AE  EF9A  F01F         	goto	l15345
  7880   0040B2                     l15393:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  7884   0040B2  0E00               	movlw	0
  7885   0040B4  6F78               	movwf	(create_name@i+1)& (0+255),b
  7886   0040B6  0E08               	movlw	8
  7887   0040B8  6F77               	movwf	create_name@i& (0+255),b
  7888   0040BA  0E00               	movlw	0
  7889   0040BC  6F74               	movwf	(create_name@ni+1)& (0+255),b
  7890   0040BE  0E0B               	movlw	11
  7891   0040C0  6F73               	movwf	create_name@ni& (0+255),b
  7892                           
  7893                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  7894   0040C2  EFCD  F01F         	goto	l15363
  7895   0040C6                     l15395:
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  7899   0040C6  0E7F               	movlw	127
  7900   0040C8  657D               	cpfsgt	create_name@c& (0+255),b
  7901   0040CA  EF69  F020         	goto	u18481
  7902   0040CE  EF6B  F020         	goto	u18480
  7903   0040D2                     u18481:
  7904   0040D2  EF7C  F020         	goto	l15399
  7905   0040D6                     u18480:
  7906   0040D6                     
  7907                           ; BSR set to: 0
  7908                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  7909   0040D6  517D               	movf	create_name@c& (0+255),w,b
  7910   0040D8  0B7F               	andlw	127
  7911   0040DA  6F6C               	movwf	??_create_name& (0+255),b
  7912   0040DC  6B6D               	clrf	(??_create_name+1)& (0+255),b
  7913   0040DE  0EC5               	movlw	low _ExCvt
  7914   0040E0  256C               	addwf	??_create_name& (0+255),w,b
  7915   0040E2  6EF6               	movwf	tblptrl,c
  7916   0040E4  0EFE               	movlw	high _ExCvt
  7917   0040E6  216D               	addwfc	(??_create_name+1)& (0+255),w,b
  7918   0040E8  6EF7               	movwf	tblptrh,c
  7919   0040EA                     	if	1	;There are 3 active tblptr bytes
  7920   0040EA  6AF8               	clrf	tblptru,c
  7921   0040EC  0E00               	movlw	low (__mediumconst shr (0+16))
  7922   0040EE  22F8               	addwfc	tblptru,f,c
  7923   0040F0                     	endif
  7924   0040F0  0008               	tblrd		*
  7925   0040F2  006F FFD4  F07D    	movff	tablat,create_name@c
  7926   0040F8                     l15399:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  7930   0040F8  517D               	movf	create_name@c& (0+255),w,b
  7931   0040FA  ECC7  F048         	call	_dbc_1st
  7932   0040FE  0100               	movlb	0	; () banked
  7933   004100  5160               	movf	?_dbc_1st& (0+255),w,b
  7934   004102  1161               	iorwf	(?_dbc_1st+1)& (0+255),w,b
  7935   004104  B4D8               	btfsc	status,2,c
  7936   004106  EF87  F020         	goto	u18491
  7937   00410A  EF89  F020         	goto	u18490
  7938   00410E                     u18491:
  7939   00410E  EFD4  F020         	goto	l15419
  7940   004112                     u18490:
  7941   004112                     
  7942                           ; BSR set to: 0
  7943                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  7944   004112  517B               	movf	create_name@si& (0+255),w,b
  7945   004114  2575               	addwf	create_name@p& (0+255),w,b
  7946   004116  6F6C               	movwf	??_create_name& (0+255),b
  7947   004118  517C               	movf	(create_name@si+1)& (0+255),w,b
  7948   00411A  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  7949   00411C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7950   00411E  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  7951   004124  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  7952   00412A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7953   00412A  6AF8               	clrf	tblptru,c
  7954   00412C                     	endif
  7955   00412C                     	if	0	;tblptru may be non-zero
  7956   00412C                     	endif
  7957   00412C  0008               	tblrd		*
  7958   00412E  006F FFD4  F072    	movff	tablat,create_name@d
  7959   004134                     
  7960                           ; BSR set to: 0
  7961   004134  4B7B               	infsnz	create_name@si& (0+255),f,b
  7962   004136  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  7963   004138                     
  7964                           ; BSR set to: 0
  7965                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  7966   004138  5172               	movf	create_name@d& (0+255),w,b
  7967   00413A  ECC1  F048         	call	_dbc_2nd
  7968   00413E  0100               	movlb	0	; () banked
  7969   004140  5160               	movf	?_dbc_2nd& (0+255),w,b
  7970   004142  1161               	iorwf	(?_dbc_2nd+1)& (0+255),w,b
  7971   004144  B4D8               	btfsc	status,2,c
  7972   004146  EFA7  F020         	goto	u18501
  7973   00414A  EFA9  F020         	goto	u18500
  7974   00414E                     u18501:
  7975   00414E  EF9A  F01F         	goto	l15345
  7976   004152                     u18500:
  7977   004152                     
  7978                           ; BSR set to: 0
  7979   004152  0EFF               	movlw	255
  7980   004154  2573               	addwf	create_name@ni& (0+255),w,b
  7981   004156  6F6C               	movwf	??_create_name& (0+255),b
  7982   004158  0EFF               	movlw	255
  7983   00415A  2174               	addwfc	(create_name@ni+1)& (0+255),w,b
  7984   00415C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  7985   00415E  516C               	movf	??_create_name& (0+255),w,b
  7986   004160  5D77               	subwf	create_name@i& (0+255),w,b
  7987   004162  516D               	movf	(??_create_name+1)& (0+255),w,b
  7988   004164  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  7989   004166  A0D8               	btfss	status,0,c
  7990   004168  EFB8  F020         	goto	u18511
  7991   00416C  EFBA  F020         	goto	u18510
  7992   004170                     u18511:
  7993   004170  EFBC  F020         	goto	l15413
  7994   004174                     u18510:
  7995   004174  EF9A  F01F         	goto	l15345
  7996   004178                     l15413:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  8000   004178  5177               	movf	create_name@i& (0+255),w,b
  8001   00417A  2579               	addwf	create_name@sfn& (0+255),w,b
  8002   00417C  6ED9               	movwf	fsr2l,c
  8003   00417E  5178               	movf	(create_name@i+1)& (0+255),w,b
  8004   004180  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8005   004182  6EDA               	movwf	fsr2h,c
  8006   004184  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8007   00418A                     
  8008                           ; BSR set to: 0
  8009   00418A  4B77               	infsnz	create_name@i& (0+255),f,b
  8010   00418C  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8011   00418E                     
  8012                           ; BSR set to: 0
  8013                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  8014   00418E  5177               	movf	create_name@i& (0+255),w,b
  8015   004190  2579               	addwf	create_name@sfn& (0+255),w,b
  8016   004192  6ED9               	movwf	fsr2l,c
  8017   004194  5178               	movf	(create_name@i+1)& (0+255),w,b
  8018   004196  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8019   004198  6EDA               	movwf	fsr2h,c
  8020   00419A  0060  F1CB  FFDF   	movff	create_name@d,indf2
  8021   0041A0  4B77               	infsnz	create_name@i& (0+255),f,b
  8022   0041A2  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8023                           
  8024                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  8025   0041A4  EFCD  F01F         	goto	l15363
  8026   0041A8                     l15419:
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  8030   0041A8  0ECC               	movlw	low STR_1
  8031   0041AA  6F60               	movwf	chk_chr@str& (0+255),b
  8032   0041AC  0EFF               	movlw	high STR_1
  8033   0041AE  6F61               	movwf	(chk_chr@str+1)& (0+255),b
  8034   0041B0  C07D  F062         	movff	create_name@c,chk_chr@chr
  8035   0041B4  6B63               	clrf	(chk_chr@chr+1)& (0+255),b
  8036   0041B6  EC20  F043         	call	_chk_chr	;wreg free
  8037   0041BA  0100               	movlb	0	; () banked
  8038   0041BC  5160               	movf	?_chk_chr& (0+255),w,b
  8039   0041BE  1161               	iorwf	(?_chk_chr+1)& (0+255),w,b
  8040   0041C0  B4D8               	btfsc	status,2,c
  8041   0041C2  EFE5  F020         	goto	u18521
  8042   0041C6  EFE7  F020         	goto	u18520
  8043   0041CA                     u18521:
  8044   0041CA  EFE9  F020         	goto	l15425
  8045   0041CE                     u18520:
  8046   0041CE  EF9A  F01F         	goto	l15345
  8047   0041D2                     l15425:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  8051   0041D2  0E60               	movlw	96
  8052   0041D4  657D               	cpfsgt	create_name@c& (0+255),b
  8053   0041D6  EFEF  F020         	goto	u18531
  8054   0041DA  EFF1  F020         	goto	u18530
  8055   0041DE                     u18531:
  8056   0041DE  EFFB  F020         	goto	l15431
  8057   0041E2                     u18530:
  8058   0041E2                     
  8059                           ; BSR set to: 0
  8060   0041E2  0E7B               	movlw	123
  8061   0041E4  617D               	cpfslt	create_name@c& (0+255),b
  8062   0041E6  EFF7  F020         	goto	u18541
  8063   0041EA  EFF9  F020         	goto	u18540
  8064   0041EE                     u18541:
  8065   0041EE  EFFB  F020         	goto	l15431
  8066   0041F2                     u18540:
  8067   0041F2                     
  8068                           ; BSR set to: 0
  8069   0041F2  0E20               	movlw	32
  8070   0041F4  5F7D               	subwf	create_name@c& (0+255),f,b
  8071   0041F6                     l15431:
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  8075   0041F6  5177               	movf	create_name@i& (0+255),w,b
  8076   0041F8  2579               	addwf	create_name@sfn& (0+255),w,b
  8077   0041FA  6ED9               	movwf	fsr2l,c
  8078   0041FC  5178               	movf	(create_name@i+1)& (0+255),w,b
  8079   0041FE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8080   004200  6EDA               	movwf	fsr2h,c
  8081   004202  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8082   004208                     
  8083                           ; BSR set to: 0
  8084   004208  4B77               	infsnz	create_name@i& (0+255),f,b
  8085   00420A  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8086   00420C  EFCD  F01F         	goto	l15363
  8087   004210                     l15435:
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  8091   004210  517B               	movf	create_name@si& (0+255),w,b
  8092   004212  2575               	addwf	create_name@p& (0+255),w,b
  8093   004214  6F6C               	movwf	??_create_name& (0+255),b
  8094   004216  517C               	movf	(create_name@si+1)& (0+255),w,b
  8095   004218  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8096   00421A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8097   00421C  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8098   004222  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8099   004228  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  8100   00422E  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  8101   004234                     
  8102                           ; BSR set to: 0
  8103                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  8104   004234  5177               	movf	create_name@i& (0+255),w,b
  8105   004236  1178               	iorwf	(create_name@i+1)& (0+255),w,b
  8106   004238  A4D8               	btfss	status,2,c
  8107   00423A  EF21  F021         	goto	u18551
  8108   00423E  EF23  F021         	goto	u18550
  8109   004242                     u18551:
  8110   004242  EF25  F021         	goto	l15443
  8111   004246                     u18550:
  8112   004246  EF9A  F01F         	goto	l15345
  8113   00424A                     l15443:
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  8117   00424A  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8118   004250  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  8119   004256  0EE5               	movlw	229
  8120   004258  18DE               	xorwf	postinc2,w,c
  8121   00425A  A4D8               	btfss	status,2,c
  8122   00425C  EF32  F021         	goto	u18561
  8123   004260  EF34  F021         	goto	u18560
  8124   004264                     u18561:
  8125   004264  EF3C  F021         	goto	l15447
  8126   004268                     u18560:
  8127   004268                     
  8128                           ; BSR set to: 0
  8129   004268  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8130   00426E  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  8131   004274  0E05               	movlw	5
  8132   004276  6EDF               	movwf	indf2,c
  8133   004278                     l15447:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  8137   004278  0E20               	movlw	32
  8138   00427A  657D               	cpfsgt	create_name@c& (0+255),b
  8139   00427C  EF42  F021         	goto	u18571
  8140   004280  EF44  F021         	goto	u18570
  8141   004284                     u18571:
  8142   004284  EF4A  F021         	goto	l15451
  8143   004288                     u18570:
  8144   004288                     
  8145                           ; BSR set to: 0
  8146   004288  0E00               	movlw	0
  8147   00428A  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  8148   00428C  0E00               	movlw	0
  8149   00428E  6F70               	movwf	_create_name$2966& (0+255),b
  8150   004290  EF4E  F021         	goto	l15453
  8151   004294                     l15451:
  8152                           
  8153                           ; BSR set to: 0
  8154   004294  0E00               	movlw	0
  8155   004296  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  8156   004298  0E04               	movlw	4
  8157   00429A  6F70               	movwf	_create_name$2966& (0+255),b
  8158   00429C                     l15453:
  8159                           
  8160                           ; BSR set to: 0
  8161   00429C  EE20 F00B          	lfsr	2,11
  8162   0042A0  5179               	movf	create_name@sfn& (0+255),w,b
  8163   0042A2  26D9               	addwf	fsr2l,f,c
  8164   0042A4  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  8165   0042A6  22DA               	addwfc	fsr2h,f,c
  8166   0042A8  0060  F1C3  FFDF   	movff	_create_name$2966,indf2
  8167   0042AE  EFCA  F01F         	goto	l15359
  8168   0042B2                     l1126:
  8169                           
  8170                           ; BSR set to: 0
  8171   0042B2  0012               	return		;funcret
  8172   0042B4                     __end_of_create_name:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _dbc_2nd *****************
  8176 ;; Defined at:
  8177 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  c               1    wreg     unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  c               1    2[BANK0 ] unsigned char 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  2    0[BANK0 ] int 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:        3 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 5
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_create_name
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text21
  8206   009182                     __ptext21:
  8207                           	callstack 0
  8208   009182                     _dbc_2nd:
  8209                           	callstack 21
  8210   009182  0E00               	movlw	0
  8211   009184  0100               	movlb	0	; () banked
  8212   009186  6F61               	movwf	(?_dbc_2nd+1)& (0+255),b
  8213   009188  0E00               	movlw	0
  8214   00918A  6F60               	movwf	?_dbc_2nd& (0+255),b
  8215   00918C                     
  8216                           ; BSR set to: 0
  8217   00918C  0012               	return		;funcret
  8218   00918E                     __end_of_dbc_2nd:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function _dbc_1st *****************
  8222 ;; Defined at:
  8223 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  c               1    wreg     unsigned char 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  c               1    2[BANK0 ] unsigned char 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2    0[BANK0 ] int 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;Total ram usage:        3 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; Hardware stack levels required when called: 5
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		_create_name
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text22
  8252   00918E                     __ptext22:
  8253                           	callstack 0
  8254   00918E                     _dbc_1st:
  8255                           	callstack 21
  8256   00918E  0E00               	movlw	0
  8257   009190  0100               	movlb	0	; () banked
  8258   009192  6F61               	movwf	(?_dbc_1st+1)& (0+255),b
  8259   009194  0E00               	movlw	0
  8260   009196  6F60               	movwf	?_dbc_1st& (0+255),b
  8261   009198                     
  8262                           ; BSR set to: 0
  8263   009198  0012               	return		;funcret
  8264   00919A                     __end_of_dbc_1st:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _chk_chr *****************
  8268 ;; Defined at:
  8269 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  8272 ;;		 -> STR_2(15), 
  8273 ;;  chr             2    2[BANK0 ] int 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  2    0[BANK0 ] int 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;Total ram usage:        6 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; Hardware stack levels required when called: 5
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_create_name
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text23
  8300   008640                     __ptext23:
  8301                           	callstack 0
  8302   008640                     _chk_chr:
  8303                           	callstack 21
  8304   008640                     
  8305                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  8306   008640  EF24  F043         	goto	l14889
  8307   008644                     l14887:
  8308                           
  8309                           ; BSR set to: 0
  8310   008644  4B60               	infsnz	chk_chr@str& (0+255),f,b
  8311   008646  2B61               	incf	(chk_chr@str+1)& (0+255),f,b
  8312   008648                     l14889:
  8313   008648  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  8314   00864E  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  8315   008654                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8316   008654  6AF8               	clrf	tblptru,c
  8317   008656                     	endif
  8318   008656                     	if	0	;tblptru may be non-zero
  8319   008656                     	endif
  8320   008656  0008               	tblrd		*
  8321   008658  50F5               	movf	tablat,w,c
  8322   00865A  0900               	iorlw	0
  8323   00865C  B4D8               	btfsc	status,2,c
  8324   00865E  EF33  F043         	goto	u17611
  8325   008662  EF35  F043         	goto	u17610
  8326   008666                     u17611:
  8327   008666  EF4D  F043         	goto	l14893
  8328   00866A                     u17610:
  8329   00866A  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  8330   008670  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  8331   008676                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8332   008676  6AF8               	clrf	tblptru,c
  8333   008678                     	endif
  8334   008678                     	if	0	;tblptru may be non-zero
  8335   008678                     	endif
  8336   008678  0008               	tblrd		*
  8337   00867A  50F5               	movf	tablat,w,c
  8338   00867C  0100               	movlb	0	; () banked
  8339   00867E  6F64               	movwf	??_chk_chr& (0+255),b
  8340   008680  6B65               	clrf	(??_chk_chr+1)& (0+255),b
  8341   008682  5162               	movf	chk_chr@chr& (0+255),w,b
  8342   008684  1964               	xorwf	??_chk_chr& (0+255),w,b
  8343   008686  E107               	bnz	u17621
  8344   008688  5163               	movf	(chk_chr@chr+1)& (0+255),w,b
  8345   00868A  1965               	xorwf	(??_chk_chr+1)& (0+255),w,b
  8346   00868C  A4D8               	btfss	status,2,c
  8347   00868E  EF4B  F043         	goto	u17621
  8348   008692  EF4D  F043         	goto	u17620
  8349   008696                     u17621:
  8350   008696  EF22  F043         	goto	l14887
  8351   00869A                     u17620:
  8352   00869A                     l14893:
  8353                           
  8354                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  8355   00869A  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  8356   0086A0  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  8357   0086A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8358   0086A6  6AF8               	clrf	tblptru,c
  8359   0086A8                     	endif
  8360   0086A8                     	if	0	;tblptru may be non-zero
  8361   0086A8                     	endif
  8362   0086A8  0008               	tblrd		*
  8363   0086AA  50F5               	movf	tablat,w,c
  8364   0086AC  0100               	movlb	0	; () banked
  8365   0086AE  6F60               	movwf	?_chk_chr& (0+255),b
  8366   0086B0  6B61               	clrf	(?_chk_chr+1)& (0+255),b
  8367   0086B2                     
  8368                           ; BSR set to: 0
  8369   0086B2  0012               	return		;funcret
  8370   0086B4                     __end_of_chk_chr:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _dir_register *****************
  8374 ;; Defined at:
  8375 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  dp              2   57[BANK1 ] PTR struct .
  8378 ;;		 -> f_open@dj(40), 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  fs              2   59[BANK1 ] PTR struct .
  8381 ;;		 -> FatFs(563), NULL(0), 
  8382 ;;  res             1   61[BANK1 ] enum E68
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      enum E68
  8385 ;; Registers used:
  8386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8392 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;Total ram usage:        5 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 16
  8399 ;; This function calls:
  8400 ;;		_dir_alloc
  8401 ;;		_mem_cpy
  8402 ;;		_mem_set
  8403 ;;		_move_window
  8404 ;; This function is called by:
  8405 ;;		_f_open
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text24
  8410   0078AA                     __ptext24:
  8411                           	callstack 0
  8412   0078AA                     _dir_register:
  8413                           	callstack 12
  8414   0078AA                     
  8415                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  8416   0078AA  0060  F4E7  FFD9   	movff	dir_register@dp,fsr2l
  8417   0078B0  0060  F4EB  FFDA   	movff	dir_register@dp+1,fsr2h
  8418   0078B6  006F FF78  F13B    	movff	postinc2,dir_register@fs
  8419   0078BC  006F FF74  F13C    	movff	postdec2,dir_register@fs+1
  8420   0078C2                     
  8421                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  8422   0078C2  C139  F12D         	movff	dir_register@dp,dir_alloc@dp
  8423   0078C6  C13A  F12E         	movff	dir_register@dp+1,dir_alloc@dp+1
  8424   0078CA  0E00               	movlw	0
  8425   0078CC  0101               	movlb	1	; () banked
  8426   0078CE  6F30               	movwf	(dir_alloc@nent+1)& (0+255),b
  8427   0078D0  0E01               	movlw	1
  8428   0078D2  6F2F               	movwf	dir_alloc@nent& (0+255),b
  8429   0078D4  ECC3  F035         	call	_dir_alloc	;wreg free
  8430   0078D8  0101               	movlb	1	; () banked
  8431   0078DA  6F3D               	movwf	dir_register@res& (0+255),b
  8432   0078DC                     
  8433                           ; BSR set to: 1
  8434                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  8435   0078DC  513D               	movf	dir_register@res& (0+255),w,b
  8436   0078DE  A4D8               	btfss	status,2,c
  8437   0078E0  EF74  F03C         	goto	u19021
  8438   0078E4  EF76  F03C         	goto	u19020
  8439   0078E8                     u19021:
  8440   0078E8  EFD4  F03C         	goto	l15715
  8441   0078EC                     u19020:
  8442   0078EC                     
  8443                           ; BSR set to: 1
  8444                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  8445   0078EC  C13B  F0C8         	movff	dir_register@fs,move_window@fs
  8446   0078F0  C13C  F0C9         	movff	dir_register@fs+1,move_window@fs+1
  8447   0078F4  EE20 F016          	lfsr	2,22
  8448   0078F8  5139               	movf	dir_register@dp& (0+255),w,b
  8449   0078FA  26D9               	addwf	fsr2l,f,c
  8450   0078FC  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  8451   0078FE  22DA               	addwfc	fsr2h,f,c
  8452   007900  006F FF78  F0CA    	movff	postinc2,move_window@sector
  8453   007906  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  8454   00790C  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  8455   007912  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  8456   007918  EC9A  F03E         	call	_move_window	;wreg free
  8457   00791C  0101               	movlb	1	; () banked
  8458   00791E  6F3D               	movwf	dir_register@res& (0+255),b
  8459   007920                     
  8460                           ; BSR set to: 1
  8461                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  8462   007920  513D               	movf	dir_register@res& (0+255),w,b
  8463   007922  A4D8               	btfss	status,2,c
  8464   007924  EF96  F03C         	goto	u19031
  8465   007928  EF98  F03C         	goto	u19030
  8466   00792C                     u19031:
  8467   00792C  EFD4  F03C         	goto	l15715
  8468   007930                     u19030:
  8469   007930                     
  8470                           ; BSR set to: 1
  8471                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  8472   007930  EE20 F01A          	lfsr	2,26
  8473   007934  5139               	movf	dir_register@dp& (0+255),w,b
  8474   007936  26D9               	addwf	fsr2l,f,c
  8475   007938  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  8476   00793A  22DA               	addwfc	fsr2h,f,c
  8477   00793C  006F FF78  F060    	movff	postinc2,mem_set@dst
  8478   007942  006F FF74  F061    	movff	postdec2,mem_set@dst+1
  8479   007948  0E00               	movlw	0
  8480   00794A  0100               	movlb	0	; () banked
  8481   00794C  6F63               	movwf	(mem_set@val+1)& (0+255),b
  8482   00794E  0E00               	movlw	0
  8483   007950  6F62               	movwf	mem_set@val& (0+255),b
  8484   007952  0E00               	movlw	0
  8485   007954  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  8486   007956  0E20               	movlw	32
  8487   007958  6F64               	movwf	mem_set@cnt& (0+255),b
  8488   00795A  EC34  F047         	call	_mem_set	;wreg free
  8489   00795E                     
  8490                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  8491   00795E  0101               	movlb	1	; () banked
  8492   007960  EE20 F01A          	lfsr	2,26
  8493   007964  5139               	movf	dir_register@dp& (0+255),w,b
  8494   007966  26D9               	addwf	fsr2l,f,c
  8495   007968  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  8496   00796A  22DA               	addwfc	fsr2h,f,c
  8497   00796C  006F FF78  F060    	movff	postinc2,mem_cpy@dst
  8498   007972  006F FF74  F061    	movff	postdec2,mem_cpy@dst+1
  8499   007978  0E1C               	movlw	28
  8500   00797A  2539               	addwf	dir_register@dp& (0+255),w,b
  8501   00797C  0100               	movlb	0	; () banked
  8502   00797E  6F62               	movwf	mem_cpy@src& (0+255),b
  8503   007980  0E00               	movlw	0
  8504   007982  0101               	movlb	1	; () banked
  8505   007984  213A               	addwfc	(dir_register@dp+1)& (0+255),w,b
  8506   007986  0100               	movlb	0	; () banked
  8507   007988  6F63               	movwf	(mem_cpy@src+1)& (0+255),b
  8508   00798A  0E00               	movlw	0
  8509   00798C  6F65               	movwf	(mem_cpy@cnt+1)& (0+255),b
  8510   00798E  0E0B               	movlw	11
  8511   007990  6F64               	movwf	mem_cpy@cnt& (0+255),b
  8512   007992  ECA5  F042         	call	_mem_cpy	;wreg free
  8513   007996                     
  8514                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  8515   007996  0101               	movlb	1	; () banked
  8516   007998  EE20 F003          	lfsr	2,3
  8517   00799C  513B               	movf	dir_register@fs& (0+255),w,b
  8518   00799E  26D9               	addwf	fsr2l,f,c
  8519   0079A0  513C               	movf	(dir_register@fs+1)& (0+255),w,b
  8520   0079A2  22DA               	addwfc	fsr2h,f,c
  8521   0079A4  0E01               	movlw	1
  8522   0079A6  6EDF               	movwf	indf2,c
  8523   0079A8                     l15715:
  8524                           
  8525                           ; BSR set to: 1
  8526                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  8527   0079A8  513D               	movf	dir_register@res& (0+255),w,b
  8528   0079AA                     
  8529                           ; BSR set to: 1
  8530   0079AA  0012               	return		;funcret
  8531   0079AC                     __end_of_dir_register:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _mem_cpy *****************
  8535 ;; Defined at:
  8536 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  dst             2    0[BANK0 ] PTR void 
  8539 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  8540 ;;		 -> NULL(0), 
  8541 ;;  src             2    2[BANK0 ] PTR const void 
  8542 ;;		 -> pb$buf(64), send_status_ok@text(32), STR_9(12), f_printf@pb(70), 
  8543 ;;		 -> f_puts@pb(70), f_putc@pb(70), dj$fn(12), f_open@dj(40), 
  8544 ;;  cnt             2    4[BANK0 ] unsigned int 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  8547 ;;		 -> pb$buf(64), send_status_ok@text(32), STR_9(12), f_printf@pb(70), 
  8548 ;;		 -> f_puts@pb(70), f_putc@pb(70), dj$fn(12), f_open@dj(40), 
  8549 ;;  d               2    6[BANK0 ] PTR unsigned char 
  8550 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  8551 ;;		 -> NULL(0), 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8561 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;Total ram usage:       10 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 5
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_dir_register
  8572 ;;		_f_write
  8573 ;;		_f_read
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text25
  8578   00854A                     __ptext25:
  8579                           	callstack 0
  8580   00854A                     _mem_cpy:
  8581                           	callstack 23
  8582   00854A                     
  8583                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  8584   00854A  C060  F066         	movff	mem_cpy@dst,mem_cpy@d
  8585   00854E  C061  F067         	movff	mem_cpy@dst+1,mem_cpy@d+1
  8586                           
  8587                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  8588   008552  C062  F068         	movff	mem_cpy@src,mem_cpy@s
  8589   008556  C063  F069         	movff	mem_cpy@src+1,mem_cpy@s+1
  8590                           
  8591                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  8592   00855A  0100               	movlb	0	; () banked
  8593   00855C  5164               	movf	mem_cpy@cnt& (0+255),w,b
  8594   00855E  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  8595   008560  B4D8               	btfsc	status,2,c
  8596   008562  EFB5  F042         	goto	u18101
  8597   008566  EFB7  F042         	goto	u18100
  8598   00856A                     u18101:
  8599   00856A  EFE4  F042         	goto	l867
  8600   00856E                     u18100:
  8601   00856E                     l15197:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  8605   00856E  0060  F1A3  FFF6   	movff	mem_cpy@s,tblptrl
  8606   008574  0060  F1A7  FFF7   	movff	mem_cpy@s+1,tblptrh
  8607   00857A  0E00               	movlw	low (__mediumconst shr (0+16))
  8608   00857C  6EF8               	movwf	tblptru,c
  8609   00857E  0060  F19B  FFD9   	movff	mem_cpy@d,fsr2l
  8610   008584  0060  F19F  FFDA   	movff	mem_cpy@d+1,fsr2h
  8611   00858A  0E0F               	movlw	(high __ramtop+-1)
  8612   00858C  64F7               	cpfsgt	tblptrh,c
  8613   00858E  D003               	bra	u18117
  8614   008590  0008               	tblrd		*
  8615   008592  50F5               	movf	tablat,w,c
  8616   008594  D007               	bra	u18110
  8617   008596                     u18117:
  8618   008596  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8619   00859C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8620   0085A2  50EF               	movf	indf0,w,c
  8621   0085A4                     u18110:
  8622   0085A4  6EDF               	movwf	indf2,c
  8623   0085A6  0100               	movlb	0	; () banked
  8624   0085A8  4B68               	infsnz	mem_cpy@s& (0+255),f,b
  8625   0085AA  2B69               	incf	(mem_cpy@s+1)& (0+255),f,b
  8626   0085AC                     
  8627                           ; BSR set to: 0
  8628   0085AC  4B66               	infsnz	mem_cpy@d& (0+255),f,b
  8629   0085AE  2B67               	incf	(mem_cpy@d+1)& (0+255),f,b
  8630   0085B0                     
  8631                           ; BSR set to: 0
  8632                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  8633   0085B0  0764               	decf	mem_cpy@cnt& (0+255),f,b
  8634   0085B2  A0D8               	btfss	status,0,c
  8635   0085B4  0765               	decf	(mem_cpy@cnt+1)& (0+255),f,b
  8636   0085B6  5164               	movf	mem_cpy@cnt& (0+255),w,b
  8637   0085B8  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  8638   0085BA  A4D8               	btfss	status,2,c
  8639   0085BC  EFE2  F042         	goto	u18121
  8640   0085C0  EFE4  F042         	goto	u18120
  8641   0085C4                     u18121:
  8642   0085C4  EFB7  F042         	goto	l15197
  8643   0085C8                     u18120:
  8644   0085C8                     l867:
  8645                           
  8646                           ; BSR set to: 0
  8647   0085C8  0012               	return		;funcret
  8648   0085CA                     __end_of_mem_cpy:
  8649                           	callstack 0
  8650                           
  8651 ;; *************** function _dir_alloc *****************
  8652 ;; Defined at:
  8653 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  dp              2   45[BANK1 ] PTR struct .
  8656 ;;		 -> f_open@dj(40), 
  8657 ;;  nent            2   47[BANK1 ] unsigned int 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  n               2   54[BANK1 ] unsigned int 
  8660 ;;  fs              2   52[BANK1 ] PTR struct .
  8661 ;;		 -> FatFs(563), NULL(0), 
  8662 ;;  res             1   56[BANK1 ] enum E68
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      enum E68
  8665 ;; Registers used:
  8666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:       12 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 15
  8679 ;; This function calls:
  8680 ;;		_dir_next
  8681 ;;		_dir_sdi
  8682 ;;		_move_window
  8683 ;; This function is called by:
  8684 ;;		_dir_register
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text26
  8689   006B86                     __ptext26:
  8690                           	callstack 0
  8691   006B86                     _dir_alloc:
  8692                           	callstack 12
  8693   006B86                     
  8694                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  8695   006B86  0060  F4B7  FFD9   	movff	dir_alloc@dp,fsr2l
  8696   006B8C  0060  F4BB  FFDA   	movff	dir_alloc@dp+1,fsr2h
  8697   006B92  006F FF78  F134    	movff	postinc2,dir_alloc@fs
  8698   006B98  006F FF74  F135    	movff	postdec2,dir_alloc@fs+1
  8699   006B9E                     
  8700                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  8701   006B9E  C12D  F0ED         	movff	dir_alloc@dp,dir_sdi@dp
  8702   006BA2  C12E  F0EE         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  8703   006BA6  0E00               	movlw	0
  8704   006BA8  0100               	movlb	0	; () banked
  8705   006BAA  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  8706   006BAC  0E00               	movlw	0
  8707   006BAE  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  8708   006BB0  0E00               	movlw	0
  8709   006BB2  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  8710   006BB4  0E00               	movlw	0
  8711   006BB6  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  8712   006BB8  ECC8  F027         	call	_dir_sdi	;wreg free
  8713   006BBC  0101               	movlb	1	; () banked
  8714   006BBE  6F38               	movwf	dir_alloc@res& (0+255),b
  8715   006BC0                     
  8716                           ; BSR set to: 1
  8717                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  8718   006BC0  5138               	movf	dir_alloc@res& (0+255),w,b
  8719   006BC2  A4D8               	btfss	status,2,c
  8720   006BC4  EFE6  F035         	goto	u18171
  8721   006BC8  EFE8  F035         	goto	u18170
  8722   006BCC                     u18171:
  8723   006BCC  EF6E  F036         	goto	l15255
  8724   006BD0                     u18170:
  8725   006BD0                     
  8726                           ; BSR set to: 1
  8727                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  8728   006BD0  0E00               	movlw	0
  8729   006BD2  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  8730   006BD4  0E00               	movlw	0
  8731   006BD6  6F36               	movwf	dir_alloc@n& (0+255),b
  8732   006BD8                     l15235:
  8733                           
  8734                           ; BSR set to: 1
  8735                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  8736   006BD8  C134  F0C8         	movff	dir_alloc@fs,move_window@fs
  8737   006BDC  C135  F0C9         	movff	dir_alloc@fs+1,move_window@fs+1
  8738   006BE0  EE20 F016          	lfsr	2,22
  8739   006BE4  512D               	movf	dir_alloc@dp& (0+255),w,b
  8740   006BE6  26D9               	addwf	fsr2l,f,c
  8741   006BE8  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  8742   006BEA  22DA               	addwfc	fsr2h,f,c
  8743   006BEC  006F FF78  F0CA    	movff	postinc2,move_window@sector
  8744   006BF2  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  8745   006BF8  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  8746   006BFE  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  8747   006C04  EC9A  F03E         	call	_move_window	;wreg free
  8748   006C08  0101               	movlb	1	; () banked
  8749   006C0A  6F38               	movwf	dir_alloc@res& (0+255),b
  8750   006C0C                     
  8751                           ; BSR set to: 1
  8752                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  8753   006C0C  5138               	movf	dir_alloc@res& (0+255),w,b
  8754   006C0E  B4D8               	btfsc	status,2,c
  8755   006C10  EF0C  F036         	goto	u18181
  8756   006C14  EF0E  F036         	goto	u18180
  8757   006C18                     u18181:
  8758   006C18  EF10  F036         	goto	l15241
  8759   006C1C                     u18180:
  8760   006C1C  EF6E  F036         	goto	l15255
  8761   006C20                     l15241:
  8762                           
  8763                           ; BSR set to: 1
  8764                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  8765   006C20  EE20 F01A          	lfsr	2,26
  8766   006C24  512D               	movf	dir_alloc@dp& (0+255),w,b
  8767   006C26  26D9               	addwf	fsr2l,f,c
  8768   006C28  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  8769   006C2A  22DA               	addwfc	fsr2h,f,c
  8770   006C2C  006F FF78  F131    	movff	postinc2,??_dir_alloc
  8771   006C32  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  8772   006C38  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  8773   006C3E  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  8774   006C44  0EE5               	movlw	229
  8775   006C46  18DE               	xorwf	postinc2,w,c
  8776   006C48  B4D8               	btfsc	status,2,c
  8777   006C4A  EF29  F036         	goto	u18191
  8778   006C4E  EF2B  F036         	goto	u18190
  8779   006C52                     u18191:
  8780   006C52  EF45  F036         	goto	l15245
  8781   006C56                     u18190:
  8782   006C56                     
  8783                           ; BSR set to: 1
  8784   006C56  EE20 F01A          	lfsr	2,26
  8785   006C5A  512D               	movf	dir_alloc@dp& (0+255),w,b
  8786   006C5C  26D9               	addwf	fsr2l,f,c
  8787   006C5E  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  8788   006C60  22DA               	addwfc	fsr2h,f,c
  8789   006C62  006F FF78  F131    	movff	postinc2,??_dir_alloc
  8790   006C68  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  8791   006C6E  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  8792   006C74  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  8793   006C7A  50DF               	movf	indf2,w,c
  8794   006C7C  A4D8               	btfss	status,2,c
  8795   006C7E  EF43  F036         	goto	u18201
  8796   006C82  EF45  F036         	goto	u18200
  8797   006C86                     u18201:
  8798   006C86  EF55  F036         	goto	l15249
  8799   006C8A                     u18200:
  8800   006C8A                     l15245:
  8801                           
  8802                           ; BSR set to: 1
  8803                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  8804   006C8A  4B36               	infsnz	dir_alloc@n& (0+255),f,b
  8805   006C8C  2B37               	incf	(dir_alloc@n+1)& (0+255),f,b
  8806   006C8E  512F               	movf	dir_alloc@nent& (0+255),w,b
  8807   006C90  1936               	xorwf	dir_alloc@n& (0+255),w,b
  8808   006C92  E107               	bnz	u18211
  8809   006C94  5130               	movf	(dir_alloc@nent+1)& (0+255),w,b
  8810   006C96  1937               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  8811   006C98  A4D8               	btfss	status,2,c
  8812   006C9A  EF51  F036         	goto	u18211
  8813   006C9E  EF53  F036         	goto	u18210
  8814   006CA2                     u18211:
  8815   006CA2  EF59  F036         	goto	l15251
  8816   006CA6                     u18210:
  8817   006CA6  EF6E  F036         	goto	l15255
  8818   006CAA                     l15249:
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  8822   006CAA  0E00               	movlw	0
  8823   006CAC  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  8824   006CAE  0E00               	movlw	0
  8825   006CB0  6F36               	movwf	dir_alloc@n& (0+255),b
  8826   006CB2                     l15251:
  8827                           
  8828                           ; BSR set to: 1
  8829                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  8830   006CB2  C12D  F0FA         	movff	dir_alloc@dp,dir_next@dp
  8831   006CB6  C12E  F0FB         	movff	dir_alloc@dp+1,dir_next@dp+1
  8832   006CBA  0E00               	movlw	0
  8833   006CBC  0100               	movlb	0	; () banked
  8834   006CBE  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  8835   006CC0  0E01               	movlw	1
  8836   006CC2  6FFC               	movwf	dir_next@stretch& (0+255),b
  8837   006CC4  EC5A  F021         	call	_dir_next	;wreg free
  8838   006CC8  0101               	movlb	1	; () banked
  8839   006CCA  6F38               	movwf	dir_alloc@res& (0+255),b
  8840   006CCC                     
  8841                           ; BSR set to: 1
  8842                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  8843   006CCC  5138               	movf	dir_alloc@res& (0+255),w,b
  8844   006CCE  B4D8               	btfsc	status,2,c
  8845   006CD0  EF6C  F036         	goto	u18221
  8846   006CD4  EF6E  F036         	goto	u18220
  8847   006CD8                     u18221:
  8848   006CD8  EFEC  F035         	goto	l15235
  8849   006CDC                     u18220:
  8850   006CDC                     l15255:
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  8854   006CDC  0E04               	movlw	4
  8855   006CDE  1938               	xorwf	dir_alloc@res& (0+255),w,b
  8856   006CE0  A4D8               	btfss	status,2,c
  8857   006CE2  EF75  F036         	goto	u18231
  8858   006CE6  EF77  F036         	goto	u18230
  8859   006CEA                     u18231:
  8860   006CEA  EF79  F036         	goto	l1093
  8861   006CEE                     u18230:
  8862   006CEE                     
  8863                           ; BSR set to: 1
  8864   006CEE  0E07               	movlw	7
  8865   006CF0  6F38               	movwf	dir_alloc@res& (0+255),b
  8866   006CF2                     l1093:
  8867                           
  8868                           ; BSR set to: 1
  8869                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  8870   006CF2  5138               	movf	dir_alloc@res& (0+255),w,b
  8871   006CF4                     
  8872                           ; BSR set to: 1
  8873   006CF4  0012               	return		;funcret
  8874   006CF6                     __end_of_dir_alloc:
  8875                           	callstack 0
  8876                           
  8877 ;; *************** function _dir_sdi *****************
  8878 ;; Defined at:
  8879 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  dp              2  141[BANK0 ] PTR struct .
  8882 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8883 ;;  ofs             4  143[BANK0 ] unsigned long 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  clst            4    4[BANK1 ] unsigned long 
  8886 ;;  csz             4    0[BANK1 ] unsigned long 
  8887 ;;  fs              2    8[BANK1 ] PTR struct .
  8888 ;;		 -> FatFs(563), NULL(0), 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      enum E68
  8891 ;; Registers used:
  8892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8898 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Totals:         0      16      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;Total ram usage:       26 bytes
  8903 ;; Hardware stack levels used: 1
  8904 ;; Hardware stack levels required when called: 13
  8905 ;; This function calls:
  8906 ;;		_clst2sect
  8907 ;;		_get_fat
  8908 ;; This function is called by:
  8909 ;;		_dir_alloc
  8910 ;;		_dir_find
  8911 ;;		_follow_path
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text27
  8916   004F90                     __ptext27:
  8917                           	callstack 0
  8918   004F90                     _dir_sdi:
  8919                           	callstack 14
  8920   004F90                     
  8921                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  8922   004F90  0060  F3B7  FFD9   	movff	dir_sdi@dp,fsr2l
  8923   004F96  0060  F3BB  FFDA   	movff	dir_sdi@dp+1,fsr2h
  8924   004F9C  006F FF78  F108    	movff	postinc2,dir_sdi@fs
  8925   004FA2  006F FF74  F109    	movff	postdec2,dir_sdi@fs+1
  8926   004FA8  0100               	movlb	0	; () banked
  8927   004FAA  51F2               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  8928   004FAC  E107               	bnz	u17631
  8929   004FAE  0E20               	movlw	32
  8930   004FB0  5DF1               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  8931   004FB2  B0D8               	btfsc	status,0,c
  8932   004FB4  EFDE  F027         	goto	u17631
  8933   004FB8  EFE0  F027         	goto	u17630
  8934   004FBC                     u17631:
  8935   004FBC  EFF7  F027         	goto	l14929
  8936   004FC0                     u17630:
  8937   004FC0                     
  8938                           ; BSR set to: 0
  8939   004FC0  0E1F               	movlw	31
  8940   004FC2  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  8941   004FC4  6FF3               	movwf	??_dir_sdi& (0+255),b
  8942   004FC6  0E00               	movlw	0
  8943   004FC8  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  8944   004FCA  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  8945   004FCC  0E00               	movlw	0
  8946   004FCE  15F1               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  8947   004FD0  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  8948   004FD2  0E00               	movlw	0
  8949   004FD4  15F2               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  8950   004FD6  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  8951   004FD8  51F3               	movf	??_dir_sdi& (0+255),w,b
  8952   004FDA  11F4               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  8953   004FDC  11F5               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  8954   004FDE  11F6               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  8955   004FE0  B4D8               	btfsc	status,2,c
  8956   004FE2  EFF5  F027         	goto	u17641
  8957   004FE6  EFF7  F027         	goto	u17640
  8958   004FEA                     u17641:
  8959   004FEA  EFFA  F027         	goto	l14933
  8960   004FEE                     u17640:
  8961   004FEE                     l14929:
  8962                           
  8963                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  8964   004FEE  0E02               	movlw	2
  8965   004FF0  EFC8  F029         	goto	l1042
  8966   004FF4                     l14933:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  8970   004FF4  EE20 F00E          	lfsr	2,14
  8971   004FF8  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8972   004FFA  26D9               	addwf	fsr2l,f,c
  8973   004FFC  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8974   004FFE  22DA               	addwfc	fsr2h,f,c
  8975   005000  0060  F3BF  FFDE   	movff	dir_sdi@ofs,postinc2
  8976   005006  0060  F3C3  FFDE   	movff	dir_sdi@ofs+1,postinc2
  8977   00500C  0060  F3C7  FFDE   	movff	dir_sdi@ofs+2,postinc2
  8978   005012  0060  F3CB  FFDE   	movff	dir_sdi@ofs+3,postinc2
  8979                           
  8980                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  8981   005018  EE20 F006          	lfsr	2,6
  8982   00501C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8983   00501E  26D9               	addwf	fsr2l,f,c
  8984   005020  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8985   005022  22DA               	addwfc	fsr2h,f,c
  8986   005024  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  8987   00502A  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  8988   005030  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  8989   005036  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  8990   00503C                     
  8991                           ; BSR set to: 0
  8992                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  8993   00503C  0101               	movlb	1	; () banked
  8994   00503E  5104               	movf	dir_sdi@clst& (0+255),w,b
  8995   005040  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  8996   005042  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  8997   005044  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  8998   005046  A4D8               	btfss	status,2,c
  8999   005048  EF28  F028         	goto	u17651
  9000   00504C  EF2A  F028         	goto	u17650
  9001   005050                     u17651:
  9002   005050  EF4A  F028         	goto	l14943
  9003   005054                     u17650:
  9004   005054                     
  9005                           ; BSR set to: 1
  9006   005054  0060  F423  FFD9   	movff	dir_sdi@fs,fsr2l
  9007   00505A  0060  F427  FFDA   	movff	dir_sdi@fs+1,fsr2h
  9008   005060  0E02               	movlw	2
  9009   005062  64DF               	cpfsgt	indf2,c
  9010   005064  EF36  F028         	goto	u17661
  9011   005068  EF38  F028         	goto	u17660
  9012   00506C                     u17661:
  9013   00506C  EF4A  F028         	goto	l14943
  9014   005070                     u17660:
  9015   005070                     
  9016                           ; BSR set to: 1
  9017                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  9018   005070  EE20 F027          	lfsr	2,39
  9019   005074  5108               	movf	dir_sdi@fs& (0+255),w,b
  9020   005076  26D9               	addwf	fsr2l,f,c
  9021   005078  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9022   00507A  22DA               	addwfc	fsr2h,f,c
  9023   00507C  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  9024   005082  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  9025   005088  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  9026   00508E  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  9027   005094                     l14943:
  9028                           
  9029                           ; BSR set to: 1
  9030                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  9031   005094  5104               	movf	dir_sdi@clst& (0+255),w,b
  9032   005096  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9033   005098  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9034   00509A  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  9035   00509C  A4D8               	btfss	status,2,c
  9036   00509E  EF53  F028         	goto	u17671
  9037   0050A2  EF55  F028         	goto	u17670
  9038   0050A6                     u17671:
  9039   0050A6  EFA8  F028         	goto	l14953
  9040   0050AA                     u17670:
  9041   0050AA                     
  9042                           ; BSR set to: 1
  9043                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  9044   0050AA  EE20 F007          	lfsr	2,7
  9045   0050AE  5108               	movf	dir_sdi@fs& (0+255),w,b
  9046   0050B0  26D9               	addwf	fsr2l,f,c
  9047   0050B2  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9048   0050B4  22DA               	addwfc	fsr2h,f,c
  9049   0050B6  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9050   0050BC  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9051   0050C2  0100               	movlb	0	; () banked
  9052   0050C4  51F3               	movf	??_dir_sdi& (0+255),w,b
  9053   0050C6  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9054   0050C8  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9055   0050CA  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9056   0050CC  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9057   0050CE  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  9058   0050D0  C0EF  F0F9         	movff	dir_sdi@ofs,??_dir_sdi+6
  9059   0050D4  C0F0  F0FA         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  9060   0050D8  C0F1  F0FB         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  9061   0050DC  C0F2  F0FC         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  9062   0050E0  0E06               	movlw	6
  9063   0050E2  EF78  F028         	goto	u17680
  9064   0050E6                     u17685:
  9065   0050E6  90D8               	bcf	status,0,c
  9066   0050E8  33FC               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  9067   0050EA  33FB               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  9068   0050EC  33FA               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  9069   0050EE  33F9               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  9070   0050F0                     u17680:
  9071   0050F0  2EE8               	decfsz	wreg,f,c
  9072   0050F2  EF73  F028         	goto	u17685
  9073   0050F6  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  9074   0050F8  5DF9               	subwf	(??_dir_sdi+6)& (0+255),w,b
  9075   0050FA  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  9076   0050FC  59FA               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  9077   0050FE  51F7               	movf	(??_dir_sdi+4)& (0+255),w,b
  9078   005100  59FB               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  9079   005102  51F8               	movf	(??_dir_sdi+5)& (0+255),w,b
  9080   005104  59FC               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  9081   005106  A0D8               	btfss	status,0,c
  9082   005108  EF88  F028         	goto	u17691
  9083   00510C  EF8A  F028         	goto	u17690
  9084   005110                     u17691:
  9085   005110  EF8C  F028         	goto	l14951
  9086   005114                     u17690:
  9087   005114  EFF7  F027         	goto	l14929
  9088   005118                     l14951:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  9092   005118  0101               	movlb	1	; () banked
  9093   00511A  EE20 F027          	lfsr	2,39
  9094   00511E  5108               	movf	dir_sdi@fs& (0+255),w,b
  9095   005120  26D9               	addwf	fsr2l,f,c
  9096   005122  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9097   005124  22DA               	addwfc	fsr2h,f,c
  9098   005126  0100               	movlb	0	; () banked
  9099   005128  EE10 F016          	lfsr	1,22
  9100   00512C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9101   00512E  26E1               	addwf	fsr1l,f,c
  9102   005130  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9103   005132  22E2               	addwfc	fsr1h,f,c
  9104   005134  006F FF7B FFE6     	movff	postinc2,postinc1
  9105   00513A  006F FF7B FFE6     	movff	postinc2,postinc1
  9106   005140  006F FF7B FFE6     	movff	postinc2,postinc1
  9107   005146  006F FF7B FFE6     	movff	postinc2,postinc1
  9108                           
  9109                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  9110   00514C  EF61  F029         	goto	l14975
  9111   005150                     l14953:
  9112                           
  9113                           ; BSR set to: 1
  9114                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  9115   005150  EE20 F009          	lfsr	2,9
  9116   005154  5108               	movf	dir_sdi@fs& (0+255),w,b
  9117   005156  26D9               	addwf	fsr2l,f,c
  9118   005158  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9119   00515A  22DA               	addwfc	fsr2h,f,c
  9120   00515C  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9121   005162  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9122   005168  0100               	movlb	0	; () banked
  9123   00516A  51F3               	movf	??_dir_sdi& (0+255),w,b
  9124   00516C  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9125   00516E  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9126   005170  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9127   005172  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9128   005174  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  9129   005176  0E09               	movlw	9
  9130   005178                     u17705:
  9131   005178  90D8               	bcf	status,0,c
  9132   00517A  37F5               	rlcf	(??_dir_sdi+2)& (0+255),f,b
  9133   00517C  37F6               	rlcf	(??_dir_sdi+3)& (0+255),f,b
  9134   00517E  37F7               	rlcf	(??_dir_sdi+4)& (0+255),f,b
  9135   005180  37F8               	rlcf	(??_dir_sdi+5)& (0+255),f,b
  9136   005182  2EE8               	decfsz	wreg,f,c
  9137   005184  EFBC  F028         	goto	u17705
  9138   005188  C0F5  F100         	movff	??_dir_sdi+2,dir_sdi@csz
  9139   00518C  C0F6  F101         	movff	??_dir_sdi+3,dir_sdi@csz+1
  9140   005190  C0F7  F102         	movff	??_dir_sdi+4,dir_sdi@csz+2
  9141   005194  C0F8  F103         	movff	??_dir_sdi+5,dir_sdi@csz+3
  9142                           
  9143                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  9144   005198  EF29  F029         	goto	l1048
  9145   00519C                     l14955:
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
  9149   00519C  C0ED  F0D3         	movff	dir_sdi@dp,get_fat@obj
  9150   0051A0  C0EE  F0D4         	movff	dir_sdi@dp+1,get_fat@obj+1
  9151   0051A4  C104  F0D5         	movff	dir_sdi@clst,get_fat@clst
  9152   0051A8  C105  F0D6         	movff	dir_sdi@clst+1,get_fat@clst+1
  9153   0051AC  C106  F0D7         	movff	dir_sdi@clst+2,get_fat@clst+2
  9154   0051B0  C107  F0D8         	movff	dir_sdi@clst+3,get_fat@clst+3
  9155   0051B4  ECBC  F025         	call	_get_fat	;wreg free
  9156   0051B8  C0D3  F104         	movff	?_get_fat,dir_sdi@clst
  9157   0051BC  C0D4  F105         	movff	?_get_fat+1,dir_sdi@clst+1
  9158   0051C0  C0D5  F106         	movff	?_get_fat+2,dir_sdi@clst+2
  9159   0051C4  C0D6  F107         	movff	?_get_fat+3,dir_sdi@clst+3
  9160   0051C8                     
  9161                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  9162   0051C8  0101               	movlb	1	; () banked
  9163   0051CA  2904               	incf	dir_sdi@clst& (0+255),w,b
  9164   0051CC  E10A               	bnz	u17711
  9165   0051CE  2905               	incf	(dir_sdi@clst+1)& (0+255),w,b
  9166   0051D0  E108               	bnz	u17711
  9167   0051D2  2906               	incf	(dir_sdi@clst+2)& (0+255),w,b
  9168   0051D4  E106               	bnz	u17711
  9169   0051D6  2907               	incf	(dir_sdi@clst+3)& (0+255),w,b
  9170   0051D8  A4D8               	btfss	status,2,c
  9171   0051DA  EFF1  F028         	goto	u17711
  9172   0051DE  EFF3  F028         	goto	u17710
  9173   0051E2                     u17711:
  9174   0051E2  EFF6  F028         	goto	l14963
  9175   0051E6                     u17710:
  9176   0051E6                     
  9177                           ; BSR set to: 1
  9178   0051E6  0E01               	movlw	1
  9179   0051E8  EFC8  F029         	goto	l1042
  9180   0051EC                     l14963:
  9181                           
  9182                           ; BSR set to: 1
  9183                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
  9184   0051EC  5107               	movf	(dir_sdi@clst+3)& (0+255),w,b
  9185   0051EE  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9186   0051F0  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9187   0051F2  E109               	bnz	u17720
  9188   0051F4  0E02               	movlw	2
  9189   0051F6  5D04               	subwf	dir_sdi@clst& (0+255),w,b
  9190   0051F8  A0D8               	btfss	status,0,c
  9191   0051FA  EF01  F029         	goto	u17721
  9192   0051FE  EF03  F029         	goto	u17720
  9193   005202                     u17721:
  9194   005202  EFF7  F027         	goto	l14929
  9195   005206                     u17720:
  9196   005206                     
  9197                           ; BSR set to: 1
  9198   005206  EE20 F017          	lfsr	2,23
  9199   00520A  5108               	movf	dir_sdi@fs& (0+255),w,b
  9200   00520C  26D9               	addwf	fsr2l,f,c
  9201   00520E  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9202   005210  22DA               	addwfc	fsr2h,f,c
  9203   005212  50DE               	movf	postinc2,w,c
  9204   005214  5D04               	subwf	dir_sdi@clst& (0+255),w,b
  9205   005216  50DE               	movf	postinc2,w,c
  9206   005218  5905               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  9207   00521A  50DE               	movf	postinc2,w,c
  9208   00521C  5906               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  9209   00521E  50DE               	movf	postinc2,w,c
  9210   005220  5907               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  9211   005222  A0D8               	btfss	status,0,c
  9212   005224  EF16  F029         	goto	u17731
  9213   005228  EF18  F029         	goto	u17730
  9214   00522C                     u17731:
  9215   00522C  EF1A  F029         	goto	l14971
  9216   005230                     u17730:
  9217   005230  EFF7  F027         	goto	l14929
  9218   005234                     l14971:
  9219                           
  9220                           ; BSR set to: 1
  9221                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
  9222   005234  5100               	movf	dir_sdi@csz& (0+255),w,b
  9223   005236  0100               	movlb	0	; () banked
  9224   005238  5FEF               	subwf	dir_sdi@ofs& (0+255),f,b
  9225   00523A  0101               	movlb	1	; () banked
  9226   00523C  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
  9227   00523E  0100               	movlb	0	; () banked
  9228   005240  5BF0               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
  9229   005242  0101               	movlb	1	; () banked
  9230   005244  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
  9231   005246  0100               	movlb	0	; () banked
  9232   005248  5BF1               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
  9233   00524A  0101               	movlb	1	; () banked
  9234   00524C  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
  9235   00524E  0100               	movlb	0	; () banked
  9236   005250  5BF2               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
  9237   005252                     l1048:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  9241   005252  0101               	movlb	1	; () banked
  9242   005254  5100               	movf	dir_sdi@csz& (0+255),w,b
  9243   005256  0100               	movlb	0	; () banked
  9244   005258  5DEF               	subwf	dir_sdi@ofs& (0+255),w,b
  9245   00525A  0101               	movlb	1	; () banked
  9246   00525C  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
  9247   00525E  0100               	movlb	0	; () banked
  9248   005260  59F0               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
  9249   005262  0101               	movlb	1	; () banked
  9250   005264  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
  9251   005266  0100               	movlb	0	; () banked
  9252   005268  59F1               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
  9253   00526A  0101               	movlb	1	; () banked
  9254   00526C  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
  9255   00526E  0100               	movlb	0	; () banked
  9256   005270  59F2               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
  9257   005272  B0D8               	btfsc	status,0,c
  9258   005274  EF3E  F029         	goto	u17741
  9259   005278  EF40  F029         	goto	u17740
  9260   00527C                     u17741:
  9261   00527C  EFCE  F028         	goto	l14955
  9262   005280                     u17740:
  9263   005280                     
  9264                           ; BSR set to: 0
  9265                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
  9266   005280  C108  F06C         	movff	dir_sdi@fs,clst2sect@fs
  9267   005284  C109  F06D         	movff	dir_sdi@fs+1,clst2sect@fs+1
  9268   005288  C104  F06E         	movff	dir_sdi@clst,clst2sect@clst
  9269   00528C  C105  F06F         	movff	dir_sdi@clst+1,clst2sect@clst+1
  9270   005290  C106  F070         	movff	dir_sdi@clst+2,clst2sect@clst+2
  9271   005294  C107  F071         	movff	dir_sdi@clst+3,clst2sect@clst+3
  9272   005298  EC2C  F03E         	call	_clst2sect	;wreg free
  9273   00529C  0100               	movlb	0	; () banked
  9274   00529E  EE20 F016          	lfsr	2,22
  9275   0052A2  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9276   0052A4  26D9               	addwf	fsr2l,f,c
  9277   0052A6  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9278   0052A8  22DA               	addwfc	fsr2h,f,c
  9279   0052AA  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
  9280   0052B0  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
  9281   0052B6  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
  9282   0052BC  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
  9283   0052C2                     l14975:
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
  9287   0052C2  EE20 F012          	lfsr	2,18
  9288   0052C6  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9289   0052C8  26D9               	addwf	fsr2l,f,c
  9290   0052CA  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9291   0052CC  22DA               	addwfc	fsr2h,f,c
  9292   0052CE  0060  F413  FFDE   	movff	dir_sdi@clst,postinc2
  9293   0052D4  0060  F417  FFDE   	movff	dir_sdi@clst+1,postinc2
  9294   0052DA  0060  F41B  FFDE   	movff	dir_sdi@clst+2,postinc2
  9295   0052E0  0060  F41F  FFDE   	movff	dir_sdi@clst+3,postinc2
  9296   0052E6                     
  9297                           ; BSR set to: 0
  9298                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
  9299   0052E6  EE20 F016          	lfsr	2,22
  9300   0052EA  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9301   0052EC  26D9               	addwf	fsr2l,f,c
  9302   0052EE  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9303   0052F0  22DA               	addwfc	fsr2h,f,c
  9304   0052F2  50DE               	movf	postinc2,w,c
  9305   0052F4  10DE               	iorwf	postinc2,w,c
  9306   0052F6  10DE               	iorwf	postinc2,w,c
  9307   0052F8  10DE               	iorwf	postinc2,w,c
  9308   0052FA  A4D8               	btfss	status,2,c
  9309   0052FC  EF82  F029         	goto	u17751
  9310   005300  EF84  F029         	goto	u17750
  9311   005304                     u17751:
  9312   005304  EF86  F029         	goto	l14983
  9313   005308                     u17750:
  9314   005308  EFF7  F027         	goto	l14929
  9315   00530C                     l14983:
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
  9319   00530C  C0EF  F0F3         	movff	dir_sdi@ofs,??_dir_sdi
  9320   005310  C0F0  F0F4         	movff	dir_sdi@ofs+1,??_dir_sdi+1
  9321   005314  C0F1  F0F5         	movff	dir_sdi@ofs+2,??_dir_sdi+2
  9322   005318  C0F2  F0F6         	movff	dir_sdi@ofs+3,??_dir_sdi+3
  9323   00531C  0E0A               	movlw	10
  9324   00531E  EF96  F029         	goto	u17760
  9325   005322                     u17765:
  9326   005322  90D8               	bcf	status,0,c
  9327   005324  33F6               	rrcf	(??_dir_sdi+3)& (0+255),f,b
  9328   005326  33F5               	rrcf	(??_dir_sdi+2)& (0+255),f,b
  9329   005328  33F4               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  9330   00532A  33F3               	rrcf	??_dir_sdi& (0+255),f,b
  9331   00532C                     u17760:
  9332   00532C  2EE8               	decfsz	wreg,f,c
  9333   00532E  EF91  F029         	goto	u17765
  9334   005332  EE20 F016          	lfsr	2,22
  9335   005336  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9336   005338  26D9               	addwf	fsr2l,f,c
  9337   00533A  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9338   00533C  22DA               	addwfc	fsr2h,f,c
  9339   00533E  51F3               	movf	??_dir_sdi& (0+255),w,b
  9340   005340  26DE               	addwf	postinc2,f,c
  9341   005342  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9342   005344  22DE               	addwfc	postinc2,f,c
  9343   005346  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  9344   005348  22DE               	addwfc	postinc2,f,c
  9345   00534A  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  9346   00534C  22DE               	addwfc	postinc2,f,c
  9347                           
  9348                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
  9349   00534E  0EFF               	movlw	255
  9350   005350  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  9351   005352  6FF3               	movwf	??_dir_sdi& (0+255),b
  9352   005354  0E01               	movlw	1
  9353   005356  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  9354   005358  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  9355   00535A  51F3               	movf	??_dir_sdi& (0+255),w,b
  9356   00535C  0101               	movlb	1	; () banked
  9357   00535E  2508               	addwf	dir_sdi@fs& (0+255),w,b
  9358   005360  0100               	movlb	0	; () banked
  9359   005362  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9360   005364  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9361   005366  0101               	movlb	1	; () banked
  9362   005368  2109               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
  9363   00536A  0100               	movlb	0	; () banked
  9364   00536C  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9365   00536E  0E33               	movlw	51
  9366   005370  27F5               	addwf	(??_dir_sdi+2)& (0+255),f,b
  9367   005372  0E00               	movlw	0
  9368   005374  23F6               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  9369   005376  EE20 F01A          	lfsr	2,26
  9370   00537A  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9371   00537C  26D9               	addwf	fsr2l,f,c
  9372   00537E  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9373   005380  22DA               	addwfc	fsr2h,f,c
  9374   005382  0060  F3D7  FFDE   	movff	??_dir_sdi+2,postinc2
  9375   005388  0060  F3DB  FFDD   	movff	??_dir_sdi+3,postdec2
  9376   00538E                     
  9377                           ; BSR set to: 0
  9378                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
  9379   00538E  0E00               	movlw	0
  9380   005390                     l1042:
  9381   005390  0012               	return		;funcret
  9382   005392                     __end_of_dir_sdi:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _dir_next *****************
  9386 ;; Defined at:
  9387 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  dp              2  154[BANK0 ] PTR struct .
  9390 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  9391 ;;  stretch         2  156[BANK0 ] int 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  clst            4   41[BANK1 ] unsigned long 
  9394 ;;  ofs             4   35[BANK1 ] unsigned long 
  9395 ;;  fs              2   39[BANK1 ] PTR struct .
  9396 ;;		 -> FatFs(563), NULL(0), 
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      enum E68
  9399 ;; Registers used:
  9400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9407 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Totals:         0       4      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;Total ram usage:       26 bytes
  9411 ;; Hardware stack levels used: 1
  9412 ;; Hardware stack levels required when called: 14
  9413 ;; This function calls:
  9414 ;;		_clst2sect
  9415 ;;		_create_chain
  9416 ;;		_dir_clear
  9417 ;;		_get_fat
  9418 ;; This function is called by:
  9419 ;;		_dir_alloc
  9420 ;;		_dir_find
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text28
  9425   0042B4                     __ptext28:
  9426                           	callstack 0
  9427   0042B4                     _dir_next:
  9428                           	callstack 12
  9429   0042B4                     
  9430                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
  9431   0042B4  0060  F3EB  FFD9   	movff	dir_next@dp,fsr2l
  9432   0042BA  0060  F3EF  FFDA   	movff	dir_next@dp+1,fsr2h
  9433   0042C0  006F FF78  F127    	movff	postinc2,dir_next@fs
  9434   0042C6  006F FF74  F128    	movff	postdec2,dir_next@fs+1
  9435   0042CC                     
  9436                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
  9437   0042CC  0100               	movlb	0	; () banked
  9438   0042CE  EE20 F00E          	lfsr	2,14
  9439   0042D2  51FA               	movf	dir_next@dp& (0+255),w,b
  9440   0042D4  26D9               	addwf	fsr2l,f,c
  9441   0042D6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9442   0042D8  22DA               	addwfc	fsr2h,f,c
  9443   0042DA  006F FF78  F117    	movff	postinc2,??_dir_next
  9444   0042E0  006F FF78  F118    	movff	postinc2,??_dir_next+1
  9445   0042E6  006F FF78  F119    	movff	postinc2,??_dir_next+2
  9446   0042EC  006F FF78  F11A    	movff	postinc2,??_dir_next+3
  9447   0042F2  0E20               	movlw	32
  9448   0042F4  0101               	movlb	1	; () banked
  9449   0042F6  2517               	addwf	??_dir_next& (0+255),w,b
  9450   0042F8  6F23               	movwf	dir_next@ofs& (0+255),b
  9451   0042FA  0E00               	movlw	0
  9452   0042FC  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
  9453   0042FE  6F24               	movwf	(dir_next@ofs+1)& (0+255),b
  9454   004300  0E00               	movlw	0
  9455   004302  2119               	addwfc	(??_dir_next+2)& (0+255),w,b
  9456   004304  6F25               	movwf	(dir_next@ofs+2)& (0+255),b
  9457   004306  0E00               	movlw	0
  9458   004308  211A               	addwfc	(??_dir_next+3)& (0+255),w,b
  9459   00430A  6F26               	movwf	(dir_next@ofs+3)& (0+255),b
  9460   00430C                     
  9461                           ; BSR set to: 1
  9462                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
  9463   00430C  0100               	movlb	0	; () banked
  9464   00430E  EE20 F016          	lfsr	2,22
  9465   004312  51FA               	movf	dir_next@dp& (0+255),w,b
  9466   004314  26D9               	addwf	fsr2l,f,c
  9467   004316  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9468   004318  22DA               	addwfc	fsr2h,f,c
  9469   00431A  50DE               	movf	postinc2,w,c
  9470   00431C  10DE               	iorwf	postinc2,w,c
  9471   00431E  10DE               	iorwf	postinc2,w,c
  9472   004320  10DE               	iorwf	postinc2,w,c
  9473   004322  B4D8               	btfsc	status,2,c
  9474   004324  EF96  F021         	goto	u17771
  9475   004328  EF98  F021         	goto	u17770
  9476   00432C                     u17771:
  9477   00432C  EFA4  F021         	goto	l15005
  9478   004330                     u17770:
  9479   004330                     
  9480                           ; BSR set to: 0
  9481   004330  0101               	movlb	1	; () banked
  9482   004332  5126               	movf	(dir_next@ofs+3)& (0+255),w,b
  9483   004334  E109               	bnz	u17780
  9484   004336  0E20               	movlw	32
  9485   004338  5D25               	subwf	(dir_next@ofs+2)& (0+255),w,b
  9486   00433A  A0D8               	btfss	status,0,c
  9487   00433C  EFA2  F021         	goto	u17781
  9488   004340  EFA4  F021         	goto	u17780
  9489   004344                     u17781:
  9490   004344  EFA7  F021         	goto	l15009
  9491   004348                     u17780:
  9492   004348                     l15005:
  9493   004348  0E04               	movlw	4
  9494   00434A  EF92  F023         	goto	l1067
  9495   00434E                     l15009:
  9496                           
  9497                           ; BSR set to: 1
  9498                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
  9499   00434E  0EFF               	movlw	255
  9500   004350  1523               	andwf	dir_next@ofs& (0+255),w,b
  9501   004352  6F17               	movwf	??_dir_next& (0+255),b
  9502   004354  0E01               	movlw	1
  9503   004356  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
  9504   004358  6F18               	movwf	(??_dir_next+1)& (0+255),b
  9505   00435A  0E00               	movlw	0
  9506   00435C  1525               	andwf	(dir_next@ofs+2)& (0+255),w,b
  9507   00435E  6F19               	movwf	(??_dir_next+2)& (0+255),b
  9508   004360  0E00               	movlw	0
  9509   004362  1526               	andwf	(dir_next@ofs+3)& (0+255),w,b
  9510   004364  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  9511   004366  5117               	movf	??_dir_next& (0+255),w,b
  9512   004368  1118               	iorwf	(??_dir_next+1)& (0+255),w,b
  9513   00436A  1119               	iorwf	(??_dir_next+2)& (0+255),w,b
  9514   00436C  111A               	iorwf	(??_dir_next+3)& (0+255),w,b
  9515   00436E  A4D8               	btfss	status,2,c
  9516   004370  EFBC  F021         	goto	u17791
  9517   004374  EFBE  F021         	goto	u17790
  9518   004378                     u17791:
  9519   004378  EF60  F023         	goto	l15077
  9520   00437C                     u17790:
  9521   00437C                     
  9522                           ; BSR set to: 1
  9523                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
  9524   00437C  0100               	movlb	0	; () banked
  9525   00437E  EE20 F016          	lfsr	2,22
  9526   004382  51FA               	movf	dir_next@dp& (0+255),w,b
  9527   004384  26D9               	addwf	fsr2l,f,c
  9528   004386  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9529   004388  22DA               	addwfc	fsr2h,f,c
  9530   00438A  2ADE               	incf	postinc2,f,c
  9531   00438C  0E00               	movlw	0
  9532   00438E  22DE               	addwfc	postinc2,f,c
  9533   004390  22DE               	addwfc	postinc2,f,c
  9534   004392  22DE               	addwfc	postinc2,f,c
  9535                           
  9536                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
  9537   004394  EE20 F012          	lfsr	2,18
  9538   004398  51FA               	movf	dir_next@dp& (0+255),w,b
  9539   00439A  26D9               	addwf	fsr2l,f,c
  9540   00439C  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9541   00439E  22DA               	addwfc	fsr2h,f,c
  9542   0043A0  50DE               	movf	postinc2,w,c
  9543   0043A2  10DE               	iorwf	postinc2,w,c
  9544   0043A4  10DE               	iorwf	postinc2,w,c
  9545   0043A6  10DE               	iorwf	postinc2,w,c
  9546   0043A8  A4D8               	btfss	status,2,c
  9547   0043AA  EFD9  F021         	goto	u17801
  9548   0043AE  EFDB  F021         	goto	u17800
  9549   0043B2                     u17801:
  9550   0043B2  EF1D  F022         	goto	l15021
  9551   0043B6                     u17800:
  9552   0043B6                     
  9553                           ; BSR set to: 0
  9554                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
  9555   0043B6  0101               	movlb	1	; () banked
  9556   0043B8  EE20 F007          	lfsr	2,7
  9557   0043BC  5127               	movf	dir_next@fs& (0+255),w,b
  9558   0043BE  26D9               	addwf	fsr2l,f,c
  9559   0043C0  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  9560   0043C2  22DA               	addwfc	fsr2h,f,c
  9561   0043C4  006F FF78  F117    	movff	postinc2,??_dir_next
  9562   0043CA  006F FF74  F118    	movff	postdec2,??_dir_next+1
  9563   0043D0  5117               	movf	??_dir_next& (0+255),w,b
  9564   0043D2  6F19               	movwf	(??_dir_next+2)& (0+255),b
  9565   0043D4  5118               	movf	(??_dir_next+1)& (0+255),w,b
  9566   0043D6  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  9567   0043D8  6B1B               	clrf	(??_dir_next+4)& (0+255),b
  9568   0043DA  6B1C               	clrf	(??_dir_next+5)& (0+255),b
  9569   0043DC  C123  F11D         	movff	dir_next@ofs,??_dir_next+6
  9570   0043E0  C124  F11E         	movff	dir_next@ofs+1,??_dir_next+7
  9571   0043E4  C125  F11F         	movff	dir_next@ofs+2,??_dir_next+8
  9572   0043E8  C126  F120         	movff	dir_next@ofs+3,??_dir_next+9
  9573   0043EC  0E06               	movlw	6
  9574   0043EE  EFFE  F021         	goto	u17810
  9575   0043F2                     u17815:
  9576   0043F2  90D8               	bcf	status,0,c
  9577   0043F4  3320               	rrcf	(??_dir_next+9)& (0+255),f,b
  9578   0043F6  331F               	rrcf	(??_dir_next+8)& (0+255),f,b
  9579   0043F8  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
  9580   0043FA  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
  9581   0043FC                     u17810:
  9582   0043FC  2EE8               	decfsz	wreg,f,c
  9583   0043FE  EFF9  F021         	goto	u17815
  9584   004402  5119               	movf	(??_dir_next+2)& (0+255),w,b
  9585   004404  5D1D               	subwf	(??_dir_next+6)& (0+255),w,b
  9586   004406  511A               	movf	(??_dir_next+3)& (0+255),w,b
  9587   004408  591E               	subwfb	(??_dir_next+7)& (0+255),w,b
  9588   00440A  511B               	movf	(??_dir_next+4)& (0+255),w,b
  9589   00440C  591F               	subwfb	(??_dir_next+8)& (0+255),w,b
  9590   00440E  511C               	movf	(??_dir_next+5)& (0+255),w,b
  9591   004410  5920               	subwfb	(??_dir_next+9)& (0+255),w,b
  9592   004412  A0D8               	btfss	status,0,c
  9593   004414  EF0E  F022         	goto	u17821
  9594   004418  EF10  F022         	goto	u17820
  9595   00441C                     u17821:
  9596   00441C  EF60  F023         	goto	l15077
  9597   004420                     u17820:
  9598   004420                     
  9599                           ; BSR set to: 1
  9600                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
  9601   004420  0100               	movlb	0	; () banked
  9602   004422  EE20 F016          	lfsr	2,22
  9603   004426  51FA               	movf	dir_next@dp& (0+255),w,b
  9604   004428  26D9               	addwf	fsr2l,f,c
  9605   00442A  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9606   00442C  22DA               	addwfc	fsr2h,f,c
  9607   00442E  6ADE               	clrf	postinc2,c
  9608   004430  6ADE               	clrf	postinc2,c
  9609   004432  6ADE               	clrf	postinc2,c
  9610   004434  6ADD               	clrf	postdec2,c
  9611   004436  EFA4  F021         	goto	l15005
  9612   00443A                     l15021:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
  9616   00443A  0101               	movlb	1	; () banked
  9617   00443C  EE20 F009          	lfsr	2,9
  9618   004440  5127               	movf	dir_next@fs& (0+255),w,b
  9619   004442  26D9               	addwf	fsr2l,f,c
  9620   004444  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  9621   004446  22DA               	addwfc	fsr2h,f,c
  9622   004448  006F FF78  F117    	movff	postinc2,??_dir_next
  9623   00444E  006F FF74  F118    	movff	postdec2,??_dir_next+1
  9624   004454  0EFF               	movlw	255
  9625   004456  2517               	addwf	??_dir_next& (0+255),w,b
  9626   004458  6F19               	movwf	(??_dir_next+2)& (0+255),b
  9627   00445A  0EFF               	movlw	255
  9628   00445C  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
  9629   00445E  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  9630   004460  C123  F11B         	movff	dir_next@ofs,??_dir_next+4
  9631   004464  C124  F11C         	movff	dir_next@ofs+1,??_dir_next+5
  9632   004468  C125  F11D         	movff	dir_next@ofs+2,??_dir_next+6
  9633   00446C  C126  F11E         	movff	dir_next@ofs+3,??_dir_next+7
  9634   004470  0E0A               	movlw	10
  9635   004472  EF40  F022         	goto	u17830
  9636   004476                     u17835:
  9637   004476  90D8               	bcf	status,0,c
  9638   004478  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
  9639   00447A  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
  9640   00447C  331C               	rrcf	(??_dir_next+5)& (0+255),f,b
  9641   00447E  331B               	rrcf	(??_dir_next+4)& (0+255),f,b
  9642   004480                     u17830:
  9643   004480  2EE8               	decfsz	wreg,f,c
  9644   004482  EF3B  F022         	goto	u17835
  9645   004486  5119               	movf	(??_dir_next+2)& (0+255),w,b
  9646   004488  151B               	andwf	(??_dir_next+4)& (0+255),w,b
  9647   00448A  6F1F               	movwf	(??_dir_next+8)& (0+255),b
  9648   00448C  511A               	movf	(??_dir_next+3)& (0+255),w,b
  9649   00448E  151C               	andwf	(??_dir_next+5)& (0+255),w,b
  9650   004490  6F20               	movwf	(??_dir_next+9)& (0+255),b
  9651   004492  0E00               	movlw	0
  9652   004494  151D               	andwf	(??_dir_next+6)& (0+255),w,b
  9653   004496  6F21               	movwf	(??_dir_next+10)& (0+255),b
  9654   004498  0E00               	movlw	0
  9655   00449A  151E               	andwf	(??_dir_next+7)& (0+255),w,b
  9656   00449C  6F22               	movwf	(??_dir_next+11)& (0+255),b
  9657   00449E  511F               	movf	(??_dir_next+8)& (0+255),w,b
  9658   0044A0  1120               	iorwf	(??_dir_next+9)& (0+255),w,b
  9659   0044A2  1121               	iorwf	(??_dir_next+10)& (0+255),w,b
  9660   0044A4  1122               	iorwf	(??_dir_next+11)& (0+255),w,b
  9661   0044A6  A4D8               	btfss	status,2,c
  9662   0044A8  EF58  F022         	goto	u17841
  9663   0044AC  EF5A  F022         	goto	u17840
  9664   0044B0                     u17841:
  9665   0044B0  EF60  F023         	goto	l15077
  9666   0044B4                     u17840:
  9667   0044B4                     
  9668                           ; BSR set to: 1
  9669                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
  9670   0044B4  C0FA  F0D3         	movff	dir_next@dp,get_fat@obj
  9671   0044B8  C0FB  F0D4         	movff	dir_next@dp+1,get_fat@obj+1
  9672   0044BC  0100               	movlb	0	; () banked
  9673   0044BE  EE20 F012          	lfsr	2,18
  9674   0044C2  51FA               	movf	dir_next@dp& (0+255),w,b
  9675   0044C4  26D9               	addwf	fsr2l,f,c
  9676   0044C6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9677   0044C8  22DA               	addwfc	fsr2h,f,c
  9678   0044CA  006F FF78  F0D5    	movff	postinc2,get_fat@clst
  9679   0044D0  006F FF78  F0D6    	movff	postinc2,get_fat@clst+1
  9680   0044D6  006F FF78  F0D7    	movff	postinc2,get_fat@clst+2
  9681   0044DC  006F FF78  F0D8    	movff	postinc2,get_fat@clst+3
  9682   0044E2  ECBC  F025         	call	_get_fat	;wreg free
  9683   0044E6  C0D3  F129         	movff	?_get_fat,dir_next@clst
  9684   0044EA  C0D4  F12A         	movff	?_get_fat+1,dir_next@clst+1
  9685   0044EE  C0D5  F12B         	movff	?_get_fat+2,dir_next@clst+2
  9686   0044F2  C0D6  F12C         	movff	?_get_fat+3,dir_next@clst+3
  9687   0044F6                     
  9688                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
  9689   0044F6  0101               	movlb	1	; () banked
  9690   0044F8  512C               	movf	(dir_next@clst+3)& (0+255),w,b
  9691   0044FA  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  9692   0044FC  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  9693   0044FE  E107               	bnz	u17851
  9694   004500  0E02               	movlw	2
  9695   004502  5D29               	subwf	dir_next@clst& (0+255),w,b
  9696   004504  B0D8               	btfsc	status,0,c
  9697   004506  EF87  F022         	goto	u17851
  9698   00450A  EF89  F022         	goto	u17850
  9699   00450E                     u17851:
  9700   00450E  EF8C  F022         	goto	l15031
  9701   004512                     u17850:
  9702   004512                     l15027:
  9703                           
  9704                           ; BSR set to: 1
  9705   004512  0E02               	movlw	2
  9706   004514  EF92  F023         	goto	l1067
  9707   004518                     l15031:
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  9711   004518  2929               	incf	dir_next@clst& (0+255),w,b
  9712   00451A  E10A               	bnz	u17861
  9713   00451C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
  9714   00451E  E108               	bnz	u17861
  9715   004520  292B               	incf	(dir_next@clst+2)& (0+255),w,b
  9716   004522  E106               	bnz	u17861
  9717   004524  292C               	incf	(dir_next@clst+3)& (0+255),w,b
  9718   004526  A4D8               	btfss	status,2,c
  9719   004528  EF98  F022         	goto	u17861
  9720   00452C  EF9A  F022         	goto	u17860
  9721   004530                     u17861:
  9722   004530  EF9D  F022         	goto	l15037
  9723   004534                     u17860:
  9724   004534                     l15033:
  9725   004534  0E01               	movlw	1
  9726   004536  EF92  F023         	goto	l1067
  9727   00453A                     l15037:
  9728                           
  9729                           ; BSR set to: 1
  9730                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
  9731   00453A  EE20 F017          	lfsr	2,23
  9732   00453E  5127               	movf	dir_next@fs& (0+255),w,b
  9733   004540  26D9               	addwf	fsr2l,f,c
  9734   004542  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  9735   004544  22DA               	addwfc	fsr2h,f,c
  9736   004546  50DE               	movf	postinc2,w,c
  9737   004548  5D29               	subwf	dir_next@clst& (0+255),w,b
  9738   00454A  50DE               	movf	postinc2,w,c
  9739   00454C  592A               	subwfb	(dir_next@clst+1)& (0+255),w,b
  9740   00454E  50DE               	movf	postinc2,w,c
  9741   004550  592B               	subwfb	(dir_next@clst+2)& (0+255),w,b
  9742   004552  50DE               	movf	postinc2,w,c
  9743   004554  592C               	subwfb	(dir_next@clst+3)& (0+255),w,b
  9744   004556  A0D8               	btfss	status,0,c
  9745   004558  EFB0  F022         	goto	u17871
  9746   00455C  EFB2  F022         	goto	u17870
  9747   004560                     u17871:
  9748   004560  EF2C  F023         	goto	l1075
  9749   004564                     u17870:
  9750   004564                     
  9751                           ; BSR set to: 1
  9752                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
  9753   004564  0100               	movlb	0	; () banked
  9754   004566  51FC               	movf	dir_next@stretch& (0+255),w,b
  9755   004568  11FD               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  9756   00456A  A4D8               	btfss	status,2,c
  9757   00456C  EFBA  F022         	goto	u17881
  9758   004570  EFBC  F022         	goto	u17880
  9759   004574                     u17881:
  9760   004574  EFC8  F022         	goto	l15047
  9761   004578                     u17880:
  9762   004578                     
  9763                           ; BSR set to: 0
  9764                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
  9765   004578  EE20 F016          	lfsr	2,22
  9766   00457C  51FA               	movf	dir_next@dp& (0+255),w,b
  9767   00457E  26D9               	addwf	fsr2l,f,c
  9768   004580  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9769   004582  22DA               	addwfc	fsr2h,f,c
  9770   004584  6ADE               	clrf	postinc2,c
  9771   004586  6ADE               	clrf	postinc2,c
  9772   004588  6ADE               	clrf	postinc2,c
  9773   00458A  6ADD               	clrf	postdec2,c
  9774   00458C  EFA4  F021         	goto	l15005
  9775   004590                     l15047:
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
  9779   004590  C0FA  F0F4         	movff	dir_next@dp,create_chain@obj
  9780   004594  C0FB  F0F5         	movff	dir_next@dp+1,create_chain@obj+1
  9781   004598  EE20 F012          	lfsr	2,18
  9782   00459C  51FA               	movf	dir_next@dp& (0+255),w,b
  9783   00459E  26D9               	addwf	fsr2l,f,c
  9784   0045A0  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9785   0045A2  22DA               	addwfc	fsr2h,f,c
  9786   0045A4  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  9787   0045AA  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  9788   0045B0  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  9789   0045B6  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  9790   0045BC  ECFA  F016         	call	_create_chain	;wreg free
  9791   0045C0  C0F4  F129         	movff	?_create_chain,dir_next@clst
  9792   0045C4  C0F5  F12A         	movff	?_create_chain+1,dir_next@clst+1
  9793   0045C8  C0F6  F12B         	movff	?_create_chain+2,dir_next@clst+2
  9794   0045CC  C0F7  F12C         	movff	?_create_chain+3,dir_next@clst+3
  9795   0045D0                     
  9796                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
  9797   0045D0  0101               	movlb	1	; () banked
  9798   0045D2  5129               	movf	dir_next@clst& (0+255),w,b
  9799   0045D4  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  9800   0045D6  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  9801   0045D8  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
  9802   0045DA  A4D8               	btfss	status,2,c
  9803   0045DC  EFF2  F022         	goto	u17891
  9804   0045E0  EFF4  F022         	goto	u17890
  9805   0045E4                     u17891:
  9806   0045E4  EFF7  F022         	goto	l15055
  9807   0045E8                     u17890:
  9808   0045E8                     
  9809                           ; BSR set to: 1
  9810   0045E8  0E07               	movlw	7
  9811   0045EA  EF92  F023         	goto	l1067
  9812   0045EE                     l15055:
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
  9816   0045EE  0529               	decf	dir_next@clst& (0+255),w,b
  9817   0045F0  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  9818   0045F2  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  9819   0045F4  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
  9820   0045F6  A4D8               	btfss	status,2,c
  9821   0045F8  EF00  F023         	goto	u17901
  9822   0045FC  EF02  F023         	goto	u17900
  9823   004600                     u17901:
  9824   004600  EF04  F023         	goto	l15061
  9825   004604                     u17900:
  9826   004604  EF89  F022         	goto	l15027
  9827   004608                     l15061:
  9828                           
  9829                           ; BSR set to: 1
  9830                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  9831   004608  2929               	incf	dir_next@clst& (0+255),w,b
  9832   00460A  E10A               	bnz	u17911
  9833   00460C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
  9834   00460E  E108               	bnz	u17911
  9835   004610  292B               	incf	(dir_next@clst+2)& (0+255),w,b
  9836   004612  E106               	bnz	u17911
  9837   004614  292C               	incf	(dir_next@clst+3)& (0+255),w,b
  9838   004616  A4D8               	btfss	status,2,c
  9839   004618  EF10  F023         	goto	u17911
  9840   00461C  EF12  F023         	goto	u17910
  9841   004620                     u17911:
  9842   004620  EF14  F023         	goto	l15067
  9843   004624                     u17910:
  9844   004624  EF9A  F022         	goto	l15033
  9845   004628                     l15067:
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
  9849   004628  C127  F0C8         	movff	dir_next@fs,dir_clear@fs
  9850   00462C  C128  F0C9         	movff	dir_next@fs+1,dir_clear@fs+1
  9851   004630  C129  F0CA         	movff	dir_next@clst,dir_clear@clst
  9852   004634  C12A  F0CB         	movff	dir_next@clst+1,dir_clear@clst+1
  9853   004638  C12B  F0CC         	movff	dir_next@clst+2,dir_clear@clst+2
  9854   00463C  C12C  F0CD         	movff	dir_next@clst+3,dir_clear@clst+3
  9855   004640  EC2B  F037         	call	_dir_clear	;wreg free
  9856   004644  0900               	iorlw	0
  9857   004646  B4D8               	btfsc	status,2,c
  9858   004648  EF28  F023         	goto	u17921
  9859   00464C  EF2A  F023         	goto	u17920
  9860   004650                     u17921:
  9861   004650  EF2C  F023         	goto	l1075
  9862   004654                     u17920:
  9863   004654  EF9A  F022         	goto	l15033
  9864   004658                     l1075:
  9865                           
  9866                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
  9867   004658  0100               	movlb	0	; () banked
  9868   00465A  EE20 F012          	lfsr	2,18
  9869   00465E  51FA               	movf	dir_next@dp& (0+255),w,b
  9870   004660  26D9               	addwf	fsr2l,f,c
  9871   004662  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9872   004664  22DA               	addwfc	fsr2h,f,c
  9873   004666  0060  F4A7  FFDE   	movff	dir_next@clst,postinc2
  9874   00466C  0060  F4AB  FFDE   	movff	dir_next@clst+1,postinc2
  9875   004672  0060  F4AF  FFDE   	movff	dir_next@clst+2,postinc2
  9876   004678  0060  F4B3  FFDE   	movff	dir_next@clst+3,postinc2
  9877   00467E                     
  9878                           ; BSR set to: 0
  9879                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
  9880   00467E  C127  F06C         	movff	dir_next@fs,clst2sect@fs
  9881   004682  C128  F06D         	movff	dir_next@fs+1,clst2sect@fs+1
  9882   004686  C129  F06E         	movff	dir_next@clst,clst2sect@clst
  9883   00468A  C12A  F06F         	movff	dir_next@clst+1,clst2sect@clst+1
  9884   00468E  C12B  F070         	movff	dir_next@clst+2,clst2sect@clst+2
  9885   004692  C12C  F071         	movff	dir_next@clst+3,clst2sect@clst+3
  9886   004696  EC2C  F03E         	call	_clst2sect	;wreg free
  9887   00469A  0100               	movlb	0	; () banked
  9888   00469C  EE20 F016          	lfsr	2,22
  9889   0046A0  51FA               	movf	dir_next@dp& (0+255),w,b
  9890   0046A2  26D9               	addwf	fsr2l,f,c
  9891   0046A4  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9892   0046A6  22DA               	addwfc	fsr2h,f,c
  9893   0046A8  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
  9894   0046AE  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
  9895   0046B4  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
  9896   0046BA  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
  9897   0046C0                     l15077:
  9898                           
  9899                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
  9900   0046C0  0100               	movlb	0	; () banked
  9901   0046C2  EE20 F00E          	lfsr	2,14
  9902   0046C6  51FA               	movf	dir_next@dp& (0+255),w,b
  9903   0046C8  26D9               	addwf	fsr2l,f,c
  9904   0046CA  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9905   0046CC  22DA               	addwfc	fsr2h,f,c
  9906   0046CE  0060  F48F  FFDE   	movff	dir_next@ofs,postinc2
  9907   0046D4  0060  F493  FFDE   	movff	dir_next@ofs+1,postinc2
  9908   0046DA  0060  F497  FFDE   	movff	dir_next@ofs+2,postinc2
  9909   0046E0  0060  F49B  FFDE   	movff	dir_next@ofs+3,postinc2
  9910   0046E6                     
  9911                           ; BSR set to: 0
  9912                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
  9913   0046E6  0EFF               	movlw	255
  9914   0046E8  0101               	movlb	1	; () banked
  9915   0046EA  1523               	andwf	dir_next@ofs& (0+255),w,b
  9916   0046EC  6F17               	movwf	??_dir_next& (0+255),b
  9917   0046EE  0E01               	movlw	1
  9918   0046F0  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
  9919   0046F2  6F18               	movwf	(??_dir_next+1)& (0+255),b
  9920   0046F4  5117               	movf	??_dir_next& (0+255),w,b
  9921   0046F6  2527               	addwf	dir_next@fs& (0+255),w,b
  9922   0046F8  6F19               	movwf	(??_dir_next+2)& (0+255),b
  9923   0046FA  5118               	movf	(??_dir_next+1)& (0+255),w,b
  9924   0046FC  2128               	addwfc	(dir_next@fs+1)& (0+255),w,b
  9925   0046FE  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  9926   004700  0E33               	movlw	51
  9927   004702  2719               	addwf	(??_dir_next+2)& (0+255),f,b
  9928   004704  0E00               	movlw	0
  9929   004706  231A               	addwfc	(??_dir_next+3)& (0+255),f,b
  9930   004708  0100               	movlb	0	; () banked
  9931   00470A  EE20 F01A          	lfsr	2,26
  9932   00470E  51FA               	movf	dir_next@dp& (0+255),w,b
  9933   004710  26D9               	addwf	fsr2l,f,c
  9934   004712  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  9935   004714  22DA               	addwfc	fsr2h,f,c
  9936   004716  0060  F467  FFDE   	movff	??_dir_next+2,postinc2
  9937   00471C  0060  F46B  FFDD   	movff	??_dir_next+3,postdec2
  9938   004722                     
  9939                           ; BSR set to: 0
  9940                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
  9941   004722  0E00               	movlw	0
  9942   004724                     l1067:
  9943   004724  0012               	return		;funcret
  9944   004726                     __end_of_dir_next:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _dir_clear *****************
  9948 ;; Defined at:
  9949 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  fs              2  104[BANK0 ] PTR struct .
  9952 ;;		 -> FatFs(563), NULL(0), 
  9953 ;;  clst            4  106[BANK0 ] unsigned long 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  sect            4  114[BANK0 ] unsigned long 
  9956 ;;  n               2  120[BANK0 ] unsigned int 
  9957 ;;  szb             2  118[BANK0 ] unsigned int 
  9958 ;;  ibuf            2  112[BANK0 ] PTR unsigned char 
  9959 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      enum E68
  9962 ;; Registers used:
  9963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;Total ram usage:       18 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 11
  9976 ;; This function calls:
  9977 ;;		_clst2sect
  9978 ;;		_disk_write
  9979 ;;		_mem_set
  9980 ;;		_sync_window
  9981 ;; This function is called by:
  9982 ;;		_dir_next
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text29
  9987   006E56                     __ptext29:
  9988                           	callstack 0
  9989   006E56                     _dir_clear:
  9990                           	callstack 14
  9991   006E56                     
  9992                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
  9993   006E56  C0C8  F0B5         	movff	dir_clear@fs,sync_window@fs
  9994   006E5A  C0C9  F0B6         	movff	dir_clear@fs+1,sync_window@fs+1
  9995   006E5E  EC94  F032         	call	_sync_window	;wreg free
  9996   006E62  0900               	iorlw	0
  9997   006E64  B4D8               	btfsc	status,2,c
  9998   006E66  EF37  F037         	goto	u17031
  9999   006E6A  EF39  F037         	goto	u17030
 10000   006E6E                     u17031:
 10001   006E6E  EF3C  F037         	goto	l14615
 10002   006E72                     u17030:
 10003   006E72  0E01               	movlw	1
 10004   006E74  EFD6  F037         	goto	l1025
 10005   006E78                     l14615:
 10006                           
 10007                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
 10008   006E78  C0C8  F06C         	movff	dir_clear@fs,clst2sect@fs
 10009   006E7C  C0C9  F06D         	movff	dir_clear@fs+1,clst2sect@fs+1
 10010   006E80  C0CA  F06E         	movff	dir_clear@clst,clst2sect@clst
 10011   006E84  C0CB  F06F         	movff	dir_clear@clst+1,clst2sect@clst+1
 10012   006E88  C0CC  F070         	movff	dir_clear@clst+2,clst2sect@clst+2
 10013   006E8C  C0CD  F071         	movff	dir_clear@clst+3,clst2sect@clst+3
 10014   006E90  EC2C  F03E         	call	_clst2sect	;wreg free
 10015   006E94  C06C  F0D2         	movff	?_clst2sect,dir_clear@sect
 10016   006E98  C06D  F0D3         	movff	?_clst2sect+1,dir_clear@sect+1
 10017   006E9C  C06E  F0D4         	movff	?_clst2sect+2,dir_clear@sect+2
 10018   006EA0  C06F  F0D5         	movff	?_clst2sect+3,dir_clear@sect+3
 10019   006EA4                     
 10020                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
 10021   006EA4  0100               	movlb	0	; () banked
 10022   006EA6  EE20 F02F          	lfsr	2,47
 10023   006EAA  51C8               	movf	dir_clear@fs& (0+255),w,b
 10024   006EAC  26D9               	addwf	fsr2l,f,c
 10025   006EAE  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10026   006EB0  22DA               	addwfc	fsr2h,f,c
 10027   006EB2  0060  F34B  FFDE   	movff	dir_clear@sect,postinc2
 10028   006EB8  0060  F34F  FFDE   	movff	dir_clear@sect+1,postinc2
 10029   006EBE  0060  F353  FFDE   	movff	dir_clear@sect+2,postinc2
 10030   006EC4  0060  F357  FFDE   	movff	dir_clear@sect+3,postinc2
 10031   006ECA                     
 10032                           ; BSR set to: 0
 10033                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
 10034   006ECA  0E33               	movlw	51
 10035   006ECC  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10036   006ECE  6F60               	movwf	mem_set@dst& (0+255),b
 10037   006ED0  0E00               	movlw	0
 10038   006ED2  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10039   006ED4  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 10040   006ED6  0E00               	movlw	0
 10041   006ED8  6F63               	movwf	(mem_set@val+1)& (0+255),b
 10042   006EDA  0E00               	movlw	0
 10043   006EDC  6F62               	movwf	mem_set@val& (0+255),b
 10044   006EDE  0E02               	movlw	2
 10045   006EE0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 10046   006EE2  0E00               	movlw	0
 10047   006EE4  6F64               	movwf	mem_set@cnt& (0+255),b
 10048   006EE6  EC34  F047         	call	_mem_set	;wreg free
 10049   006EEA                     
 10050                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
 10051   006EEA  0E33               	movlw	51
 10052   006EEC  0100               	movlb	0	; () banked
 10053   006EEE  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10054   006EF0  6FD0               	movwf	dir_clear@ibuf& (0+255),b
 10055   006EF2  0E00               	movlw	0
 10056   006EF4  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10057   006EF6  6FD1               	movwf	(dir_clear@ibuf+1)& (0+255),b
 10058   006EF8                     
 10059                           ; BSR set to: 0
 10060   006EF8  0E00               	movlw	0
 10061   006EFA  6FD7               	movwf	(dir_clear@szb+1)& (0+255),b
 10062   006EFC  0E01               	movlw	1
 10063   006EFE  6FD6               	movwf	dir_clear@szb& (0+255),b
 10064   006F00                     
 10065                           ; BSR set to: 0
 10066                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
 10067   006F00  0E00               	movlw	0
 10068   006F02  6FD9               	movwf	(dir_clear@n+1)& (0+255),b
 10069   006F04  0E00               	movlw	0
 10070   006F06  6FD8               	movwf	dir_clear@n& (0+255),b
 10071   006F08  EF8B  F037         	goto	l14629
 10072   006F0C                     l14627:
 10073   006F0C  0100               	movlb	0	; () banked
 10074   006F0E  51D6               	movf	dir_clear@szb& (0+255),w,b
 10075   006F10  27D8               	addwf	dir_clear@n& (0+255),f,b
 10076   006F12  51D7               	movf	(dir_clear@szb+1)& (0+255),w,b
 10077   006F14  23D9               	addwfc	(dir_clear@n+1)& (0+255),f,b
 10078   006F16                     l14629:
 10079                           
 10080                           ; BSR set to: 0
 10081   006F16  EE20 F009          	lfsr	2,9
 10082   006F1A  51C8               	movf	dir_clear@fs& (0+255),w,b
 10083   006F1C  26D9               	addwf	fsr2l,f,c
 10084   006F1E  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10085   006F20  22DA               	addwfc	fsr2h,f,c
 10086   006F22  50DE               	movf	postinc2,w,c
 10087   006F24  5DD8               	subwf	dir_clear@n& (0+255),w,b
 10088   006F26  50DE               	movf	postinc2,w,c
 10089   006F28  59D9               	subwfb	(dir_clear@n+1)& (0+255),w,b
 10090   006F2A  B0D8               	btfsc	status,0,c
 10091   006F2C  EF9A  F037         	goto	u17041
 10092   006F30  EF9C  F037         	goto	u17040
 10093   006F34                     u17041:
 10094   006F34  EFC1  F037         	goto	l14633
 10095   006F38                     u17040:
 10096   006F38                     
 10097                           ; BSR set to: 0
 10098   006F38  C0D0  F0AB         	movff	dir_clear@ibuf,disk_write@buff
 10099   006F3C  C0D1  F0AC         	movff	dir_clear@ibuf+1,disk_write@buff+1
 10100   006F40  51D8               	movf	dir_clear@n& (0+255),w,b
 10101   006F42  25D2               	addwf	dir_clear@sect& (0+255),w,b
 10102   006F44  6FAD               	movwf	disk_write@sector& (0+255),b
 10103   006F46  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 10104   006F48  21D3               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 10105   006F4A  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 10106   006F4C  0E00               	movlw	0
 10107   006F4E  21D4               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 10108   006F50  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 10109   006F52  0E00               	movlw	0
 10110   006F54  21D5               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 10111   006F56  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 10112   006F58  C0D6  F0B1         	movff	dir_clear@szb,disk_write@count
 10113   006F5C  C0D7  F0B2         	movff	dir_clear@szb+1,disk_write@count+1
 10114   006F60  EE20 F001          	lfsr	2,1
 10115   006F64  51C8               	movf	dir_clear@fs& (0+255),w,b
 10116   006F66  26D9               	addwf	fsr2l,f,c
 10117   006F68  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10118   006F6A  22DA               	addwfc	fsr2h,f,c
 10119   006F6C  50DF               	movf	indf2,w,c
 10120   006F6E  EC37  F044         	call	_disk_write
 10121   006F72  0900               	iorlw	0
 10122   006F74  B4D8               	btfsc	status,2,c
 10123   006F76  EFBF  F037         	goto	u17051
 10124   006F7A  EFC1  F037         	goto	u17050
 10125   006F7E                     u17051:
 10126   006F7E  EF86  F037         	goto	l14627
 10127   006F82                     u17050:
 10128   006F82                     l14633:
 10129                           
 10130                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 10131   006F82  0100               	movlb	0	; () banked
 10132   006F84  EE20 F009          	lfsr	2,9
 10133   006F88  51C8               	movf	dir_clear@fs& (0+255),w,b
 10134   006F8A  26D9               	addwf	fsr2l,f,c
 10135   006F8C  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10136   006F8E  22DA               	addwfc	fsr2h,f,c
 10137   006F90  51D8               	movf	dir_clear@n& (0+255),w,b
 10138   006F92  18DE               	xorwf	postinc2,w,c
 10139   006F94  E107               	bnz	u17061
 10140   006F96  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 10141   006F98  18DE               	xorwf	postinc2,w,c
 10142   006F9A  A4D8               	btfss	status,2,c
 10143   006F9C  EFD2  F037         	goto	u17061
 10144   006FA0  EFD5  F037         	goto	u17060
 10145   006FA4                     u17061:
 10146   006FA4  0E01               	movlw	1
 10147   006FA6  EFD6  F037         	goto	u17070
 10148   006FAA                     u17060:
 10149   006FAA  0E00               	movlw	0
 10150   006FAC                     u17070:
 10151   006FAC                     l1025:
 10152   006FAC  0012               	return		;funcret
 10153   006FAE                     __end_of_dir_clear:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function _clst2sect *****************
 10157 ;; Defined at:
 10158 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  fs              2   12[BANK0 ] PTR struct .
 10161 ;;		 -> FatFs(563), NULL(0), 
 10162 ;;  clst            4   14[BANK0 ] unsigned long 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  4   12[BANK0 ] unsigned long 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:       12 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 6
 10181 ;; This function calls:
 10182 ;;		___lmul
 10183 ;; This function is called by:
 10184 ;;		_dir_clear
 10185 ;;		_dir_sdi
 10186 ;;		_dir_next
 10187 ;;		_f_open
 10188 ;;		_f_write
 10189 ;;		_f_read
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text30
 10194   007C58                     __ptext30:
 10195                           	callstack 0
 10196   007C58                     _clst2sect:
 10197                           	callstack 22
 10198   007C58                     
 10199                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
 10200   007C58  0E02               	movlw	2
 10201   007C5A  0100               	movlb	0	; () banked
 10202   007C5C  5F6E               	subwf	clst2sect@clst& (0+255),f,b
 10203   007C5E  0E00               	movlw	0
 10204   007C60  5B6F               	subwfb	(clst2sect@clst+1)& (0+255),f,b
 10205   007C62  5B70               	subwfb	(clst2sect@clst+2)& (0+255),f,b
 10206   007C64  5B71               	subwfb	(clst2sect@clst+3)& (0+255),f,b
 10207   007C66                     
 10208                           ; BSR set to: 0
 10209                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
 10210   007C66  EE20 F017          	lfsr	2,23
 10211   007C6A  516C               	movf	clst2sect@fs& (0+255),w,b
 10212   007C6C  26D9               	addwf	fsr2l,f,c
 10213   007C6E  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 10214   007C70  22DA               	addwfc	fsr2h,f,c
 10215   007C72  0EFE               	movlw	254
 10216   007C74  24DE               	addwf	postinc2,w,c
 10217   007C76  6F72               	movwf	??_clst2sect& (0+255),b
 10218   007C78  0EFF               	movlw	255
 10219   007C7A  20DE               	addwfc	postinc2,w,c
 10220   007C7C  6F73               	movwf	(??_clst2sect+1)& (0+255),b
 10221   007C7E  0EFF               	movlw	255
 10222   007C80  20DE               	addwfc	postinc2,w,c
 10223   007C82  6F74               	movwf	(??_clst2sect+2)& (0+255),b
 10224   007C84  0EFF               	movlw	255
 10225   007C86  20DE               	addwfc	postinc2,w,c
 10226   007C88  6F75               	movwf	(??_clst2sect+3)& (0+255),b
 10227   007C8A  5172               	movf	??_clst2sect& (0+255),w,b
 10228   007C8C  5D6E               	subwf	clst2sect@clst& (0+255),w,b
 10229   007C8E  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 10230   007C90  596F               	subwfb	(clst2sect@clst+1)& (0+255),w,b
 10231   007C92  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 10232   007C94  5970               	subwfb	(clst2sect@clst+2)& (0+255),w,b
 10233   007C96  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 10234   007C98  5971               	subwfb	(clst2sect@clst+3)& (0+255),w,b
 10235   007C9A  A0D8               	btfss	status,0,c
 10236   007C9C  EF52  F03E         	goto	u16511
 10237   007CA0  EF54  F03E         	goto	u16510
 10238   007CA4                     u16511:
 10239   007CA4  EF5E  F03E         	goto	l14355
 10240   007CA8                     u16510:
 10241   007CA8                     
 10242                           ; BSR set to: 0
 10243   007CA8  0E00               	movlw	0
 10244   007CAA  6F6C               	movwf	?_clst2sect& (0+255),b
 10245   007CAC  0E00               	movlw	0
 10246   007CAE  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 10247   007CB0  0E00               	movlw	0
 10248   007CB2  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 10249   007CB4  0E00               	movlw	0
 10250   007CB6  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 10251   007CB8  EF99  F03E         	goto	l919
 10252   007CBC                     l14355:
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
 10256   007CBC  EE20 F02B          	lfsr	2,43
 10257   007CC0  516C               	movf	clst2sect@fs& (0+255),w,b
 10258   007CC2  26D9               	addwf	fsr2l,f,c
 10259   007CC4  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 10260   007CC6  22DA               	addwfc	fsr2h,f,c
 10261   007CC8  006F FF78  F072    	movff	postinc2,??_clst2sect
 10262   007CCE  006F FF78  F073    	movff	postinc2,??_clst2sect+1
 10263   007CD4  006F FF78  F074    	movff	postinc2,??_clst2sect+2
 10264   007CDA  006F FF78  F075    	movff	postinc2,??_clst2sect+3
 10265   007CE0  EE20 F009          	lfsr	2,9
 10266   007CE4  516C               	movf	clst2sect@fs& (0+255),w,b
 10267   007CE6  26D9               	addwf	fsr2l,f,c
 10268   007CE8  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 10269   007CEA  22DA               	addwfc	fsr2h,f,c
 10270   007CEC  006F FF78  F076    	movff	postinc2,??_clst2sect+4
 10271   007CF2  006F FF74  F077    	movff	postdec2,??_clst2sect+5
 10272   007CF8  C076  F060         	movff	??_clst2sect+4,___lmul@multiplier
 10273   007CFC  C077  F061         	movff	??_clst2sect+5,___lmul@multiplier+1
 10274   007D00  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 10275   007D02  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 10276   007D04  C06E  F064         	movff	clst2sect@clst,___lmul@multiplicand
 10277   007D08  C06F  F065         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 10278   007D0C  C070  F066         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 10279   007D10  C071  F067         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 10280   007D14  EC01  F044         	call	___lmul	;wreg free
 10281   007D18  0100               	movlb	0	; () banked
 10282   007D1A  5172               	movf	??_clst2sect& (0+255),w,b
 10283   007D1C  2560               	addwf	?___lmul& (0+255),w,b
 10284   007D1E  6F6C               	movwf	?_clst2sect& (0+255),b
 10285   007D20  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 10286   007D22  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 10287   007D24  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 10288   007D26  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 10289   007D28  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 10290   007D2A  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 10291   007D2C  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 10292   007D2E  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 10293   007D30  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 10294   007D32                     l919:
 10295                           
 10296                           ; BSR set to: 0
 10297   007D32  0012               	return		;funcret
 10298   007D34                     __end_of_clst2sect:
 10299                           	callstack 0
 10300                           
 10301 ;; *************** function _create_chain *****************
 10302 ;; Defined at:
 10303 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  obj             2  148[BANK0 ] PTR struct .
 10306 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 10307 ;;  clst            4  150[BANK0 ] unsigned long 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  cs              4   19[BANK1 ] unsigned long 
 10310 ;;  ncl             4   13[BANK1 ] unsigned long 
 10311 ;;  scl             4    9[BANK1 ] unsigned long 
 10312 ;;  fs              2   17[BANK1 ] PTR struct .
 10313 ;;		 -> FatFs(563), NULL(0), 
 10314 ;;  res             1    8[BANK1 ] enum E68
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  4  148[BANK0 ] unsigned long 
 10317 ;; Registers used:
 10318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10324 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Totals:         0       6      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;Total ram usage:       29 bytes
 10329 ;; Hardware stack levels used: 1
 10330 ;; Hardware stack levels required when called: 13
 10331 ;; This function calls:
 10332 ;;		_get_fat
 10333 ;;		_put_fat
 10334 ;; This function is called by:
 10335 ;;		_dir_next
 10336 ;;		_f_write
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text31
 10341   002DF4                     __ptext31:
 10342                           	callstack 0
 10343   002DF4                     _create_chain:
 10344                           	callstack 15
 10345   002DF4                     
 10346                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
 10347   002DF4  0060  F3D3  FFD9   	movff	create_chain@obj,fsr2l
 10348   002DFA  0060  F3D7  FFDA   	movff	create_chain@obj+1,fsr2h
 10349   002E00  006F FF78  F111    	movff	postinc2,create_chain@fs
 10350   002E06  006F FF74  F112    	movff	postdec2,create_chain@fs+1
 10351   002E0C                     
 10352                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
 10353   002E0C  0100               	movlb	0	; () banked
 10354   002E0E  51F6               	movf	create_chain@clst& (0+255),w,b
 10355   002E10  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 10356   002E12  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 10357   002E14  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 10358   002E16  A4D8               	btfss	status,2,c
 10359   002E18  EF10  F017         	goto	u16771
 10360   002E1C  EF12  F017         	goto	u16770
 10361   002E20                     u16771:
 10362   002E20  EF4F  F017         	goto	l14507
 10363   002E24                     u16770:
 10364   002E24                     
 10365                           ; BSR set to: 0
 10366                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
 10367   002E24  0101               	movlb	1	; () banked
 10368   002E26  EE20 F00B          	lfsr	2,11
 10369   002E2A  5111               	movf	create_chain@fs& (0+255),w,b
 10370   002E2C  26D9               	addwf	fsr2l,f,c
 10371   002E2E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10372   002E30  22DA               	addwfc	fsr2h,f,c
 10373   002E32  006F FF78  F109    	movff	postinc2,create_chain@scl
 10374   002E38  006F FF78  F10A    	movff	postinc2,create_chain@scl+1
 10375   002E3E  006F FF78  F10B    	movff	postinc2,create_chain@scl+2
 10376   002E44  006F FF78  F10C    	movff	postinc2,create_chain@scl+3
 10377   002E4A                     
 10378                           ; BSR set to: 1
 10379                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 10380   002E4A  5109               	movf	create_chain@scl& (0+255),w,b
 10381   002E4C  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 10382   002E4E  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 10383   002E50  110C               	iorwf	(create_chain@scl+3)& (0+255),w,b
 10384   002E52  B4D8               	btfsc	status,2,c
 10385   002E54  EF2E  F017         	goto	u16781
 10386   002E58  EF30  F017         	goto	u16780
 10387   002E5C                     u16781:
 10388   002E5C  EF45  F017         	goto	l14505
 10389   002E60                     u16780:
 10390   002E60                     
 10391                           ; BSR set to: 1
 10392   002E60  EE20 F017          	lfsr	2,23
 10393   002E64  5111               	movf	create_chain@fs& (0+255),w,b
 10394   002E66  26D9               	addwf	fsr2l,f,c
 10395   002E68  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10396   002E6A  22DA               	addwfc	fsr2h,f,c
 10397   002E6C  50DE               	movf	postinc2,w,c
 10398   002E6E  5D09               	subwf	create_chain@scl& (0+255),w,b
 10399   002E70  50DE               	movf	postinc2,w,c
 10400   002E72  590A               	subwfb	(create_chain@scl+1)& (0+255),w,b
 10401   002E74  50DE               	movf	postinc2,w,c
 10402   002E76  590B               	subwfb	(create_chain@scl+2)& (0+255),w,b
 10403   002E78  50DE               	movf	postinc2,w,c
 10404   002E7A  590C               	subwfb	(create_chain@scl+3)& (0+255),w,b
 10405   002E7C  A0D8               	btfss	status,0,c
 10406   002E7E  EF43  F017         	goto	u16791
 10407   002E82  EF45  F017         	goto	u16790
 10408   002E86                     u16791:
 10409   002E86  EFB5  F017         	goto	l14523
 10410   002E8A                     u16790:
 10411   002E8A                     l14505:
 10412                           
 10413                           ; BSR set to: 1
 10414   002E8A  0E01               	movlw	1
 10415   002E8C  6F09               	movwf	create_chain@scl& (0+255),b
 10416   002E8E  0E00               	movlw	0
 10417   002E90  6F0A               	movwf	(create_chain@scl+1)& (0+255),b
 10418   002E92  0E00               	movlw	0
 10419   002E94  6F0B               	movwf	(create_chain@scl+2)& (0+255),b
 10420   002E96  0E00               	movlw	0
 10421   002E98  6F0C               	movwf	(create_chain@scl+3)& (0+255),b
 10422   002E9A  EFB5  F017         	goto	l14523
 10423   002E9E                     l14507:
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
 10427   002E9E  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 10428   002EA2  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 10429   002EA6  C0F6  F0D5         	movff	create_chain@clst,get_fat@clst
 10430   002EAA  C0F7  F0D6         	movff	create_chain@clst+1,get_fat@clst+1
 10431   002EAE  C0F8  F0D7         	movff	create_chain@clst+2,get_fat@clst+2
 10432   002EB2  C0F9  F0D8         	movff	create_chain@clst+3,get_fat@clst+3
 10433   002EB6  ECBC  F025         	call	_get_fat	;wreg free
 10434   002EBA  C0D3  F113         	movff	?_get_fat,create_chain@cs
 10435   002EBE  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 10436   002EC2  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 10437   002EC6  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 10438   002ECA                     
 10439                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
 10440   002ECA  0101               	movlb	1	; () banked
 10441   002ECC  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 10442   002ECE  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10443   002ED0  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10444   002ED2  E107               	bnz	u16801
 10445   002ED4  0E02               	movlw	2
 10446   002ED6  5D13               	subwf	create_chain@cs& (0+255),w,b
 10447   002ED8  B0D8               	btfsc	status,0,c
 10448   002EDA  EF71  F017         	goto	u16801
 10449   002EDE  EF73  F017         	goto	u16800
 10450   002EE2                     u16801:
 10451   002EE2  EF7E  F017         	goto	l14515
 10452   002EE6                     u16800:
 10453   002EE6                     
 10454                           ; BSR set to: 1
 10455   002EE6  0E01               	movlw	1
 10456   002EE8  0100               	movlb	0	; () banked
 10457   002EEA  6FF4               	movwf	?_create_chain& (0+255),b
 10458   002EEC  0E00               	movlw	0
 10459   002EEE  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 10460   002EF0  0E00               	movlw	0
 10461   002EF2  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 10462   002EF4  0E00               	movlw	0
 10463   002EF6  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 10464   002EF8  EFEF  F019         	goto	l993
 10465   002EFC                     l14515:
 10466                           
 10467                           ; BSR set to: 1
 10468                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
 10469   002EFC  2913               	incf	create_chain@cs& (0+255),w,b
 10470   002EFE  E10A               	bnz	u16811
 10471   002F00  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 10472   002F02  E108               	bnz	u16811
 10473   002F04  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 10474   002F06  E106               	bnz	u16811
 10475   002F08  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 10476   002F0A  A4D8               	btfss	status,2,c
 10477   002F0C  EF8A  F017         	goto	u16811
 10478   002F10  EF8C  F017         	goto	u16810
 10479   002F14                     u16811:
 10480   002F14  EF96  F017         	goto	l14519
 10481   002F18                     u16810:
 10482   002F18                     l14517:
 10483                           
 10484                           ; BSR set to: 1
 10485   002F18  C113  F0F4         	movff	create_chain@cs,?_create_chain
 10486   002F1C  C114  F0F5         	movff	create_chain@cs+1,?_create_chain+1
 10487   002F20  C115  F0F6         	movff	create_chain@cs+2,?_create_chain+2
 10488   002F24  C116  F0F7         	movff	create_chain@cs+3,?_create_chain+3
 10489   002F28  EFEF  F019         	goto	l993
 10490   002F2C                     l14519:
 10491                           
 10492                           ; BSR set to: 1
 10493                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
 10494   002F2C  EE20 F017          	lfsr	2,23
 10495   002F30  5111               	movf	create_chain@fs& (0+255),w,b
 10496   002F32  26D9               	addwf	fsr2l,f,c
 10497   002F34  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10498   002F36  22DA               	addwfc	fsr2h,f,c
 10499   002F38  50DE               	movf	postinc2,w,c
 10500   002F3A  5D13               	subwf	create_chain@cs& (0+255),w,b
 10501   002F3C  50DE               	movf	postinc2,w,c
 10502   002F3E  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 10503   002F40  50DE               	movf	postinc2,w,c
 10504   002F42  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 10505   002F44  50DE               	movf	postinc2,w,c
 10506   002F46  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 10507   002F48  B0D8               	btfsc	status,0,c
 10508   002F4A  EFA9  F017         	goto	u16821
 10509   002F4E  EFAB  F017         	goto	u16820
 10510   002F52                     u16821:
 10511   002F52  EFAD  F017         	goto	l995
 10512   002F56                     u16820:
 10513   002F56  EF8C  F017         	goto	l14517
 10514   002F5A                     l995:
 10515                           
 10516                           ; BSR set to: 1
 10517                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
 10518   002F5A  C0F6  F109         	movff	create_chain@clst,create_chain@scl
 10519   002F5E  C0F7  F10A         	movff	create_chain@clst+1,create_chain@scl+1
 10520   002F62  C0F8  F10B         	movff	create_chain@clst+2,create_chain@scl+2
 10521   002F66  C0F9  F10C         	movff	create_chain@clst+3,create_chain@scl+3
 10522   002F6A                     l14523:
 10523                           
 10524                           ; BSR set to: 1
 10525                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
 10526   002F6A  EE20 F00F          	lfsr	2,15
 10527   002F6E  5111               	movf	create_chain@fs& (0+255),w,b
 10528   002F70  26D9               	addwf	fsr2l,f,c
 10529   002F72  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10530   002F74  22DA               	addwfc	fsr2h,f,c
 10531   002F76  50DE               	movf	postinc2,w,c
 10532   002F78  10DE               	iorwf	postinc2,w,c
 10533   002F7A  10DE               	iorwf	postinc2,w,c
 10534   002F7C  10DE               	iorwf	postinc2,w,c
 10535   002F7E  A4D8               	btfss	status,2,c
 10536   002F80  EFC4  F017         	goto	u16831
 10537   002F84  EFC6  F017         	goto	u16830
 10538   002F88                     u16831:
 10539   002F88  EFD1  F017         	goto	l14529
 10540   002F8C                     u16830:
 10541   002F8C                     l14525:
 10542                           
 10543                           ; BSR set to: 1
 10544   002F8C  0E00               	movlw	0
 10545   002F8E  0100               	movlb	0	; () banked
 10546   002F90  6FF4               	movwf	?_create_chain& (0+255),b
 10547   002F92  0E00               	movlw	0
 10548   002F94  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 10549   002F96  0E00               	movlw	0
 10550   002F98  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 10551   002F9A  0E00               	movlw	0
 10552   002F9C  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 10553   002F9E  EFEF  F019         	goto	l993
 10554   002FA2                     l14529:
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
 10558   002FA2  0E00               	movlw	0
 10559   002FA4  6F0D               	movwf	create_chain@ncl& (0+255),b
 10560   002FA6  0E00               	movlw	0
 10561   002FA8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 10562   002FAA  0E00               	movlw	0
 10563   002FAC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 10564   002FAE  0E00               	movlw	0
 10565   002FB0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 10566   002FB2                     
 10567                           ; BSR set to: 1
 10568                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
 10569   002FB2  0100               	movlb	0	; () banked
 10570   002FB4  51F6               	movf	create_chain@clst& (0+255),w,b
 10571   002FB6  0101               	movlb	1	; () banked
 10572   002FB8  1909               	xorwf	create_chain@scl& (0+255),w,b
 10573   002FBA  E113               	bnz	u16841
 10574   002FBC  0100               	movlb	0	; () banked
 10575   002FBE  51F7               	movf	(create_chain@clst+1)& (0+255),w,b
 10576   002FC0  0101               	movlb	1	; () banked
 10577   002FC2  190A               	xorwf	(create_chain@scl+1)& (0+255),w,b
 10578   002FC4  E10E               	bnz	u16841
 10579   002FC6  0100               	movlb	0	; () banked
 10580   002FC8  51F8               	movf	(create_chain@clst+2)& (0+255),w,b
 10581   002FCA  0101               	movlb	1	; () banked
 10582   002FCC  190B               	xorwf	(create_chain@scl+2)& (0+255),w,b
 10583   002FCE  E109               	bnz	u16841
 10584   002FD0  0100               	movlb	0	; () banked
 10585   002FD2  51F9               	movf	(create_chain@clst+3)& (0+255),w,b
 10586   002FD4  0101               	movlb	1	; () banked
 10587   002FD6  190C               	xorwf	(create_chain@scl+3)& (0+255),w,b
 10588   002FD8  A4D8               	btfss	status,2,c
 10589   002FDA  EFF1  F017         	goto	u16841
 10590   002FDE  EFF3  F017         	goto	u16840
 10591   002FE2                     u16841:
 10592   002FE2  EF9D  F018         	goto	l14557
 10593   002FE6                     u16840:
 10594   002FE6                     
 10595                           ; BSR set to: 1
 10596                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
 10597   002FE6  0E01               	movlw	1
 10598   002FE8  2509               	addwf	create_chain@scl& (0+255),w,b
 10599   002FEA  6F0D               	movwf	create_chain@ncl& (0+255),b
 10600   002FEC  0E00               	movlw	0
 10601   002FEE  210A               	addwfc	(create_chain@scl+1)& (0+255),w,b
 10602   002FF0  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 10603   002FF2  0E00               	movlw	0
 10604   002FF4  210B               	addwfc	(create_chain@scl+2)& (0+255),w,b
 10605   002FF6  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 10606   002FF8  0E00               	movlw	0
 10607   002FFA  210C               	addwfc	(create_chain@scl+3)& (0+255),w,b
 10608   002FFC  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 10609   002FFE                     
 10610                           ; BSR set to: 1
 10611                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
 10612   002FFE  EE20 F017          	lfsr	2,23
 10613   003002  5111               	movf	create_chain@fs& (0+255),w,b
 10614   003004  26D9               	addwf	fsr2l,f,c
 10615   003006  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10616   003008  22DA               	addwfc	fsr2h,f,c
 10617   00300A  50DE               	movf	postinc2,w,c
 10618   00300C  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 10619   00300E  50DE               	movf	postinc2,w,c
 10620   003010  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 10621   003012  50DE               	movf	postinc2,w,c
 10622   003014  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 10623   003016  50DE               	movf	postinc2,w,c
 10624   003018  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 10625   00301A  A0D8               	btfss	status,0,c
 10626   00301C  EF12  F018         	goto	u16851
 10627   003020  EF14  F018         	goto	u16850
 10628   003024                     u16851:
 10629   003024  EF1C  F018         	goto	l14539
 10630   003028                     u16850:
 10631   003028                     
 10632                           ; BSR set to: 1
 10633   003028  0E02               	movlw	2
 10634   00302A  6F0D               	movwf	create_chain@ncl& (0+255),b
 10635   00302C  0E00               	movlw	0
 10636   00302E  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 10637   003030  0E00               	movlw	0
 10638   003032  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 10639   003034  0E00               	movlw	0
 10640   003036  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 10641   003038                     l14539:
 10642                           
 10643                           ; BSR set to: 1
 10644                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
 10645   003038  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 10646   00303C  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 10647   003040  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 10648   003044  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 10649   003048  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 10650   00304C  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 10651   003050  ECBC  F025         	call	_get_fat	;wreg free
 10652   003054  C0D3  F113         	movff	?_get_fat,create_chain@cs
 10653   003058  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 10654   00305C  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 10655   003060  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 10656   003064                     
 10657                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 10658   003064  0101               	movlb	1	; () banked
 10659   003066  0513               	decf	create_chain@cs& (0+255),w,b
 10660   003068  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10661   00306A  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10662   00306C  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 10663   00306E  B4D8               	btfsc	status,2,c
 10664   003070  EF3C  F018         	goto	u16861
 10665   003074  EF3E  F018         	goto	u16860
 10666   003078                     u16861:
 10667   003078  EF8C  F017         	goto	l14517
 10668   00307C                     u16860:
 10669   00307C                     
 10670                           ; BSR set to: 1
 10671   00307C  2913               	incf	create_chain@cs& (0+255),w,b
 10672   00307E  E10A               	bnz	u16871
 10673   003080  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 10674   003082  E108               	bnz	u16871
 10675   003084  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 10676   003086  E106               	bnz	u16871
 10677   003088  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 10678   00308A  A4D8               	btfss	status,2,c
 10679   00308C  EF4A  F018         	goto	u16871
 10680   003090  EF4C  F018         	goto	u16870
 10681   003094                     u16871:
 10682   003094  EF4E  F018         	goto	l14545
 10683   003098                     u16870:
 10684   003098  EF8C  F017         	goto	l14517
 10685   00309C                     l14545:
 10686                           
 10687                           ; BSR set to: 1
 10688                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
 10689   00309C  5113               	movf	create_chain@cs& (0+255),w,b
 10690   00309E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10691   0030A0  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10692   0030A2  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 10693   0030A4  B4D8               	btfsc	status,2,c
 10694   0030A6  EF57  F018         	goto	u16881
 10695   0030AA  EF59  F018         	goto	u16880
 10696   0030AE                     u16881:
 10697   0030AE  EF9D  F018         	goto	l14557
 10698   0030B2                     u16880:
 10699   0030B2                     
 10700                           ; BSR set to: 1
 10701                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
 10702   0030B2  EE20 F00B          	lfsr	2,11
 10703   0030B6  5111               	movf	create_chain@fs& (0+255),w,b
 10704   0030B8  26D9               	addwf	fsr2l,f,c
 10705   0030BA  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10706   0030BC  22DA               	addwfc	fsr2h,f,c
 10707   0030BE  006F FF78  F113    	movff	postinc2,create_chain@cs
 10708   0030C4  006F FF78  F114    	movff	postinc2,create_chain@cs+1
 10709   0030CA  006F FF78  F115    	movff	postinc2,create_chain@cs+2
 10710   0030D0  006F FF78  F116    	movff	postinc2,create_chain@cs+3
 10711   0030D6                     
 10712                           ; BSR set to: 1
 10713                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 10714   0030D6  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 10715   0030D8  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10716   0030DA  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10717   0030DC  E109               	bnz	u16890
 10718   0030DE  0E02               	movlw	2
 10719   0030E0  5D13               	subwf	create_chain@cs& (0+255),w,b
 10720   0030E2  A0D8               	btfss	status,0,c
 10721   0030E4  EF76  F018         	goto	u16891
 10722   0030E8  EF78  F018         	goto	u16890
 10723   0030EC                     u16891:
 10724   0030EC  EF95  F018         	goto	l14555
 10725   0030F0                     u16890:
 10726   0030F0                     
 10727                           ; BSR set to: 1
 10728   0030F0  EE20 F017          	lfsr	2,23
 10729   0030F4  5111               	movf	create_chain@fs& (0+255),w,b
 10730   0030F6  26D9               	addwf	fsr2l,f,c
 10731   0030F8  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10732   0030FA  22DA               	addwfc	fsr2h,f,c
 10733   0030FC  50DE               	movf	postinc2,w,c
 10734   0030FE  5D13               	subwf	create_chain@cs& (0+255),w,b
 10735   003100  50DE               	movf	postinc2,w,c
 10736   003102  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 10737   003104  50DE               	movf	postinc2,w,c
 10738   003106  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 10739   003108  50DE               	movf	postinc2,w,c
 10740   00310A  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 10741   00310C  B0D8               	btfsc	status,0,c
 10742   00310E  EF8B  F018         	goto	u16901
 10743   003112  EF8D  F018         	goto	u16900
 10744   003116                     u16901:
 10745   003116  EF95  F018         	goto	l14555
 10746   00311A                     u16900:
 10747   00311A                     
 10748                           ; BSR set to: 1
 10749   00311A  C113  F109         	movff	create_chain@cs,create_chain@scl
 10750   00311E  C114  F10A         	movff	create_chain@cs+1,create_chain@scl+1
 10751   003122  C115  F10B         	movff	create_chain@cs+2,create_chain@scl+2
 10752   003126  C116  F10C         	movff	create_chain@cs+3,create_chain@scl+3
 10753   00312A                     l14555:
 10754                           
 10755                           ; BSR set to: 1
 10756                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
 10757   00312A  0E00               	movlw	0
 10758   00312C  6F0D               	movwf	create_chain@ncl& (0+255),b
 10759   00312E  0E00               	movlw	0
 10760   003130  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 10761   003132  0E00               	movlw	0
 10762   003134  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 10763   003136  0E00               	movlw	0
 10764   003138  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 10765   00313A                     l14557:
 10766                           
 10767                           ; BSR set to: 1
 10768                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
 10769   00313A  510D               	movf	create_chain@ncl& (0+255),w,b
 10770   00313C  110E               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 10771   00313E  110F               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 10772   003140  1110               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 10773   003142  A4D8               	btfss	status,2,c
 10774   003144  EFA6  F018         	goto	u16911
 10775   003148  EFA8  F018         	goto	u16910
 10776   00314C                     u16911:
 10777   00314C  EF35  F019         	goto	l14589
 10778   003150                     u16910:
 10779   003150                     
 10780                           ; BSR set to: 1
 10781                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
 10782   003150  C109  F10D         	movff	create_chain@scl,create_chain@ncl
 10783   003154  C10A  F10E         	movff	create_chain@scl+1,create_chain@ncl+1
 10784   003158  C10B  F10F         	movff	create_chain@scl+2,create_chain@ncl+2
 10785   00315C  C10C  F110         	movff	create_chain@scl+3,create_chain@ncl+3
 10786   003160                     l14561:
 10787                           
 10788                           ; BSR set to: 1
 10789                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
 10790   003160  0E01               	movlw	1
 10791   003162  270D               	addwf	create_chain@ncl& (0+255),f,b
 10792   003164  0E00               	movlw	0
 10793   003166  230E               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 10794   003168  230F               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 10795   00316A  2310               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 10796   00316C                     
 10797                           ; BSR set to: 1
 10798                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
 10799   00316C  EE20 F017          	lfsr	2,23
 10800   003170  5111               	movf	create_chain@fs& (0+255),w,b
 10801   003172  26D9               	addwf	fsr2l,f,c
 10802   003174  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 10803   003176  22DA               	addwfc	fsr2h,f,c
 10804   003178  50DE               	movf	postinc2,w,c
 10805   00317A  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 10806   00317C  50DE               	movf	postinc2,w,c
 10807   00317E  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 10808   003180  50DE               	movf	postinc2,w,c
 10809   003182  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 10810   003184  50DE               	movf	postinc2,w,c
 10811   003186  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 10812   003188  A0D8               	btfss	status,0,c
 10813   00318A  EFC9  F018         	goto	u16921
 10814   00318E  EFCB  F018         	goto	u16920
 10815   003192                     u16921:
 10816   003192  EFE2  F018         	goto	l14573
 10817   003196                     u16920:
 10818   003196                     
 10819                           ; BSR set to: 1
 10820                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
 10821   003196  0E02               	movlw	2
 10822   003198  6F0D               	movwf	create_chain@ncl& (0+255),b
 10823   00319A  0E00               	movlw	0
 10824   00319C  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 10825   00319E  0E00               	movlw	0
 10826   0031A0  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 10827   0031A2  0E00               	movlw	0
 10828   0031A4  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 10829   0031A6                     
 10830                           ; BSR set to: 1
 10831                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
 10832   0031A6  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 10833   0031A8  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 10834   0031AA  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 10835   0031AC  E107               	bnz	u16931
 10836   0031AE  0E02               	movlw	2
 10837   0031B0  5D09               	subwf	create_chain@scl& (0+255),w,b
 10838   0031B2  B0D8               	btfsc	status,0,c
 10839   0031B4  EFDE  F018         	goto	u16931
 10840   0031B8  EFE0  F018         	goto	u16930
 10841   0031BC                     u16931:
 10842   0031BC  EFE2  F018         	goto	l14573
 10843   0031C0                     u16930:
 10844   0031C0  EFC6  F017         	goto	l14525
 10845   0031C4                     l14573:
 10846                           
 10847                           ; BSR set to: 1
 10848                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
 10849   0031C4  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 10850   0031C8  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 10851   0031CC  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 10852   0031D0  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 10853   0031D4  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 10854   0031D8  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 10855   0031DC  ECBC  F025         	call	_get_fat	;wreg free
 10856   0031E0  C0D3  F113         	movff	?_get_fat,create_chain@cs
 10857   0031E4  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 10858   0031E8  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 10859   0031EC  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 10860   0031F0                     
 10861                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
 10862   0031F0  0101               	movlb	1	; () banked
 10863   0031F2  5113               	movf	create_chain@cs& (0+255),w,b
 10864   0031F4  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10865   0031F6  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10866   0031F8  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 10867   0031FA  A4D8               	btfss	status,2,c
 10868   0031FC  EF02  F019         	goto	u16941
 10869   003200  EF04  F019         	goto	u16940
 10870   003204                     u16941:
 10871   003204  EF06  F019         	goto	l14579
 10872   003208                     u16940:
 10873   003208  EF35  F019         	goto	l14589
 10874   00320C                     l14579:
 10875                           
 10876                           ; BSR set to: 1
 10877                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 10878   00320C  0513               	decf	create_chain@cs& (0+255),w,b
 10879   00320E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 10880   003210  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 10881   003212  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 10882   003214  B4D8               	btfsc	status,2,c
 10883   003216  EF0F  F019         	goto	u16951
 10884   00321A  EF11  F019         	goto	u16950
 10885   00321E                     u16951:
 10886   00321E  EF8C  F017         	goto	l14517
 10887   003222                     u16950:
 10888   003222                     
 10889                           ; BSR set to: 1
 10890   003222  2913               	incf	create_chain@cs& (0+255),w,b
 10891   003224  E10A               	bnz	u16961
 10892   003226  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 10893   003228  E108               	bnz	u16961
 10894   00322A  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 10895   00322C  E106               	bnz	u16961
 10896   00322E  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 10897   003230  A4D8               	btfss	status,2,c
 10898   003232  EF1D  F019         	goto	u16961
 10899   003236  EF1F  F019         	goto	u16960
 10900   00323A                     u16961:
 10901   00323A  EF21  F019         	goto	l14583
 10902   00323E                     u16960:
 10903   00323E  EF8C  F017         	goto	l14517
 10904   003242                     l14583:
 10905                           
 10906                           ; BSR set to: 1
 10907                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
 10908   003242  5109               	movf	create_chain@scl& (0+255),w,b
 10909   003244  190D               	xorwf	create_chain@ncl& (0+255),w,b
 10910   003246  E10D               	bnz	u16971
 10911   003248  510A               	movf	(create_chain@scl+1)& (0+255),w,b
 10912   00324A  190E               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 10913   00324C  E10A               	bnz	u16971
 10914   00324E  510B               	movf	(create_chain@scl+2)& (0+255),w,b
 10915   003250  190F               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 10916   003252  E107               	bnz	u16971
 10917   003254  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 10918   003256  1910               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 10919   003258  A4D8               	btfss	status,2,c
 10920   00325A  EF31  F019         	goto	u16971
 10921   00325E  EF33  F019         	goto	u16970
 10922   003262                     u16971:
 10923   003262  EFB0  F018         	goto	l14561
 10924   003266                     u16970:
 10925   003266  EFC6  F017         	goto	l14525
 10926   00326A                     l14589:
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 10930   00326A  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 10931   00326E  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 10932   003272  C10D  F0D5         	movff	create_chain@ncl,put_fat@clst
 10933   003276  C10E  F0D6         	movff	create_chain@ncl+1,put_fat@clst+1
 10934   00327A  C10F  F0D7         	movff	create_chain@ncl+2,put_fat@clst+2
 10935   00327E  C110  F0D8         	movff	create_chain@ncl+3,put_fat@clst+3
 10936   003282  0EFF               	movlw	255
 10937   003284  0100               	movlb	0	; () banked
 10938   003286  6FD9               	movwf	put_fat@val& (0+255),b
 10939   003288  0EFF               	movlw	255
 10940   00328A  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 10941   00328C  0EFF               	movlw	255
 10942   00328E  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 10943   003290  0EFF               	movlw	255
 10944   003292  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 10945   003294  ECF0  F019         	call	_put_fat	;wreg free
 10946   003298  0101               	movlb	1	; () banked
 10947   00329A  6F08               	movwf	create_chain@res& (0+255),b
 10948   00329C                     
 10949                           ; BSR set to: 1
 10950                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
 10951   00329C  5108               	movf	create_chain@res& (0+255),w,b
 10952   00329E  A4D8               	btfss	status,2,c
 10953   0032A0  EF54  F019         	goto	u16981
 10954   0032A4  EF56  F019         	goto	u16980
 10955   0032A8                     u16981:
 10956   0032A8  EF7A  F019         	goto	l14597
 10957   0032AC                     u16980:
 10958   0032AC                     
 10959                           ; BSR set to: 1
 10960   0032AC  0100               	movlb	0	; () banked
 10961   0032AE  51F6               	movf	create_chain@clst& (0+255),w,b
 10962   0032B0  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 10963   0032B2  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 10964   0032B4  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 10965   0032B6  B4D8               	btfsc	status,2,c
 10966   0032B8  EF60  F019         	goto	u16991
 10967   0032BC  EF62  F019         	goto	u16990
 10968   0032C0                     u16991:
 10969   0032C0  EF7A  F019         	goto	l14597
 10970   0032C4                     u16990:
 10971   0032C4                     
 10972                           ; BSR set to: 0
 10973                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
 10974   0032C4  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 10975   0032C8  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 10976   0032CC  C0F6  F0D5         	movff	create_chain@clst,put_fat@clst
 10977   0032D0  C0F7  F0D6         	movff	create_chain@clst+1,put_fat@clst+1
 10978   0032D4  C0F8  F0D7         	movff	create_chain@clst+2,put_fat@clst+2
 10979   0032D8  C0F9  F0D8         	movff	create_chain@clst+3,put_fat@clst+3
 10980   0032DC  C10D  F0D9         	movff	create_chain@ncl,put_fat@val
 10981   0032E0  C10E  F0DA         	movff	create_chain@ncl+1,put_fat@val+1
 10982   0032E4  C10F  F0DB         	movff	create_chain@ncl+2,put_fat@val+2
 10983   0032E8  C110  F0DC         	movff	create_chain@ncl+3,put_fat@val+3
 10984   0032EC  ECF0  F019         	call	_put_fat	;wreg free
 10985   0032F0  0101               	movlb	1	; () banked
 10986   0032F2  6F08               	movwf	create_chain@res& (0+255),b
 10987   0032F4                     l14597:
 10988                           
 10989                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
 10990   0032F4  0101               	movlb	1	; () banked
 10991   0032F6  5108               	movf	create_chain@res& (0+255),w,b
 10992   0032F8  A4D8               	btfss	status,2,c
 10993   0032FA  EF81  F019         	goto	u17001
 10994   0032FE  EF83  F019         	goto	u17000
 10995   003302                     u17001:
 10996   003302  EFD1  F019         	goto	l14605
 10997   003306                     u17000:
 10998   003306                     
 10999                           ; BSR set to: 1
 11000                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
 11001   003306  EE20 F00B          	lfsr	2,11
 11002   00330A  5111               	movf	create_chain@fs& (0+255),w,b
 11003   00330C  26D9               	addwf	fsr2l,f,c
 11004   00330E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11005   003310  22DA               	addwfc	fsr2h,f,c
 11006   003312  0060  F437  FFDE   	movff	create_chain@ncl,postinc2
 11007   003318  0060  F43B  FFDE   	movff	create_chain@ncl+1,postinc2
 11008   00331E  0060  F43F  FFDE   	movff	create_chain@ncl+2,postinc2
 11009   003324  0060  F443  FFDE   	movff	create_chain@ncl+3,postinc2
 11010   00332A                     
 11011                           ; BSR set to: 1
 11012                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
 11013   00332A  EE20 F00F          	lfsr	2,15
 11014   00332E  5111               	movf	create_chain@fs& (0+255),w,b
 11015   003330  26D9               	addwf	fsr2l,f,c
 11016   003332  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11017   003334  22DA               	addwfc	fsr2h,f,c
 11018   003336  EE10 F017          	lfsr	1,23
 11019   00333A  5111               	movf	create_chain@fs& (0+255),w,b
 11020   00333C  26E1               	addwf	fsr1l,f,c
 11021   00333E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11022   003340  22E2               	addwfc	fsr1h,f,c
 11023   003342  0EFE               	movlw	254
 11024   003344  24E6               	addwf	postinc1,w,c
 11025   003346  6F04               	movwf	(??_create_chain+4)& (0+255),b
 11026   003348  0EFF               	movlw	255
 11027   00334A  20E6               	addwfc	postinc1,w,c
 11028   00334C  6F05               	movwf	(??_create_chain+5)& (0+255),b
 11029   00334E  0EFF               	movlw	255
 11030   003350  20E6               	addwfc	postinc1,w,c
 11031   003352  6F06               	movwf	(??_create_chain+6)& (0+255),b
 11032   003354  0EFF               	movlw	255
 11033   003356  20E6               	addwfc	postinc1,w,c
 11034   003358  6F07               	movwf	(??_create_chain+7)& (0+255),b
 11035   00335A  50DE               	movf	postinc2,w,c
 11036   00335C  5D04               	subwf	(??_create_chain+4)& (0+255),w,b
 11037   00335E  50DE               	movf	postinc2,w,c
 11038   003360  5905               	subwfb	(??_create_chain+5)& (0+255),w,b
 11039   003362  50DE               	movf	postinc2,w,c
 11040   003364  5906               	subwfb	(??_create_chain+6)& (0+255),w,b
 11041   003366  50DE               	movf	postinc2,w,c
 11042   003368  5907               	subwfb	(??_create_chain+7)& (0+255),w,b
 11043   00336A  A0D8               	btfss	status,0,c
 11044   00336C  EFBA  F019         	goto	u17011
 11045   003370  EFBC  F019         	goto	u17010
 11046   003374                     u17011:
 11047   003374  EFC7  F019         	goto	l1016
 11048   003378                     u17010:
 11049   003378                     
 11050                           ; BSR set to: 1
 11051   003378  EE20 F00F          	lfsr	2,15
 11052   00337C  5111               	movf	create_chain@fs& (0+255),w,b
 11053   00337E  26D9               	addwf	fsr2l,f,c
 11054   003380  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11055   003382  22DA               	addwfc	fsr2h,f,c
 11056   003384  06DE               	decf	postinc2,f,c
 11057   003386  0E00               	movlw	0
 11058   003388  5ADE               	subwfb	postinc2,f,c
 11059   00338A  5ADE               	subwfb	postinc2,f,c
 11060   00338C  5ADE               	subwfb	postinc2,f,c
 11061   00338E                     l1016:
 11062                           
 11063                           ; BSR set to: 1
 11064                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
 11065   00338E  EE20 F004          	lfsr	2,4
 11066   003392  5111               	movf	create_chain@fs& (0+255),w,b
 11067   003394  26D9               	addwf	fsr2l,f,c
 11068   003396  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11069   003398  22DA               	addwfc	fsr2h,f,c
 11070   00339A  0E00               	movlw	0
 11071   00339C  80DB               	bsf	plusw2,0,c
 11072                           
 11073                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
 11074   00339E  EFE7  F019         	goto	l1017
 11075   0033A2                     l14605:
 11076                           
 11077                           ; BSR set to: 1
 11078                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 11079   0033A2  0508               	decf	create_chain@res& (0+255),w,b
 11080   0033A4  B4D8               	btfsc	status,2,c
 11081   0033A6  EFD7  F019         	goto	u17021
 11082   0033AA  EFD9  F019         	goto	u17020
 11083   0033AE                     u17021:
 11084   0033AE  EFE3  F019         	goto	l1019
 11085   0033B2                     u17020:
 11086   0033B2                     
 11087                           ; BSR set to: 1
 11088   0033B2  0E01               	movlw	1
 11089   0033B4  6F0D               	movwf	create_chain@ncl& (0+255),b
 11090   0033B6  0E00               	movlw	0
 11091   0033B8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11092   0033BA  0E00               	movlw	0
 11093   0033BC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11094   0033BE  0E00               	movlw	0
 11095   0033C0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11096   0033C2  EFE7  F019         	goto	l1017
 11097   0033C6                     l1019:
 11098                           
 11099                           ; BSR set to: 1
 11100   0033C6  690D               	setf	create_chain@ncl& (0+255),b
 11101   0033C8  690E               	setf	(create_chain@ncl+1)& (0+255),b
 11102   0033CA  690F               	setf	(create_chain@ncl+2)& (0+255),b
 11103   0033CC  6910               	setf	(create_chain@ncl+3)& (0+255),b
 11104   0033CE                     l1017:
 11105                           
 11106                           ; BSR set to: 1
 11107                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
 11108   0033CE  C10D  F0F4         	movff	create_chain@ncl,?_create_chain
 11109   0033D2  C10E  F0F5         	movff	create_chain@ncl+1,?_create_chain+1
 11110   0033D6  C10F  F0F6         	movff	create_chain@ncl+2,?_create_chain+2
 11111   0033DA  C110  F0F7         	movff	create_chain@ncl+3,?_create_chain+3
 11112   0033DE                     l993:
 11113   0033DE  0012               	return		;funcret
 11114   0033E0                     __end_of_create_chain:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function _put_fat *****************
 11118 ;; Defined at:
 11119 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  fs              2  115[BANK0 ] PTR struct .
 11122 ;;		 -> FatFs(563), NULL(0), 
 11123 ;;  clst            4  117[BANK0 ] unsigned long 
 11124 ;;  val             4  121[BANK0 ] unsigned long 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  bc              2  145[BANK0 ] unsigned int 
 11127 ;;  p               2  143[BANK0 ] PTR unsigned char 
 11128 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 11129 ;;  res             1  147[BANK0 ] enum E68
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      enum E68
 11132 ;; Registers used:
 11133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11139 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11141 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;Total ram usage:       33 bytes
 11144 ;; Hardware stack levels used: 1
 11145 ;; Hardware stack levels required when called: 12
 11146 ;; This function calls:
 11147 ;;		_ld_dword
 11148 ;;		_move_window
 11149 ;;		_st_dword
 11150 ;;		_st_word
 11151 ;; This function is called by:
 11152 ;;		_remove_chain
 11153 ;;		_create_chain
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text32
 11158   0033E0                     __ptext32:
 11159                           	callstack 0
 11160   0033E0                     _put_fat:
 11161                           	callstack 15
 11162   0033E0                     
 11163                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 11164   0033E0  0E02               	movlw	2
 11165   0033E2  0100               	movlb	0	; () banked
 11166   0033E4  6FF3               	movwf	put_fat@res& (0+255),b
 11167   0033E6                     
 11168                           ; BSR set to: 0
 11169                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 11170   0033E6  51D8               	movf	(put_fat@clst+3)& (0+255),w,b
 11171   0033E8  11D7               	iorwf	(put_fat@clst+2)& (0+255),w,b
 11172   0033EA  11D6               	iorwf	(put_fat@clst+1)& (0+255),w,b
 11173   0033EC  E109               	bnz	u16630
 11174   0033EE  0E02               	movlw	2
 11175   0033F0  5DD5               	subwf	put_fat@clst& (0+255),w,b
 11176   0033F2  A0D8               	btfss	status,0,c
 11177   0033F4  EFFE  F019         	goto	u16631
 11178   0033F8  EF00  F01A         	goto	u16630
 11179   0033FC                     u16631:
 11180   0033FC  EF80  F01C         	goto	l14479
 11181   003400                     u16630:
 11182   003400                     
 11183                           ; BSR set to: 0
 11184   003400  EE20 F017          	lfsr	2,23
 11185   003404  51D3               	movf	put_fat@fs& (0+255),w,b
 11186   003406  26D9               	addwf	fsr2l,f,c
 11187   003408  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11188   00340A  22DA               	addwfc	fsr2h,f,c
 11189   00340C  50DE               	movf	postinc2,w,c
 11190   00340E  5DD5               	subwf	put_fat@clst& (0+255),w,b
 11191   003410  50DE               	movf	postinc2,w,c
 11192   003412  59D6               	subwfb	(put_fat@clst+1)& (0+255),w,b
 11193   003414  50DE               	movf	postinc2,w,c
 11194   003416  59D7               	subwfb	(put_fat@clst+2)& (0+255),w,b
 11195   003418  50DE               	movf	postinc2,w,c
 11196   00341A  59D8               	subwfb	(put_fat@clst+3)& (0+255),w,b
 11197   00341C  B0D8               	btfsc	status,0,c
 11198   00341E  EF13  F01A         	goto	u16641
 11199   003422  EF15  F01A         	goto	u16640
 11200   003426                     u16641:
 11201   003426  EF80  F01C         	goto	l14479
 11202   00342A                     u16640:
 11203   00342A  EF6B  F01C         	goto	l14477
 11204   00342E                     l945:
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 11208   00342E  C0D5  F0F1         	movff	put_fat@clst,put_fat@bc
 11209   003432  C0D6  F0F2         	movff	put_fat@clst+1,put_fat@bc+1
 11210   003436                     
 11211                           ; BSR set to: 0
 11212   003436  90D8               	bcf	status,0,c
 11213   003438  31F2               	rrcf	(put_fat@bc+1)& (0+255),w,b
 11214   00343A  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 11215   00343C  31F1               	rrcf	put_fat@bc& (0+255),w,b
 11216   00343E  6FDD               	movwf	??_put_fat& (0+255),b
 11217   003440  51DD               	movf	??_put_fat& (0+255),w,b
 11218   003442  27F1               	addwf	put_fat@bc& (0+255),f,b
 11219   003444  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11220   003446  23F2               	addwfc	(put_fat@bc+1)& (0+255),f,b
 11221   003448                     
 11222                           ; BSR set to: 0
 11223                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 11224   003448  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 11225   00344C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 11226   003450  EE20 F023          	lfsr	2,35
 11227   003454  51D3               	movf	put_fat@fs& (0+255),w,b
 11228   003456  26D9               	addwf	fsr2l,f,c
 11229   003458  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11230   00345A  22DA               	addwfc	fsr2h,f,c
 11231   00345C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 11232   003462  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 11233   003468  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 11234   00346E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 11235   003474  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 11236   003478  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 11237   00347C  0E09               	movlw	9
 11238   00347E  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 11239   003480                     u16655:
 11240   003480  90D8               	bcf	status,0,c
 11241   003482  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 11242   003484  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 11243   003486  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 11244   003488  EF40  F01A         	goto	u16655
 11245   00348C  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 11246   00348E  25DD               	addwf	??_put_fat& (0+255),w,b
 11247   003490  6FCA               	movwf	move_window@sector& (0+255),b
 11248   003492  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 11249   003494  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 11250   003496  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11251   003498  0E00               	movlw	0
 11252   00349A  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 11253   00349C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11254   00349E  0E00               	movlw	0
 11255   0034A0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 11256   0034A2  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11257   0034A4  EC9A  F03E         	call	_move_window	;wreg free
 11258   0034A8  0100               	movlb	0	; () banked
 11259   0034AA  6FF3               	movwf	put_fat@res& (0+255),b
 11260   0034AC                     
 11261                           ; BSR set to: 0
 11262                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 11263   0034AC  51F3               	movf	put_fat@res& (0+255),w,b
 11264   0034AE  B4D8               	btfsc	status,2,c
 11265   0034B0  EF5C  F01A         	goto	u16661
 11266   0034B4  EF5E  F01A         	goto	u16660
 11267   0034B8                     u16661:
 11268   0034B8  EF60  F01A         	goto	l14423
 11269   0034BC                     u16660:
 11270   0034BC  EF80  F01C         	goto	l14479
 11271   0034C0                     l14423:
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 11275   0034C0  0EFF               	movlw	255
 11276   0034C2  15F1               	andwf	put_fat@bc& (0+255),w,b
 11277   0034C4  6FDD               	movwf	??_put_fat& (0+255),b
 11278   0034C6  0E01               	movlw	1
 11279   0034C8  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 11280   0034CA  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 11281   0034CC  51DD               	movf	??_put_fat& (0+255),w,b
 11282   0034CE  25D3               	addwf	put_fat@fs& (0+255),w,b
 11283   0034D0  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11284   0034D2  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11285   0034D4  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 11286   0034D6  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 11287   0034D8  0E33               	movlw	51
 11288   0034DA  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 11289   0034DC  6FEF               	movwf	put_fat@p& (0+255),b
 11290   0034DE  0E00               	movlw	0
 11291   0034E0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 11292   0034E2  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 11293   0034E4                     
 11294                           ; BSR set to: 0
 11295   0034E4  4BF1               	infsnz	put_fat@bc& (0+255),f,b
 11296   0034E6  2BF2               	incf	(put_fat@bc+1)& (0+255),f,b
 11297   0034E8                     
 11298                           ; BSR set to: 0
 11299                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 11300   0034E8  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 11301   0034EA  EF79  F01A         	goto	u16671
 11302   0034EE  EF7B  F01A         	goto	u16670
 11303   0034F2                     u16671:
 11304   0034F2  EF80  F01A         	goto	l14431
 11305   0034F6                     u16670:
 11306   0034F6                     
 11307                           ; BSR set to: 0
 11308   0034F6  C0D9  F0EB         	movff	put_fat@val,_put_fat$2606
 11309   0034FA  6BEC               	clrf	(_put_fat$2606+1)& (0+255),b
 11310   0034FC  EF9C  F01A         	goto	l14433
 11311   003500                     l14431:
 11312                           
 11313                           ; BSR set to: 0
 11314   003500  51D9               	movf	put_fat@val& (0+255),w,b
 11315   003502  6FDD               	movwf	??_put_fat& (0+255),b
 11316   003504  6BDE               	clrf	(??_put_fat+1)& (0+255),b
 11317   003506  3BDD               	swapf	??_put_fat& (0+255),f,b
 11318   003508  3BDE               	swapf	(??_put_fat+1)& (0+255),f,b
 11319   00350A  0EF0               	movlw	240
 11320   00350C  17DE               	andwf	(??_put_fat+1)& (0+255),f,b
 11321   00350E  51DD               	movf	??_put_fat& (0+255),w,b
 11322   003510  0B0F               	andlw	15
 11323   003512  13DE               	iorwf	(??_put_fat+1)& (0+255),f,b
 11324   003514  0EF0               	movlw	240
 11325   003516  17DD               	andwf	??_put_fat& (0+255),f,b
 11326   003518  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 11327   00351E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 11328   003524  50DF               	movf	indf2,w,c
 11329   003526  0B0F               	andlw	15
 11330   003528  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11331   00352A  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 11332   00352C  51DD               	movf	??_put_fat& (0+255),w,b
 11333   00352E  11DF               	iorwf	(??_put_fat+2)& (0+255),w,b
 11334   003530  6FEB               	movwf	_put_fat$2606& (0+255),b
 11335   003532  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11336   003534  11E0               	iorwf	(??_put_fat+3)& (0+255),w,b
 11337   003536  6FEC               	movwf	(_put_fat$2606+1)& (0+255),b
 11338   003538                     l14433:
 11339                           
 11340                           ; BSR set to: 0
 11341   003538  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 11342   00353E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 11343   003544  0060  F3AF  FFDF   	movff	_put_fat$2606,indf2
 11344   00354A                     
 11345                           ; BSR set to: 0
 11346                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 11347   00354A  EE20 F003          	lfsr	2,3
 11348   00354E  51D3               	movf	put_fat@fs& (0+255),w,b
 11349   003550  26D9               	addwf	fsr2l,f,c
 11350   003552  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11351   003554  22DA               	addwfc	fsr2h,f,c
 11352   003556  0E01               	movlw	1
 11353   003558  6EDF               	movwf	indf2,c
 11354   00355A                     
 11355                           ; BSR set to: 0
 11356                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 11357   00355A  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 11358   00355E  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 11359   003562  EE20 F023          	lfsr	2,35
 11360   003566  51D3               	movf	put_fat@fs& (0+255),w,b
 11361   003568  26D9               	addwf	fsr2l,f,c
 11362   00356A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11363   00356C  22DA               	addwfc	fsr2h,f,c
 11364   00356E  006F FF78  F0DD    	movff	postinc2,??_put_fat
 11365   003574  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 11366   00357A  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 11367   003580  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 11368   003586  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 11369   00358A  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 11370   00358E  0E09               	movlw	9
 11371   003590  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 11372   003592                     u16685:
 11373   003592  90D8               	bcf	status,0,c
 11374   003594  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 11375   003596  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 11376   003598  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 11377   00359A  EFC9  F01A         	goto	u16685
 11378   00359E  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 11379   0035A0  25DD               	addwf	??_put_fat& (0+255),w,b
 11380   0035A2  6FCA               	movwf	move_window@sector& (0+255),b
 11381   0035A4  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 11382   0035A6  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 11383   0035A8  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11384   0035AA  0E00               	movlw	0
 11385   0035AC  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 11386   0035AE  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11387   0035B0  0E00               	movlw	0
 11388   0035B2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 11389   0035B4  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11390   0035B6  EC9A  F03E         	call	_move_window	;wreg free
 11391   0035BA  0100               	movlb	0	; () banked
 11392   0035BC  6FF3               	movwf	put_fat@res& (0+255),b
 11393   0035BE                     
 11394                           ; BSR set to: 0
 11395                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 11396   0035BE  51F3               	movf	put_fat@res& (0+255),w,b
 11397   0035C0  B4D8               	btfsc	status,2,c
 11398   0035C2  EFE5  F01A         	goto	u16691
 11399   0035C6  EFE7  F01A         	goto	u16690
 11400   0035CA                     u16691:
 11401   0035CA  EFE9  F01A         	goto	l14443
 11402   0035CE                     u16690:
 11403   0035CE  EF80  F01C         	goto	l14479
 11404   0035D2                     l14443:
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 11408   0035D2  0EFF               	movlw	255
 11409   0035D4  15F1               	andwf	put_fat@bc& (0+255),w,b
 11410   0035D6  6FDD               	movwf	??_put_fat& (0+255),b
 11411   0035D8  0E01               	movlw	1
 11412   0035DA  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 11413   0035DC  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 11414   0035DE  51DD               	movf	??_put_fat& (0+255),w,b
 11415   0035E0  25D3               	addwf	put_fat@fs& (0+255),w,b
 11416   0035E2  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11417   0035E4  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11418   0035E6  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 11419   0035E8  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 11420   0035EA  0E33               	movlw	51
 11421   0035EC  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 11422   0035EE  6FEF               	movwf	put_fat@p& (0+255),b
 11423   0035F0  0E00               	movlw	0
 11424   0035F2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 11425   0035F4  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 11426   0035F6                     
 11427                           ; BSR set to: 0
 11428                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 11429   0035F6  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 11430   0035F8  EF00  F01B         	goto	u16701
 11431   0035FC  EF02  F01B         	goto	u16700
 11432   003600                     u16701:
 11433   003600  EF22  F01B         	goto	l14449
 11434   003604                     u16700:
 11435   003604                     
 11436                           ; BSR set to: 0
 11437   003604  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 11438   003608  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 11439   00360C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 11440   003610  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 11441   003614  C0DE  F0DD         	movff	??_put_fat+1,??_put_fat
 11442   003618  C0DF  F0DE         	movff	??_put_fat+2,??_put_fat+1
 11443   00361C  C0E0  F0DF         	movff	??_put_fat+3,??_put_fat+2
 11444   003620  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 11445   003622  0E0F               	movlw	15
 11446   003624  17DD               	andwf	??_put_fat& (0+255),f,b
 11447   003626  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 11448   00362C  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 11449   003632  50DF               	movf	indf2,w,c
 11450   003634  0BF0               	andlw	240
 11451   003636  11DD               	iorwf	??_put_fat& (0+255),w,b
 11452   003638  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 11453   00363A  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 11454   00363C  6FED               	movwf	_put_fat$2607& (0+255),b
 11455   00363E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 11456   003640  EF38  F01B         	goto	l14451
 11457   003644                     l14449:
 11458                           
 11459                           ; BSR set to: 0
 11460   003644  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 11461   003648  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 11462   00364C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 11463   003650  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 11464   003654  0E05               	movlw	5
 11465   003656  EF32  F01B         	goto	u16710
 11466   00365A                     u16715:
 11467   00365A  90D8               	bcf	status,0,c
 11468   00365C  33E0               	rrcf	(??_put_fat+3)& (0+255),f,b
 11469   00365E  33DF               	rrcf	(??_put_fat+2)& (0+255),f,b
 11470   003660  33DE               	rrcf	(??_put_fat+1)& (0+255),f,b
 11471   003662  33DD               	rrcf	??_put_fat& (0+255),f,b
 11472   003664                     u16710:
 11473   003664  2EE8               	decfsz	wreg,f,c
 11474   003666  EF2D  F01B         	goto	u16715
 11475   00366A  51DD               	movf	??_put_fat& (0+255),w,b
 11476   00366C  6FED               	movwf	_put_fat$2607& (0+255),b
 11477   00366E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 11478   003670                     l14451:
 11479                           
 11480                           ; BSR set to: 0
 11481   003670  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 11482   003676  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 11483   00367C  0060  F3B7  FFDF   	movff	_put_fat$2607,indf2
 11484                           
 11485                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 11486   003682  EE20 F003          	lfsr	2,3
 11487   003686  51D3               	movf	put_fat@fs& (0+255),w,b
 11488   003688  26D9               	addwf	fsr2l,f,c
 11489   00368A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11490   00368C  22DA               	addwfc	fsr2h,f,c
 11491   00368E  0E01               	movlw	1
 11492   003690  6EDF               	movwf	indf2,c
 11493                           
 11494                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 11495   003692  EF80  F01C         	goto	l14479
 11496   003696                     l14453:
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 11500   003696  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 11501   00369A  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 11502   00369E  EE20 F023          	lfsr	2,35
 11503   0036A2  51D3               	movf	put_fat@fs& (0+255),w,b
 11504   0036A4  26D9               	addwf	fsr2l,f,c
 11505   0036A6  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11506   0036A8  22DA               	addwfc	fsr2h,f,c
 11507   0036AA  006F FF78  F0DD    	movff	postinc2,??_put_fat
 11508   0036B0  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 11509   0036B6  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 11510   0036BC  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 11511   0036C2  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 11512   0036C6  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 11513   0036CA  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 11514   0036CE  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 11515   0036D2  C0E2  F0E1         	movff	??_put_fat+5,??_put_fat+4
 11516   0036D6  C0E3  F0E2         	movff	??_put_fat+6,??_put_fat+5
 11517   0036DA  C0E4  F0E3         	movff	??_put_fat+7,??_put_fat+6
 11518   0036DE  6BE4               	clrf	(??_put_fat+7)& (0+255),b
 11519   0036E0  51DD               	movf	??_put_fat& (0+255),w,b
 11520   0036E2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 11521   0036E4  6FCA               	movwf	move_window@sector& (0+255),b
 11522   0036E6  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11523   0036E8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 11524   0036EA  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11525   0036EC  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 11526   0036EE  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 11527   0036F0  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11528   0036F2  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 11529   0036F4  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 11530   0036F6  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11531   0036F8  EC9A  F03E         	call	_move_window	;wreg free
 11532   0036FC  0100               	movlb	0	; () banked
 11533   0036FE  6FF3               	movwf	put_fat@res& (0+255),b
 11534   003700                     
 11535                           ; BSR set to: 0
 11536                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 11537   003700  51F3               	movf	put_fat@res& (0+255),w,b
 11538   003702  B4D8               	btfsc	status,2,c
 11539   003704  EF86  F01B         	goto	u16721
 11540   003708  EF88  F01B         	goto	u16720
 11541   00370C                     u16721:
 11542   00370C  EF8A  F01B         	goto	l14459
 11543   003710                     u16720:
 11544   003710  EF80  F01C         	goto	l14479
 11545   003714                     l14459:
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 11549   003714  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 11550   003718  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 11551   00371C  90D8               	bcf	status,0,c
 11552   00371E  37DD               	rlcf	??_put_fat& (0+255),f,b
 11553   003720  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 11554   003722  0EFF               	movlw	255
 11555   003724  15DD               	andwf	??_put_fat& (0+255),w,b
 11556   003726  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11557   003728  0E01               	movlw	1
 11558   00372A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 11559   00372C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 11560   00372E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 11561   003730  25D3               	addwf	put_fat@fs& (0+255),w,b
 11562   003732  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 11563   003734  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 11564   003736  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 11565   003738  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 11566   00373A  0E33               	movlw	51
 11567   00373C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 11568   00373E  6F60               	movwf	st_word@ptr& (0+255),b
 11569   003740  0E00               	movlw	0
 11570   003742  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 11571   003744  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 11572   003746  C0D9  F062         	movff	put_fat@val,st_word@val
 11573   00374A  C0DA  F063         	movff	put_fat@val+1,st_word@val+1
 11574   00374E  ECA5  F047         	call	_st_word	;wreg free
 11575   003752                     
 11576                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 11577   003752  0100               	movlb	0	; () banked
 11578   003754  EE20 F003          	lfsr	2,3
 11579   003758  51D3               	movf	put_fat@fs& (0+255),w,b
 11580   00375A  26D9               	addwf	fsr2l,f,c
 11581   00375C  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11582   00375E  22DA               	addwfc	fsr2h,f,c
 11583   003760  0E01               	movlw	1
 11584   003762  6EDF               	movwf	indf2,c
 11585                           
 11586                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 11587   003764  EF80  F01C         	goto	l14479
 11588   003768                     l14463:
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 11592   003768  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 11593   00376C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 11594   003770  EE20 F023          	lfsr	2,35
 11595   003774  51D3               	movf	put_fat@fs& (0+255),w,b
 11596   003776  26D9               	addwf	fsr2l,f,c
 11597   003778  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11598   00377A  22DA               	addwfc	fsr2h,f,c
 11599   00377C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 11600   003782  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 11601   003788  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 11602   00378E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 11603   003794  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 11604   003798  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 11605   00379C  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 11606   0037A0  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 11607   0037A4  0E08               	movlw	8
 11608   0037A6  EFDA  F01B         	goto	u16730
 11609   0037AA                     u16735:
 11610   0037AA  90D8               	bcf	status,0,c
 11611   0037AC  33E4               	rrcf	(??_put_fat+7)& (0+255),f,b
 11612   0037AE  33E3               	rrcf	(??_put_fat+6)& (0+255),f,b
 11613   0037B0  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 11614   0037B2  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 11615   0037B4                     u16730:
 11616   0037B4  2EE8               	decfsz	wreg,f,c
 11617   0037B6  EFD5  F01B         	goto	u16735
 11618   0037BA  51DD               	movf	??_put_fat& (0+255),w,b
 11619   0037BC  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 11620   0037BE  6FCA               	movwf	move_window@sector& (0+255),b
 11621   0037C0  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 11622   0037C2  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 11623   0037C4  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11624   0037C6  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 11625   0037C8  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 11626   0037CA  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11627   0037CC  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 11628   0037CE  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 11629   0037D0  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11630   0037D2  EC9A  F03E         	call	_move_window	;wreg free
 11631   0037D6  0100               	movlb	0	; () banked
 11632   0037D8  6FF3               	movwf	put_fat@res& (0+255),b
 11633   0037DA                     
 11634                           ; BSR set to: 0
 11635                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 11636   0037DA  51F3               	movf	put_fat@res& (0+255),w,b
 11637   0037DC  B4D8               	btfsc	status,2,c
 11638   0037DE  EFF3  F01B         	goto	u16741
 11639   0037E2  EFF5  F01B         	goto	u16740
 11640   0037E6                     u16741:
 11641   0037E6  EFF7  F01B         	goto	l14471
 11642   0037EA                     u16740:
 11643   0037EA  EF80  F01C         	goto	l14479
 11644   0037EE                     l14471:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 11648   0037EE  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 11649   0037F2  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 11650   0037F6  90D8               	bcf	status,0,c
 11651   0037F8  37DD               	rlcf	??_put_fat& (0+255),f,b
 11652   0037FA  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 11653   0037FC  90D8               	bcf	status,0,c
 11654   0037FE  37DD               	rlcf	??_put_fat& (0+255),f,b
 11655   003800  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 11656   003802  0EFF               	movlw	255
 11657   003804  15DD               	andwf	??_put_fat& (0+255),w,b
 11658   003806  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11659   003808  0E01               	movlw	1
 11660   00380A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 11661   00380C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 11662   00380E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 11663   003810  25D3               	addwf	put_fat@fs& (0+255),w,b
 11664   003812  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 11665   003814  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 11666   003816  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 11667   003818  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 11668   00381A  0E33               	movlw	51
 11669   00381C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 11670   00381E  6F60               	movwf	ld_dword@ptr& (0+255),b
 11671   003820  0E00               	movlw	0
 11672   003822  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 11673   003824  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 11674   003826  EC32  F040         	call	_ld_dword	;wreg free
 11675   00382A  0E00               	movlw	0
 11676   00382C  0100               	movlb	0	; () banked
 11677   00382E  1560               	andwf	?_ld_dword& (0+255),w,b
 11678   003830  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 11679   003832  0E00               	movlw	0
 11680   003834  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 11681   003836  6FE4               	movwf	(??_put_fat+7)& (0+255),b
 11682   003838  0E00               	movlw	0
 11683   00383A  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 11684   00383C  6FE5               	movwf	(??_put_fat+8)& (0+255),b
 11685   00383E  0EF0               	movlw	240
 11686   003840  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 11687   003842  6FE6               	movwf	(??_put_fat+9)& (0+255),b
 11688   003844  0EFF               	movlw	255
 11689   003846  15D9               	andwf	put_fat@val& (0+255),w,b
 11690   003848  6FE7               	movwf	(??_put_fat+10)& (0+255),b
 11691   00384A  0EFF               	movlw	255
 11692   00384C  15DA               	andwf	(put_fat@val+1)& (0+255),w,b
 11693   00384E  6FE8               	movwf	(??_put_fat+11)& (0+255),b
 11694   003850  0EFF               	movlw	255
 11695   003852  15DB               	andwf	(put_fat@val+2)& (0+255),w,b
 11696   003854  6FE9               	movwf	(??_put_fat+12)& (0+255),b
 11697   003856  0E0F               	movlw	15
 11698   003858  15DC               	andwf	(put_fat@val+3)& (0+255),w,b
 11699   00385A  6FEA               	movwf	(??_put_fat+13)& (0+255),b
 11700   00385C  51E3               	movf	(??_put_fat+6)& (0+255),w,b
 11701   00385E  11E7               	iorwf	(??_put_fat+10)& (0+255),w,b
 11702   003860  6FD9               	movwf	put_fat@val& (0+255),b
 11703   003862  51E4               	movf	(??_put_fat+7)& (0+255),w,b
 11704   003864  11E8               	iorwf	(??_put_fat+11)& (0+255),w,b
 11705   003866  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 11706   003868  51E5               	movf	(??_put_fat+8)& (0+255),w,b
 11707   00386A  11E9               	iorwf	(??_put_fat+12)& (0+255),w,b
 11708   00386C  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 11709   00386E  51E6               	movf	(??_put_fat+9)& (0+255),w,b
 11710   003870  11EA               	iorwf	(??_put_fat+13)& (0+255),w,b
 11711   003872  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 11712   003874                     
 11713                           ; BSR set to: 0
 11714                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 11715   003874  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 11716   003878  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 11717   00387C  90D8               	bcf	status,0,c
 11718   00387E  37DD               	rlcf	??_put_fat& (0+255),f,b
 11719   003880  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 11720   003882  90D8               	bcf	status,0,c
 11721   003884  37DD               	rlcf	??_put_fat& (0+255),f,b
 11722   003886  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 11723   003888  0EFF               	movlw	255
 11724   00388A  15DD               	andwf	??_put_fat& (0+255),w,b
 11725   00388C  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 11726   00388E  0E01               	movlw	1
 11727   003890  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 11728   003892  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 11729   003894  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 11730   003896  25D3               	addwf	put_fat@fs& (0+255),w,b
 11731   003898  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 11732   00389A  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 11733   00389C  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 11734   00389E  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 11735   0038A0  0E33               	movlw	51
 11736   0038A2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 11737   0038A4  6F60               	movwf	st_dword@ptr& (0+255),b
 11738   0038A6  0E00               	movlw	0
 11739   0038A8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 11740   0038AA  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11741   0038AC  C0D9  F062         	movff	put_fat@val,st_dword@val
 11742   0038B0  C0DA  F063         	movff	put_fat@val+1,st_dword@val+1
 11743   0038B4  C0DB  F064         	movff	put_fat@val+2,st_dword@val+2
 11744   0038B8  C0DC  F065         	movff	put_fat@val+3,st_dword@val+3
 11745   0038BC  EC21  F042         	call	_st_dword	;wreg free
 11746   0038C0                     
 11747                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 11748   0038C0  0100               	movlb	0	; () banked
 11749   0038C2  EE20 F003          	lfsr	2,3
 11750   0038C6  51D3               	movf	put_fat@fs& (0+255),w,b
 11751   0038C8  26D9               	addwf	fsr2l,f,c
 11752   0038CA  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11753   0038CC  22DA               	addwfc	fsr2h,f,c
 11754   0038CE  0E01               	movlw	1
 11755   0038D0  6EDF               	movwf	indf2,c
 11756                           
 11757                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 11758   0038D2  EF80  F01C         	goto	l14479
 11759   0038D6                     l14477:
 11760                           
 11761                           ; BSR set to: 0
 11762   0038D6  0060  F34F  FFD9   	movff	put_fat@fs,fsr2l
 11763   0038DC  0060  F353  FFDA   	movff	put_fat@fs+1,fsr2h
 11764   0038E2  50DF               	movf	indf2,w,c
 11765                           
 11766                           ; Switch size 1, requested type "simple"
 11767                           ; Number of cases is 3, Range of values is 1 to 3
 11768                           ; switch strategies available:
 11769                           ; Name         Instructions Cycles
 11770                           ; simple_byte           10     6 (average)
 11771                           ;	Chosen strategy is simple_byte
 11772   0038E4  0A01               	xorlw	1	; case 1
 11773   0038E6  B4D8               	btfsc	status,2,c
 11774   0038E8  EF17  F01A         	goto	l945
 11775   0038EC  0A03               	xorlw	3	; case 2
 11776   0038EE  B4D8               	btfsc	status,2,c
 11777   0038F0  EF4B  F01B         	goto	l14453
 11778   0038F4  0A01               	xorlw	1	; case 3
 11779   0038F6  B4D8               	btfsc	status,2,c
 11780   0038F8  EFB4  F01B         	goto	l14463
 11781   0038FC  EF80  F01C         	goto	l14479
 11782   003900                     l14479:
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 11786   003900  51F3               	movf	put_fat@res& (0+255),w,b
 11787   003902                     
 11788                           ; BSR set to: 0
 11789   003902  0012               	return		;funcret
 11790   003904                     __end_of_put_fat:
 11791                           	callstack 0
 11792                           
 11793 ;; *************** function _get_fat *****************
 11794 ;; Defined at:
 11795 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;  obj             2  115[BANK0 ] PTR struct .
 11798 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 11799 ;;  clst            4  117[BANK0 ] unsigned long 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  val             4  133[BANK0 ] unsigned long 
 11802 ;;  fs              2  139[BANK0 ] PTR struct .
 11803 ;;		 -> FatFs(563), NULL(0), 
 11804 ;;  bc              2  137[BANK0 ] unsigned int 
 11805 ;;  wc              2  131[BANK0 ] unsigned int 
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  4  115[BANK0 ] unsigned long 
 11808 ;; Registers used:
 11809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11819 ;;Total ram usage:       26 bytes
 11820 ;; Hardware stack levels used: 1
 11821 ;; Hardware stack levels required when called: 12
 11822 ;; This function calls:
 11823 ;;		_ld_dword
 11824 ;;		_ld_word
 11825 ;;		_move_window
 11826 ;; This function is called by:
 11827 ;;		_remove_chain
 11828 ;;		_create_chain
 11829 ;;		_dir_sdi
 11830 ;;		_dir_next
 11831 ;;		_f_open
 11832 ;;		_f_read
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           	psect	text33
 11837   004B78                     __ptext33:
 11838                           	callstack 0
 11839   004B78                     _get_fat:
 11840                           	callstack 15
 11841   004B78                     
 11842                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 11843   004B78  0060  F34F  FFD9   	movff	get_fat@obj,fsr2l
 11844   004B7E  0060  F353  FFDA   	movff	get_fat@obj+1,fsr2h
 11845   004B84  006F FF78  F0EB    	movff	postinc2,get_fat@fs
 11846   004B8A  006F FF74  F0EC    	movff	postdec2,get_fat@fs+1
 11847   004B90                     
 11848                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 11849   004B90  0100               	movlb	0	; () banked
 11850   004B92  51D8               	movf	(get_fat@clst+3)& (0+255),w,b
 11851   004B94  11D7               	iorwf	(get_fat@clst+2)& (0+255),w,b
 11852   004B96  11D6               	iorwf	(get_fat@clst+1)& (0+255),w,b
 11853   004B98  E109               	bnz	u16520
 11854   004B9A  0E02               	movlw	2
 11855   004B9C  5DD5               	subwf	get_fat@clst& (0+255),w,b
 11856   004B9E  A0D8               	btfss	status,0,c
 11857   004BA0  EFD4  F025         	goto	u16521
 11858   004BA4  EFD6  F025         	goto	u16520
 11859   004BA8                     u16521:
 11860   004BA8  EFEB  F025         	goto	l14365
 11861   004BAC                     u16520:
 11862   004BAC                     
 11863                           ; BSR set to: 0
 11864   004BAC  EE20 F017          	lfsr	2,23
 11865   004BB0  51EB               	movf	get_fat@fs& (0+255),w,b
 11866   004BB2  26D9               	addwf	fsr2l,f,c
 11867   004BB4  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 11868   004BB6  22DA               	addwfc	fsr2h,f,c
 11869   004BB8  50DE               	movf	postinc2,w,c
 11870   004BBA  5DD5               	subwf	get_fat@clst& (0+255),w,b
 11871   004BBC  50DE               	movf	postinc2,w,c
 11872   004BBE  59D6               	subwfb	(get_fat@clst+1)& (0+255),w,b
 11873   004BC0  50DE               	movf	postinc2,w,c
 11874   004BC2  59D7               	subwfb	(get_fat@clst+2)& (0+255),w,b
 11875   004BC4  50DE               	movf	postinc2,w,c
 11876   004BC6  59D8               	subwfb	(get_fat@clst+3)& (0+255),w,b
 11877   004BC8  A0D8               	btfss	status,0,c
 11878   004BCA  EFE9  F025         	goto	u16531
 11879   004BCE  EFEB  F025         	goto	u16530
 11880   004BD2                     u16531:
 11881   004BD2  EFF5  F025         	goto	l922
 11882   004BD6                     u16530:
 11883   004BD6                     l14365:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 11887   004BD6  0E01               	movlw	1
 11888   004BD8  6FE5               	movwf	get_fat@val& (0+255),b
 11889   004BDA  0E00               	movlw	0
 11890   004BDC  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 11891   004BDE  0E00               	movlw	0
 11892   004BE0  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 11893   004BE2  0E00               	movlw	0
 11894   004BE4  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 11895                           
 11896                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 11897   004BE6  EFBF  F027         	goto	l925
 11898   004BEA                     l922:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 11902   004BEA  69E5               	setf	get_fat@val& (0+255),b
 11903   004BEC  69E6               	setf	(get_fat@val+1)& (0+255),b
 11904   004BEE  69E7               	setf	(get_fat@val+2)& (0+255),b
 11905   004BF0  69E8               	setf	(get_fat@val+3)& (0+255),b
 11906                           
 11907                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 11908   004BF2  EFAA  F027         	goto	l14405
 11909   004BF6                     l927:
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 11913   004BF6  C0D5  F0E9         	movff	get_fat@clst,get_fat@bc
 11914   004BFA  C0D6  F0EA         	movff	get_fat@clst+1,get_fat@bc+1
 11915   004BFE                     
 11916                           ; BSR set to: 0
 11917   004BFE  90D8               	bcf	status,0,c
 11918   004C00  31EA               	rrcf	(get_fat@bc+1)& (0+255),w,b
 11919   004C02  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 11920   004C04  31E9               	rrcf	get_fat@bc& (0+255),w,b
 11921   004C06  6FD9               	movwf	??_get_fat& (0+255),b
 11922   004C08  51D9               	movf	??_get_fat& (0+255),w,b
 11923   004C0A  27E9               	addwf	get_fat@bc& (0+255),f,b
 11924   004C0C  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 11925   004C0E  23EA               	addwfc	(get_fat@bc+1)& (0+255),f,b
 11926   004C10                     
 11927                           ; BSR set to: 0
 11928                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 11929   004C10  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 11930   004C14  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 11931   004C18  EE20 F023          	lfsr	2,35
 11932   004C1C  51EB               	movf	get_fat@fs& (0+255),w,b
 11933   004C1E  26D9               	addwf	fsr2l,f,c
 11934   004C20  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 11935   004C22  22DA               	addwfc	fsr2h,f,c
 11936   004C24  006F FF78  F0D9    	movff	postinc2,??_get_fat
 11937   004C2A  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 11938   004C30  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 11939   004C36  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 11940   004C3C  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 11941   004C40  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 11942   004C44  0E09               	movlw	9
 11943   004C46  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 11944   004C48                     u16545:
 11945   004C48  90D8               	bcf	status,0,c
 11946   004C4A  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 11947   004C4C  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 11948   004C4E  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 11949   004C50  EF24  F026         	goto	u16545
 11950   004C54  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 11951   004C56  25D9               	addwf	??_get_fat& (0+255),w,b
 11952   004C58  6FCA               	movwf	move_window@sector& (0+255),b
 11953   004C5A  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 11954   004C5C  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 11955   004C5E  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11956   004C60  0E00               	movlw	0
 11957   004C62  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 11958   004C64  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11959   004C66  0E00               	movlw	0
 11960   004C68  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 11961   004C6A  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11962   004C6C  EC9A  F03E         	call	_move_window	;wreg free
 11963   004C70  0900               	iorlw	0
 11964   004C72  B4D8               	btfsc	status,2,c
 11965   004C74  EF3E  F026         	goto	u16551
 11966   004C78  EF40  F026         	goto	u16550
 11967   004C7C                     u16551:
 11968   004C7C  EF42  F026         	goto	l14373
 11969   004C80                     u16550:
 11970   004C80  EFBF  F027         	goto	l925
 11971   004C84                     l14373:
 11972                           
 11973                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 11974   004C84  0EFF               	movlw	255
 11975   004C86  0100               	movlb	0	; () banked
 11976   004C88  15E9               	andwf	get_fat@bc& (0+255),w,b
 11977   004C8A  6FD9               	movwf	??_get_fat& (0+255),b
 11978   004C8C  0E01               	movlw	1
 11979   004C8E  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 11980   004C90  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 11981   004C92  51D9               	movf	??_get_fat& (0+255),w,b
 11982   004C94  25EB               	addwf	get_fat@fs& (0+255),w,b
 11983   004C96  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 11984   004C98  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 11985   004C9A  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 11986   004C9C  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 11987   004C9E  0E33               	movlw	51
 11988   004CA0  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 11989   004CA2  6ED9               	movwf	fsr2l,c
 11990   004CA4  0E00               	movlw	0
 11991   004CA6  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 11992   004CA8  6EDA               	movwf	fsr2h,c
 11993   004CAA  50DF               	movf	indf2,w,c
 11994   004CAC  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 11995   004CAE  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 11996   004CB0  6FE3               	movwf	get_fat@wc& (0+255),b
 11997   004CB2  6BE4               	clrf	(get_fat@wc+1)& (0+255),b
 11998   004CB4                     
 11999                           ; BSR set to: 0
 12000   004CB4  4BE9               	infsnz	get_fat@bc& (0+255),f,b
 12001   004CB6  2BEA               	incf	(get_fat@bc+1)& (0+255),f,b
 12002   004CB8                     
 12003                           ; BSR set to: 0
 12004                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 12005   004CB8  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12006   004CBC  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12007   004CC0  EE20 F023          	lfsr	2,35
 12008   004CC4  51EB               	movf	get_fat@fs& (0+255),w,b
 12009   004CC6  26D9               	addwf	fsr2l,f,c
 12010   004CC8  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12011   004CCA  22DA               	addwfc	fsr2h,f,c
 12012   004CCC  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12013   004CD2  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12014   004CD8  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12015   004CDE  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12016   004CE4  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 12017   004CE8  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 12018   004CEC  0E09               	movlw	9
 12019   004CEE  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12020   004CF0                     u16565:
 12021   004CF0  90D8               	bcf	status,0,c
 12022   004CF2  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12023   004CF4  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12024   004CF6  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 12025   004CF8  EF78  F026         	goto	u16565
 12026   004CFC  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12027   004CFE  25D9               	addwf	??_get_fat& (0+255),w,b
 12028   004D00  6FCA               	movwf	move_window@sector& (0+255),b
 12029   004D02  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12030   004D04  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 12031   004D06  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12032   004D08  0E00               	movlw	0
 12033   004D0A  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 12034   004D0C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12035   004D0E  0E00               	movlw	0
 12036   004D10  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12037   004D12  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12038   004D14  EC9A  F03E         	call	_move_window	;wreg free
 12039   004D18  0900               	iorlw	0
 12040   004D1A  B4D8               	btfsc	status,2,c
 12041   004D1C  EF92  F026         	goto	u16571
 12042   004D20  EF94  F026         	goto	u16570
 12043   004D24                     u16571:
 12044   004D24  EF96  F026         	goto	l14381
 12045   004D28                     u16570:
 12046   004D28  EFBF  F027         	goto	l925
 12047   004D2C                     l14381:
 12048                           
 12049                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 12050   004D2C  0EFF               	movlw	255
 12051   004D2E  0100               	movlb	0	; () banked
 12052   004D30  15E9               	andwf	get_fat@bc& (0+255),w,b
 12053   004D32  6FD9               	movwf	??_get_fat& (0+255),b
 12054   004D34  0E01               	movlw	1
 12055   004D36  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 12056   004D38  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12057   004D3A  51D9               	movf	??_get_fat& (0+255),w,b
 12058   004D3C  25EB               	addwf	get_fat@fs& (0+255),w,b
 12059   004D3E  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12060   004D40  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12061   004D42  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12062   004D44  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12063   004D46  0E33               	movlw	51
 12064   004D48  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 12065   004D4A  6ED9               	movwf	fsr2l,c
 12066   004D4C  0E00               	movlw	0
 12067   004D4E  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12068   004D50  6EDA               	movwf	fsr2h,c
 12069   004D52  50DF               	movf	indf2,w,c
 12070   004D54  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12071   004D56  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12072   004D58  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12073   004D5A  6BDE               	clrf	(??_get_fat+5)& (0+255),b
 12074   004D5C  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12075   004D5E  13E3               	iorwf	get_fat@wc& (0+255),f,b
 12076   004D60  51DF               	movf	(??_get_fat+6)& (0+255),w,b
 12077   004D62  13E4               	iorwf	(get_fat@wc+1)& (0+255),f,b
 12078   004D64                     
 12079                           ; BSR set to: 0
 12080                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 12081   004D64  B1D5               	btfsc	get_fat@clst& (0+255),0,b
 12082   004D66  EFB7  F026         	goto	u16581
 12083   004D6A  EFB9  F026         	goto	u16580
 12084   004D6E                     u16581:
 12085   004D6E  EFC1  F026         	goto	l14387
 12086   004D72                     u16580:
 12087   004D72                     
 12088                           ; BSR set to: 0
 12089   004D72  0EFF               	movlw	255
 12090   004D74  15E3               	andwf	get_fat@wc& (0+255),w,b
 12091   004D76  6FE1               	movwf	_get_fat$2577& (0+255),b
 12092   004D78  0E0F               	movlw	15
 12093   004D7A  15E4               	andwf	(get_fat@wc+1)& (0+255),w,b
 12094   004D7C  6FE2               	movwf	(_get_fat$2577+1)& (0+255),b
 12095   004D7E  EFD1  F026         	goto	l14389
 12096   004D82                     l14387:
 12097                           
 12098                           ; BSR set to: 0
 12099   004D82  C0E3  F0D9         	movff	get_fat@wc,??_get_fat
 12100   004D86  C0E4  F0DA         	movff	get_fat@wc+1,??_get_fat+1
 12101   004D8A  0E04               	movlw	4
 12102   004D8C  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12103   004D8E                     u16595:
 12104   004D8E  90D8               	bcf	status,0,c
 12105   004D90  33DA               	rrcf	(??_get_fat+1)& (0+255),f,b
 12106   004D92  33D9               	rrcf	??_get_fat& (0+255),f,b
 12107   004D94  2FDB               	decfsz	(??_get_fat+2)& (0+255),f,b
 12108   004D96  EFC7  F026         	goto	u16595
 12109   004D9A  C0D9  F0E1         	movff	??_get_fat,_get_fat$2577
 12110   004D9E  C0DA  F0E2         	movff	??_get_fat+1,_get_fat$2577+1
 12111   004DA2                     l14389:
 12112                           
 12113                           ; BSR set to: 0
 12114   004DA2  C0E1  F0E5         	movff	_get_fat$2577,get_fat@val
 12115   004DA6  C0E2  F0E6         	movff	_get_fat$2577+1,get_fat@val+1
 12116   004DAA  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 12117   004DAC  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 12118                           
 12119                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 12120   004DAE  EFBF  F027         	goto	l925
 12121   004DB2                     l14391:
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 12125   004DB2  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12126   004DB6  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12127   004DBA  EE20 F023          	lfsr	2,35
 12128   004DBE  51EB               	movf	get_fat@fs& (0+255),w,b
 12129   004DC0  26D9               	addwf	fsr2l,f,c
 12130   004DC2  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12131   004DC4  22DA               	addwfc	fsr2h,f,c
 12132   004DC6  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12133   004DCC  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12134   004DD2  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12135   004DD8  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12136   004DDE  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 12137   004DE2  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 12138   004DE6  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 12139   004DEA  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 12140   004DEE  C0DE  F0DD         	movff	??_get_fat+5,??_get_fat+4
 12141   004DF2  C0DF  F0DE         	movff	??_get_fat+6,??_get_fat+5
 12142   004DF6  C0E0  F0DF         	movff	??_get_fat+7,??_get_fat+6
 12143   004DFA  6BE0               	clrf	(??_get_fat+7)& (0+255),b
 12144   004DFC  51D9               	movf	??_get_fat& (0+255),w,b
 12145   004DFE  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12146   004E00  6FCA               	movwf	move_window@sector& (0+255),b
 12147   004E02  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12148   004E04  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12149   004E06  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12150   004E08  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12151   004E0A  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 12152   004E0C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12153   004E0E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12154   004E10  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 12155   004E12  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12156   004E14  EC9A  F03E         	call	_move_window	;wreg free
 12157   004E18  0900               	iorlw	0
 12158   004E1A  B4D8               	btfsc	status,2,c
 12159   004E1C  EF12  F027         	goto	u16601
 12160   004E20  EF14  F027         	goto	u16600
 12161   004E24                     u16601:
 12162   004E24  EF16  F027         	goto	l14395
 12163   004E28                     u16600:
 12164   004E28  EFBF  F027         	goto	l925
 12165   004E2C                     l14395:
 12166                           
 12167                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 12168   004E2C  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 12169   004E30  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 12170   004E34  90D8               	bcf	status,0,c
 12171   004E36  0100               	movlb	0	; () banked
 12172   004E38  37D9               	rlcf	??_get_fat& (0+255),f,b
 12173   004E3A  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 12174   004E3C  0EFF               	movlw	255
 12175   004E3E  15D9               	andwf	??_get_fat& (0+255),w,b
 12176   004E40  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12177   004E42  0E01               	movlw	1
 12178   004E44  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 12179   004E46  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12180   004E48  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12181   004E4A  25EB               	addwf	get_fat@fs& (0+255),w,b
 12182   004E4C  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12183   004E4E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12184   004E50  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12185   004E52  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 12186   004E54  0E33               	movlw	51
 12187   004E56  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12188   004E58  6F60               	movwf	ld_word@ptr& (0+255),b
 12189   004E5A  0E00               	movlw	0
 12190   004E5C  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12191   004E5E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 12192   004E60  ECF7  F046         	call	_ld_word	;wreg free
 12193   004E64  0100               	movlb	0	; () banked
 12194   004E66  C060  F0E5         	movff	?_ld_word,get_fat@val
 12195   004E6A  C061  F0E6         	movff	?_ld_word+1,get_fat@val+1
 12196   004E6E  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 12197   004E70  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 12198                           
 12199                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 12200   004E72  EFBF  F027         	goto	l925
 12201   004E76                     l14397:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 12205   004E76  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12206   004E7A  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12207   004E7E  EE20 F023          	lfsr	2,35
 12208   004E82  51EB               	movf	get_fat@fs& (0+255),w,b
 12209   004E84  26D9               	addwf	fsr2l,f,c
 12210   004E86  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12211   004E88  22DA               	addwfc	fsr2h,f,c
 12212   004E8A  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12213   004E90  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12214   004E96  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12215   004E9C  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12216   004EA2  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 12217   004EA6  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 12218   004EAA  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 12219   004EAE  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 12220   004EB2  0E08               	movlw	8
 12221   004EB4  EF61  F027         	goto	u16610
 12222   004EB8                     u16615:
 12223   004EB8  90D8               	bcf	status,0,c
 12224   004EBA  33E0               	rrcf	(??_get_fat+7)& (0+255),f,b
 12225   004EBC  33DF               	rrcf	(??_get_fat+6)& (0+255),f,b
 12226   004EBE  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12227   004EC0  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12228   004EC2                     u16610:
 12229   004EC2  2EE8               	decfsz	wreg,f,c
 12230   004EC4  EF5C  F027         	goto	u16615
 12231   004EC8  51D9               	movf	??_get_fat& (0+255),w,b
 12232   004ECA  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12233   004ECC  6FCA               	movwf	move_window@sector& (0+255),b
 12234   004ECE  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12235   004ED0  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12236   004ED2  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12237   004ED4  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12238   004ED6  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 12239   004ED8  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12240   004EDA  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12241   004EDC  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 12242   004EDE  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12243   004EE0  EC9A  F03E         	call	_move_window	;wreg free
 12244   004EE4  0900               	iorlw	0
 12245   004EE6  B4D8               	btfsc	status,2,c
 12246   004EE8  EF78  F027         	goto	u16621
 12247   004EEC  EF7A  F027         	goto	u16620
 12248   004EF0                     u16621:
 12249   004EF0  EF7C  F027         	goto	l14401
 12250   004EF4                     u16620:
 12251   004EF4  EFBF  F027         	goto	l925
 12252   004EF8                     l14401:
 12253                           
 12254                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 12255   004EF8  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 12256   004EFC  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 12257   004F00  0100               	movlb	0	; () banked
 12258   004F02  90D8               	bcf	status,0,c
 12259   004F04  37D9               	rlcf	??_get_fat& (0+255),f,b
 12260   004F06  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 12261   004F08  90D8               	bcf	status,0,c
 12262   004F0A  37D9               	rlcf	??_get_fat& (0+255),f,b
 12263   004F0C  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 12264   004F0E  0EFF               	movlw	255
 12265   004F10  15D9               	andwf	??_get_fat& (0+255),w,b
 12266   004F12  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12267   004F14  0E01               	movlw	1
 12268   004F16  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 12269   004F18  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12270   004F1A  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12271   004F1C  25EB               	addwf	get_fat@fs& (0+255),w,b
 12272   004F1E  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12273   004F20  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12274   004F22  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12275   004F24  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 12276   004F26  0E33               	movlw	51
 12277   004F28  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12278   004F2A  6F60               	movwf	ld_dword@ptr& (0+255),b
 12279   004F2C  0E00               	movlw	0
 12280   004F2E  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12281   004F30  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 12282   004F32  EC32  F040         	call	_ld_dword	;wreg free
 12283   004F36  0EFF               	movlw	255
 12284   004F38  0100               	movlb	0	; () banked
 12285   004F3A  1560               	andwf	?_ld_dword& (0+255),w,b
 12286   004F3C  6FE5               	movwf	get_fat@val& (0+255),b
 12287   004F3E  0EFF               	movlw	255
 12288   004F40  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 12289   004F42  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 12290   004F44  0EFF               	movlw	255
 12291   004F46  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 12292   004F48  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 12293   004F4A  0E0F               	movlw	15
 12294   004F4C  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 12295   004F4E  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 12296                           
 12297                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 12298   004F50  EFBF  F027         	goto	l925
 12299   004F54                     l14405:
 12300                           
 12301                           ; BSR set to: 0
 12302   004F54  0060  F3AF  FFD9   	movff	get_fat@fs,fsr2l
 12303   004F5A  0060  F3B3  FFDA   	movff	get_fat@fs+1,fsr2h
 12304   004F60  50DF               	movf	indf2,w,c
 12305                           
 12306                           ; Switch size 1, requested type "simple"
 12307                           ; Number of cases is 3, Range of values is 1 to 3
 12308                           ; switch strategies available:
 12309                           ; Name         Instructions Cycles
 12310                           ; simple_byte           10     6 (average)
 12311                           ;	Chosen strategy is simple_byte
 12312   004F62  0A01               	xorlw	1	; case 1
 12313   004F64  B4D8               	btfsc	status,2,c
 12314   004F66  EFFB  F025         	goto	l927
 12315   004F6A  0A03               	xorlw	3	; case 2
 12316   004F6C  B4D8               	btfsc	status,2,c
 12317   004F6E  EFD9  F026         	goto	l14391
 12318   004F72  0A01               	xorlw	1	; case 3
 12319   004F74  B4D8               	btfsc	status,2,c
 12320   004F76  EF3B  F027         	goto	l14397
 12321   004F7A  EFEB  F025         	goto	l14365
 12322   004F7E                     l925:
 12323                           
 12324                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 12325   004F7E  C0E5  F0D3         	movff	get_fat@val,?_get_fat
 12326   004F82  C0E6  F0D4         	movff	get_fat@val+1,?_get_fat+1
 12327   004F86  C0E7  F0D5         	movff	get_fat@val+2,?_get_fat+2
 12328   004F8A  C0E8  F0D6         	movff	get_fat@val+3,?_get_fat+3
 12329   004F8E  0012               	return		;funcret
 12330   004F90                     __end_of_get_fat:
 12331                           	callstack 0
 12332                           
 12333 ;; *************** function _f_close *****************
 12334 ;; Defined at:
 12335 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;  fp              2  122[BANK0 ] PTR struct .
 12338 ;;		 -> Fil(546), 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;  fs              2  124[BANK0 ] PTR struct .
 12341 ;;		 -> FatFs(563), NULL(0), 
 12342 ;;  res             1  126[BANK0 ] enum E68
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1    wreg      enum E68
 12345 ;; Registers used:
 12346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12356 ;;Total ram usage:        5 bytes
 12357 ;; Hardware stack levels used: 1
 12358 ;; Hardware stack levels required when called: 13
 12359 ;; This function calls:
 12360 ;;		_f_sync
 12361 ;;		_validate
 12362 ;; This function is called by:
 12363 ;;		_main
 12364 ;;		_send_status_ok
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text34
 12369   008B7E                     __ptext34:
 12370                           	callstack 0
 12371   008B7E                     _f_close:
 12372                           	callstack 16
 12373   008B7E                     
 12374                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 12375   008B7E  C0DA  F0D3         	movff	f_close@fp,f_sync@fp
 12376   008B82  C0DB  F0D4         	movff	f_close@fp+1,f_sync@fp+1
 12377   008B86  EC7F  F02E         	call	_f_sync	;wreg free
 12378   008B8A  0100               	movlb	0	; () banked
 12379   008B8C  6FDE               	movwf	f_close@res& (0+255),b
 12380   008B8E                     
 12381                           ; BSR set to: 0
 12382                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 12383   008B8E  51DE               	movf	f_close@res& (0+255),w,b
 12384   008B90  A4D8               	btfss	status,2,c
 12385   008B92  EFCD  F045         	goto	u20611
 12386   008B96  EFCF  F045         	goto	u20610
 12387   008B9A                     u20611:
 12388   008B9A  EFEA  F045         	goto	l1397
 12389   008B9E                     u20610:
 12390   008B9E                     
 12391                           ; BSR set to: 0
 12392                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 12393   008B9E  C0DA  F062         	movff	f_close@fp,validate@obj
 12394   008BA2  C0DB  F063         	movff	f_close@fp+1,validate@obj+1
 12395   008BA6  0EDC               	movlw	low f_close@fs
 12396   008BA8  6F64               	movwf	validate@rfs& (0+255),b
 12397   008BAA  6B65               	clrf	(validate@rfs+1)& (0+255),b
 12398   008BAC  ECAF  F039         	call	_validate	;wreg free
 12399   008BB0  0100               	movlb	0	; () banked
 12400   008BB2  6FDE               	movwf	f_close@res& (0+255),b
 12401   008BB4                     
 12402                           ; BSR set to: 0
 12403                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 12404   008BB4  51DE               	movf	f_close@res& (0+255),w,b
 12405   008BB6  A4D8               	btfss	status,2,c
 12406   008BB8  EFE0  F045         	goto	u20621
 12407   008BBC  EFE2  F045         	goto	u20620
 12408   008BC0                     u20621:
 12409   008BC0  EFEA  F045         	goto	l1397
 12410   008BC4                     u20620:
 12411   008BC4                     
 12412                           ; BSR set to: 0
 12413                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 12414   008BC4  0060  F36B  FFD9   	movff	f_close@fp,fsr2l
 12415   008BCA  0060  F36F  FFDA   	movff	f_close@fp+1,fsr2h
 12416   008BD0  6ADE               	clrf	postinc2,c
 12417   008BD2  6ADD               	clrf	postdec2,c
 12418   008BD4                     l1397:
 12419                           
 12420                           ; BSR set to: 0
 12421   008BD4  0012               	return		;funcret
 12422   008BD6                     __end_of_f_close:
 12423                           	callstack 0
 12424                           
 12425 ;; *************** function _f_sync *****************
 12426 ;; Defined at:
 12427 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  fp              2  115[BANK0 ] PTR struct .
 12430 ;;		 -> Fil(546), 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  tm              4    0        unsigned long 
 12433 ;;  fs              2  120[BANK0 ] PTR struct .
 12434 ;;		 -> FatFs(563), NULL(0), 
 12435 ;;  dir             2  118[BANK0 ] PTR unsigned char 
 12436 ;;		 -> FatFs(563), NULL(0), 
 12437 ;;  res             1  117[BANK0 ] enum E68
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      enum E68
 12440 ;; Registers used:
 12441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;Total ram usage:        7 bytes
 12452 ;; Hardware stack levels used: 1
 12453 ;; Hardware stack levels required when called: 12
 12454 ;; This function calls:
 12455 ;;		_disk_write
 12456 ;;		_move_window
 12457 ;;		_st_clust
 12458 ;;		_st_dword
 12459 ;;		_st_word
 12460 ;;		_sync_fs
 12461 ;;		_validate
 12462 ;; This function is called by:
 12463 ;;		_f_close
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text35
 12468   005CFE                     __ptext35:
 12469                           	callstack 0
 12470   005CFE                     _f_sync:
 12471                           	callstack 16
 12472   005CFE                     
 12473                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 12474   005CFE  C0D3  F062         	movff	f_sync@fp,validate@obj
 12475   005D02  C0D4  F063         	movff	f_sync@fp+1,validate@obj+1
 12476   005D06  0ED8               	movlw	low f_sync@fs
 12477   005D08  0100               	movlb	0	; () banked
 12478   005D0A  6F64               	movwf	validate@rfs& (0+255),b
 12479   005D0C  6B65               	clrf	(validate@rfs+1)& (0+255),b
 12480   005D0E  ECAF  F039         	call	_validate	;wreg free
 12481   005D12  0100               	movlb	0	; () banked
 12482   005D14  6FD5               	movwf	f_sync@res& (0+255),b
 12483   005D16                     
 12484                           ; BSR set to: 0
 12485                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 12486   005D16  51D5               	movf	f_sync@res& (0+255),w,b
 12487   005D18  A4D8               	btfss	status,2,c
 12488   005D1A  EF91  F02E         	goto	u19651
 12489   005D1E  EF93  F02E         	goto	u19650
 12490   005D22                     u19651:
 12491   005D22  EF92  F02F         	goto	l16095
 12492   005D26                     u19650:
 12493   005D26                     
 12494                           ; BSR set to: 0
 12495                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 12496   005D26  EE20 F00E          	lfsr	2,14
 12497   005D2A  51D3               	movf	f_sync@fp& (0+255),w,b
 12498   005D2C  26D9               	addwf	fsr2l,f,c
 12499   005D2E  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12500   005D30  22DA               	addwfc	fsr2h,f,c
 12501   005D32  ACDF               	btfss	indf2,6,c
 12502   005D34  EF9E  F02E         	goto	u19661
 12503   005D38  EFA0  F02E         	goto	u19660
 12504   005D3C                     u19661:
 12505   005D3C  EF92  F02F         	goto	l16095
 12506   005D40                     u19660:
 12507   005D40                     
 12508                           ; BSR set to: 0
 12509                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 12510   005D40  EE20 F00E          	lfsr	2,14
 12511   005D44  51D3               	movf	f_sync@fp& (0+255),w,b
 12512   005D46  26D9               	addwf	fsr2l,f,c
 12513   005D48  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12514   005D4A  22DA               	addwfc	fsr2h,f,c
 12515   005D4C  AEDF               	btfss	indf2,7,c
 12516   005D4E  EFAB  F02E         	goto	u19671
 12517   005D52  EFAD  F02E         	goto	u19670
 12518   005D56                     u19671:
 12519   005D56  EFE6  F02E         	goto	l16075
 12520   005D5A                     u19670:
 12521   005D5A                     
 12522                           ; BSR set to: 0
 12523                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 12524   005D5A  0E22               	movlw	34
 12525   005D5C  25D3               	addwf	f_sync@fp& (0+255),w,b
 12526   005D5E  6FAB               	movwf	disk_write@buff& (0+255),b
 12527   005D60  0E00               	movlw	0
 12528   005D62  21D4               	addwfc	(f_sync@fp+1)& (0+255),w,b
 12529   005D64  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 12530   005D66  EE20 F018          	lfsr	2,24
 12531   005D6A  51D3               	movf	f_sync@fp& (0+255),w,b
 12532   005D6C  26D9               	addwf	fsr2l,f,c
 12533   005D6E  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12534   005D70  22DA               	addwfc	fsr2h,f,c
 12535   005D72  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 12536   005D78  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 12537   005D7E  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 12538   005D84  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 12539   005D8A  0E00               	movlw	0
 12540   005D8C  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 12541   005D8E  0E01               	movlw	1
 12542   005D90  6FB1               	movwf	disk_write@count& (0+255),b
 12543   005D92  EE20 F001          	lfsr	2,1
 12544   005D96  51D8               	movf	f_sync@fs& (0+255),w,b
 12545   005D98  26D9               	addwf	fsr2l,f,c
 12546   005D9A  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 12547   005D9C  22DA               	addwfc	fsr2h,f,c
 12548   005D9E  50DF               	movf	indf2,w,c
 12549   005DA0  EC37  F044         	call	_disk_write
 12550   005DA4  0900               	iorlw	0
 12551   005DA6  B4D8               	btfsc	status,2,c
 12552   005DA8  EFD8  F02E         	goto	u19681
 12553   005DAC  EFDA  F02E         	goto	u19680
 12554   005DB0                     u19681:
 12555   005DB0  EFDD  F02E         	goto	l16073
 12556   005DB4                     u19680:
 12557   005DB4  0E01               	movlw	1
 12558   005DB6  EF93  F02F         	goto	l1391
 12559   005DBA                     l16073:
 12560                           
 12561                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 12562   005DBA  0100               	movlb	0	; () banked
 12563   005DBC  EE20 F00E          	lfsr	2,14
 12564   005DC0  51D3               	movf	f_sync@fp& (0+255),w,b
 12565   005DC2  26D9               	addwf	fsr2l,f,c
 12566   005DC4  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12567   005DC6  22DA               	addwfc	fsr2h,f,c
 12568   005DC8  0E7F               	movlw	127
 12569   005DCA  16DF               	andwf	indf2,f,c
 12570   005DCC                     l16075:
 12571   005DCC                     
 12572                           ; BSR set to: 0
 12573                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 12574   005DCC  C0D8  F0C8         	movff	f_sync@fs,move_window@fs
 12575   005DD0  C0D9  F0C9         	movff	f_sync@fs+1,move_window@fs+1
 12576   005DD4  EE20 F01C          	lfsr	2,28
 12577   005DD8  51D3               	movf	f_sync@fp& (0+255),w,b
 12578   005DDA  26D9               	addwf	fsr2l,f,c
 12579   005DDC  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12580   005DDE  22DA               	addwfc	fsr2h,f,c
 12581   005DE0  006F FF78  F0CA    	movff	postinc2,move_window@sector
 12582   005DE6  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
 12583   005DEC  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
 12584   005DF2  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
 12585   005DF8  EC9A  F03E         	call	_move_window	;wreg free
 12586   005DFC  0100               	movlb	0	; () banked
 12587   005DFE  6FD5               	movwf	f_sync@res& (0+255),b
 12588   005E00                     
 12589                           ; BSR set to: 0
 12590                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 12591   005E00  51D5               	movf	f_sync@res& (0+255),w,b
 12592   005E02  A4D8               	btfss	status,2,c
 12593   005E04  EF06  F02F         	goto	u19691
 12594   005E08  EF08  F02F         	goto	u19690
 12595   005E0C                     u19691:
 12596   005E0C  EF92  F02F         	goto	l16095
 12597   005E10                     u19690:
 12598   005E10                     
 12599                           ; BSR set to: 0
 12600                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 12601   005E10  EE20 F020          	lfsr	2,32
 12602   005E14  51D3               	movf	f_sync@fp& (0+255),w,b
 12603   005E16  26D9               	addwf	fsr2l,f,c
 12604   005E18  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12605   005E1A  22DA               	addwfc	fsr2h,f,c
 12606   005E1C  006F FF78  F0D6    	movff	postinc2,f_sync@dir
 12607   005E22  006F FF74  F0D7    	movff	postdec2,f_sync@dir+1
 12608                           
 12609                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 12610   005E28  EE20 F00B          	lfsr	2,11
 12611   005E2C  51D6               	movf	f_sync@dir& (0+255),w,b
 12612   005E2E  26D9               	addwf	fsr2l,f,c
 12613   005E30  51D7               	movf	(f_sync@dir+1)& (0+255),w,b
 12614   005E32  22DA               	addwfc	fsr2h,f,c
 12615   005E34  0E00               	movlw	0
 12616   005E36  8ADB               	bsf	plusw2,5,c
 12617   005E38                     
 12618                           ; BSR set to: 0
 12619                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 12620   005E38  0060  F34F  FFD9   	movff	f_sync@fp,fsr2l
 12621   005E3E  0060  F353  FFDA   	movff	f_sync@fp+1,fsr2h
 12622   005E44  006F FF78  F064    	movff	postinc2,st_clust@fs
 12623   005E4A  006F FF74  F065    	movff	postdec2,st_clust@fs+1
 12624   005E50  C0D6  F066         	movff	f_sync@dir,st_clust@dir
 12625   005E54  C0D7  F067         	movff	f_sync@dir+1,st_clust@dir+1
 12626   005E58  EE20 F006          	lfsr	2,6
 12627   005E5C  51D3               	movf	f_sync@fp& (0+255),w,b
 12628   005E5E  26D9               	addwf	fsr2l,f,c
 12629   005E60  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12630   005E62  22DA               	addwfc	fsr2h,f,c
 12631   005E64  006F FF78  F068    	movff	postinc2,st_clust@cl
 12632   005E6A  006F FF78  F069    	movff	postinc2,st_clust@cl+1
 12633   005E70  006F FF78  F06A    	movff	postinc2,st_clust@cl+2
 12634   005E76  006F FF78  F06B    	movff	postinc2,st_clust@cl+3
 12635   005E7C  EC16  F046         	call	_st_clust	;wreg free
 12636   005E80                     
 12637                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 12638   005E80  0E1C               	movlw	28
 12639   005E82  0100               	movlb	0	; () banked
 12640   005E84  25D6               	addwf	f_sync@dir& (0+255),w,b
 12641   005E86  6F60               	movwf	st_dword@ptr& (0+255),b
 12642   005E88  0E00               	movlw	0
 12643   005E8A  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 12644   005E8C  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 12645   005E8E  EE20 F00A          	lfsr	2,10
 12646   005E92  51D3               	movf	f_sync@fp& (0+255),w,b
 12647   005E94  26D9               	addwf	fsr2l,f,c
 12648   005E96  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12649   005E98  22DA               	addwfc	fsr2h,f,c
 12650   005E9A  006F FF78  F062    	movff	postinc2,st_dword@val
 12651   005EA0  006F FF78  F063    	movff	postinc2,st_dword@val+1
 12652   005EA6  006F FF78  F064    	movff	postinc2,st_dword@val+2
 12653   005EAC  006F FF78  F065    	movff	postinc2,st_dword@val+3
 12654   005EB2  EC21  F042         	call	_st_dword	;wreg free
 12655   005EB6                     
 12656                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 12657   005EB6  0E16               	movlw	22
 12658   005EB8  0100               	movlb	0	; () banked
 12659   005EBA  25D6               	addwf	f_sync@dir& (0+255),w,b
 12660   005EBC  6F60               	movwf	st_dword@ptr& (0+255),b
 12661   005EBE  0E00               	movlw	0
 12662   005EC0  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 12663   005EC2  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 12664   005EC4  0E00               	movlw	0
 12665   005EC6  6F62               	movwf	st_dword@val& (0+255),b
 12666   005EC8  0E00               	movlw	0
 12667   005ECA  6F63               	movwf	(st_dword@val+1)& (0+255),b
 12668   005ECC  0EF7               	movlw	247
 12669   005ECE  6F64               	movwf	(st_dword@val+2)& (0+255),b
 12670   005ED0  0E58               	movlw	88
 12671   005ED2  6F65               	movwf	(st_dword@val+3)& (0+255),b
 12672   005ED4  EC21  F042         	call	_st_dword	;wreg free
 12673   005ED8                     
 12674                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 12675   005ED8  0E12               	movlw	18
 12676   005EDA  0100               	movlb	0	; () banked
 12677   005EDC  25D6               	addwf	f_sync@dir& (0+255),w,b
 12678   005EDE  6F60               	movwf	st_word@ptr& (0+255),b
 12679   005EE0  0E00               	movlw	0
 12680   005EE2  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 12681   005EE4  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 12682   005EE6  0E00               	movlw	0
 12683   005EE8  6F63               	movwf	(st_word@val+1)& (0+255),b
 12684   005EEA  0E00               	movlw	0
 12685   005EEC  6F62               	movwf	st_word@val& (0+255),b
 12686   005EEE  ECA5  F047         	call	_st_word	;wreg free
 12687                           
 12688                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 12689   005EF2  0100               	movlb	0	; () banked
 12690   005EF4  EE20 F003          	lfsr	2,3
 12691   005EF8  51D8               	movf	f_sync@fs& (0+255),w,b
 12692   005EFA  26D9               	addwf	fsr2l,f,c
 12693   005EFC  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 12694   005EFE  22DA               	addwfc	fsr2h,f,c
 12695   005F00  0E01               	movlw	1
 12696   005F02  6EDF               	movwf	indf2,c
 12697   005F04                     
 12698                           ; BSR set to: 0
 12699                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 12700   005F04  C0D8  F0C8         	movff	f_sync@fs,sync_fs@fs
 12701   005F08  C0D9  F0C9         	movff	f_sync@fs+1,sync_fs@fs+1
 12702   005F0C  EC62  F02D         	call	_sync_fs	;wreg free
 12703   005F10  0100               	movlb	0	; () banked
 12704   005F12  6FD5               	movwf	f_sync@res& (0+255),b
 12705   005F14                     
 12706                           ; BSR set to: 0
 12707                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 12708   005F14  EE20 F00E          	lfsr	2,14
 12709   005F18  51D3               	movf	f_sync@fp& (0+255),w,b
 12710   005F1A  26D9               	addwf	fsr2l,f,c
 12711   005F1C  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 12712   005F1E  22DA               	addwfc	fsr2h,f,c
 12713   005F20  0EBF               	movlw	191
 12714   005F22  16DF               	andwf	indf2,f,c
 12715   005F24                     l16095:
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 12719   005F24  51D5               	movf	f_sync@res& (0+255),w,b
 12720   005F26                     l1391:
 12721   005F26  0012               	return		;funcret
 12722   005F28                     __end_of_f_sync:
 12723                           	callstack 0
 12724                           
 12725 ;; *************** function _validate *****************
 12726 ;; Defined at:
 12727 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  obj             2    2[BANK0 ] PTR struct .
 12730 ;;		 -> Fil(546), pb$fp(3), 
 12731 ;;  rfs             2    4[BANK0 ] PTR PTR struct .
 12732 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  res             1   12[BANK0 ] enum E68
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      enum E68
 12737 ;; Registers used:
 12738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;Total ram usage:       11 bytes
 12749 ;; Hardware stack levels used: 1
 12750 ;; Hardware stack levels required when called: 7
 12751 ;; This function calls:
 12752 ;;		_disk_status
 12753 ;; This function is called by:
 12754 ;;		_f_write
 12755 ;;		_f_sync
 12756 ;;		_f_close
 12757 ;;		_f_read
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           	psect	text36
 12762   00735E                     __ptext36:
 12763                           	callstack 0
 12764   00735E                     _validate:
 12765                           	callstack 21
 12766   00735E                     
 12767                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 12768   00735E  0E09               	movlw	9
 12769   007360  0100               	movlb	0	; () banked
 12770   007362  6F6C               	movwf	validate@res& (0+255),b
 12771   007364                     
 12772                           ; BSR set to: 0
 12773                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 12774   007364  5162               	movf	validate@obj& (0+255),w,b
 12775   007366  1163               	iorwf	(validate@obj+1)& (0+255),w,b
 12776   007368  B4D8               	btfsc	status,2,c
 12777   00736A  EFB9  F039         	goto	u18731
 12778   00736E  EFBB  F039         	goto	u18730
 12779   007372                     u18731:
 12780   007372  EF1C  F03A         	goto	l1267
 12781   007376                     u18730:
 12782   007376                     
 12783                           ; BSR set to: 0
 12784   007376  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 12785   00737C  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 12786   007382  50DE               	movf	postinc2,w,c
 12787   007384  10DE               	iorwf	postinc2,w,c
 12788   007386  B4D8               	btfsc	status,2,c
 12789   007388  EFC8  F039         	goto	u18741
 12790   00738C  EFCA  F039         	goto	u18740
 12791   007390                     u18741:
 12792   007390  EF1C  F03A         	goto	l1267
 12793   007394                     u18740:
 12794   007394                     
 12795                           ; BSR set to: 0
 12796   007394  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 12797   00739A  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 12798   0073A0  006F FF78  F066    	movff	postinc2,??_validate
 12799   0073A6  006F FF74  F067    	movff	postdec2,??_validate+1
 12800   0073AC  0060  F19B  FFD9   	movff	??_validate,fsr2l
 12801   0073B2  0060  F19F  FFDA   	movff	??_validate+1,fsr2h
 12802   0073B8  50DF               	movf	indf2,w,c
 12803   0073BA  B4D8               	btfsc	status,2,c
 12804   0073BC  EFE2  F039         	goto	u18751
 12805   0073C0  EFE4  F039         	goto	u18750
 12806   0073C4                     u18751:
 12807   0073C4  EF1C  F03A         	goto	l1267
 12808   0073C8                     u18750:
 12809   0073C8                     
 12810                           ; BSR set to: 0
 12811   0073C8  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 12812   0073CE  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 12813   0073D4  EE10 F005          	lfsr	1,5
 12814   0073D8  50DE               	movf	postinc2,w,c
 12815   0073DA  26E1               	addwf	fsr1l,f,c
 12816   0073DC  50DD               	movf	postdec2,w,c
 12817   0073DE  22E2               	addwfc	fsr1h,f,c
 12818   0073E0  EE20 F002          	lfsr	2,2
 12819   0073E4  5162               	movf	validate@obj& (0+255),w,b
 12820   0073E6  26D9               	addwf	fsr2l,f,c
 12821   0073E8  5163               	movf	(validate@obj+1)& (0+255),w,b
 12822   0073EA  22DA               	addwfc	fsr2h,f,c
 12823   0073EC  50E6               	movf	postinc1,w,c
 12824   0073EE  18DE               	xorwf	postinc2,w,c
 12825   0073F0  E107               	bnz	u18761
 12826   0073F2  50E6               	movf	postinc1,w,c
 12827   0073F4  18DE               	xorwf	postinc2,w,c
 12828   0073F6  A4D8               	btfss	status,2,c
 12829   0073F8  EF00  F03A         	goto	u18761
 12830   0073FC  EF02  F03A         	goto	u18760
 12831   007400                     u18761:
 12832   007400  EF1C  F03A         	goto	l1267
 12833   007404                     u18760:
 12834   007404                     
 12835                           ; BSR set to: 0
 12836                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 12837   007404  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 12838   00740A  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 12839   007410  EE10 F001          	lfsr	1,1
 12840   007414  50DE               	movf	postinc2,w,c
 12841   007416  26E1               	addwf	fsr1l,f,c
 12842   007418  50DD               	movf	postdec2,w,c
 12843   00741A  22E2               	addwfc	fsr1h,f,c
 12844   00741C  50E7               	movf	indf1,w,c
 12845   00741E  EC5A  F043         	call	_disk_status
 12846   007422  0100               	movlb	0	; () banked
 12847   007424  6F66               	movwf	??_validate& (0+255),b
 12848   007426  B166               	btfsc	??_validate& (0+255),0,b
 12849   007428  EF18  F03A         	goto	u18771
 12850   00742C  EF1A  F03A         	goto	u18770
 12851   007430                     u18771:
 12852   007430  EF1C  F03A         	goto	l1267
 12853   007434                     u18770:
 12854   007434                     
 12855                           ; BSR set to: 0
 12856                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 12857   007434  0E00               	movlw	0
 12858   007436  6F6C               	movwf	validate@res& (0+255),b
 12859   007438                     l1267:
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 12863   007438  516C               	movf	validate@res& (0+255),w,b
 12864   00743A  B4D8               	btfsc	status,2,c
 12865   00743C  EF22  F03A         	goto	u18781
 12866   007440  EF24  F03A         	goto	u18780
 12867   007444                     u18781:
 12868   007444  EF2A  F03A         	goto	l15553
 12869   007448                     u18780:
 12870   007448                     
 12871                           ; BSR set to: 0
 12872   007448  0E00               	movlw	0
 12873   00744A  6F6A               	movwf	_validate$3131& (0+255),b
 12874   00744C  0E00               	movlw	0
 12875   00744E  6F6B               	movwf	(_validate$3131+1)& (0+255),b
 12876   007450  EF36  F03A         	goto	l1272
 12877   007454                     l15553:
 12878                           
 12879                           ; BSR set to: 0
 12880   007454  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 12881   00745A  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 12882   007460  006F FF78  F06A    	movff	postinc2,_validate$3131
 12883   007466  006F FF74  F06B    	movff	postdec2,_validate$3131+1
 12884   00746C                     l1272:
 12885                           
 12886                           ; BSR set to: 0
 12887   00746C  0060  F193  FFD9   	movff	validate@rfs,fsr2l
 12888   007472  0060  F197  FFDA   	movff	validate@rfs+1,fsr2h
 12889   007478  0060  F1AB  FFDE   	movff	_validate$3131,postinc2
 12890   00747E  0060  F1AF  FFDD   	movff	_validate$3131+1,postdec2
 12891   007484                     
 12892                           ; BSR set to: 0
 12893                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 12894   007484  516C               	movf	validate@res& (0+255),w,b
 12895   007486                     
 12896                           ; BSR set to: 0
 12897   007486  0012               	return		;funcret
 12898   007488                     __end_of_validate:
 12899                           	callstack 0
 12900                           
 12901 ;; *************** function _sync_fs *****************
 12902 ;; Defined at:
 12903 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  fs              2  104[BANK0 ] PTR struct .
 12906 ;;		 -> FatFs(563), NULL(0), 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  res             1  114[BANK0 ] enum E68
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      enum E68
 12911 ;; Registers used:
 12912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12920 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12921 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12922 ;;Total ram usage:       11 bytes
 12923 ;; Hardware stack levels used: 1
 12924 ;; Hardware stack levels required when called: 11
 12925 ;; This function calls:
 12926 ;;		_disk_ioctl
 12927 ;;		_disk_write
 12928 ;;		_mem_set
 12929 ;;		_st_dword
 12930 ;;		_st_word
 12931 ;;		_sync_window
 12932 ;; This function is called by:
 12933 ;;		_f_sync
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           	psect	text37
 12938   005AC4                     __ptext37:
 12939                           	callstack 0
 12940   005AC4                     _sync_fs:
 12941                           	callstack 16
 12942   005AC4                     
 12943                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 12944   005AC4  C0C8  F0B5         	movff	sync_fs@fs,sync_window@fs
 12945   005AC8  C0C9  F0B6         	movff	sync_fs@fs+1,sync_window@fs+1
 12946   005ACC  EC94  F032         	call	_sync_window	;wreg free
 12947   005AD0  0100               	movlb	0	; () banked
 12948   005AD2  6FD2               	movwf	sync_fs@res& (0+255),b
 12949   005AD4                     
 12950                           ; BSR set to: 0
 12951                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 12952   005AD4  51D2               	movf	sync_fs@res& (0+255),w,b
 12953   005AD6  A4D8               	btfss	status,2,c
 12954   005AD8  EF70  F02D         	goto	u18131
 12955   005ADC  EF72  F02D         	goto	u18130
 12956   005AE0                     u18131:
 12957   005AE0  EF7C  F02E         	goto	l912
 12958   005AE4                     u18130:
 12959   005AE4                     
 12960                           ; BSR set to: 0
 12961                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 12962   005AE4  0060  F323  FFD9   	movff	sync_fs@fs,fsr2l
 12963   005AEA  0060  F327  FFDA   	movff	sync_fs@fs+1,fsr2h
 12964   005AF0  0E03               	movlw	3
 12965   005AF2  18DE               	xorwf	postinc2,w,c
 12966   005AF4  A4D8               	btfss	status,2,c
 12967   005AF6  EF7F  F02D         	goto	u18141
 12968   005AFA  EF81  F02D         	goto	u18140
 12969   005AFE                     u18141:
 12970   005AFE  EF62  F02E         	goto	l15221
 12971   005B02                     u18140:
 12972   005B02                     
 12973                           ; BSR set to: 0
 12974   005B02  EE20 F004          	lfsr	2,4
 12975   005B06  51C8               	movf	sync_fs@fs& (0+255),w,b
 12976   005B08  26D9               	addwf	fsr2l,f,c
 12977   005B0A  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 12978   005B0C  22DA               	addwfc	fsr2h,f,c
 12979   005B0E  04DE               	decf	postinc2,w,c
 12980   005B10  A4D8               	btfss	status,2,c
 12981   005B12  EF8D  F02D         	goto	u18151
 12982   005B16  EF8F  F02D         	goto	u18150
 12983   005B1A                     u18151:
 12984   005B1A  EF62  F02E         	goto	l15221
 12985   005B1E                     u18150:
 12986   005B1E                     
 12987                           ; BSR set to: 0
 12988                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 12989   005B1E  0E33               	movlw	51
 12990   005B20  25C8               	addwf	sync_fs@fs& (0+255),w,b
 12991   005B22  6F60               	movwf	mem_set@dst& (0+255),b
 12992   005B24  0E00               	movlw	0
 12993   005B26  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 12994   005B28  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 12995   005B2A  0E00               	movlw	0
 12996   005B2C  6F63               	movwf	(mem_set@val+1)& (0+255),b
 12997   005B2E  0E00               	movlw	0
 12998   005B30  6F62               	movwf	mem_set@val& (0+255),b
 12999   005B32  0E02               	movlw	2
 13000   005B34  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 13001   005B36  0E00               	movlw	0
 13002   005B38  6F64               	movwf	mem_set@cnt& (0+255),b
 13003   005B3A  EC34  F047         	call	_mem_set	;wreg free
 13004                           
 13005                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 13006   005B3E  0E31               	movlw	49
 13007   005B40  0100               	movlb	0	; () banked
 13008   005B42  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13009   005B44  6F60               	movwf	st_word@ptr& (0+255),b
 13010   005B46  0E02               	movlw	2
 13011   005B48  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13012   005B4A  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13013   005B4C  0EAA               	movlw	170
 13014   005B4E  6F63               	movwf	(st_word@val+1)& (0+255),b
 13015   005B50  0E55               	movlw	85
 13016   005B52  6F62               	movwf	st_word@val& (0+255),b
 13017   005B54  ECA5  F047         	call	_st_word	;wreg free
 13018                           
 13019                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 13020   005B58  0E33               	movlw	51
 13021   005B5A  0100               	movlb	0	; () banked
 13022   005B5C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13023   005B5E  6F60               	movwf	st_dword@ptr& (0+255),b
 13024   005B60  0E00               	movlw	0
 13025   005B62  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13026   005B64  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13027   005B66  0E52               	movlw	82
 13028   005B68  6F62               	movwf	st_dword@val& (0+255),b
 13029   005B6A  0E52               	movlw	82
 13030   005B6C  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13031   005B6E  0E61               	movlw	97
 13032   005B70  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13033   005B72  0E41               	movlw	65
 13034   005B74  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13035   005B76  EC21  F042         	call	_st_dword	;wreg free
 13036                           
 13037                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 13038   005B7A  0E17               	movlw	23
 13039   005B7C  0100               	movlb	0	; () banked
 13040   005B7E  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13041   005B80  6F60               	movwf	st_dword@ptr& (0+255),b
 13042   005B82  0E02               	movlw	2
 13043   005B84  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13044   005B86  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13045   005B88  0E72               	movlw	114
 13046   005B8A  6F62               	movwf	st_dword@val& (0+255),b
 13047   005B8C  0E72               	movlw	114
 13048   005B8E  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13049   005B90  0E41               	movlw	65
 13050   005B92  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13051   005B94  0E61               	movlw	97
 13052   005B96  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13053   005B98  EC21  F042         	call	_st_dword	;wreg free
 13054                           
 13055                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 13056   005B9C  0E1B               	movlw	27
 13057   005B9E  0100               	movlb	0	; () banked
 13058   005BA0  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13059   005BA2  6F60               	movwf	st_dword@ptr& (0+255),b
 13060   005BA4  0E02               	movlw	2
 13061   005BA6  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13062   005BA8  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13063   005BAA  EE20 F00F          	lfsr	2,15
 13064   005BAE  51C8               	movf	sync_fs@fs& (0+255),w,b
 13065   005BB0  26D9               	addwf	fsr2l,f,c
 13066   005BB2  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13067   005BB4  22DA               	addwfc	fsr2h,f,c
 13068   005BB6  006F FF78  F062    	movff	postinc2,st_dword@val
 13069   005BBC  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13070   005BC2  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13071   005BC8  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13072   005BCE  EC21  F042         	call	_st_dword	;wreg free
 13073                           
 13074                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 13075   005BD2  0E1F               	movlw	31
 13076   005BD4  0100               	movlb	0	; () banked
 13077   005BD6  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13078   005BD8  6F60               	movwf	st_dword@ptr& (0+255),b
 13079   005BDA  0E02               	movlw	2
 13080   005BDC  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13081   005BDE  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13082   005BE0  EE20 F00B          	lfsr	2,11
 13083   005BE4  51C8               	movf	sync_fs@fs& (0+255),w,b
 13084   005BE6  26D9               	addwf	fsr2l,f,c
 13085   005BE8  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13086   005BEA  22DA               	addwfc	fsr2h,f,c
 13087   005BEC  006F FF78  F062    	movff	postinc2,st_dword@val
 13088   005BF2  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13089   005BF8  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13090   005BFE  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13091   005C04  EC21  F042         	call	_st_dword	;wreg free
 13092   005C08                     
 13093                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 13094   005C08  0100               	movlb	0	; () banked
 13095   005C0A  EE20 F01F          	lfsr	2,31
 13096   005C0E  51C8               	movf	sync_fs@fs& (0+255),w,b
 13097   005C10  26D9               	addwf	fsr2l,f,c
 13098   005C12  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13099   005C14  22DA               	addwfc	fsr2h,f,c
 13100   005C16  006F FF78  F0CA    	movff	postinc2,??_sync_fs
 13101   005C1C  006F FF78  F0CB    	movff	postinc2,??_sync_fs+1
 13102   005C22  006F FF78  F0CC    	movff	postinc2,??_sync_fs+2
 13103   005C28  006F FF78  F0CD    	movff	postinc2,??_sync_fs+3
 13104   005C2E  0E01               	movlw	1
 13105   005C30  25CA               	addwf	??_sync_fs& (0+255),w,b
 13106   005C32  6FCE               	movwf	(??_sync_fs+4)& (0+255),b
 13107   005C34  0E00               	movlw	0
 13108   005C36  21CB               	addwfc	(??_sync_fs+1)& (0+255),w,b
 13109   005C38  6FCF               	movwf	(??_sync_fs+5)& (0+255),b
 13110   005C3A  0E00               	movlw	0
 13111   005C3C  21CC               	addwfc	(??_sync_fs+2)& (0+255),w,b
 13112   005C3E  6FD0               	movwf	(??_sync_fs+6)& (0+255),b
 13113   005C40  0E00               	movlw	0
 13114   005C42  21CD               	addwfc	(??_sync_fs+3)& (0+255),w,b
 13115   005C44  6FD1               	movwf	(??_sync_fs+7)& (0+255),b
 13116   005C46  EE20 F02F          	lfsr	2,47
 13117   005C4A  51C8               	movf	sync_fs@fs& (0+255),w,b
 13118   005C4C  26D9               	addwf	fsr2l,f,c
 13119   005C4E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13120   005C50  22DA               	addwfc	fsr2h,f,c
 13121   005C52  0060  F33B  FFDE   	movff	??_sync_fs+4,postinc2
 13122   005C58  0060  F33F  FFDE   	movff	??_sync_fs+5,postinc2
 13123   005C5E  0060  F343  FFDE   	movff	??_sync_fs+6,postinc2
 13124   005C64  0060  F347  FFDE   	movff	??_sync_fs+7,postinc2
 13125   005C6A                     
 13126                           ; BSR set to: 0
 13127                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 13128   005C6A  0E33               	movlw	51
 13129   005C6C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13130   005C6E  6FAB               	movwf	disk_write@buff& (0+255),b
 13131   005C70  0E00               	movlw	0
 13132   005C72  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13133   005C74  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 13134   005C76  EE20 F02F          	lfsr	2,47
 13135   005C7A  51C8               	movf	sync_fs@fs& (0+255),w,b
 13136   005C7C  26D9               	addwf	fsr2l,f,c
 13137   005C7E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13138   005C80  22DA               	addwfc	fsr2h,f,c
 13139   005C82  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 13140   005C88  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 13141   005C8E  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 13142   005C94  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 13143   005C9A  0E00               	movlw	0
 13144   005C9C  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 13145   005C9E  0E01               	movlw	1
 13146   005CA0  6FB1               	movwf	disk_write@count& (0+255),b
 13147   005CA2  EE20 F001          	lfsr	2,1
 13148   005CA6  51C8               	movf	sync_fs@fs& (0+255),w,b
 13149   005CA8  26D9               	addwf	fsr2l,f,c
 13150   005CAA  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13151   005CAC  22DA               	addwfc	fsr2h,f,c
 13152   005CAE  50DF               	movf	indf2,w,c
 13153   005CB0  EC37  F044         	call	_disk_write
 13154   005CB4                     
 13155                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 13156   005CB4  0100               	movlb	0	; () banked
 13157   005CB6  EE20 F004          	lfsr	2,4
 13158   005CBA  51C8               	movf	sync_fs@fs& (0+255),w,b
 13159   005CBC  26D9               	addwf	fsr2l,f,c
 13160   005CBE  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13161   005CC0  22DA               	addwfc	fsr2h,f,c
 13162   005CC2  6ADF               	clrf	indf2,c
 13163   005CC4                     l15221:
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 13167   005CC4  0E00               	movlw	0
 13168   005CC6  6F60               	movwf	disk_ioctl@cmd& (0+255),b
 13169   005CC8  0E00               	movlw	0
 13170   005CCA  6F61               	movwf	disk_ioctl@buff& (0+255),b
 13171   005CCC  0E00               	movlw	0
 13172   005CCE  6F62               	movwf	(disk_ioctl@buff+1)& (0+255),b
 13173   005CD0  EE20 F001          	lfsr	2,1
 13174   005CD4  51C8               	movf	sync_fs@fs& (0+255),w,b
 13175   005CD6  26D9               	addwf	fsr2l,f,c
 13176   005CD8  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13177   005CDA  22DA               	addwfc	fsr2h,f,c
 13178   005CDC  50DF               	movf	indf2,w,c
 13179   005CDE  EC36  F048         	call	_disk_ioctl
 13180   005CE2  0900               	iorlw	0
 13181   005CE4  B4D8               	btfsc	status,2,c
 13182   005CE6  EF77  F02E         	goto	u18161
 13183   005CEA  EF79  F02E         	goto	u18160
 13184   005CEE                     u18161:
 13185   005CEE  EF7C  F02E         	goto	l912
 13186   005CF2                     u18160:
 13187   005CF2  0E01               	movlw	1
 13188   005CF4  0100               	movlb	0	; () banked
 13189   005CF6  6FD2               	movwf	sync_fs@res& (0+255),b
 13190   005CF8                     l912:
 13191                           
 13192                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 13193   005CF8  0100               	movlb	0	; () banked
 13194   005CFA  51D2               	movf	sync_fs@res& (0+255),w,b
 13195   005CFC                     
 13196                           ; BSR set to: 0
 13197   005CFC  0012               	return		;funcret
 13198   005CFE                     __end_of_sync_fs:
 13199                           	callstack 0
 13200                           
 13201 ;; *************** function _st_dword *****************
 13202 ;; Defined at:
 13203 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 13206 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 13207 ;;  val             4    2[BANK0 ] unsigned long 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		fsr2l, fsr2h, status,2, status,0
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13219 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;Total ram usage:        6 bytes
 13224 ;; Hardware stack levels used: 1
 13225 ;; Hardware stack levels required when called: 5
 13226 ;; This function calls:
 13227 ;;		Nothing
 13228 ;; This function is called by:
 13229 ;;		_sync_fs
 13230 ;;		_put_fat
 13231 ;;		_f_open
 13232 ;;		_f_sync
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text38
 13237   008442                     __ptext38:
 13238                           	callstack 0
 13239   008442                     _st_dword:
 13240                           	callstack 21
 13241   008442                     
 13242                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 13243   008442  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 13244   008448  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 13245   00844E  0060  F18B  FFDF   	movff	st_dword@val,indf2
 13246   008454  0100               	movlb	0	; () banked
 13247   008456  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 13248   008458  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 13249   00845A                     
 13250                           ; BSR set to: 0
 13251   00845A  C063  F062         	movff	st_dword@val+1,st_dword@val
 13252   00845E  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 13253   008462  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 13254   008466  6B65               	clrf	(st_dword@val+3)& (0+255),b
 13255   008468                     
 13256                           ; BSR set to: 0
 13257                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 13258   008468  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 13259   00846E  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 13260   008474  0060  F18B  FFDF   	movff	st_dword@val,indf2
 13261   00847A                     
 13262                           ; BSR set to: 0
 13263   00847A  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 13264   00847C  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 13265   00847E  C063  F062         	movff	st_dword@val+1,st_dword@val
 13266   008482  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 13267   008486  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 13268   00848A  6B65               	clrf	(st_dword@val+3)& (0+255),b
 13269   00848C                     
 13270                           ; BSR set to: 0
 13271                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 13272   00848C  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 13273   008492  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 13274   008498  0060  F18B  FFDF   	movff	st_dword@val,indf2
 13275   00849E                     
 13276                           ; BSR set to: 0
 13277   00849E  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 13278   0084A0  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 13279   0084A2                     
 13280                           ; BSR set to: 0
 13281   0084A2  C063  F062         	movff	st_dword@val+1,st_dword@val
 13282   0084A6  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 13283   0084AA  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 13284   0084AE  6B65               	clrf	(st_dword@val+3)& (0+255),b
 13285   0084B0                     
 13286                           ; BSR set to: 0
 13287                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 13288   0084B0  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 13289   0084B6  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 13290   0084BC  0060  F18B  FFDF   	movff	st_dword@val,indf2
 13291   0084C2  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 13292   0084C4  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 13293   0084C6                     
 13294                           ; BSR set to: 0
 13295   0084C6  0012               	return		;funcret
 13296   0084C8                     __end_of_st_dword:
 13297                           	callstack 0
 13298                           
 13299 ;; *************** function _mem_set *****************
 13300 ;; Defined at:
 13301 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  dst             2    0[BANK0 ] PTR void 
 13304 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 13305 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 13306 ;;		 -> NULL(0), 
 13307 ;;  val             2    2[BANK0 ] int 
 13308 ;;  cnt             2    4[BANK0 ] unsigned int 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  d               2    6[BANK0 ] PTR unsigned char 
 13311 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 13312 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 13313 ;;		 -> NULL(0), 
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13323 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13327 ;;Total ram usage:        8 bytes
 13328 ;; Hardware stack levels used: 1
 13329 ;; Hardware stack levels required when called: 5
 13330 ;; This function calls:
 13331 ;;		Nothing
 13332 ;; This function is called by:
 13333 ;;		_sync_fs
 13334 ;;		_dir_clear
 13335 ;;		_dir_register
 13336 ;;		_create_name
 13337 ;;		_f_open
 13338 ;;		_putc_init
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text39
 13343   008E68                     __ptext39:
 13344                           	callstack 0
 13345   008E68                     _mem_set:
 13346                           	callstack 23
 13347   008E68                     
 13348                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 13349   008E68  C060  F066         	movff	mem_set@dst,mem_set@d
 13350   008E6C  C061  F067         	movff	mem_set@dst+1,mem_set@d+1
 13351   008E70                     l14341:
 13352                           
 13353                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 13354   008E70  0060  F19B  FFD9   	movff	mem_set@d,fsr2l
 13355   008E76  0060  F19F  FFDA   	movff	mem_set@d+1,fsr2h
 13356   008E7C  0060  F18B  FFDF   	movff	mem_set@val,indf2
 13357   008E82  0100               	movlb	0	; () banked
 13358   008E84  4B66               	infsnz	mem_set@d& (0+255),f,b
 13359   008E86  2B67               	incf	(mem_set@d+1)& (0+255),f,b
 13360   008E88                     
 13361                           ; BSR set to: 0
 13362                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 13363   008E88  0764               	decf	mem_set@cnt& (0+255),f,b
 13364   008E8A  A0D8               	btfss	status,0,c
 13365   008E8C  0765               	decf	(mem_set@cnt+1)& (0+255),f,b
 13366   008E8E  5164               	movf	mem_set@cnt& (0+255),w,b
 13367   008E90  1165               	iorwf	(mem_set@cnt+1)& (0+255),w,b
 13368   008E92  A4D8               	btfss	status,2,c
 13369   008E94  EF4E  F047         	goto	u16501
 13370   008E98  EF50  F047         	goto	u16500
 13371   008E9C                     u16501:
 13372   008E9C  EF38  F047         	goto	l14341
 13373   008EA0                     u16500:
 13374   008EA0                     
 13375                           ; BSR set to: 0
 13376   008EA0  0012               	return		;funcret
 13377   008EA2                     __end_of_mem_set:
 13378                           	callstack 0
 13379                           
 13380 ;; *************** function _disk_ioctl *****************
 13381 ;; Defined at:
 13382 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  pdrv            1    wreg     unsigned char 
 13385 ;;  cmd             1    0[BANK0 ] unsigned char 
 13386 ;;  buff            2    1[BANK0 ] PTR void 
 13387 ;;		 -> NULL(0), 
 13388 ;; Auto vars:     Size  Location     Type
 13389 ;;  pdrv            1    3[BANK0 ] unsigned char 
 13390 ;;  res             1    0        enum E12
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  1    wreg      enum E12
 13393 ;; Registers used:
 13394 ;;		wreg, status,2, status,0
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13400 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13403 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13404 ;;Total ram usage:        4 bytes
 13405 ;; Hardware stack levels used: 1
 13406 ;; Hardware stack levels required when called: 5
 13407 ;; This function calls:
 13408 ;;		Nothing
 13409 ;; This function is called by:
 13410 ;;		_sync_fs
 13411 ;; This function uses a non-reentrant model
 13412 ;;
 13413                           
 13414                           	psect	text40
 13415   00906C                     __ptext40:
 13416                           	callstack 0
 13417   00906C                     _disk_ioctl:
 13418                           	callstack 21
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;incstack = 0
 13422                           ;disk_ioctl@pdrv stored from wreg
 13423   00906C  0100               	movlb	0	; () banked
 13424   00906E  6F63               	movwf	disk_ioctl@pdrv& (0+255),b
 13425   009070                     
 13426                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 13427   009070  EF3D  F048         	goto	l14865
 13428   009074                     l824:
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 13432   009074  0E00               	movlw	0
 13433   009076  EF46  F048         	goto	l825
 13434   00907A                     l14865:
 13435   00907A  0100               	movlb	0	; () banked
 13436   00907C  5163               	movf	disk_ioctl@pdrv& (0+255),w,b
 13437                           
 13438                           ; Switch size 1, requested type "simple"
 13439                           ; Number of cases is 1, Range of values is 0 to 0
 13440                           ; switch strategies available:
 13441                           ; Name         Instructions Cycles
 13442                           ; simple_byte            4     3 (average)
 13443                           ;	Chosen strategy is simple_byte
 13444   00907E  0A00               	xorlw	0	; case 0
 13445   009080  B4D8               	btfsc	status,2,c
 13446   009082  EF3A  F048         	goto	l824
 13447   009086  EF45  F048         	goto	l14867
 13448   00908A                     l14867:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 13452   00908A  0E04               	movlw	4
 13453   00908C                     l825:
 13454                           
 13455                           ; BSR set to: 0
 13456   00908C  0012               	return		;funcret
 13457   00908E                     __end_of_disk_ioctl:
 13458                           	callstack 0
 13459                           
 13460 ;; *************** function _st_clust *****************
 13461 ;; Defined at:
 13462 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;  fs              2    4[BANK0 ] PTR struct .
 13465 ;;		 -> FatFs(563), NULL(0), 
 13466 ;;  dir             2    6[BANK0 ] PTR unsigned char 
 13467 ;;		 -> FatFs(563), NULL(0), 
 13468 ;;  cl              4    8[BANK0 ] unsigned long 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  1    wreg      void 
 13473 ;; Registers used:
 13474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13480 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13484 ;;Total ram usage:        9 bytes
 13485 ;; Hardware stack levels used: 1
 13486 ;; Hardware stack levels required when called: 6
 13487 ;; This function calls:
 13488 ;;		_st_word
 13489 ;; This function is called by:
 13490 ;;		_f_open
 13491 ;;		_f_sync
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text41
 13496   008C2C                     __ptext41:
 13497                           	callstack 0
 13498   008C2C                     _st_clust:
 13499                           	callstack 22
 13500   008C2C                     
 13501                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 13502   008C2C  0E1A               	movlw	26
 13503   008C2E  0100               	movlb	0	; () banked
 13504   008C30  2566               	addwf	st_clust@dir& (0+255),w,b
 13505   008C32  6F60               	movwf	st_word@ptr& (0+255),b
 13506   008C34  0E00               	movlw	0
 13507   008C36  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 13508   008C38  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13509   008C3A  C068  F062         	movff	st_clust@cl,st_word@val
 13510   008C3E  C069  F063         	movff	st_clust@cl+1,st_word@val+1
 13511   008C42  ECA5  F047         	call	_st_word	;wreg free
 13512   008C46                     
 13513                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 13514   008C46  0060  F193  FFD9   	movff	st_clust@fs,fsr2l
 13515   008C4C  0060  F197  FFDA   	movff	st_clust@fs+1,fsr2h
 13516   008C52  0E03               	movlw	3
 13517   008C54  18DE               	xorwf	postinc2,w,c
 13518   008C56  A4D8               	btfss	status,2,c
 13519   008C58  EF30  F046         	goto	u18251
 13520   008C5C  EF32  F046         	goto	u18250
 13521   008C60                     u18251:
 13522   008C60  EF3F  F046         	goto	l1102
 13523   008C64                     u18250:
 13524   008C64                     
 13525                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 13526   008C64  0E14               	movlw	20
 13527   008C66  0100               	movlb	0	; () banked
 13528   008C68  2566               	addwf	st_clust@dir& (0+255),w,b
 13529   008C6A  6F60               	movwf	st_word@ptr& (0+255),b
 13530   008C6C  0E00               	movlw	0
 13531   008C6E  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 13532   008C70  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13533   008C72  C06A  F062         	movff	st_clust@cl+2,st_word@val
 13534   008C76  C06B  F063         	movff	st_clust@cl+3,st_word@val+1
 13535   008C7A  ECA5  F047         	call	_st_word	;wreg free
 13536   008C7E                     l1102:
 13537   008C7E  0012               	return		;funcret
 13538   008C80                     __end_of_st_clust:
 13539                           	callstack 0
 13540                           
 13541 ;; *************** function _st_word *****************
 13542 ;; Defined at:
 13543 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 13546 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 13547 ;;  val             2    2[BANK0 ] unsigned short 
 13548 ;; Auto vars:     Size  Location     Type
 13549 ;;		None
 13550 ;; Return value:  Size  Location     Type
 13551 ;;                  1    wreg      void 
 13552 ;; Registers used:
 13553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13554 ;; Tracked objects:
 13555 ;;		On entry : 0/0
 13556 ;;		On exit  : 0/0
 13557 ;;		Unchanged: 0/0
 13558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;Total ram usage:        4 bytes
 13564 ;; Hardware stack levels used: 1
 13565 ;; Hardware stack levels required when called: 5
 13566 ;; This function calls:
 13567 ;;		Nothing
 13568 ;; This function is called by:
 13569 ;;		_sync_fs
 13570 ;;		_put_fat
 13571 ;;		_st_clust
 13572 ;;		_f_sync
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           	psect	text42
 13577   008F4A                     __ptext42:
 13578                           	callstack 0
 13579   008F4A                     _st_word:
 13580                           	callstack 21
 13581   008F4A                     
 13582                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 13583   008F4A  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 13584   008F50  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 13585   008F56  0060  F18B  FFDF   	movff	st_word@val,indf2
 13586   008F5C  0100               	movlb	0	; () banked
 13587   008F5E  4B60               	infsnz	st_word@ptr& (0+255),f,b
 13588   008F60  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 13589   008F62                     
 13590                           ; BSR set to: 0
 13591   008F62  5163               	movf	(st_word@val+1)& (0+255),w,b
 13592   008F64  6F62               	movwf	st_word@val& (0+255),b
 13593   008F66  6B63               	clrf	(st_word@val+1)& (0+255),b
 13594   008F68                     
 13595                           ; BSR set to: 0
 13596                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 13597   008F68  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 13598   008F6E  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 13599   008F74  0060  F18B  FFDF   	movff	st_word@val,indf2
 13600   008F7A                     
 13601                           ; BSR set to: 0
 13602   008F7A  4B60               	infsnz	st_word@ptr& (0+255),f,b
 13603   008F7C  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 13604   008F7E                     
 13605                           ; BSR set to: 0
 13606   008F7E  0012               	return		;funcret
 13607   008F80                     __end_of_st_word:
 13608                           	callstack 0
 13609                           
 13610 ;; *************** function _BLUE_LED_TOGGLE *****************
 13611 ;; Defined at:
 13612 ;;		line 44 in file "./common.h"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;		None
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		None
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;Total ram usage:        0 bytes
 13631 ;; Hardware stack levels used: 1
 13632 ;; Hardware stack levels required when called: 5
 13633 ;; This function calls:
 13634 ;;		Nothing
 13635 ;; This function is called by:
 13636 ;;		_send_status_ok
 13637 ;; This function uses a non-reentrant model
 13638 ;;
 13639                           
 13640                           	psect	text43
 13641   0091BA                     __ptext43:
 13642                           	callstack 0
 13643   0091BA                     _BLUE_LED_TOGGLE:
 13644                           	callstack 24
 13645   0091BA                     
 13646                           ;./common.h: 45:     LATA2 ^= 1;
 13647   0091BA  74BA               	btg	16314,2,c	;volatile
 13648   0091BC  0012               	return		;funcret
 13649   0091BE                     __end_of_BLUE_LED_TOGGLE:
 13650                           	callstack 0
 13651                           
 13652 ;; *************** function _send_status_err *****************
 13653 ;; Defined at:
 13654 ;;		line 233 in file "main.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;		None
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  board_stat_m   11   23[BANK0 ] struct .
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      void 
 13661 ;; Registers used:
 13662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;Total ram usage:       11 bytes
 13673 ;; Hardware stack levels used: 1
 13674 ;; Hardware stack levels required when called: 7
 13675 ;; This function calls:
 13676 ;;		_RED_LED_TOGGLE
 13677 ;;		_build_board_stat_msg
 13678 ;;		_can_send
 13679 ;;		_millis
 13680 ;; This function is called by:
 13681 ;;		_main
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text44
 13686   008DAC                     __ptext44:
 13687                           	callstack 0
 13688   008DAC                     _send_status_err:
 13689                           	callstack 23
 13690   008DAC                     
 13691                           ;main.c: 234:     can_msg_t board_stat_msg;;main.c: 235:     build_board_stat_msg(millis
      +                          (), E_MISSING_CRITICAL_BOARD, ((void*)0), 0, &board_stat_msg);
 13692   008DAC  ECD8  F047         	call	_millis	;wreg free
 13693   008DB0  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
 13694   008DB4  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
 13695   008DB8  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
 13696   008DBC  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
 13697   008DC0  0E0B               	movlw	11
 13698   008DC2  0100               	movlb	0	; () banked
 13699   008DC4  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
 13700   008DC6  0E00               	movlw	0
 13701   008DC8  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
 13702   008DCA  0E00               	movlw	0
 13703   008DCC  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
 13704   008DCE  0E00               	movlw	0
 13705   008DD0  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
 13706   008DD2  0E77               	movlw	low send_status_err@board_stat_msg
 13707   008DD4  6F70               	movwf	build_board_stat_msg@output& (0+255),b
 13708   008DD6  6B71               	clrf	(build_board_stat_msg@output+1)& (0+255),b
 13709   008DD8  ECCD  F03A         	call	_build_board_stat_msg	;wreg free
 13710   008DDC                     
 13711                           ;main.c: 236:     can_send(&board_stat_msg);
 13712   008DDC  0E77               	movlw	low send_status_err@board_stat_msg
 13713   008DDE  0100               	movlb	0	; () banked
 13714   008DE0  6F6B               	movwf	can_send@message& (0+255),b
 13715   008DE2  6B6C               	clrf	(can_send@message+1)& (0+255),b
 13716   008DE4  EC44  F03A         	call	_can_send	;wreg free
 13717   008DE8                     
 13718                           ;main.c: 238:     RED_LED_TOGGLE();
 13719   008DE8  ECDF  F048         	call	_RED_LED_TOGGLE	;wreg free
 13720   008DEC  0012               	return		;funcret
 13721   008DEE                     __end_of_send_status_err:
 13722                           	callstack 0
 13723                           
 13724 ;; *************** function _millis *****************
 13725 ;; Defined at:
 13726 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;  res             4    4[BANK0 ] unsigned long 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  4    0[BANK0 ] unsigned long 
 13733 ;; Registers used:
 13734 ;;		None
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13741 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;Total ram usage:        8 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; Hardware stack levels required when called: 5
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_main
 13751 ;;		_send_status_ok
 13752 ;;		_send_status_err
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           	psect	text45
 13757   008FB0                     __ptext45:
 13758                           	callstack 0
 13759   008FB0                     _millis:
 13760                           	callstack 24
 13761   008FB0                     
 13762                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     INTCON0bits.GIE = 0;
 13763   008FB0  9ED2               	bcf	210,7,c	;volatile
 13764                           
 13765                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 28:     uint32_t res = millis_counter;
 13766   008FB2  C03E  F064         	movff	_millis_counter,millis@res	;volatile
 13767   008FB6  C03F  F065         	movff	_millis_counter+1,millis@res+1	;volatile
 13768   008FBA  C040  F066         	movff	_millis_counter+2,millis@res+2	;volatile
 13769   008FBE  C041  F067         	movff	_millis_counter+3,millis@res+3	;volatile
 13770                           
 13771                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 29:     INTCON0bits.GIE = 1;
 13772   008FC2  8ED2               	bsf	210,7,c	;volatile
 13773                           
 13774                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 30:     return res;
 13775   008FC4  C064  F060         	movff	millis@res,?_millis
 13776   008FC8  C065  F061         	movff	millis@res+1,?_millis+1
 13777   008FCC  C066  F062         	movff	millis@res+2,?_millis+2
 13778   008FD0  C067  F063         	movff	millis@res+3,?_millis+3
 13779   008FD4  0012               	return		;funcret
 13780   008FD6                     __end_of_millis:
 13781                           	callstack 0
 13782                           
 13783 ;; *************** function _can_send *****************
 13784 ;; Defined at:
 13785 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 13786 ;; Parameters:    Size  Location     Type
 13787 ;;  message         2   11[BANK0 ] PTR const struct .
 13788 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), txb_heartbeat@msg_sent(11), 
 13789 ;; Auto vars:     Size  Location     Type
 13790 ;;		None
 13791 ;; Return value:  Size  Location     Type
 13792 ;;                  1    wreg      void 
 13793 ;; Registers used:
 13794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13795 ;; Tracked objects:
 13796 ;;		On entry : 0/0
 13797 ;;		On exit  : 0/0
 13798 ;;		Unchanged: 0/0
 13799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;Total ram usage:        4 bytes
 13805 ;; Hardware stack levels used: 1
 13806 ;; Hardware stack levels required when called: 6
 13807 ;; This function calls:
 13808 ;;		_memcpy
 13809 ;; This function is called by:
 13810 ;;		_main
 13811 ;;		_send_status_ok
 13812 ;;		_send_status_err
 13813 ;;		_txb_heartbeat
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817                           	psect	text46
 13818   007488                     __ptext46:
 13819                           	callstack 0
 13820   007488                     _can_send:
 13821                           	callstack 23
 13822   007488                     
 13823                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
 13824   007488  0137               	movlb	55	; () banked
 13825   00748A  A7E0               	btfss	224,3,b	;volatile
 13826   00748C  EF4A  F03A         	goto	u19921
 13827   007490  EF4C  F03A         	goto	u19920
 13828   007494                     u19921:
 13829   007494  EF4E  F03A         	goto	l16223
 13830   007498                     u19920:
 13831   007498  EFCC  F03A         	goto	l75
 13832   00749C                     l16223:
 13833                           
 13834                           ; BSR set to: 55
 13835                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x7FF) {
 13836   00749C  0100               	movlb	0	; () banked
 13837   00749E  EE20 F002          	lfsr	2,2
 13838   0074A2  516B               	movf	can_send@message& (0+255),w,b
 13839   0074A4  26D9               	addwf	fsr2l,f,c
 13840   0074A6  516C               	movf	(can_send@message+1)& (0+255),w,b
 13841   0074A8  22DA               	addwfc	fsr2h,f,c
 13842   0074AA  0E09               	movlw	9
 13843   0074AC  60DF               	cpfslt	indf2,c
 13844   0074AE  EF5B  F03A         	goto	u19931
 13845   0074B2  EF5D  F03A         	goto	u19930
 13846   0074B6                     u19931:
 13847   0074B6  EFCC  F03A         	goto	l75
 13848   0074BA                     u19930:
 13849   0074BA                     
 13850                           ; BSR set to: 0
 13851   0074BA  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 13852   0074C0  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 13853   0074C6  52DE               	movf	postinc2,f,c
 13854   0074C8  0E08               	movlw	8
 13855   0074CA  5CDE               	subwf	postinc2,w,c
 13856   0074CC  A0D8               	btfss	status,0,c
 13857   0074CE  EF6B  F03A         	goto	u19941
 13858   0074D2  EF6D  F03A         	goto	u19940
 13859   0074D6                     u19941:
 13860   0074D6  EF6F  F03A         	goto	l16227
 13861   0074DA                     u19940:
 13862   0074DA  EFCC  F03A         	goto	l75
 13863   0074DE                     l16227:
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
 13867   0074DE  0EFC               	movlw	-4
 13868   0074E0  0137               	movlb	55	; () banked
 13869   0074E2  17E0               	andwf	224,f,b	;volatile
 13870   0074E4                     
 13871                           ; BSR set to: 55
 13872                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = ((message->sid) >> 3);
 13873   0074E4  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 13874   0074EA  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 13875   0074F0  006F FF78  F06D    	movff	postinc2,??_can_send
 13876   0074F6  006F FF74  F06E    	movff	postdec2,??_can_send+1
 13877   0074FC  0100               	movlb	0	; () banked
 13878   0074FE  90D8               	bcf	status,0,c
 13879   007500  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 13880   007502  336D               	rrcf	??_can_send& (0+255),f,b
 13881   007504  90D8               	bcf	status,0,c
 13882   007506  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 13883   007508  336D               	rrcf	??_can_send& (0+255),f,b
 13884   00750A  90D8               	bcf	status,0,c
 13885   00750C  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 13886   00750E  336D               	rrcf	??_can_send& (0+255),f,b
 13887   007510  516D               	movf	??_can_send& (0+255),w,b
 13888   007512  0137               	movlb	55	; () banked
 13889   007514  6FE1               	movwf	225,b	;volatile
 13890   007516                     
 13891                           ; BSR set to: 55
 13892                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid) & 0x7) << 5);
 13893   007516  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 13894   00751C  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 13895   007522  50DF               	movf	indf2,w,c
 13896   007524  0100               	movlb	0	; () banked
 13897   007526  6F6D               	movwf	??_can_send& (0+255),b
 13898   007528  0E07               	movlw	7
 13899   00752A  176D               	andwf	??_can_send& (0+255),f,b
 13900   00752C  0E05               	movlw	5
 13901   00752E  6F6E               	movwf	(??_can_send+1)& (0+255),b
 13902   007530                     u19955:
 13903   007530  90D8               	bcf	status,0,c
 13904   007532  376D               	rlcf	??_can_send& (0+255),f,b
 13905   007534  2F6E               	decfsz	(??_can_send+1)& (0+255),f,b
 13906   007536  EF98  F03A         	goto	u19955
 13907   00753A  516D               	movf	??_can_send& (0+255),w,b
 13908   00753C  0137               	movlb	55	; () banked
 13909   00753E  6FE2               	movwf	226,b	;volatile
 13910   007540                     
 13911                           ; BSR set to: 55
 13912                           ;canlib/pic18f26k83/pic18f26k83_can.c: 102:     TXB0DLCbits.TXRTR = 0;
 13913   007540  9DE5               	bcf	229,6,b	;volatile
 13914   007542                     
 13915                           ; BSR set to: 55
 13916                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.DLC = message->data_len;
 13917   007542  0100               	movlb	0	; () banked
 13918   007544  EE20 F002          	lfsr	2,2
 13919   007548  516B               	movf	can_send@message& (0+255),w,b
 13920   00754A  26D9               	addwf	fsr2l,f,c
 13921   00754C  516C               	movf	(can_send@message+1)& (0+255),w,b
 13922   00754E  22DA               	addwfc	fsr2h,f,c
 13923   007550  50DF               	movf	indf2,w,c
 13924   007552  6F6D               	movwf	??_can_send& (0+255),b
 13925   007554  0137               	movlb	55	; () banked
 13926   007556  51E5               	movf	229,w,b	;volatile
 13927   007558  0100               	movlb	0	; () banked
 13928   00755A  196D               	xorwf	??_can_send& (0+255),w,b
 13929   00755C  0BF0               	andlw	-16
 13930   00755E  196D               	xorwf	??_can_send& (0+255),w,b
 13931   007560  0137               	movlb	55	; () banked
 13932   007562  6FE5               	movwf	229,b	;volatile
 13933   007564                     
 13934                           ; BSR set to: 55
 13935                           ;canlib/pic18f26k83/pic18f26k83_can.c: 108:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
 13936   007564  0EE6               	movlw	230
 13937   007566  0100               	movlb	0	; () banked
 13938   007568  6F60               	movwf	memcpy@d1& (0+255),b
 13939   00756A  0E37               	movlw	55
 13940   00756C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13941   00756E  0E03               	movlw	3
 13942   007570  256B               	addwf	can_send@message& (0+255),w,b
 13943   007572  6F62               	movwf	memcpy@s1& (0+255),b
 13944   007574  0E00               	movlw	0
 13945   007576  216C               	addwfc	(can_send@message+1)& (0+255),w,b
 13946   007578  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13947   00757A  EE20 F002          	lfsr	2,2
 13948   00757E  516B               	movf	can_send@message& (0+255),w,b
 13949   007580  26D9               	addwf	fsr2l,f,c
 13950   007582  516C               	movf	(can_send@message+1)& (0+255),w,b
 13951   007584  22DA               	addwfc	fsr2h,f,c
 13952   007586  50DF               	movf	indf2,w,c
 13953   007588  6F6D               	movwf	??_can_send& (0+255),b
 13954   00758A  516D               	movf	??_can_send& (0+255),w,b
 13955   00758C  6F64               	movwf	memcpy@n& (0+255),b
 13956   00758E  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13957   007590  EC64  F045         	call	_memcpy	;wreg free
 13958   007594                     
 13959                           ;canlib/pic18f26k83/pic18f26k83_can.c: 111:     TXB0CONbits.TXREQ = 1;
 13960   007594  0137               	movlb	55	; () banked
 13961   007596  87E0               	bsf	224,3,b	;volatile
 13962   007598                     l75:
 13963   007598  0012               	return		;funcret
 13964   00759A                     __end_of_can_send:
 13965                           	callstack 0
 13966                           
 13967 ;; *************** function _build_board_stat_msg *****************
 13968 ;; Defined at:
 13969 ;;		line 189 in file "canlib/can_common.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  timestamp       4    8[BANK0 ] unsigned long 
 13972 ;;  error_code      1   12[BANK0 ] enum E60
 13973 ;;  error_data      2   13[BANK0 ] PTR const unsigned char 
 13974 ;;		 -> NULL(0), 
 13975 ;;  error_data_l    1   15[BANK0 ] unsigned char 
 13976 ;;  output          2   16[BANK0 ] PTR struct .
 13977 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  i               2   21[BANK0 ] int 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1    wreg      _Bool 
 13982 ;; Registers used:
 13983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13989 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;Total ram usage:       15 bytes
 13994 ;; Hardware stack levels used: 1
 13995 ;; Hardware stack levels required when called: 6
 13996 ;; This function calls:
 13997 ;;		_write_timestamp_3bytes
 13998 ;; This function is called by:
 13999 ;;		_send_status_ok
 14000 ;;		_send_status_err
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text47
 14005   00759A                     __ptext47:
 14006                           	callstack 0
 14007   00759A                     _build_board_stat_msg:
 14008                           	callstack 23
 14009   00759A                     
 14010                           ;canlib/can_common.c: 189: _Bool build_board_stat_msg(uint32_t timestamp,;canlib/can_com
      +                          mon.c: 190:                           enum BOARD_STATUS error_code,;canlib/can_common.c:
      +                           191:                           const uint8_t *error_data,;canlib/can_common.c: 192:    
      +                                                 uint8_t error_data_len,;canlib/can_common.c: 193:                
      +                                     can_msg_t *output);canlib/can_common.c: 194: {;canlib/can_common.c: 195:     
      +                          if (error_data_len > 0 && !error_data) { return 0; }
 14011   00759A  0100               	movlb	0	; () banked
 14012   00759C  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 14013   00759E  B4D8               	btfsc	status,2,c
 14014   0075A0  EFD4  F03A         	goto	u19961
 14015   0075A4  EFD6  F03A         	goto	u19960
 14016   0075A8                     u19961:
 14017   0075A8  EFE1  F03A         	goto	l16259
 14018   0075AC                     u19960:
 14019   0075AC                     
 14020                           ; BSR set to: 0
 14021   0075AC  516D               	movf	build_board_stat_msg@error_data& (0+255),w,b
 14022   0075AE  116E               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
 14023   0075B0  A4D8               	btfss	status,2,c
 14024   0075B2  EFDD  F03A         	goto	u19971
 14025   0075B6  EFDF  F03A         	goto	u19970
 14026   0075BA                     u19971:
 14027   0075BA  EFE1  F03A         	goto	l16259
 14028   0075BE                     u19970:
 14029   0075BE  EF50  F03B         	goto	l292
 14030   0075C2                     l16259:
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;canlib/can_common.c: 196:     if (!output) { return 0; }
 14034   0075C2  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 14035   0075C4  1171               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
 14036   0075C6  A4D8               	btfss	status,2,c
 14037   0075C8  EFE8  F03A         	goto	u19981
 14038   0075CC  EFEA  F03A         	goto	u19980
 14039   0075D0                     u19981:
 14040   0075D0  EFEC  F03A         	goto	l16263
 14041   0075D4                     u19980:
 14042   0075D4  EF50  F03B         	goto	l292
 14043   0075D8                     l16263:
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;canlib/can_common.c: 197:     if (error_data_len > 4) { return 0; }
 14047   0075D8  0E04               	movlw	4
 14048   0075DA  656F               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
 14049   0075DC  EFF2  F03A         	goto	u19991
 14050   0075E0  EFF4  F03A         	goto	u19990
 14051   0075E4                     u19991:
 14052   0075E4  EFF6  F03A         	goto	l16267
 14053   0075E8                     u19990:
 14054   0075E8  EF50  F03B         	goto	l292
 14055   0075EC                     l16267:
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;canlib/can_common.c: 199:     output->sid = 0x520 | 0x0C;
 14059   0075EC  0060  F1C3  FFD9   	movff	build_board_stat_msg@output,fsr2l
 14060   0075F2  0060  F1C7  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
 14061   0075F8  0E2C               	movlw	44
 14062   0075FA  6EDE               	movwf	postinc2,c
 14063   0075FC  0E05               	movlw	5
 14064   0075FE  6EDD               	movwf	postdec2,c
 14065   007600                     
 14066                           ; BSR set to: 0
 14067                           ;canlib/can_common.c: 200:     write_timestamp_3bytes(timestamp, output);
 14068   007600  C068  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
 14069   007604  C069  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
 14070   007608  C06A  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
 14071   00760C  C06B  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
 14072   007610  C070  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
 14073   007614  C071  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
 14074   007618  EC51  F047         	call	_write_timestamp_3bytes	;wreg free
 14075   00761C                     
 14076                           ;canlib/can_common.c: 202:     output->data[3] = (uint8_t) error_code;
 14077   00761C  0100               	movlb	0	; () banked
 14078   00761E  EE20 F006          	lfsr	2,6
 14079   007622  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 14080   007624  26D9               	addwf	fsr2l,f,c
 14081   007626  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 14082   007628  22DA               	addwfc	fsr2h,f,c
 14083   00762A  0060  F1B3  FFDF   	movff	build_board_stat_msg@error_code,indf2
 14084   007630                     
 14085                           ; BSR set to: 0
 14086                           ;canlib/can_common.c: 203:     for (int i = 0; i < error_data_len; ++i) {
 14087   007630  0E00               	movlw	0
 14088   007632  6F76               	movwf	(build_board_stat_msg@i+1)& (0+255),b
 14089   007634  0E00               	movlw	0
 14090   007636  6F75               	movwf	build_board_stat_msg@i& (0+255),b
 14091   007638  EF35  F03B         	goto	l16279
 14092   00763C                     l16275:
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;canlib/can_common.c: 205:         output->data[4 + i] = error_data[i];
 14096   00763C  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 14097   00763E  256D               	addwf	build_board_stat_msg@error_data& (0+255),w,b
 14098   007640  6ED9               	movwf	fsr2l,c
 14099   007642  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 14100   007644  216E               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
 14101   007646  6EDA               	movwf	fsr2h,c
 14102   007648  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 14103   00764A  2570               	addwf	build_board_stat_msg@output& (0+255),w,b
 14104   00764C  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 14105   00764E  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 14106   007650  2171               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
 14107   007652  6F73               	movwf	(??_build_board_stat_msg+1)& (0+255),b
 14108   007654  0E07               	movlw	7
 14109   007656  2572               	addwf	??_build_board_stat_msg& (0+255),w,b
 14110   007658  6EE1               	movwf	fsr1l,c
 14111   00765A  0E00               	movlw	0
 14112   00765C  2173               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
 14113   00765E  6EE2               	movwf	fsr1h,c
 14114   007660  006F FF7F FFE7     	movff	indf2,indf1
 14115   007666                     
 14116                           ; BSR set to: 0
 14117                           ;canlib/can_common.c: 206:     }
 14118   007666  4B75               	infsnz	build_board_stat_msg@i& (0+255),f,b
 14119   007668  2B76               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
 14120   00766A                     l16279:
 14121                           
 14122                           ; BSR set to: 0
 14123   00766A  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 14124   00766C  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 14125   00766E  6B73               	clrf	(??_build_board_stat_msg+1)& (0+255),b
 14126   007670  5172               	movf	??_build_board_stat_msg& (0+255),w,b
 14127   007672  5D75               	subwf	build_board_stat_msg@i& (0+255),w,b
 14128   007674  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 14129   007676  0A80               	xorlw	128
 14130   007678  6F74               	movwf	(??_build_board_stat_msg+2)& (0+255),b
 14131   00767A  5173               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
 14132   00767C  0A80               	xorlw	128
 14133   00767E  5974               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
 14134   007680  A0D8               	btfss	status,0,c
 14135   007682  EF45  F03B         	goto	u20001
 14136   007686  EF47  F03B         	goto	u20000
 14137   00768A                     u20001:
 14138   00768A  EF1E  F03B         	goto	l16275
 14139   00768E                     u20000:
 14140   00768E                     
 14141                           ; BSR set to: 0
 14142                           ;canlib/can_common.c: 209:     output->data_len = 4 + error_data_len;
 14143   00768E  EE20 F002          	lfsr	2,2
 14144   007692  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 14145   007694  26D9               	addwf	fsr2l,f,c
 14146   007696  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 14147   007698  22DA               	addwfc	fsr2h,f,c
 14148   00769A  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 14149   00769C  0F04               	addlw	4
 14150   00769E  6EDF               	movwf	indf2,c
 14151   0076A0                     l292:
 14152                           
 14153                           ; BSR set to: 0
 14154   0076A0  0012               	return		;funcret
 14155   0076A2                     __end_of_build_board_stat_msg:
 14156                           	callstack 0
 14157                           
 14158 ;; *************** function _write_timestamp_3bytes *****************
 14159 ;; Defined at:
 14160 ;;		line 20 in file "canlib/can_common.c"
 14161 ;; Parameters:    Size  Location     Type
 14162 ;;  timestamp       4    0[BANK0 ] unsigned long 
 14163 ;;  output          2    4[BANK0 ] PTR struct .
 14164 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;		None
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      void 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;Total ram usage:        6 bytes
 14181 ;; Hardware stack levels used: 1
 14182 ;; Hardware stack levels required when called: 5
 14183 ;; This function calls:
 14184 ;;		Nothing
 14185 ;; This function is called by:
 14186 ;;		_build_board_stat_msg
 14187 ;;		_build_general_cmd_msg
 14188 ;;		_build_debug_msg
 14189 ;;		_build_reset_msg
 14190 ;;		_build_actuator_cmd_msg
 14191 ;;		_build_actuator_stat_msg
 14192 ;;		_build_actuator_cmd_analog
 14193 ;;		_build_arm_cmd_msg
 14194 ;;		_build_arm_stat_msg
 14195 ;;		_build_state_est_data_msg
 14196 ;;		_build_temp_data_msg
 14197 ;;		_build_altitude_data_msg
 14198 ;;		_build_gps_time_msg
 14199 ;;		_build_gps_lat_msg
 14200 ;;		_build_gps_lon_msg
 14201 ;;		_build_gps_alt_msg
 14202 ;;		_build_gps_info_msg
 14203 ;;		_build_state_est_calibration_msg
 14204 ;;		_build_fill_msg
 14205 ;; This function uses a non-reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text48
 14209   008EA2                     __ptext48:
 14210                           	callstack 0
 14211   008EA2                     _write_timestamp_3bytes:
 14212                           	callstack 23
 14213   008EA2                     
 14214                           ;canlib/can_common.c: 20: static void write_timestamp_3bytes(uint32_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 21: {;canlib/can_common.c: 22:     output->data[0] = (t
      +                          imestamp >> 16) & 0xff;
 14215   008EA2  0100               	movlb	0	; () banked
 14216   008EA4  EE20 F003          	lfsr	2,3
 14217   008EA8  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 14218   008EAA  26D9               	addwf	fsr2l,f,c
 14219   008EAC  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 14220   008EAE  22DA               	addwfc	fsr2h,f,c
 14221   008EB0  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
 14222                           
 14223                           ;canlib/can_common.c: 23:     output->data[1] = (timestamp >> 8) & 0xff;
 14224   008EB6  EE20 F004          	lfsr	2,4
 14225   008EBA  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 14226   008EBC  26D9               	addwf	fsr2l,f,c
 14227   008EBE  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 14228   008EC0  22DA               	addwfc	fsr2h,f,c
 14229   008EC2  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
 14230                           
 14231                           ;canlib/can_common.c: 24:     output->data[2] = (timestamp >> 0) & 0xff;
 14232   008EC8  EE20 F005          	lfsr	2,5
 14233   008ECC  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 14234   008ECE  26D9               	addwf	fsr2l,f,c
 14235   008ED0  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 14236   008ED2  22DA               	addwfc	fsr2h,f,c
 14237   008ED4  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
 14238   008EDA                     
 14239                           ; BSR set to: 0
 14240   008EDA  0012               	return		;funcret
 14241   008EDC                     __end_of_write_timestamp_3bytes:
 14242                           	callstack 0
 14243                           
 14244 ;; *************** function _RED_LED_TOGGLE *****************
 14245 ;; Defined at:
 14246 ;;		line 68 in file "./common.h"
 14247 ;; Parameters:    Size  Location     Type
 14248 ;;		None
 14249 ;; Auto vars:     Size  Location     Type
 14250 ;;		None
 14251 ;; Return value:  Size  Location     Type
 14252 ;;                  1    wreg      void 
 14253 ;; Registers used:
 14254 ;;		None
 14255 ;; Tracked objects:
 14256 ;;		On entry : 0/0
 14257 ;;		On exit  : 0/0
 14258 ;;		Unchanged: 0/0
 14259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;Total ram usage:        0 bytes
 14265 ;; Hardware stack levels used: 1
 14266 ;; Hardware stack levels required when called: 5
 14267 ;; This function calls:
 14268 ;;		Nothing
 14269 ;; This function is called by:
 14270 ;;		_send_status_err
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           	psect	text49
 14275   0091BE                     __ptext49:
 14276                           	callstack 0
 14277   0091BE                     _RED_LED_TOGGLE:
 14278                           	callstack 24
 14279   0091BE                     
 14280                           ;./common.h: 69:     LATA4 ^= 1;
 14281   0091BE  78BA               	btg	16314,4,c	;volatile
 14282   0091C0  0012               	return		;funcret
 14283   0091C2                     __end_of_RED_LED_TOGGLE:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function _fxls_init *****************
 14287 ;; Defined at:
 14288 ;;		line 6 in file "fxls8974cf.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;  sens_config2    1   20[BANK0 ] unsigned char 
 14293 ;;  sens_config3    1   19[BANK0 ] unsigned char 
 14294 ;;  int_pin_sel     1   18[BANK0 ] unsigned char 
 14295 ;;  int_en          1   17[BANK0 ] unsigned char 
 14296 ;;  buf_config1     1   16[BANK0 ] unsigned char 
 14297 ;;  sens_config1    1   15[BANK0 ] unsigned char 
 14298 ;;  sens_config4    1   14[BANK0 ] unsigned char 
 14299 ;;  sys_mode        1   21[BANK0 ] volatile unsigned char 
 14300 ;; Return value:  Size  Location     Type
 14301 ;;                  1    wreg      void 
 14302 ;; Registers used:
 14303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14310 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14312 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;Total ram usage:       10 bytes
 14314 ;; Hardware stack levels used: 1
 14315 ;; Hardware stack levels required when called: 7
 14316 ;; This function calls:
 14317 ;;		_i2c_init
 14318 ;;		_i2c_read_reg8
 14319 ;;		_i2c_write_reg8
 14320 ;; This function is called by:
 14321 ;;		_main
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text50
 14326   007232                     __ptext50:
 14327                           	callstack 0
 14328   007232                     _fxls_init:
 14329                           	callstack 23
 14330   007232                     
 14331                           ;fxls8974cf.c: 7:     i2c_init(0b000);
 14332   007232  0E00               	movlw	0
 14333   007234  ECC0  F047         	call	_i2c_init
 14334   007238                     
 14335                           ;fxls8974cf.c: 10:     uint8_t sens_config1;;fxls8974cf.c: 11:     i2c_read_reg8(0x18, 0
      +                          x15, &sens_config1);
 14336   007238  0E15               	movlw	21
 14337   00723A  0100               	movlb	0	; () banked
 14338   00723C  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14339   00723E  0E6F               	movlw	low fxls_init@sens_config1
 14340   007240  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14341   007242  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14342   007244  0E18               	movlw	24
 14343   007246  EC9F  F044         	call	_i2c_read_reg8
 14344   00724A                     
 14345                           ;fxls8974cf.c: 12:     sens_config1 |= 0x01;
 14346   00724A  0100               	movlb	0	; () banked
 14347   00724C  816F               	bsf	fxls_init@sens_config1& (0+255),0,b
 14348   00724E                     
 14349                           ; BSR set to: 0
 14350                           ;fxls8974cf.c: 13:     i2c_write_reg8(0x18, 0x15, sens_config1);
 14351   00724E  0E15               	movlw	21
 14352   007250  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14353   007252  C06F  F067         	movff	fxls_init@sens_config1,i2c_write_reg8@val
 14354   007256  0E18               	movlw	24
 14355   007258  ECEB  F047         	call	_i2c_write_reg8
 14356   00725C                     
 14357                           ;fxls8974cf.c: 15:     volatile uint8_t sys_mode;;fxls8974cf.c: 16:     i2c_read_reg8(0x
      +                          18, 0x14, &sys_mode);
 14358   00725C  0E14               	movlw	20
 14359   00725E  0100               	movlb	0	; () banked
 14360   007260  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14361   007262  0E75               	movlw	low fxls_init@sys_mode
 14362   007264  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14363   007266  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14364   007268  0E18               	movlw	24
 14365   00726A  EC9F  F044         	call	_i2c_read_reg8
 14366   00726E                     
 14367                           ;fxls8974cf.c: 19:     uint8_t sens_config2;;fxls8974cf.c: 20:     i2c_read_reg8(0x18, 0
      +                          x16, &sens_config2);
 14368   00726E  0E16               	movlw	22
 14369   007270  0100               	movlb	0	; () banked
 14370   007272  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14371   007274  0E74               	movlw	low fxls_init@sens_config2
 14372   007276  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14373   007278  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14374   00727A  0E18               	movlw	24
 14375   00727C  EC9F  F044         	call	_i2c_read_reg8
 14376   007280                     
 14377                           ;fxls8974cf.c: 21:     sens_config2 &= ~(0x01 << 3);
 14378   007280  0100               	movlb	0	; () banked
 14379   007282  9774               	bcf	fxls_init@sens_config2& (0+255),3,b
 14380   007284                     
 14381                           ; BSR set to: 0
 14382                           ;fxls8974cf.c: 22:     sens_config2 &= ~(0x01 << 1);
 14383   007284  9374               	bcf	fxls_init@sens_config2& (0+255),1,b
 14384   007286                     
 14385                           ; BSR set to: 0
 14386                           ;fxls8974cf.c: 23:     sens_config2 &= ~(0x01);
 14387   007286  9174               	bcf	fxls_init@sens_config2& (0+255),0,b
 14388   007288                     
 14389                           ; BSR set to: 0
 14390                           ;fxls8974cf.c: 25:     sens_config2 |= (0x00 << 4);
 14391   007288  8D74               	bsf	fxls_init@sens_config2& (0+255),6,b
 14392   00728A                     
 14393                           ; BSR set to: 0
 14394                           ;fxls8974cf.c: 26:     i2c_write_reg8(0x18, 0x16, sens_config2);
 14395   00728A  0E16               	movlw	22
 14396   00728C  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14397   00728E  C074  F067         	movff	fxls_init@sens_config2,i2c_write_reg8@val
 14398   007292  0E18               	movlw	24
 14399   007294  ECEB  F047         	call	_i2c_write_reg8
 14400   007298                     
 14401                           ;fxls8974cf.c: 30:     uint8_t buf_config1;;fxls8974cf.c: 31:     i2c_read_reg8(0x18, 0x
      +                          26, &buf_config1);
 14402   007298  0E26               	movlw	38
 14403   00729A  0100               	movlb	0	; () banked
 14404   00729C  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14405   00729E  0E70               	movlw	low fxls_init@buf_config1
 14406   0072A0  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14407   0072A2  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14408   0072A4  0E18               	movlw	24
 14409   0072A6  EC9F  F044         	call	_i2c_read_reg8
 14410   0072AA                     
 14411                           ;fxls8974cf.c: 32:     buf_config1 &= ~0x60;;
 14412   0072AA  0E9F               	movlw	159
 14413   0072AC  0100               	movlb	0	; () banked
 14414   0072AE  1770               	andwf	fxls_init@buf_config1& (0+255),f,b
 14415   0072B0                     
 14416                           ; BSR set to: 0
 14417                           ;fxls8974cf.c: 33:     i2c_write_reg8(0x18, 0x26, buf_config1);
 14418   0072B0  0E26               	movlw	38
 14419   0072B2  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14420   0072B4  C070  F067         	movff	fxls_init@buf_config1,i2c_write_reg8@val
 14421   0072B8  0E18               	movlw	24
 14422   0072BA  ECEB  F047         	call	_i2c_write_reg8
 14423   0072BE                     
 14424                           ;fxls8974cf.c: 36:     uint8_t sens_config3;;fxls8974cf.c: 37:     i2c_read_reg8(0x18, 0
      +                          x17, &sens_config3);
 14425   0072BE  0E17               	movlw	23
 14426   0072C0  0100               	movlb	0	; () banked
 14427   0072C2  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14428   0072C4  0E73               	movlw	low fxls_init@sens_config3
 14429   0072C6  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14430   0072C8  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14431   0072CA  0E18               	movlw	24
 14432   0072CC  EC9F  F044         	call	_i2c_read_reg8
 14433   0072D0                     
 14434                           ;fxls8974cf.c: 38:     sens_config3 &= 0x0F;
 14435   0072D0  0E0F               	movlw	15
 14436   0072D2  0100               	movlb	0	; () banked
 14437   0072D4  1773               	andwf	fxls_init@sens_config3& (0+255),f,b
 14438   0072D6                     
 14439                           ; BSR set to: 0
 14440                           ;fxls8974cf.c: 39:     sens_config3 |= 0b01010000;
 14441   0072D6  0E50               	movlw	80
 14442   0072D8  1373               	iorwf	fxls_init@sens_config3& (0+255),f,b
 14443   0072DA                     
 14444                           ; BSR set to: 0
 14445                           ;fxls8974cf.c: 40:     i2c_write_reg8(0x18, 0x17, sens_config3);
 14446   0072DA  0E17               	movlw	23
 14447   0072DC  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14448   0072DE  C073  F067         	movff	fxls_init@sens_config3,i2c_write_reg8@val
 14449   0072E2  0E18               	movlw	24
 14450   0072E4  ECEB  F047         	call	_i2c_write_reg8
 14451   0072E8                     
 14452                           ;fxls8974cf.c: 43:     uint8_t int_en;;fxls8974cf.c: 44:     i2c_read_reg8(0x18, 0x20, &
      +                          int_en);
 14453   0072E8  0E20               	movlw	32
 14454   0072EA  0100               	movlb	0	; () banked
 14455   0072EC  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14456   0072EE  0E71               	movlw	low fxls_init@int_en
 14457   0072F0  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14458   0072F2  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14459   0072F4  0E18               	movlw	24
 14460   0072F6  EC9F  F044         	call	_i2c_read_reg8
 14461   0072FA                     
 14462                           ;fxls8974cf.c: 45:     int_en |= 0x80;
 14463   0072FA  0100               	movlb	0	; () banked
 14464   0072FC  8F71               	bsf	fxls_init@int_en& (0+255),7,b
 14465   0072FE                     
 14466                           ; BSR set to: 0
 14467                           ;fxls8974cf.c: 46:     i2c_write_reg8(0x18, 0x20, int_en);
 14468   0072FE  0E20               	movlw	32
 14469   007300  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14470   007302  C071  F067         	movff	fxls_init@int_en,i2c_write_reg8@val
 14471   007306  0E18               	movlw	24
 14472   007308  ECEB  F047         	call	_i2c_write_reg8
 14473   00730C                     
 14474                           ;fxls8974cf.c: 49:     uint8_t int_pin_sel;;fxls8974cf.c: 50:     i2c_read_reg8(0x18, 0x
      +                          21, &int_pin_sel);
 14475   00730C  0E21               	movlw	33
 14476   00730E  0100               	movlb	0	; () banked
 14477   007310  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14478   007312  0E72               	movlw	low fxls_init@int_pin_sel
 14479   007314  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14480   007316  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14481   007318  0E18               	movlw	24
 14482   00731A  EC9F  F044         	call	_i2c_read_reg8
 14483   00731E                     
 14484                           ;fxls8974cf.c: 51:     int_pin_sel |= 0x80;
 14485   00731E  0100               	movlb	0	; () banked
 14486   007320  8F72               	bsf	fxls_init@int_pin_sel& (0+255),7,b
 14487   007322                     
 14488                           ; BSR set to: 0
 14489                           ;fxls8974cf.c: 52:     i2c_write_reg8(0x18, 0x21, int_pin_sel);
 14490   007322  0E21               	movlw	33
 14491   007324  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14492   007326  C072  F067         	movff	fxls_init@int_pin_sel,i2c_write_reg8@val
 14493   00732A  0E18               	movlw	24
 14494   00732C  ECEB  F047         	call	_i2c_write_reg8
 14495   007330                     
 14496                           ;fxls8974cf.c: 55:     uint8_t sens_config4;;fxls8974cf.c: 56:     i2c_read_reg8(0x18, 0
      +                          x18, sens_config4);
 14497   007330  0E18               	movlw	24
 14498   007332  0100               	movlb	0	; () banked
 14499   007334  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14500   007336  516E               	movf	fxls_init@sens_config4& (0+255),w,b
 14501   007338  6F6C               	movwf	??_fxls_init& (0+255),b
 14502   00733A  6B6D               	clrf	(??_fxls_init+1)& (0+255),b
 14503   00733C  C06C  F067         	movff	??_fxls_init,i2c_read_reg8@value
 14504   007340  C06D  F068         	movff	??_fxls_init+1,i2c_read_reg8@value+1
 14505   007344  0E18               	movlw	24
 14506   007346  EC9F  F044         	call	_i2c_read_reg8
 14507   00734A                     
 14508                           ;fxls8974cf.c: 57:     sens_config4 |= 0x01;
 14509   00734A  0100               	movlb	0	; () banked
 14510   00734C  816E               	bsf	fxls_init@sens_config4& (0+255),0,b
 14511   00734E                     
 14512                           ; BSR set to: 0
 14513                           ;fxls8974cf.c: 58:     i2c_write_reg8(0x18, 0x18, sens_config4);
 14514   00734E  0E18               	movlw	24
 14515   007350  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 14516   007352  C06E  F067         	movff	fxls_init@sens_config4,i2c_write_reg8@val
 14517   007356  0E18               	movlw	24
 14518   007358  ECEB  F047         	call	_i2c_write_reg8
 14519   00735C  0012               	return		;funcret
 14520   00735E                     __end_of_fxls_init:
 14521                           	callstack 0
 14522                           
 14523 ;; *************** function _i2c_write_reg8 *****************
 14524 ;; Defined at:
 14525 ;;		line 107 in file "rocketlib/pic18f26k83/i2c.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;  address         1    wreg     unsigned char 
 14528 ;;  reg             1    6[BANK0 ] unsigned char 
 14529 ;;  val             1    7[BANK0 ] unsigned char 
 14530 ;; Auto vars:     Size  Location     Type
 14531 ;;  address         1    8[BANK0 ] unsigned char 
 14532 ;;  data            2    9[BANK0 ] unsigned char [2]
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      _Bool 
 14535 ;; Registers used:
 14536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14543 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;Total ram usage:        5 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; Hardware stack levels required when called: 6
 14549 ;; This function calls:
 14550 ;;		_i2c_write
 14551 ;; This function is called by:
 14552 ;;		_fxls_init
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           
 14556                           	psect	text51
 14557   008FD6                     __ptext51:
 14558                           	callstack 0
 14559   008FD6                     _i2c_write_reg8:
 14560                           	callstack 23
 14561                           
 14562                           ;incstack = 0
 14563                           ;i2c_write_reg8@address stored from wreg
 14564   008FD6  0100               	movlb	0	; () banked
 14565   008FD8  6F68               	movwf	i2c_write_reg8@address& (0+255),b
 14566   008FDA                     
 14567                           ;rocketlib/pic18f26k83/i2c.c: 108:     uint8_t data[2] = {reg, val};
 14568   008FDA  0E00               	movlw	0
 14569   008FDC  0100               	movlb	0	; () banked
 14570   008FDE  6F6A               	movwf	(i2c_write_reg8@data+1)& (0+255),b
 14571   008FE0  0E00               	movlw	0
 14572   008FE2  6F69               	movwf	i2c_write_reg8@data& (0+255),b
 14573   008FE4                     
 14574                           ; BSR set to: 0
 14575   008FE4  C066  F069         	movff	i2c_write_reg8@reg,i2c_write_reg8@data
 14576   008FE8                     
 14577                           ; BSR set to: 0
 14578   008FE8  C067  F06A         	movff	i2c_write_reg8@val,i2c_write_reg8@data+1
 14579   008FEC                     
 14580                           ; BSR set to: 0
 14581                           ;rocketlib/pic18f26k83/i2c.c: 109:     return i2c_write(address, data, 2);;	Return value
      +                           of _i2c_write_reg8 is never used
 14582   008FEC  0E69               	movlw	low i2c_write_reg8@data
 14583   008FEE  6F60               	movwf	i2c_write@data& (0+255),b
 14584   008FF0  0E02               	movlw	2
 14585   008FF2  6F61               	movwf	i2c_write@len& (0+255),b
 14586   008FF4  5168               	movf	i2c_write_reg8@address& (0+255),w,b
 14587   008FF6  EC51  F03B         	call	_i2c_write
 14588   008FFA  0012               	return		;funcret
 14589   008FFC                     __end_of_i2c_write_reg8:
 14590                           	callstack 0
 14591                           
 14592 ;; *************** function _fxls_get_whoami *****************
 14593 ;; Defined at:
 14594 ;;		line 68 in file "fxls8974cf.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;		None
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;  res             1   12[BANK0 ] unsigned char 
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1    wreg      unsigned char 
 14601 ;; Registers used:
 14602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14603 ;; Tracked objects:
 14604 ;;		On entry : 0/0
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;Total ram usage:        1 bytes
 14613 ;; Hardware stack levels used: 1
 14614 ;; Hardware stack levels required when called: 7
 14615 ;; This function calls:
 14616 ;;		_i2c_init
 14617 ;;		_i2c_read_reg8
 14618 ;; This function is called by:
 14619 ;;		_main
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           	psect	text52
 14624   0090CE                     __ptext52:
 14625                           	callstack 0
 14626   0090CE                     _fxls_get_whoami:
 14627                           	callstack 23
 14628   0090CE                     
 14629                           ;fxls8974cf.c: 69:     i2c_init(0b000);
 14630   0090CE  0E00               	movlw	0
 14631   0090D0  ECC0  F047         	call	_i2c_init
 14632   0090D4                     
 14633                           ;fxls8974cf.c: 70:     uint8_t res;;fxls8974cf.c: 71:     i2c_read_reg8(0x18, 0x13, &res
      +                          );
 14634   0090D4  0E13               	movlw	19
 14635   0090D6  0100               	movlb	0	; () banked
 14636   0090D8  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14637   0090DA  0E6C               	movlw	low fxls_get_whoami@res
 14638   0090DC  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14639   0090DE  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14640   0090E0  0E18               	movlw	24
 14641   0090E2  EC9F  F044         	call	_i2c_read_reg8
 14642   0090E6                     
 14643                           ;fxls8974cf.c: 72:     return res;
 14644   0090E6  0100               	movlb	0	; () banked
 14645   0090E8  516C               	movf	fxls_get_whoami@res& (0+255),w,b
 14646   0090EA                     
 14647                           ; BSR set to: 0
 14648   0090EA  0012               	return		;funcret
 14649   0090EC                     __end_of_fxls_get_whoami:
 14650                           	callstack 0
 14651                           
 14652 ;; *************** function _fxls_get_prod_rev *****************
 14653 ;; Defined at:
 14654 ;;		line 61 in file "fxls8974cf.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;		None
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  res             1   12[BANK0 ] unsigned char 
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      unsigned char 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;Total ram usage:        1 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 7
 14675 ;; This function calls:
 14676 ;;		_i2c_init
 14677 ;;		_i2c_read_reg8
 14678 ;; This function is called by:
 14679 ;;		_main
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           	psect	text53
 14684   0090EC                     __ptext53:
 14685                           	callstack 0
 14686   0090EC                     _fxls_get_prod_rev:
 14687                           	callstack 23
 14688   0090EC                     
 14689                           ;fxls8974cf.c: 62:     i2c_init(0b000);
 14690   0090EC  0E00               	movlw	0
 14691   0090EE  ECC0  F047         	call	_i2c_init
 14692   0090F2                     
 14693                           ;fxls8974cf.c: 63:     uint8_t res;;fxls8974cf.c: 64:     i2c_read_reg8(0x18, 0x12, &res
      +                          );
 14694   0090F2  0E12               	movlw	18
 14695   0090F4  0100               	movlb	0	; () banked
 14696   0090F6  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 14697   0090F8  0E6C               	movlw	low fxls_get_prod_rev@res
 14698   0090FA  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 14699   0090FC  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 14700   0090FE  0E18               	movlw	24
 14701   009100  EC9F  F044         	call	_i2c_read_reg8
 14702   009104                     
 14703                           ;fxls8974cf.c: 65:     return res;
 14704   009104  0100               	movlb	0	; () banked
 14705   009106  516C               	movf	fxls_get_prod_rev@res& (0+255),w,b
 14706   009108                     
 14707                           ; BSR set to: 0
 14708   009108  0012               	return		;funcret
 14709   00910A                     __end_of_fxls_get_prod_rev:
 14710                           	callstack 0
 14711                           
 14712 ;; *************** function _i2c_read_reg8 *****************
 14713 ;; Defined at:
 14714 ;;		line 117 in file "rocketlib/pic18f26k83/i2c.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;  address         1    wreg     unsigned char 
 14717 ;;  reg             1    6[BANK0 ] unsigned char 
 14718 ;;  value           2    7[BANK0 ] PTR unsigned char 
 14719 ;;		 -> fxls_read_accel_data@z_msb(1), fxls_read_accel_data@z_lsb(1), fxls_read_accel_data@y_msb(1), fxls_read_accel_dat
      +a@y_lsb(1), 
 14720 ;;		 -> fxls_read_accel_data@x_msb(1), fxls_read_accel_data@x_lsb(1), data_ready@status(1), fxls_get_whoami@res(1), 
 14721 ;;		 -> fxls_get_prod_rev@res(1), RAM(4095), fxls_init@int_pin_sel(1), fxls_init@int_en(1), 
 14722 ;;		 -> fxls_init@sens_config3(1), fxls_init@buf_config1(1), fxls_init@sens_config2(1), fxls_init@sys_mode(1), 
 14723 ;;		 -> fxls_init@sens_config1(1), 
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;  address         1    9[BANK0 ] unsigned char 
 14726 ;;  data            1   11[BANK0 ] unsigned char 
 14727 ;;  success         1   10[BANK0 ] _Bool 
 14728 ;; Return value:  Size  Location     Type
 14729 ;;                  1    wreg      _Bool 
 14730 ;; Registers used:
 14731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14737 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14738 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14741 ;;Total ram usage:        6 bytes
 14742 ;; Hardware stack levels used: 1
 14743 ;; Hardware stack levels required when called: 6
 14744 ;; This function calls:
 14745 ;;		_i2c_read
 14746 ;;		_i2c_write
 14747 ;; This function is called by:
 14748 ;;		_fxls_init
 14749 ;;		_fxls_get_prod_rev
 14750 ;;		_fxls_get_whoami
 14751 ;;		_data_ready
 14752 ;;		_fxls_read_accel_data
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text54
 14757   00893E                     __ptext54:
 14758                           	callstack 0
 14759   00893E                     _i2c_read_reg8:
 14760                           	callstack 23
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;incstack = 0
 14764                           ;i2c_read_reg8@address stored from wreg
 14765   00893E  0100               	movlb	0	; () banked
 14766   008940  6F69               	movwf	i2c_read_reg8@address& (0+255),b
 14767   008942                     
 14768                           ;rocketlib/pic18f26k83/i2c.c: 118:     _Bool success = i2c_write(address, &reg, 1);
 14769   008942  0E66               	movlw	low i2c_read_reg8@reg
 14770   008944  0100               	movlb	0	; () banked
 14771   008946  6F60               	movwf	i2c_write@data& (0+255),b
 14772   008948  0E01               	movlw	1
 14773   00894A  6F61               	movwf	i2c_write@len& (0+255),b
 14774   00894C  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 14775   00894E  EC51  F03B         	call	_i2c_write
 14776   008952  0100               	movlb	0	; () banked
 14777   008954  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 14778   008956                     
 14779                           ; BSR set to: 0
 14780                           ;rocketlib/pic18f26k83/i2c.c: 119:     if (!success) {
 14781   008956  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 14782   008958  A4D8               	btfss	status,2,c
 14783   00895A  EFB1  F044         	goto	u20661
 14784   00895E  EFB3  F044         	goto	u20660
 14785   008962                     u20661:
 14786   008962  EFB5  F044         	goto	l16683
 14787   008966                     u20660:
 14788   008966  EFD1  F044         	goto	l2032
 14789   00896A                     l16683:
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;rocketlib/pic18f26k83/i2c.c: 123:     uint8_t data;;rocketlib/pic18f26k83/i2c.c: 124:  
      +                             success = i2c_read(address, &data, 1);
 14793   00896A  0E6B               	movlw	low i2c_read_reg8@data
 14794   00896C  6F60               	movwf	i2c_read@data& (0+255),b
 14795   00896E  0E01               	movlw	1
 14796   008970  6F61               	movwf	i2c_read@len& (0+255),b
 14797   008972  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 14798   008974  ECD3  F03B         	call	_i2c_read
 14799   008978  0100               	movlb	0	; () banked
 14800   00897A  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 14801   00897C                     
 14802                           ; BSR set to: 0
 14803                           ;rocketlib/pic18f26k83/i2c.c: 125:     if (!success) {
 14804   00897C  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 14805   00897E  A4D8               	btfss	status,2,c
 14806   008980  EFC4  F044         	goto	u20671
 14807   008984  EFC6  F044         	goto	u20670
 14808   008988                     u20671:
 14809   008988  EFC8  F044         	goto	l16689
 14810   00898C                     u20670:
 14811   00898C  EFD1  F044         	goto	l2032
 14812   008990                     l16689:
 14813                           
 14814                           ; BSR set to: 0
 14815                           ;rocketlib/pic18f26k83/i2c.c: 128:     *value = data;
 14816   008990  0060  F19F  FFD9   	movff	i2c_read_reg8@value,fsr2l
 14817   008996  0060  F1A3  FFDA   	movff	i2c_read_reg8@value+1,fsr2h
 14818   00899C  0060  F1AF  FFDF   	movff	i2c_read_reg8@data,indf2
 14819   0089A2                     l2032:
 14820                           
 14821                           ; BSR set to: 0
 14822   0089A2  0012               	return		;funcret
 14823   0089A4                     __end_of_i2c_read_reg8:
 14824                           	callstack 0
 14825                           
 14826 ;; *************** function _i2c_write *****************
 14827 ;; Defined at:
 14828 ;;		line 28 in file "rocketlib/pic18f26k83/i2c.c"
 14829 ;; Parameters:    Size  Location     Type
 14830 ;;  address         1    wreg     unsigned char 
 14831 ;;  data            1    0[BANK0 ] PTR const unsigned char 
 14832 ;;		 -> read_flow_sensor_data@stop_cmd(2), read_flow_sensor_data@start_cmd(2), i2c_read_reg16@reg(1), i2c_read_reg8@reg(
      +1), 
 14833 ;;		 -> i2c_write_reg16@data(3), i2c_write_reg8@data(2), 
 14834 ;;  len             1    1[BANK0 ] unsigned char 
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  address         1    3[BANK0 ] unsigned char 
 14837 ;;  timeout         2    4[BANK0 ] unsigned int 
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1    wreg      _Bool 
 14840 ;; Registers used:
 14841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14842 ;; Tracked objects:
 14843 ;;		On entry : 0/0
 14844 ;;		On exit  : 0/0
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14848 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;Total ram usage:        6 bytes
 14852 ;; Hardware stack levels used: 1
 14853 ;; Hardware stack levels required when called: 5
 14854 ;; This function calls:
 14855 ;;		Nothing
 14856 ;; This function is called by:
 14857 ;;		_i2c_write_reg8
 14858 ;;		_i2c_read_reg8
 14859 ;;		_i2c_write_data
 14860 ;;		_i2c_write_reg16
 14861 ;;		_i2c_read_reg16
 14862 ;;		_read_flow_sensor_data
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text55
 14867   0076A2                     __ptext55:
 14868                           	callstack 0
 14869   0076A2                     _i2c_write:
 14870                           	callstack 23
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;incstack = 0
 14874                           ;i2c_write@address stored from wreg
 14875   0076A2  0100               	movlb	0	; () banked
 14876   0076A4  6F63               	movwf	i2c_write@address& (0+255),b
 14877   0076A6                     
 14878                           ;rocketlib/pic18f26k83/i2c.c: 29:     I2C1ADB1 = (uint8_t)(address << 1);
 14879   0076A6  0100               	movlb	0	; () banked
 14880   0076A8  5163               	movf	i2c_write@address& (0+255),w,b
 14881   0076AA  2563               	addwf	i2c_write@address& (0+255),w,b
 14882   0076AC  013D               	movlb	61	; () banked
 14883   0076AE  6F6E               	movwf	110,b	;volatile
 14884   0076B0                     
 14885                           ; BSR set to: 61
 14886                           ;rocketlib/pic18f26k83/i2c.c: 30:     I2C1CNT = len;
 14887   0076B0  0060  F187  FD6C   	movff	i2c_write@len,15724	;volatile
 14888   0076B6                     
 14889                           ; BSR set to: 61
 14890                           ;rocketlib/pic18f26k83/i2c.c: 31:     I2C1PIRbits.PCIF = 0;
 14891   0076B6  9579               	bcf	121,2,b	;volatile
 14892   0076B8                     
 14893                           ; BSR set to: 61
 14894                           ;rocketlib/pic18f26k83/i2c.c: 32:     I2C1ERRbits.NACKIF = 0;
 14895   0076B8  9976               	bcf	118,4,b	;volatile
 14896   0076BA                     
 14897                           ; BSR set to: 61
 14898                           ;rocketlib/pic18f26k83/i2c.c: 33:     I2C1CON0bits.S = 1;
 14899   0076BA  8B73               	bsf	115,5,b	;volatile
 14900                           
 14901                           ;rocketlib/pic18f26k83/i2c.c: 35:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           36:     while (len--) {
 14902   0076BC  EF97  F03B         	goto	l16127
 14903   0076C0                     l16109:
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;rocketlib/pic18f26k83/i2c.c: 37:         I2C1TXB = *data++;
 14907   0076C0  5160               	movf	i2c_write@data& (0+255),w,b
 14908   0076C2  6ED9               	movwf	fsr2l,c
 14909   0076C4  6ADA               	clrf	fsr2h,c
 14910   0076C6  50DF               	movf	indf2,w,c
 14911   0076C8  013D               	movlb	61	; () banked
 14912   0076CA  6F6B               	movwf	107,b	;volatile
 14913   0076CC                     
 14914                           ; BSR set to: 61
 14915   0076CC  0100               	movlb	0	; () banked
 14916   0076CE  2B60               	incf	i2c_write@data& (0+255),f,b
 14917   0076D0                     
 14918                           ; BSR set to: 0
 14919                           ;rocketlib/pic18f26k83/i2c.c: 38:         timeout = 0;
 14920   0076D0  0E00               	movlw	0
 14921   0076D2  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 14922   0076D4  0E00               	movlw	0
 14923   0076D6  6F64               	movwf	i2c_write@timeout& (0+255),b
 14924                           
 14925                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 14926   0076D8  EF7E  F03B         	goto	l16121
 14927   0076DC                     l16115:
 14928                           
 14929                           ; BSR set to: 61
 14930                           ;rocketlib/pic18f26k83/i2c.c: 40:             if (timeout >= 2000) {
 14931   0076DC  0ED0               	movlw	208
 14932   0076DE  0100               	movlb	0	; () banked
 14933   0076E0  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 14934   0076E2  0E07               	movlw	7
 14935   0076E4  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 14936   0076E6  A0D8               	btfss	status,0,c
 14937   0076E8  EF78  F03B         	goto	u19701
 14938   0076EC  EF7A  F03B         	goto	u19700
 14939   0076F0                     u19701:
 14940   0076F0  EF7C  F03B         	goto	l16119
 14941   0076F4                     u19700:
 14942   0076F4  EF8D  F03B         	goto	l1986
 14943   0076F8                     l16119:
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;rocketlib/pic18f26k83/i2c.c: 43:             timeout++;
 14947   0076F8  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 14948   0076FA  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 14949   0076FC                     l16121:
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 14953   0076FC  013D               	movlb	61	; () banked
 14954   0076FE  BB78               	btfsc	120,5,b	;volatile
 14955   007700  EF84  F03B         	goto	u19711
 14956   007704  EF86  F03B         	goto	u19710
 14957   007708                     u19711:
 14958   007708  EF8D  F03B         	goto	l1986
 14959   00770C                     u19710:
 14960   00770C                     
 14961                           ; BSR set to: 61
 14962   00770C  A976               	btfss	118,4,b	;volatile
 14963   00770E  EF8B  F03B         	goto	u19721
 14964   007712  EF8D  F03B         	goto	u19720
 14965   007716                     u19721:
 14966   007716  EF6E  F03B         	goto	l16115
 14967   00771A                     u19720:
 14968   00771A                     l1986:
 14969                           
 14970                           ;rocketlib/pic18f26k83/i2c.c: 45:         if (I2C1ERRbits.NACKIF) {
 14971   00771A  013D               	movlb	61	; () banked
 14972   00771C  A976               	btfss	118,4,b	;volatile
 14973   00771E  EF93  F03B         	goto	u19731
 14974   007722  EF95  F03B         	goto	u19730
 14975   007726                     u19731:
 14976   007726  EF97  F03B         	goto	l16127
 14977   00772A                     u19730:
 14978   00772A  EFA1  F03B         	goto	l16129
 14979   00772E                     l16127:
 14980                           
 14981                           ; BSR set to: 61
 14982                           ;rocketlib/pic18f26k83/i2c.c: 36:     while (len--) {
 14983   00772E  0100               	movlb	0	; () banked
 14984   007730  0761               	decf	i2c_write@len& (0+255),f,b
 14985   007732  2961               	incf	i2c_write@len& (0+255),w,b
 14986   007734  A4D8               	btfss	status,2,c
 14987   007736  EF9F  F03B         	goto	u19741
 14988   00773A  EFA1  F03B         	goto	u19740
 14989   00773E                     u19741:
 14990   00773E  EF60  F03B         	goto	l16109
 14991   007742                     u19740:
 14992   007742                     l16129:
 14993                           
 14994                           ;rocketlib/pic18f26k83/i2c.c: 50:     timeout = 0;
 14995   007742  0E00               	movlw	0
 14996   007744  0100               	movlb	0	; () banked
 14997   007746  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 14998   007748  0E00               	movlw	0
 14999   00774A  6F64               	movwf	i2c_write@timeout& (0+255),b
 15000                           
 15001                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 15002   00774C  EFB8  F03B         	goto	l16137
 15003   007750                     l16131:
 15004                           
 15005                           ; BSR set to: 61
 15006                           ;rocketlib/pic18f26k83/i2c.c: 52:         if (timeout >= 2000) {
 15007   007750  0ED0               	movlw	208
 15008   007752  0100               	movlb	0	; () banked
 15009   007754  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 15010   007756  0E07               	movlw	7
 15011   007758  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 15012   00775A  A0D8               	btfss	status,0,c
 15013   00775C  EFB2  F03B         	goto	u19751
 15014   007760  EFB4  F03B         	goto	u19750
 15015   007764                     u19751:
 15016   007764  EFB6  F03B         	goto	l16135
 15017   007768                     u19750:
 15018   007768  EFC0  F03B         	goto	l1994
 15019   00776C                     l16135:
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;rocketlib/pic18f26k83/i2c.c: 55:         timeout++;
 15023   00776C  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 15024   00776E  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 15025   007770                     l16137:
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 15029   007770  013D               	movlb	61	; () banked
 15030   007772  A579               	btfss	121,2,b	;volatile
 15031   007774  EFBE  F03B         	goto	u19761
 15032   007778  EFC0  F03B         	goto	u19760
 15033   00777C                     u19761:
 15034   00777C  EFA8  F03B         	goto	l16131
 15035   007780                     u19760:
 15036   007780                     l1994:
 15037                           
 15038                           ;rocketlib/pic18f26k83/i2c.c: 58:     I2C1PIRbits.PCIF = 0;
 15039   007780  013D               	movlb	61	; () banked
 15040   007782  9579               	bcf	121,2,b	;volatile
 15041                           
 15042                           ;rocketlib/pic18f26k83/i2c.c: 59:     I2C1STAT1bits.CLRBF = 1;
 15043   007784  8578               	bsf	120,2,b	;volatile
 15044   007786                     
 15045                           ; BSR set to: 61
 15046                           ;rocketlib/pic18f26k83/i2c.c: 61:     return (I2C1ERR & 0x70) != 0;
 15047   007786  006F F5D8  F062    	movff	15734,??_i2c_write	;volatile
 15048   00778C  0E70               	movlw	112
 15049   00778E  0100               	movlb	0	; () banked
 15050   007790  1762               	andwf	??_i2c_write& (0+255),f,b
 15051   007792  A4D8               	btfss	status,2,c
 15052   007794  EFCE  F03B         	goto	u19771
 15053   007798  EFD1  F03B         	goto	u19770
 15054   00779C                     u19771:
 15055   00779C  0E01               	movlw	1
 15056   00779E  EFD2  F03B         	goto	u19780
 15057   0077A2                     u19770:
 15058   0077A2  0E00               	movlw	0
 15059   0077A4                     u19780:
 15060   0077A4                     
 15061                           ; BSR set to: 0
 15062   0077A4  0012               	return		;funcret
 15063   0077A6                     __end_of_i2c_write:
 15064                           	callstack 0
 15065                           
 15066 ;; *************** function _i2c_read *****************
 15067 ;; Defined at:
 15068 ;;		line 64 in file "rocketlib/pic18f26k83/i2c.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  address         1    wreg     unsigned char 
 15071 ;;  data            1    0[BANK0 ] PTR unsigned char 
 15072 ;;		 -> read_flow_sensor_data@data(9), i2c_read_reg16@data(2), i2c_read_reg8@data(1), 
 15073 ;;  len             1    1[BANK0 ] unsigned char 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;  address         1    3[BANK0 ] unsigned char 
 15076 ;;  timeout         2    4[BANK0 ] unsigned int 
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  1    wreg      _Bool 
 15079 ;; Registers used:
 15080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15090 ;;Total ram usage:        6 bytes
 15091 ;; Hardware stack levels used: 1
 15092 ;; Hardware stack levels required when called: 5
 15093 ;; This function calls:
 15094 ;;		Nothing
 15095 ;; This function is called by:
 15096 ;;		_i2c_read_reg8
 15097 ;;		_i2c_read_data
 15098 ;;		_i2c_read_reg16
 15099 ;;		_read_flow_sensor_data
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           	psect	text56
 15104   0077A6                     __ptext56:
 15105                           	callstack 0
 15106   0077A6                     _i2c_read:
 15107                           	callstack 23
 15108                           
 15109                           ; BSR set to: 0
 15110                           ;incstack = 0
 15111                           ;i2c_read@address stored from wreg
 15112   0077A6  0100               	movlb	0	; () banked
 15113   0077A8  6F63               	movwf	i2c_read@address& (0+255),b
 15114   0077AA                     
 15115                           ;rocketlib/pic18f26k83/i2c.c: 65:     I2C1ADB1 = (uint8_t)((address << 1) | 1);
 15116   0077AA  80D8               	bsf	status,0,c
 15117   0077AC  0100               	movlb	0	; () banked
 15118   0077AE  3563               	rlcf	i2c_read@address& (0+255),w,b
 15119   0077B0  013D               	movlb	61	; () banked
 15120   0077B2  6F6E               	movwf	110,b	;volatile
 15121   0077B4                     
 15122                           ; BSR set to: 61
 15123                           ;rocketlib/pic18f26k83/i2c.c: 66:     I2C1CNT = len;
 15124   0077B4  0060  F187  FD6C   	movff	i2c_read@len,15724	;volatile
 15125   0077BA                     
 15126                           ; BSR set to: 61
 15127                           ;rocketlib/pic18f26k83/i2c.c: 67:     I2C1PIRbits.PCIF = 0;
 15128   0077BA  9579               	bcf	121,2,b	;volatile
 15129   0077BC                     
 15130                           ; BSR set to: 61
 15131                           ;rocketlib/pic18f26k83/i2c.c: 68:     I2C1ERRbits.NACKIF = 0;
 15132   0077BC  9976               	bcf	118,4,b	;volatile
 15133   0077BE                     
 15134                           ; BSR set to: 61
 15135                           ;rocketlib/pic18f26k83/i2c.c: 69:     I2C1CON0bits.S = 1;
 15136   0077BE  8B73               	bsf	115,5,b	;volatile
 15137                           
 15138                           ;rocketlib/pic18f26k83/i2c.c: 71:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           72:     while (len--) {
 15139   0077C0  EF19  F03C         	goto	l16171
 15140   0077C4                     l16153:
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;rocketlib/pic18f26k83/i2c.c: 73:         timeout = 0;
 15144   0077C4  0E00               	movlw	0
 15145   0077C6  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 15146   0077C8  0E00               	movlw	0
 15147   0077CA  6F64               	movwf	i2c_read@timeout& (0+255),b
 15148                           
 15149                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 15150   0077CC  EFF8  F03B         	goto	l16161
 15151   0077D0                     l16155:
 15152                           
 15153                           ; BSR set to: 61
 15154                           ;rocketlib/pic18f26k83/i2c.c: 75:             if (timeout >= 2000) {
 15155   0077D0  0ED0               	movlw	208
 15156   0077D2  0100               	movlb	0	; () banked
 15157   0077D4  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 15158   0077D6  0E07               	movlw	7
 15159   0077D8  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 15160   0077DA  A0D8               	btfss	status,0,c
 15161   0077DC  EFF2  F03B         	goto	u19791
 15162   0077E0  EFF4  F03B         	goto	u19790
 15163   0077E4                     u19791:
 15164   0077E4  EFF6  F03B         	goto	l16159
 15165   0077E8                     u19790:
 15166   0077E8  EF07  F03C         	goto	l2003
 15167   0077EC                     l16159:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;rocketlib/pic18f26k83/i2c.c: 78:             timeout++;
 15171   0077EC  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 15172   0077EE  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 15173   0077F0                     l16161:
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 15177   0077F0  013D               	movlb	61	; () banked
 15178   0077F2  B178               	btfsc	120,0,b	;volatile
 15179   0077F4  EFFE  F03B         	goto	u19801
 15180   0077F8  EF00  F03C         	goto	u19800
 15181   0077FC                     u19801:
 15182   0077FC  EF07  F03C         	goto	l2003
 15183   007800                     u19800:
 15184   007800                     
 15185                           ; BSR set to: 61
 15186   007800  A976               	btfss	118,4,b	;volatile
 15187   007802  EF05  F03C         	goto	u19811
 15188   007806  EF07  F03C         	goto	u19810
 15189   00780A                     u19811:
 15190   00780A  EFE8  F03B         	goto	l16155
 15191   00780E                     u19810:
 15192   00780E                     l2003:
 15193                           
 15194                           ;rocketlib/pic18f26k83/i2c.c: 80:         if (I2C1ERRbits.NACKIF) {
 15195   00780E  013D               	movlb	61	; () banked
 15196   007810  A976               	btfss	118,4,b	;volatile
 15197   007812  EF0D  F03C         	goto	u19821
 15198   007816  EF0F  F03C         	goto	u19820
 15199   00781A                     u19821:
 15200   00781A  EF11  F03C         	goto	l16167
 15201   00781E                     u19820:
 15202   00781E  EF23  F03C         	goto	l16173
 15203   007822                     l16167:
 15204                           
 15205                           ; BSR set to: 61
 15206                           ;rocketlib/pic18f26k83/i2c.c: 83:         *data++ = I2C1RXB;
 15207   007822  0100               	movlb	0	; () banked
 15208   007824  5160               	movf	i2c_read@data& (0+255),w,b
 15209   007826  6ED9               	movwf	fsr2l,c
 15210   007828  6ADA               	clrf	fsr2h,c
 15211   00782A  006F F5AB FFDF     	movff	15722,indf2	;volatile
 15212   007830                     
 15213                           ; BSR set to: 0
 15214   007830  2B60               	incf	i2c_read@data& (0+255),f,b
 15215   007832                     l16171:
 15216                           
 15217                           ;rocketlib/pic18f26k83/i2c.c: 72:     while (len--) {
 15218   007832  0100               	movlb	0	; () banked
 15219   007834  0761               	decf	i2c_read@len& (0+255),f,b
 15220   007836  2961               	incf	i2c_read@len& (0+255),w,b
 15221   007838  A4D8               	btfss	status,2,c
 15222   00783A  EF21  F03C         	goto	u19831
 15223   00783E  EF23  F03C         	goto	u19830
 15224   007842                     u19831:
 15225   007842  EFE2  F03B         	goto	l16153
 15226   007846                     u19830:
 15227   007846                     l16173:
 15228                           
 15229                           ;rocketlib/pic18f26k83/i2c.c: 86:     timeout = 0;
 15230   007846  0E00               	movlw	0
 15231   007848  0100               	movlb	0	; () banked
 15232   00784A  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 15233   00784C  0E00               	movlw	0
 15234   00784E  6F64               	movwf	i2c_read@timeout& (0+255),b
 15235                           
 15236                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 15237   007850  EF3A  F03C         	goto	l16181
 15238   007854                     l16175:
 15239                           
 15240                           ; BSR set to: 61
 15241                           ;rocketlib/pic18f26k83/i2c.c: 88:         if (timeout >= 2000) {
 15242   007854  0ED0               	movlw	208
 15243   007856  0100               	movlb	0	; () banked
 15244   007858  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 15245   00785A  0E07               	movlw	7
 15246   00785C  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 15247   00785E  A0D8               	btfss	status,0,c
 15248   007860  EF34  F03C         	goto	u19841
 15249   007864  EF36  F03C         	goto	u19840
 15250   007868                     u19841:
 15251   007868  EF38  F03C         	goto	l16179
 15252   00786C                     u19840:
 15253   00786C  EF42  F03C         	goto	l2011
 15254   007870                     l16179:
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;rocketlib/pic18f26k83/i2c.c: 91:         timeout++;
 15258   007870  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 15259   007872  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 15260   007874                     l16181:
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 15264   007874  013D               	movlb	61	; () banked
 15265   007876  A579               	btfss	121,2,b	;volatile
 15266   007878  EF40  F03C         	goto	u19851
 15267   00787C  EF42  F03C         	goto	u19850
 15268   007880                     u19851:
 15269   007880  EF2A  F03C         	goto	l16175
 15270   007884                     u19850:
 15271   007884                     l2011:
 15272                           
 15273                           ;rocketlib/pic18f26k83/i2c.c: 93:     I2C1PIRbits.PCIF = 0;
 15274   007884  013D               	movlb	61	; () banked
 15275   007886  9579               	bcf	121,2,b	;volatile
 15276                           
 15277                           ;rocketlib/pic18f26k83/i2c.c: 94:     I2C1STAT1bits.CLRBF = 1;
 15278   007888  8578               	bsf	120,2,b	;volatile
 15279   00788A                     
 15280                           ; BSR set to: 61
 15281                           ;rocketlib/pic18f26k83/i2c.c: 96:     return (I2C1ERR & 0x70) != 0;
 15282   00788A  006F F5D8  F062    	movff	15734,??_i2c_read	;volatile
 15283   007890  0E70               	movlw	112
 15284   007892  0100               	movlb	0	; () banked
 15285   007894  1762               	andwf	??_i2c_read& (0+255),f,b
 15286   007896  A4D8               	btfss	status,2,c
 15287   007898  EF50  F03C         	goto	u19861
 15288   00789C  EF53  F03C         	goto	u19860
 15289   0078A0                     u19861:
 15290   0078A0  0E01               	movlw	1
 15291   0078A2  EF54  F03C         	goto	u19870
 15292   0078A6                     u19860:
 15293   0078A6  0E00               	movlw	0
 15294   0078A8                     u19870:
 15295   0078A8                     
 15296                           ; BSR set to: 0
 15297   0078A8  0012               	return		;funcret
 15298   0078AA                     __end_of_i2c_read:
 15299                           	callstack 0
 15300                           
 15301 ;; *************** function _i2c_init *****************
 15302 ;; Defined at:
 15303 ;;		line 9 in file "rocketlib/pic18f26k83/i2c.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;  clkdiv          1    wreg     unsigned char 
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;  clkdiv          1    0[BANK0 ] unsigned char 
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg, status,2, status,0
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15321 ;;Total ram usage:        1 bytes
 15322 ;; Hardware stack levels used: 1
 15323 ;; Hardware stack levels required when called: 5
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_main
 15328 ;;		_fxls_init
 15329 ;;		_fxls_get_prod_rev
 15330 ;;		_fxls_get_whoami
 15331 ;;		_data_ready
 15332 ;;		_fxls_read_accel_data
 15333 ;; This function uses a non-reentrant model
 15334 ;;
 15335                           
 15336                           	psect	text57
 15337   008F80                     __ptext57:
 15338                           	callstack 0
 15339   008F80                     _i2c_init:
 15340                           	callstack 25
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;incstack = 0
 15344                           ;i2c_init@clkdiv stored from wreg
 15345   008F80  0100               	movlb	0	; () banked
 15346   008F82  6F60               	movwf	i2c_init@clkdiv& (0+255),b
 15347   008F84                     
 15348                           ;rocketlib/pic18f26k83/i2c.c: 12:     I2C1CON0 = 0x84;
 15349   008F84  0E84               	movlw	132
 15350   008F86  013D               	movlb	61	; () banked
 15351   008F88  6F73               	movwf	115,b	;volatile
 15352                           
 15353                           ;rocketlib/pic18f26k83/i2c.c: 15:     I2C1CON1 = 0x80;
 15354   008F8A  0E80               	movlw	128
 15355   008F8C  6F74               	movwf	116,b	;volatile
 15356                           
 15357                           ;rocketlib/pic18f26k83/i2c.c: 18:     I2C1CON2 = 0x00;
 15358   008F8E  0E00               	movlw	0
 15359   008F90  6F75               	movwf	117,b	;volatile
 15360   008F92                     
 15361                           ; BSR set to: 61
 15362                           ;rocketlib/pic18f26k83/i2c.c: 20:     CLKRCON = 0b10010000 | clkdiv;
 15363   008F92  0100               	movlb	0	; () banked
 15364   008F94  5160               	movf	i2c_init@clkdiv& (0+255),w,b
 15365   008F96  0990               	iorlw	144
 15366   008F98  013C               	movlb	60	; () banked
 15367   008F9A  6FE5               	movwf	229,b	;volatile
 15368   008F9C                     
 15369                           ; BSR set to: 60
 15370                           ;rocketlib/pic18f26k83/i2c.c: 21:     CLKRCLK = 0b00000011;
 15371   008F9C  0E03               	movlw	3
 15372   008F9E  6FE6               	movwf	230,b	;volatile
 15373   008FA0                     
 15374                           ; BSR set to: 60
 15375                           ;rocketlib/pic18f26k83/i2c.c: 23:     I2C1CLK = 0x04;
 15376   008FA0  0E04               	movlw	4
 15377   008FA2  013D               	movlb	61	; () banked
 15378   008FA4  6F7B               	movwf	123,b	;volatile
 15379   008FA6                     
 15380                           ; BSR set to: 61
 15381                           ;rocketlib/pic18f26k83/i2c.c: 24:     I2C1PIR = 0;
 15382   008FA6  0E00               	movlw	0
 15383   008FA8  6F79               	movwf	121,b	;volatile
 15384   008FAA                     
 15385                           ; BSR set to: 61
 15386                           ;rocketlib/pic18f26k83/i2c.c: 25:     I2C1ERR = 0;
 15387   008FAA  0E00               	movlw	0
 15388   008FAC  6F76               	movwf	118,b	;volatile
 15389   008FAE                     
 15390                           ; BSR set to: 61
 15391   008FAE  0012               	return		;funcret
 15392   008FB0                     __end_of_i2c_init:
 15393                           	callstack 0
 15394                           
 15395 ;; *************** function _f_mount *****************
 15396 ;; Defined at:
 15397 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;  fs              2  135[BANK0 ] PTR struct .
 15400 ;;		 -> FatFs(563), NULL(0), 
 15401 ;;  path            2  137[BANK0 ] PTR const unsigned char 
 15402 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 15403 ;;  opt             1  139[BANK0 ] unsigned char 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  vol             2  145[BANK0 ] int 
 15406 ;;  cfs             2  143[BANK0 ] PTR struct .
 15407 ;;		 -> FatFs(563), NULL(0), 
 15408 ;;  rp              2  141[BANK0 ] PTR const unsigned char 
 15409 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 15410 ;;  res             1  140[BANK0 ] enum E68
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  1    wreg      enum E68
 15413 ;; Registers used:
 15414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15420 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15421 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;Total ram usage:       12 bytes
 15425 ;; Hardware stack levels used: 1
 15426 ;; Hardware stack levels required when called: 14
 15427 ;; This function calls:
 15428 ;;		_find_volume
 15429 ;;		_get_ldnumber
 15430 ;; This function is called by:
 15431 ;;		_main
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text58
 15436   007A9A                     __ptext58:
 15437                           	callstack 0
 15438   007A9A                     _f_mount:
 15439                           	callstack 16
 15440   007A9A                     
 15441                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
 15442   007A9A  C0E9  F0ED         	movff	f_mount@path,f_mount@rp
 15443   007A9E  C0EA  F0EE         	movff	f_mount@path+1,f_mount@rp+1
 15444   007AA2                     
 15445                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 15446   007AA2  0EED               	movlw	low f_mount@rp
 15447   007AA4  0100               	movlb	0	; () banked
 15448   007AA6  6F60               	movwf	get_ldnumber@path& (0+255),b
 15449   007AA8  6B61               	clrf	(get_ldnumber@path+1)& (0+255),b
 15450   007AAA  EC0A  F035         	call	_get_ldnumber	;wreg free
 15451   007AAE  C060  F0F1         	movff	?_get_ldnumber,f_mount@vol
 15452   007AB2  C061  F0F2         	movff	?_get_ldnumber+1,f_mount@vol+1
 15453   007AB6                     
 15454                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 15455   007AB6  0100               	movlb	0	; () banked
 15456   007AB8  BFF2               	btfsc	(f_mount@vol+1)& (0+255),7,b
 15457   007ABA  EF63  F03D         	goto	u20720
 15458   007ABE  EF61  F03D         	goto	u20721
 15459   007AC2                     u20721:
 15460   007AC2  EF66  F03D         	goto	l16923
 15461   007AC6                     u20720:
 15462   007AC6                     
 15463                           ; BSR set to: 0
 15464   007AC6  0E0B               	movlw	11
 15465   007AC8  EFBC  F03D         	goto	l1277
 15466   007ACC                     l16923:
 15467                           
 15468                           ; BSR set to: 0
 15469                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 15470   007ACC  90D8               	bcf	status,0,c
 15471   007ACE  35F1               	rlcf	f_mount@vol& (0+255),w,b
 15472   007AD0  6ED9               	movwf	fsr2l,c
 15473   007AD2  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 15474   007AD4  6EDA               	movwf	fsr2h,c
 15475   007AD6  0EE2               	movlw	low _FatFs@ff$F2407
 15476   007AD8  26D9               	addwf	fsr2l,f,c
 15477   007ADA  0E01               	movlw	high _FatFs@ff$F2407
 15478   007ADC  22DA               	addwfc	fsr2h,f,c
 15479   007ADE  006F FF78  F0EF    	movff	postinc2,f_mount@cfs
 15480   007AE4  006F FF74  F0F0    	movff	postdec2,f_mount@cfs+1
 15481   007AEA                     
 15482                           ; BSR set to: 0
 15483                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 15484   007AEA  51EF               	movf	f_mount@cfs& (0+255),w,b
 15485   007AEC  11F0               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 15486   007AEE  B4D8               	btfsc	status,2,c
 15487   007AF0  EF7C  F03D         	goto	u20731
 15488   007AF4  EF7E  F03D         	goto	u20730
 15489   007AF8                     u20731:
 15490   007AF8  EF85  F03D         	goto	l16929
 15491   007AFC                     u20730:
 15492   007AFC                     
 15493                           ; BSR set to: 0
 15494                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 15495   007AFC  0060  F3BF  FFD9   	movff	f_mount@cfs,fsr2l
 15496   007B02  0060  F3C3  FFDA   	movff	f_mount@cfs+1,fsr2h
 15497   007B08  6ADF               	clrf	indf2,c
 15498   007B0A                     l16929:
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 15502   007B0A  51E7               	movf	f_mount@fs& (0+255),w,b
 15503   007B0C  11E8               	iorwf	(f_mount@fs+1)& (0+255),w,b
 15504   007B0E  B4D8               	btfsc	status,2,c
 15505   007B10  EF8C  F03D         	goto	u20741
 15506   007B14  EF8E  F03D         	goto	u20740
 15507   007B18                     u20741:
 15508   007B18  EF95  F03D         	goto	l16933
 15509   007B1C                     u20740:
 15510   007B1C                     
 15511                           ; BSR set to: 0
 15512                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 15513   007B1C  0060  F39F  FFD9   	movff	f_mount@fs,fsr2l
 15514   007B22  0060  F3A3  FFDA   	movff	f_mount@fs+1,fsr2h
 15515   007B28  6ADF               	clrf	indf2,c
 15516   007B2A                     l16933:
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 15520   007B2A  90D8               	bcf	status,0,c
 15521   007B2C  35F1               	rlcf	f_mount@vol& (0+255),w,b
 15522   007B2E  6ED9               	movwf	fsr2l,c
 15523   007B30  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 15524   007B32  6EDA               	movwf	fsr2h,c
 15525   007B34  0EE2               	movlw	low _FatFs@ff$F2407
 15526   007B36  26D9               	addwf	fsr2l,f,c
 15527   007B38  0E01               	movlw	high _FatFs@ff$F2407
 15528   007B3A  22DA               	addwfc	fsr2h,f,c
 15529   007B3C  0060  F39F  FFDE   	movff	f_mount@fs,postinc2
 15530   007B42  0060  F3A3  FFDD   	movff	f_mount@fs+1,postdec2
 15531   007B48                     
 15532                           ; BSR set to: 0
 15533                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 15534   007B48  51EB               	movf	f_mount@opt& (0+255),w,b
 15535   007B4A  A4D8               	btfss	status,2,c
 15536   007B4C  EFAA  F03D         	goto	u20751
 15537   007B50  EFAC  F03D         	goto	u20750
 15538   007B54                     u20751:
 15539   007B54  EFAF  F03D         	goto	l16941
 15540   007B58                     u20750:
 15541   007B58                     
 15542                           ; BSR set to: 0
 15543   007B58  0E00               	movlw	0
 15544   007B5A  EFBC  F03D         	goto	l1277
 15545   007B5E                     l16941:
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 15549   007B5E  0EE9               	movlw	low f_mount@path
 15550   007B60  6FDA               	movwf	find_volume@path& (0+255),b
 15551   007B62  6BDB               	clrf	(find_volume@path+1)& (0+255),b
 15552   007B64  0EE7               	movlw	low f_mount@fs
 15553   007B66  6FDC               	movwf	find_volume@rfs& (0+255),b
 15554   007B68  6BDD               	clrf	(find_volume@rfs+1)& (0+255),b
 15555   007B6A  0E00               	movlw	0
 15556   007B6C  6FDE               	movwf	find_volume@mode& (0+255),b
 15557   007B6E  EC0F  F000         	call	_find_volume	;wreg free
 15558   007B72  0100               	movlb	0	; () banked
 15559   007B74  6FEC               	movwf	f_mount@res& (0+255),b
 15560   007B76                     
 15561                           ; BSR set to: 0
 15562                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 15563   007B76  51EC               	movf	f_mount@res& (0+255),w,b
 15564   007B78                     l1277:
 15565                           
 15566                           ; BSR set to: 0
 15567   007B78  0012               	return		;funcret
 15568   007B7A                     __end_of_f_mount:
 15569                           	callstack 0
 15570                           
 15571 ;; *************** function _find_volume *****************
 15572 ;; Defined at:
 15573 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;  path            2  122[BANK0 ] PTR PTR const unsigned c
 15576 ;;		 -> f_chdir@path(2), f_open@path(2), f_mount@path(2), 
 15577 ;;  rfs             2  124[BANK0 ] PTR PTR struct .
 15578 ;;		 -> f_chdir@fs(2), f_open@fs(2), f_mount@fs(2), 
 15579 ;;  mode            1  126[BANK0 ] unsigned char 
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;  br             16    0[BANK1 ] unsigned long [4]
 15582 ;;  bsect           4   49[BANK1 ] unsigned long 
 15583 ;;  fasize          4   45[BANK1 ] unsigned long 
 15584 ;;  nclst           4   41[BANK1 ] unsigned long 
 15585 ;;  tsect           4   36[BANK1 ] unsigned long 
 15586 ;;  sysect          4   28[BANK1 ] unsigned long 
 15587 ;;  szbfat          4   22[BANK1 ] unsigned long 
 15588 ;;  fs              2   56[BANK1 ] PTR struct .
 15589 ;;		 -> FatFs(563), NULL(0), 
 15590 ;;  i               2   53[BANK1 ] unsigned int 
 15591 ;;  nrsv            2   34[BANK1 ] unsigned short 
 15592 ;;  vol             2   32[BANK1 ] int 
 15593 ;;  pt              2   26[BANK1 ] PTR unsigned char 
 15594 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 15595 ;;  fmt             1   55[BANK1 ] unsigned char 
 15596 ;;  stat            1   40[BANK1 ] unsigned char 
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      enum E68
 15599 ;; Registers used:
 15600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15606 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15608 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15609 ;;      Totals:         0      13      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15610 ;;Total ram usage:       71 bytes
 15611 ;; Hardware stack levels used: 1
 15612 ;; Hardware stack levels required when called: 13
 15613 ;; This function calls:
 15614 ;;		___lldiv
 15615 ;;		___lmul
 15616 ;;		_check_fs
 15617 ;;		_disk_initialize
 15618 ;;		_disk_status
 15619 ;;		_get_ldnumber
 15620 ;;		_ld_dword
 15621 ;;		_ld_word
 15622 ;;		_move_window
 15623 ;; This function is called by:
 15624 ;;		_f_mount
 15625 ;;		_f_open
 15626 ;;		_f_chdir
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           	psect	text59
 15631   00001E                     __ptext59:
 15632                           	callstack 0
 15633   00001E                     _find_volume:
 15634                           	callstack 15
 15635   00001E                     
 15636                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 15637   00001E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 15638   000024  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 15639   00002A  6ADE               	clrf	postinc2,c
 15640   00002C  6ADD               	clrf	postdec2,c
 15641   00002E                     
 15642                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 15643   00002E  C0DA  F060         	movff	find_volume@path,get_ldnumber@path
 15644   000032  C0DB  F061         	movff	find_volume@path+1,get_ldnumber@path+1
 15645   000036  EC0A  F035         	call	_get_ldnumber	;wreg free
 15646   00003A  C060  F120         	movff	?_get_ldnumber,find_volume@vol
 15647   00003E  C061  F121         	movff	?_get_ldnumber+1,find_volume@vol+1
 15648   000042                     
 15649                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 15650   000042  0101               	movlb	1	; () banked
 15651   000044  BF21               	btfsc	(find_volume@vol+1)& (0+255),7,b
 15652   000046  EF29  F000         	goto	u19170
 15653   00004A  EF27  F000         	goto	u19171
 15654   00004E                     u19171:
 15655   00004E  EF2C  F000         	goto	l15789
 15656   000052                     u19170:
 15657   000052                     
 15658                           ; BSR set to: 1
 15659   000052  0E0B               	movlw	11
 15660   000054  EF68  F007         	goto	l1211
 15661   000058                     l15789:
 15662                           
 15663                           ; BSR set to: 1
 15664                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 15665   000058  90D8               	bcf	status,0,c
 15666   00005A  3520               	rlcf	find_volume@vol& (0+255),w,b
 15667   00005C  6ED9               	movwf	fsr2l,c
 15668   00005E  3521               	rlcf	(find_volume@vol+1)& (0+255),w,b
 15669   000060  6EDA               	movwf	fsr2h,c
 15670   000062  0EE2               	movlw	low _FatFs@ff$F2407
 15671   000064  26D9               	addwf	fsr2l,f,c
 15672   000066  0E01               	movlw	high _FatFs@ff$F2407
 15673   000068  22DA               	addwfc	fsr2h,f,c
 15674   00006A  006F FF78  F138    	movff	postinc2,find_volume@fs
 15675   000070  006F FF74  F139    	movff	postdec2,find_volume@fs+1
 15676   000076                     
 15677                           ; BSR set to: 1
 15678                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 15679   000076  5138               	movf	find_volume@fs& (0+255),w,b
 15680   000078  1139               	iorwf	(find_volume@fs+1)& (0+255),w,b
 15681   00007A  A4D8               	btfss	status,2,c
 15682   00007C  EF42  F000         	goto	u19181
 15683   000080  EF44  F000         	goto	u19180
 15684   000084                     u19181:
 15685   000084  EF47  F000         	goto	l15797
 15686   000088                     u19180:
 15687   000088                     
 15688                           ; BSR set to: 1
 15689   000088  0E0C               	movlw	12
 15690   00008A  EF68  F007         	goto	l1211
 15691   00008E                     l15797:
 15692                           
 15693                           ; BSR set to: 1
 15694                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 15695   00008E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 15696   000094  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 15697   00009A  0060  F4E3  FFDE   	movff	find_volume@fs,postinc2
 15698   0000A0  0060  F4E7  FFDD   	movff	find_volume@fs+1,postdec2
 15699   0000A6                     
 15700                           ; BSR set to: 1
 15701                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 15702   0000A6  0100               	movlb	0	; () banked
 15703   0000A8  91DE               	bcf	find_volume@mode& (0+255),0,b
 15704   0000AA                     
 15705                           ; BSR set to: 0
 15706                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 15707   0000AA  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 15708   0000B0  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 15709   0000B6  50DF               	movf	indf2,w,c
 15710   0000B8  B4D8               	btfsc	status,2,c
 15711   0000BA  EF61  F000         	goto	u19191
 15712   0000BE  EF63  F000         	goto	u19190
 15713   0000C2                     u19191:
 15714   0000C2  EF8D  F000         	goto	l15819
 15715   0000C6                     u19190:
 15716   0000C6                     
 15717                           ; BSR set to: 0
 15718                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 15719   0000C6  0101               	movlb	1	; () banked
 15720   0000C8  EE20 F001          	lfsr	2,1
 15721   0000CC  5138               	movf	find_volume@fs& (0+255),w,b
 15722   0000CE  26D9               	addwf	fsr2l,f,c
 15723   0000D0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15724   0000D2  22DA               	addwfc	fsr2h,f,c
 15725   0000D4  50DF               	movf	indf2,w,c
 15726   0000D6  EC5A  F043         	call	_disk_status
 15727   0000DA  0101               	movlb	1	; () banked
 15728   0000DC  6F28               	movwf	find_volume@stat& (0+255),b
 15729   0000DE                     
 15730                           ; BSR set to: 1
 15731                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 15732   0000DE  B128               	btfsc	find_volume@stat& (0+255),0,b
 15733   0000E0  EF74  F000         	goto	u19201
 15734   0000E4  EF76  F000         	goto	u19200
 15735   0000E8                     u19201:
 15736   0000E8  EF8D  F000         	goto	l15819
 15737   0000EC                     u19200:
 15738   0000EC                     
 15739                           ; BSR set to: 1
 15740   0000EC  0100               	movlb	0	; () banked
 15741   0000EE  51DE               	movf	find_volume@mode& (0+255),w,b
 15742   0000F0  B4D8               	btfsc	status,2,c
 15743   0000F2  EF7D  F000         	goto	u19211
 15744   0000F6  EF7F  F000         	goto	u19210
 15745   0000FA                     u19211:
 15746   0000FA  EF8A  F000         	goto	l15815
 15747   0000FE                     u19210:
 15748   0000FE                     
 15749                           ; BSR set to: 0
 15750   0000FE  0101               	movlb	1	; () banked
 15751   000100  A528               	btfss	find_volume@stat& (0+255),2,b
 15752   000102  EF85  F000         	goto	u19221
 15753   000106  EF87  F000         	goto	u19220
 15754   00010A                     u19221:
 15755   00010A  EF8A  F000         	goto	l15815
 15756   00010E                     u19220:
 15757   00010E                     l15811:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 15761   00010E  0E0A               	movlw	10
 15762   000110  EF68  F007         	goto	l1211
 15763   000114                     l15815:
 15764                           
 15765                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 15766   000114  0E00               	movlw	0
 15767   000116  EF68  F007         	goto	l1211
 15768   00011A                     l15819:
 15769                           
 15770                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 15771   00011A  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 15772   000120  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 15773   000126  6ADF               	clrf	indf2,c
 15774   000128                     
 15775                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 15776   000128  0101               	movlb	1	; () banked
 15777   00012A  EE20 F001          	lfsr	2,1
 15778   00012E  5138               	movf	find_volume@fs& (0+255),w,b
 15779   000130  26D9               	addwf	fsr2l,f,c
 15780   000132  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15781   000134  22DA               	addwfc	fsr2h,f,c
 15782   000136  0060  F483  FFDF   	movff	find_volume@vol,indf2
 15783   00013C                     
 15784                           ; BSR set to: 1
 15785                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 15786   00013C  EE20 F001          	lfsr	2,1
 15787   000140  5138               	movf	find_volume@fs& (0+255),w,b
 15788   000142  26D9               	addwf	fsr2l,f,c
 15789   000144  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15790   000146  22DA               	addwfc	fsr2h,f,c
 15791   000148  50DF               	movf	indf2,w,c
 15792   00014A  EC90  F046         	call	_disk_initialize
 15793   00014E  0101               	movlb	1	; () banked
 15794   000150  6F28               	movwf	find_volume@stat& (0+255),b
 15795   000152                     
 15796                           ; BSR set to: 1
 15797                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 15798   000152  A128               	btfss	find_volume@stat& (0+255),0,b
 15799   000154  EFAE  F000         	goto	u19231
 15800   000158  EFB0  F000         	goto	u19230
 15801   00015C                     u19231:
 15802   00015C  EFB3  F000         	goto	l15831
 15803   000160                     u19230:
 15804   000160                     
 15805                           ; BSR set to: 1
 15806                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 15807   000160  0E03               	movlw	3
 15808   000162  EF68  F007         	goto	l1211
 15809   000166                     l15831:
 15810                           
 15811                           ; BSR set to: 1
 15812   000166  0100               	movlb	0	; () banked
 15813   000168  51DE               	movf	find_volume@mode& (0+255),w,b
 15814   00016A  B4D8               	btfsc	status,2,c
 15815   00016C  EFBA  F000         	goto	u19241
 15816   000170  EFBC  F000         	goto	u19240
 15817   000174                     u19241:
 15818   000174  EFC6  F000         	goto	l15839
 15819   000178                     u19240:
 15820   000178                     
 15821                           ; BSR set to: 0
 15822   000178  0101               	movlb	1	; () banked
 15823   00017A  A528               	btfss	find_volume@stat& (0+255),2,b
 15824   00017C  EFC2  F000         	goto	u19251
 15825   000180  EFC4  F000         	goto	u19250
 15826   000184                     u19251:
 15827   000184  EFC6  F000         	goto	l15839
 15828   000188                     u19250:
 15829   000188  EF87  F000         	goto	l15811
 15830   00018C                     l15839:
 15831                           
 15832                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 15833   00018C  0E00               	movlw	0
 15834   00018E  0101               	movlb	1	; () banked
 15835   000190  6F31               	movwf	find_volume@bsect& (0+255),b
 15836   000192  0E00               	movlw	0
 15837   000194  6F32               	movwf	(find_volume@bsect+1)& (0+255),b
 15838   000196  0E00               	movlw	0
 15839   000198  6F33               	movwf	(find_volume@bsect+2)& (0+255),b
 15840   00019A  0E00               	movlw	0
 15841   00019C  6F34               	movwf	(find_volume@bsect+3)& (0+255),b
 15842   00019E                     
 15843                           ; BSR set to: 1
 15844                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 15845   00019E  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 15846   0001A2  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 15847   0001A6  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 15848   0001AA  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 15849   0001AE  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 15850   0001B2  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 15851   0001B6  EC7B  F036         	call	_check_fs	;wreg free
 15852   0001BA  0101               	movlb	1	; () banked
 15853   0001BC  6F37               	movwf	find_volume@fmt& (0+255),b
 15854   0001BE                     
 15855                           ; BSR set to: 1
 15856                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 15857   0001BE  0E02               	movlw	2
 15858   0001C0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 15859   0001C2  B4D8               	btfsc	status,2,c
 15860   0001C4  EFE6  F000         	goto	u19261
 15861   0001C8  EFE8  F000         	goto	u19260
 15862   0001CC                     u19261:
 15863   0001CC  EFEA  F000         	goto	l15849
 15864   0001D0                     u19260:
 15865   0001D0  EFD7  F001         	goto	l15889
 15866   0001D4                     l15849:
 15867                           
 15868                           ; BSR set to: 1
 15869                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 15870   0001D4  0E00               	movlw	0
 15871   0001D6  6F36               	movwf	(find_volume@i+1)& (0+255),b
 15872   0001D8  0E00               	movlw	0
 15873   0001DA  6F35               	movwf	find_volume@i& (0+255),b
 15874   0001DC                     l15851:
 15875                           
 15876                           ; BSR set to: 1
 15877   0001DC  5136               	movf	(find_volume@i+1)& (0+255),w,b
 15878   0001DE  E109               	bnz	u19270
 15879   0001E0  0E04               	movlw	4
 15880   0001E2  5D35               	subwf	find_volume@i& (0+255),w,b
 15881   0001E4  A0D8               	btfss	status,0,c
 15882   0001E6  EFF7  F000         	goto	u19271
 15883   0001EA  EFF9  F000         	goto	u19270
 15884   0001EE                     u19271:
 15885   0001EE  EFFB  F000         	goto	l15855
 15886   0001F2                     u19270:
 15887   0001F2  EF6B  F001         	goto	l15869
 15888   0001F6                     l15855:
 15889                           
 15890                           ; BSR set to: 1
 15891                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 15892   0001F6  C135  F0DF         	movff	find_volume@i,??_find_volume
 15893   0001FA  C136  F0E0         	movff	find_volume@i+1,??_find_volume+1
 15894   0001FE  0100               	movlb	0	; () banked
 15895   000200  3BDF               	swapf	??_find_volume& (0+255),f,b
 15896   000202  3BE0               	swapf	(??_find_volume+1)& (0+255),f,b
 15897   000204  0EF0               	movlw	240
 15898   000206  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 15899   000208  51DF               	movf	??_find_volume& (0+255),w,b
 15900   00020A  0B0F               	andlw	15
 15901   00020C  13E0               	iorwf	(??_find_volume+1)& (0+255),f,b
 15902   00020E  0EF0               	movlw	240
 15903   000210  17DF               	andwf	??_find_volume& (0+255),f,b
 15904   000212  51DF               	movf	??_find_volume& (0+255),w,b
 15905   000214  0101               	movlb	1	; () banked
 15906   000216  2538               	addwf	find_volume@fs& (0+255),w,b
 15907   000218  0100               	movlb	0	; () banked
 15908   00021A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15909   00021C  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 15910   00021E  0101               	movlb	1	; () banked
 15911   000220  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15912   000222  0100               	movlb	0	; () banked
 15913   000224  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15914   000226  0EF1               	movlw	241
 15915   000228  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 15916   00022A  0101               	movlb	1	; () banked
 15917   00022C  6F1A               	movwf	find_volume@pt& (0+255),b
 15918   00022E  0E01               	movlw	1
 15919   000230  0100               	movlb	0	; () banked
 15920   000232  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 15921   000234  0101               	movlb	1	; () banked
 15922   000236  6F1B               	movwf	(find_volume@pt+1)& (0+255),b
 15923   000238                     
 15924                           ; BSR set to: 1
 15925                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 15926   000238  EE20 F004          	lfsr	2,4
 15927   00023C  511A               	movf	find_volume@pt& (0+255),w,b
 15928   00023E  26D9               	addwf	fsr2l,f,c
 15929   000240  511B               	movf	(find_volume@pt+1)& (0+255),w,b
 15930   000242  22DA               	addwfc	fsr2h,f,c
 15931   000244  50DF               	movf	indf2,w,c
 15932   000246  A4D8               	btfss	status,2,c
 15933   000248  EF28  F001         	goto	u19281
 15934   00024C  EF2A  F001         	goto	u19280
 15935   000250                     u19281:
 15936   000250  EF34  F001         	goto	l15861
 15937   000254                     u19280:
 15938   000254                     
 15939                           ; BSR set to: 1
 15940   000254  0E00               	movlw	0
 15941   000256  6F10               	movwf	_find_volume$3099& (0+255),b
 15942   000258  0E00               	movlw	0
 15943   00025A  6F11               	movwf	(_find_volume$3099+1)& (0+255),b
 15944   00025C  0E00               	movlw	0
 15945   00025E  6F12               	movwf	(_find_volume$3099+2)& (0+255),b
 15946   000260  0E00               	movlw	0
 15947   000262  6F13               	movwf	(_find_volume$3099+3)& (0+255),b
 15948   000264  EF47  F001         	goto	l15863
 15949   000268                     l15861:
 15950                           
 15951                           ; BSR set to: 1
 15952   000268  0E08               	movlw	8
 15953   00026A  251A               	addwf	find_volume@pt& (0+255),w,b
 15954   00026C  0100               	movlb	0	; () banked
 15955   00026E  6F60               	movwf	ld_dword@ptr& (0+255),b
 15956   000270  0E00               	movlw	0
 15957   000272  0101               	movlb	1	; () banked
 15958   000274  211B               	addwfc	(find_volume@pt+1)& (0+255),w,b
 15959   000276  0100               	movlb	0	; () banked
 15960   000278  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 15961   00027A  EC32  F040         	call	_ld_dword	;wreg free
 15962   00027E  C060  F110         	movff	?_ld_dword,_find_volume$3099
 15963   000282  C061  F111         	movff	?_ld_dword+1,_find_volume$3099+1
 15964   000286  C062  F112         	movff	?_ld_dword+2,_find_volume$3099+2
 15965   00028A  C063  F113         	movff	?_ld_dword+3,_find_volume$3099+3
 15966   00028E                     l15863:
 15967   00028E  0E00               	movlw	low find_volume@br
 15968   000290  0100               	movlb	0	; () banked
 15969   000292  6FDF               	movwf	??_find_volume& (0+255),b
 15970   000294  0E01               	movlw	high find_volume@br
 15971   000296  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 15972   000298  90D8               	bcf	status,0,c
 15973   00029A  0101               	movlb	1	; () banked
 15974   00029C  3535               	rlcf	find_volume@i& (0+255),w,b
 15975   00029E  6ED9               	movwf	fsr2l,c
 15976   0002A0  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 15977   0002A2  6EDA               	movwf	fsr2h,c
 15978   0002A4  90D8               	bcf	status,0,c
 15979   0002A6  36D9               	rlcf	fsr2l,f,c
 15980   0002A8  36DA               	rlcf	fsr2h,f,c
 15981   0002AA  0100               	movlb	0	; () banked
 15982   0002AC  51DF               	movf	??_find_volume& (0+255),w,b
 15983   0002AE  26D9               	addwf	fsr2l,f,c
 15984   0002B0  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 15985   0002B2  22DA               	addwfc	fsr2h,f,c
 15986   0002B4  0060  F443  FFDE   	movff	_find_volume$3099,postinc2
 15987   0002BA  0060  F447  FFDE   	movff	_find_volume$3099+1,postinc2
 15988   0002C0  0060  F44B  FFDE   	movff	_find_volume$3099+2,postinc2
 15989   0002C6  0060  F44F  FFDE   	movff	_find_volume$3099+3,postinc2
 15990   0002CC                     
 15991                           ; BSR set to: 0
 15992                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 15993   0002CC  0101               	movlb	1	; () banked
 15994   0002CE  4B35               	infsnz	find_volume@i& (0+255),f,b
 15995   0002D0  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 15996   0002D2  EFEE  F000         	goto	l15851
 15997   0002D6                     l15869:
 15998                           
 15999                           ; BSR set to: 1
 16000                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 16001   0002D6  0E00               	movlw	0
 16002   0002D8  6F36               	movwf	(find_volume@i+1)& (0+255),b
 16003   0002DA  0E00               	movlw	0
 16004   0002DC  6F35               	movwf	find_volume@i& (0+255),b
 16005   0002DE                     
 16006                           ; BSR set to: 1
 16007                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 16008   0002DE  5135               	movf	find_volume@i& (0+255),w,b
 16009   0002E0  1136               	iorwf	(find_volume@i+1)& (0+255),w,b
 16010   0002E2  B4D8               	btfsc	status,2,c
 16011   0002E4  EF76  F001         	goto	u19291
 16012   0002E8  EF78  F001         	goto	u19290
 16013   0002EC                     u19291:
 16014   0002EC  EF7B  F001         	goto	l15875
 16015   0002F0                     u19290:
 16016   0002F0                     
 16017                           ; BSR set to: 1
 16018   0002F0  0735               	decf	find_volume@i& (0+255),f,b
 16019   0002F2  A0D8               	btfss	status,0,c
 16020   0002F4  0736               	decf	(find_volume@i+1)& (0+255),f,b
 16021   0002F6                     l15875:
 16022                           
 16023                           ; BSR set to: 1
 16024                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 16025   0002F6  0E00               	movlw	low find_volume@br
 16026   0002F8  0100               	movlb	0	; () banked
 16027   0002FA  6FDF               	movwf	??_find_volume& (0+255),b
 16028   0002FC  0E01               	movlw	high find_volume@br
 16029   0002FE  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 16030   000300  90D8               	bcf	status,0,c
 16031   000302  0101               	movlb	1	; () banked
 16032   000304  3535               	rlcf	find_volume@i& (0+255),w,b
 16033   000306  6ED9               	movwf	fsr2l,c
 16034   000308  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 16035   00030A  6EDA               	movwf	fsr2h,c
 16036   00030C  90D8               	bcf	status,0,c
 16037   00030E  36D9               	rlcf	fsr2l,f,c
 16038   000310  36DA               	rlcf	fsr2h,f,c
 16039   000312  0100               	movlb	0	; () banked
 16040   000314  51DF               	movf	??_find_volume& (0+255),w,b
 16041   000316  26D9               	addwf	fsr2l,f,c
 16042   000318  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 16043   00031A  22DA               	addwfc	fsr2h,f,c
 16044   00031C  006F FF78  F131    	movff	postinc2,find_volume@bsect
 16045   000322  006F FF78  F132    	movff	postinc2,find_volume@bsect+1
 16046   000328  006F FF78  F133    	movff	postinc2,find_volume@bsect+2
 16047   00032E  006F FF78  F134    	movff	postinc2,find_volume@bsect+3
 16048   000334                     
 16049                           ; BSR set to: 0
 16050                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 16051   000334  0101               	movlb	1	; () banked
 16052   000336  5131               	movf	find_volume@bsect& (0+255),w,b
 16053   000338  1132               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 16054   00033A  1133               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 16055   00033C  1134               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 16056   00033E  A4D8               	btfss	status,2,c
 16057   000340  EFA4  F001         	goto	u19301
 16058   000344  EFA6  F001         	goto	u19300
 16059   000348                     u19301:
 16060   000348  EFAC  F001         	goto	l15881
 16061   00034C                     u19300:
 16062   00034C                     
 16063                           ; BSR set to: 1
 16064   00034C  0E00               	movlw	0
 16065   00034E  6F15               	movwf	(_find_volume$3100+1)& (0+255),b
 16066   000350  0E03               	movlw	3
 16067   000352  6F14               	movwf	_find_volume$3100& (0+255),b
 16068   000354  EFC0  F001         	goto	l15883
 16069   000358                     l15881:
 16070                           
 16071                           ; BSR set to: 1
 16072   000358  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 16073   00035C  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 16074   000360  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 16075   000364  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 16076   000368  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 16077   00036C  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 16078   000370  EC7B  F036         	call	_check_fs	;wreg free
 16079   000374  0100               	movlb	0	; () banked
 16080   000376  6FDF               	movwf	??_find_volume& (0+255),b
 16081   000378  51DF               	movf	??_find_volume& (0+255),w,b
 16082   00037A  0101               	movlb	1	; () banked
 16083   00037C  6F14               	movwf	_find_volume$3100& (0+255),b
 16084   00037E  6B15               	clrf	(_find_volume$3100+1)& (0+255),b
 16085   000380                     l15883:
 16086                           
 16087                           ; BSR set to: 1
 16088                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 16089   000380  C114  F137         	movff	_find_volume$3100,find_volume@fmt
 16090   000384                     
 16091                           ; BSR set to: 1
 16092   000384  0E01               	movlw	1
 16093   000386  6537               	cpfsgt	find_volume@fmt& (0+255),b
 16094   000388  EFC8  F001         	goto	u19311
 16095   00038C  EFCA  F001         	goto	u19310
 16096   000390                     u19311:
 16097   000390  EFD7  F001         	goto	l15889
 16098   000394                     u19310:
 16099   000394                     
 16100                           ; BSR set to: 1
 16101   000394  4B35               	infsnz	find_volume@i& (0+255),f,b
 16102   000396  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 16103   000398  5136               	movf	(find_volume@i+1)& (0+255),w,b
 16104   00039A  E109               	bnz	u19320
 16105   00039C  0E04               	movlw	4
 16106   00039E  5D35               	subwf	find_volume@i& (0+255),w,b
 16107   0003A0  A0D8               	btfss	status,0,c
 16108   0003A2  EFD5  F001         	goto	u19321
 16109   0003A6  EFD7  F001         	goto	u19320
 16110   0003AA                     u19321:
 16111   0003AA  EF7B  F001         	goto	l15875
 16112   0003AE                     u19320:
 16113   0003AE                     l15889:
 16114                           
 16115                           ; BSR set to: 1
 16116                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 16117   0003AE  0E04               	movlw	4
 16118   0003B0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 16119   0003B2  A4D8               	btfss	status,2,c
 16120   0003B4  EFDE  F001         	goto	u19331
 16121   0003B8  EFE0  F001         	goto	u19330
 16122   0003BC                     u19331:
 16123   0003BC  EFE3  F001         	goto	l15895
 16124   0003C0                     u19330:
 16125   0003C0                     
 16126                           ; BSR set to: 1
 16127   0003C0  0E01               	movlw	1
 16128   0003C2  EF68  F007         	goto	l1211
 16129   0003C6                     l15895:
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 16133   0003C6  0E01               	movlw	1
 16134   0003C8  6537               	cpfsgt	find_volume@fmt& (0+255),b
 16135   0003CA  EFE9  F001         	goto	u19341
 16136   0003CE  EFEB  F001         	goto	u19340
 16137   0003D2                     u19341:
 16138   0003D2  EFEE  F001         	goto	l15901
 16139   0003D6                     u19340:
 16140   0003D6                     l15897:
 16141   0003D6  0E0D               	movlw	13
 16142   0003D8  EF68  F007         	goto	l1211
 16143   0003DC                     l15901:
 16144                           
 16145                           ; BSR set to: 1
 16146                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 16147   0003DC  0E3E               	movlw	62
 16148   0003DE  2538               	addwf	find_volume@fs& (0+255),w,b
 16149   0003E0  0100               	movlb	0	; () banked
 16150   0003E2  6F60               	movwf	ld_word@ptr& (0+255),b
 16151   0003E4  0E00               	movlw	0
 16152   0003E6  0101               	movlb	1	; () banked
 16153   0003E8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16154   0003EA  0100               	movlb	0	; () banked
 16155   0003EC  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16156   0003EE  ECF7  F046         	call	_ld_word	;wreg free
 16157   0003F2  0E02               	movlw	2
 16158   0003F4  0100               	movlb	0	; () banked
 16159   0003F6  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 16160   0003F8  1160               	iorwf	?_ld_word& (0+255),w,b
 16161   0003FA  B4D8               	btfsc	status,2,c
 16162   0003FC  EF02  F002         	goto	u19351
 16163   000400  EF04  F002         	goto	u19350
 16164   000404                     u19351:
 16165   000404  EF06  F002         	goto	l15907
 16166   000408                     u19350:
 16167   000408  EFEB  F001         	goto	l15897
 16168   00040C                     l15907:
 16169                           
 16170                           ; BSR set to: 0
 16171                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 16172   00040C  0E49               	movlw	73
 16173   00040E  0101               	movlb	1	; () banked
 16174   000410  2538               	addwf	find_volume@fs& (0+255),w,b
 16175   000412  0100               	movlb	0	; () banked
 16176   000414  6F60               	movwf	ld_word@ptr& (0+255),b
 16177   000416  0E00               	movlw	0
 16178   000418  0101               	movlb	1	; () banked
 16179   00041A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16180   00041C  0100               	movlb	0	; () banked
 16181   00041E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16182   000420  ECF7  F046         	call	_ld_word	;wreg free
 16183   000424  0100               	movlb	0	; () banked
 16184   000426  C060  F12D         	movff	?_ld_word,find_volume@fasize
 16185   00042A  C061  F12E         	movff	?_ld_word+1,find_volume@fasize+1
 16186   00042E  0101               	movlb	1	; () banked
 16187   000430  6B2F               	clrf	(find_volume@fasize+2)& (0+255),b
 16188   000432  6B30               	clrf	(find_volume@fasize+3)& (0+255),b
 16189   000434                     
 16190                           ; BSR set to: 1
 16191                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 16192   000434  512D               	movf	find_volume@fasize& (0+255),w,b
 16193   000436  112E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 16194   000438  112F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 16195   00043A  1130               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 16196   00043C  A4D8               	btfss	status,2,c
 16197   00043E  EF23  F002         	goto	u19361
 16198   000442  EF25  F002         	goto	u19360
 16199   000446                     u19361:
 16200   000446  EF38  F002         	goto	l15913
 16201   00044A                     u19360:
 16202   00044A                     
 16203                           ; BSR set to: 1
 16204   00044A  0E57               	movlw	87
 16205   00044C  2538               	addwf	find_volume@fs& (0+255),w,b
 16206   00044E  0100               	movlb	0	; () banked
 16207   000450  6F60               	movwf	ld_dword@ptr& (0+255),b
 16208   000452  0E00               	movlw	0
 16209   000454  0101               	movlb	1	; () banked
 16210   000456  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16211   000458  0100               	movlb	0	; () banked
 16212   00045A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16213   00045C  EC32  F040         	call	_ld_dword	;wreg free
 16214   000460  C060  F12D         	movff	?_ld_dword,find_volume@fasize
 16215   000464  C061  F12E         	movff	?_ld_dword+1,find_volume@fasize+1
 16216   000468  C062  F12F         	movff	?_ld_dword+2,find_volume@fasize+2
 16217   00046C  C063  F130         	movff	?_ld_dword+3,find_volume@fasize+3
 16218   000470                     l15913:
 16219                           
 16220                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 16221   000470  0101               	movlb	1	; () banked
 16222   000472  EE20 F01B          	lfsr	2,27
 16223   000476  5138               	movf	find_volume@fs& (0+255),w,b
 16224   000478  26D9               	addwf	fsr2l,f,c
 16225   00047A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16226   00047C  22DA               	addwfc	fsr2h,f,c
 16227   00047E  0060  F4B7  FFDE   	movff	find_volume@fasize,postinc2
 16228   000484  0060  F4BB  FFDE   	movff	find_volume@fasize+1,postinc2
 16229   00048A  0060  F4BF  FFDE   	movff	find_volume@fasize+2,postinc2
 16230   000490  0060  F4C3  FFDE   	movff	find_volume@fasize+3,postinc2
 16231   000496                     
 16232                           ; BSR set to: 1
 16233                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 16234   000496  EE20 F043          	lfsr	2,67
 16235   00049A  5138               	movf	find_volume@fs& (0+255),w,b
 16236   00049C  26D9               	addwf	fsr2l,f,c
 16237   00049E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16238   0004A0  22DA               	addwfc	fsr2h,f,c
 16239   0004A2  EE10 F002          	lfsr	1,2
 16240   0004A6  5138               	movf	find_volume@fs& (0+255),w,b
 16241   0004A8  26E1               	addwf	fsr1l,f,c
 16242   0004AA  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16243   0004AC  22E2               	addwfc	fsr1h,f,c
 16244   0004AE  006F FF7F FFE7     	movff	indf2,indf1
 16245   0004B4                     
 16246                           ; BSR set to: 1
 16247                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 16248   0004B4  EE20 F002          	lfsr	2,2
 16249   0004B8  5138               	movf	find_volume@fs& (0+255),w,b
 16250   0004BA  26D9               	addwf	fsr2l,f,c
 16251   0004BC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16252   0004BE  22DA               	addwfc	fsr2h,f,c
 16253   0004C0  04DE               	decf	postinc2,w,c
 16254   0004C2  B4D8               	btfsc	status,2,c
 16255   0004C4  EF66  F002         	goto	u19371
 16256   0004C8  EF68  F002         	goto	u19370
 16257   0004CC                     u19371:
 16258   0004CC  EF79  F002         	goto	l15925
 16259   0004D0                     u19370:
 16260   0004D0                     
 16261                           ; BSR set to: 1
 16262   0004D0  EE20 F002          	lfsr	2,2
 16263   0004D4  5138               	movf	find_volume@fs& (0+255),w,b
 16264   0004D6  26D9               	addwf	fsr2l,f,c
 16265   0004D8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16266   0004DA  22DA               	addwfc	fsr2h,f,c
 16267   0004DC  0E02               	movlw	2
 16268   0004DE  18DE               	xorwf	postinc2,w,c
 16269   0004E0  B4D8               	btfsc	status,2,c
 16270   0004E2  EF75  F002         	goto	u19381
 16271   0004E6  EF77  F002         	goto	u19380
 16272   0004EA                     u19381:
 16273   0004EA  EF79  F002         	goto	l15925
 16274   0004EE                     u19380:
 16275   0004EE  EFEB  F001         	goto	l15897
 16276   0004F2                     l15925:
 16277                           
 16278                           ; BSR set to: 1
 16279                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 16280   0004F2  C12D  F060         	movff	find_volume@fasize,___lmul@multiplier
 16281   0004F6  C12E  F061         	movff	find_volume@fasize+1,___lmul@multiplier+1
 16282   0004FA  C12F  F062         	movff	find_volume@fasize+2,___lmul@multiplier+2
 16283   0004FE  C130  F063         	movff	find_volume@fasize+3,___lmul@multiplier+3
 16284   000502  EE20 F002          	lfsr	2,2
 16285   000506  5138               	movf	find_volume@fs& (0+255),w,b
 16286   000508  26D9               	addwf	fsr2l,f,c
 16287   00050A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16288   00050C  22DA               	addwfc	fsr2h,f,c
 16289   00050E  50DF               	movf	indf2,w,c
 16290   000510  0100               	movlb	0	; () banked
 16291   000512  6FDF               	movwf	??_find_volume& (0+255),b
 16292   000514  51DF               	movf	??_find_volume& (0+255),w,b
 16293   000516  6F64               	movwf	___lmul@multiplicand& (0+255),b
 16294   000518  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 16295   00051A  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 16296   00051C  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 16297   00051E  EC01  F044         	call	___lmul	;wreg free
 16298   000522  C060  F12D         	movff	?___lmul,find_volume@fasize
 16299   000526  C061  F12E         	movff	?___lmul+1,find_volume@fasize+1
 16300   00052A  C062  F12F         	movff	?___lmul+2,find_volume@fasize+2
 16301   00052E  C063  F130         	movff	?___lmul+3,find_volume@fasize+3
 16302   000532                     
 16303                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 16304   000532  0101               	movlb	1	; () banked
 16305   000534  EE20 F040          	lfsr	2,64
 16306   000538  5138               	movf	find_volume@fs& (0+255),w,b
 16307   00053A  26D9               	addwf	fsr2l,f,c
 16308   00053C  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16309   00053E  22DA               	addwfc	fsr2h,f,c
 16310   000540  50DF               	movf	indf2,w,c
 16311   000542  0100               	movlb	0	; () banked
 16312   000544  6FDF               	movwf	??_find_volume& (0+255),b
 16313   000546  6BE0               	clrf	(??_find_volume+1)& (0+255),b
 16314   000548  0101               	movlb	1	; () banked
 16315   00054A  EE20 F009          	lfsr	2,9
 16316   00054E  5138               	movf	find_volume@fs& (0+255),w,b
 16317   000550  26D9               	addwf	fsr2l,f,c
 16318   000552  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16319   000554  22DA               	addwfc	fsr2h,f,c
 16320   000556  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 16321   00055C  0060  F383  FFDD   	movff	??_find_volume+1,postdec2
 16322   000562                     
 16323                           ; BSR set to: 1
 16324                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 16325   000562  EE20 F009          	lfsr	2,9
 16326   000566  5138               	movf	find_volume@fs& (0+255),w,b
 16327   000568  26D9               	addwf	fsr2l,f,c
 16328   00056A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16329   00056C  22DA               	addwfc	fsr2h,f,c
 16330   00056E  50DE               	movf	postinc2,w,c
 16331   000570  10DE               	iorwf	postinc2,w,c
 16332   000572  B4D8               	btfsc	status,2,c
 16333   000574  EFBE  F002         	goto	u19391
 16334   000578  EFC0  F002         	goto	u19390
 16335   00057C                     u19391:
 16336   00057C  EFEB  F001         	goto	l15897
 16337   000580                     u19390:
 16338   000580                     
 16339                           ; BSR set to: 1
 16340   000580  EE20 F009          	lfsr	2,9
 16341   000584  5138               	movf	find_volume@fs& (0+255),w,b
 16342   000586  26D9               	addwf	fsr2l,f,c
 16343   000588  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16344   00058A  22DA               	addwfc	fsr2h,f,c
 16345   00058C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16346   000592  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 16347   000598  EE20 F009          	lfsr	2,9
 16348   00059C  5138               	movf	find_volume@fs& (0+255),w,b
 16349   00059E  26D9               	addwf	fsr2l,f,c
 16350   0005A0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16351   0005A2  22DA               	addwfc	fsr2h,f,c
 16352   0005A4  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 16353   0005AA  006F FF74  F0E2    	movff	postdec2,??_find_volume+3
 16354   0005B0  0EFF               	movlw	255
 16355   0005B2  0100               	movlb	0	; () banked
 16356   0005B4  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 16357   0005B6  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 16358   0005B8  0EFF               	movlw	255
 16359   0005BA  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 16360   0005BC  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 16361   0005BE  51DF               	movf	??_find_volume& (0+255),w,b
 16362   0005C0  15E3               	andwf	(??_find_volume+4)& (0+255),w,b
 16363   0005C2  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 16364   0005C4  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 16365   0005C6  15E4               	andwf	(??_find_volume+5)& (0+255),w,b
 16366   0005C8  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 16367   0005CA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 16368   0005CC  11E6               	iorwf	(??_find_volume+7)& (0+255),w,b
 16369   0005CE  B4D8               	btfsc	status,2,c
 16370   0005D0  EFEC  F002         	goto	u19401
 16371   0005D4  EFEE  F002         	goto	u19400
 16372   0005D8                     u19401:
 16373   0005D8  EFF0  F002         	goto	l15937
 16374   0005DC                     u19400:
 16375   0005DC  EFEB  F001         	goto	l15897
 16376   0005E0                     l15937:
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 16380   0005E0  0E44               	movlw	68
 16381   0005E2  0101               	movlb	1	; () banked
 16382   0005E4  2538               	addwf	find_volume@fs& (0+255),w,b
 16383   0005E6  0100               	movlb	0	; () banked
 16384   0005E8  6F60               	movwf	ld_word@ptr& (0+255),b
 16385   0005EA  0E00               	movlw	0
 16386   0005EC  0101               	movlb	1	; () banked
 16387   0005EE  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16388   0005F0  0100               	movlb	0	; () banked
 16389   0005F2  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16390   0005F4  ECF7  F046         	call	_ld_word	;wreg free
 16391   0005F8  0101               	movlb	1	; () banked
 16392   0005FA  EE20 F007          	lfsr	2,7
 16393   0005FE  5138               	movf	find_volume@fs& (0+255),w,b
 16394   000600  26D9               	addwf	fsr2l,f,c
 16395   000602  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16396   000604  22DA               	addwfc	fsr2h,f,c
 16397   000606  0100               	movlb	0	; () banked
 16398   000608  0060  F183  FFDE   	movff	?_ld_word,postinc2
 16399   00060E  0060  F187  FFDD   	movff	?_ld_word+1,postdec2
 16400   000614                     
 16401                           ; BSR set to: 0
 16402                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 16403   000614  0101               	movlb	1	; () banked
 16404   000616  EE20 F007          	lfsr	2,7
 16405   00061A  5138               	movf	find_volume@fs& (0+255),w,b
 16406   00061C  26D9               	addwf	fsr2l,f,c
 16407   00061E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16408   000620  22DA               	addwfc	fsr2h,f,c
 16409   000622  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16410   000628  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 16411   00062E  0E0F               	movlw	15
 16412   000630  0100               	movlb	0	; () banked
 16413   000632  17DF               	andwf	??_find_volume& (0+255),f,b
 16414   000634  0E00               	movlw	0
 16415   000636  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 16416   000638  51DF               	movf	??_find_volume& (0+255),w,b
 16417   00063A  11E0               	iorwf	(??_find_volume+1)& (0+255),w,b
 16418   00063C  B4D8               	btfsc	status,2,c
 16419   00063E  EF23  F003         	goto	u19411
 16420   000642  EF25  F003         	goto	u19410
 16421   000646                     u19411:
 16422   000646  EF27  F003         	goto	l15945
 16423   00064A                     u19410:
 16424   00064A  EFEB  F001         	goto	l15897
 16425   00064E                     l15945:
 16426                           
 16427                           ; BSR set to: 0
 16428                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 16429   00064E  0E46               	movlw	70
 16430   000650  0101               	movlb	1	; () banked
 16431   000652  2538               	addwf	find_volume@fs& (0+255),w,b
 16432   000654  0100               	movlb	0	; () banked
 16433   000656  6F60               	movwf	ld_word@ptr& (0+255),b
 16434   000658  0E00               	movlw	0
 16435   00065A  0101               	movlb	1	; () banked
 16436   00065C  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16437   00065E  0100               	movlb	0	; () banked
 16438   000660  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16439   000662  ECF7  F046         	call	_ld_word	;wreg free
 16440   000666  0100               	movlb	0	; () banked
 16441   000668  C060  F124         	movff	?_ld_word,find_volume@tsect
 16442   00066C  C061  F125         	movff	?_ld_word+1,find_volume@tsect+1
 16443   000670  0101               	movlb	1	; () banked
 16444   000672  6B26               	clrf	(find_volume@tsect+2)& (0+255),b
 16445   000674  6B27               	clrf	(find_volume@tsect+3)& (0+255),b
 16446   000676                     
 16447                           ; BSR set to: 1
 16448                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 16449   000676  5124               	movf	find_volume@tsect& (0+255),w,b
 16450   000678  1125               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 16451   00067A  1126               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 16452   00067C  1127               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 16453   00067E  A4D8               	btfss	status,2,c
 16454   000680  EF44  F003         	goto	u19421
 16455   000684  EF46  F003         	goto	u19420
 16456   000688                     u19421:
 16457   000688  EF59  F003         	goto	l1245
 16458   00068C                     u19420:
 16459   00068C                     
 16460                           ; BSR set to: 1
 16461   00068C  0E53               	movlw	83
 16462   00068E  2538               	addwf	find_volume@fs& (0+255),w,b
 16463   000690  0100               	movlb	0	; () banked
 16464   000692  6F60               	movwf	ld_dword@ptr& (0+255),b
 16465   000694  0E00               	movlw	0
 16466   000696  0101               	movlb	1	; () banked
 16467   000698  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16468   00069A  0100               	movlb	0	; () banked
 16469   00069C  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16470   00069E  EC32  F040         	call	_ld_dword	;wreg free
 16471   0006A2  C060  F124         	movff	?_ld_dword,find_volume@tsect
 16472   0006A6  C061  F125         	movff	?_ld_dword+1,find_volume@tsect+1
 16473   0006AA  C062  F126         	movff	?_ld_dword+2,find_volume@tsect+2
 16474   0006AE  C063  F127         	movff	?_ld_dword+3,find_volume@tsect+3
 16475   0006B2                     l1245:
 16476                           
 16477                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 16478   0006B2  0E41               	movlw	65
 16479   0006B4  0101               	movlb	1	; () banked
 16480   0006B6  2538               	addwf	find_volume@fs& (0+255),w,b
 16481   0006B8  0100               	movlb	0	; () banked
 16482   0006BA  6F60               	movwf	ld_word@ptr& (0+255),b
 16483   0006BC  0E00               	movlw	0
 16484   0006BE  0101               	movlb	1	; () banked
 16485   0006C0  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16486   0006C2  0100               	movlb	0	; () banked
 16487   0006C4  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16488   0006C6  ECF7  F046         	call	_ld_word	;wreg free
 16489   0006CA  C060  F122         	movff	?_ld_word,find_volume@nrsv
 16490   0006CE  C061  F123         	movff	?_ld_word+1,find_volume@nrsv+1
 16491   0006D2                     
 16492                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 16493   0006D2  0101               	movlb	1	; () banked
 16494   0006D4  5122               	movf	find_volume@nrsv& (0+255),w,b
 16495   0006D6  1123               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 16496   0006D8  A4D8               	btfss	status,2,c
 16497   0006DA  EF71  F003         	goto	u19431
 16498   0006DE  EF73  F003         	goto	u19430
 16499   0006E2                     u19431:
 16500   0006E2  EF75  F003         	goto	l15957
 16501   0006E6                     u19430:
 16502   0006E6  EFEB  F001         	goto	l15897
 16503   0006EA                     l15957:
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 16507   0006EA  EE20 F007          	lfsr	2,7
 16508   0006EE  5138               	movf	find_volume@fs& (0+255),w,b
 16509   0006F0  26D9               	addwf	fsr2l,f,c
 16510   0006F2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16511   0006F4  22DA               	addwfc	fsr2h,f,c
 16512   0006F6  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16513   0006FC  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 16514   000702  0E04               	movlw	4
 16515   000704  0100               	movlb	0	; () banked
 16516   000706  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 16517   000708                     u19445:
 16518   000708  90D8               	bcf	status,0,c
 16519   00070A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 16520   00070C  33DF               	rrcf	??_find_volume& (0+255),f,b
 16521   00070E  2FE1               	decfsz	(??_find_volume+2)& (0+255),f,b
 16522   000710  EF84  F003         	goto	u19445
 16523   000714  0101               	movlb	1	; () banked
 16524   000716  5122               	movf	find_volume@nrsv& (0+255),w,b
 16525   000718  0100               	movlb	0	; () banked
 16526   00071A  25DF               	addwf	??_find_volume& (0+255),w,b
 16527   00071C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 16528   00071E  0101               	movlb	1	; () banked
 16529   000720  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 16530   000722  0100               	movlb	0	; () banked
 16531   000724  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 16532   000726  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 16533   000728  6BE4               	clrf	(??_find_volume+5)& (0+255),b
 16534   00072A  B0D8               	btfsc	status,0,c
 16535   00072C  2BE4               	incf	(??_find_volume+5)& (0+255),f,b
 16536   00072E  6BE5               	clrf	(??_find_volume+6)& (0+255),b
 16537   000730  0101               	movlb	1	; () banked
 16538   000732  512D               	movf	find_volume@fasize& (0+255),w,b
 16539   000734  0100               	movlb	0	; () banked
 16540   000736  25E2               	addwf	(??_find_volume+3)& (0+255),w,b
 16541   000738  0101               	movlb	1	; () banked
 16542   00073A  6F1C               	movwf	find_volume@sysect& (0+255),b
 16543   00073C  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 16544   00073E  0100               	movlb	0	; () banked
 16545   000740  21E3               	addwfc	(??_find_volume+4)& (0+255),w,b
 16546   000742  0101               	movlb	1	; () banked
 16547   000744  6F1D               	movwf	(find_volume@sysect+1)& (0+255),b
 16548   000746  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 16549   000748  0100               	movlb	0	; () banked
 16550   00074A  21E4               	addwfc	(??_find_volume+5)& (0+255),w,b
 16551   00074C  0101               	movlb	1	; () banked
 16552   00074E  6F1E               	movwf	(find_volume@sysect+2)& (0+255),b
 16553   000750  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 16554   000752  0100               	movlb	0	; () banked
 16555   000754  21E5               	addwfc	(??_find_volume+6)& (0+255),w,b
 16556   000756  0101               	movlb	1	; () banked
 16557   000758  6F1F               	movwf	(find_volume@sysect+3)& (0+255),b
 16558   00075A                     
 16559                           ; BSR set to: 1
 16560                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 16561   00075A  511C               	movf	find_volume@sysect& (0+255),w,b
 16562   00075C  5D24               	subwf	find_volume@tsect& (0+255),w,b
 16563   00075E  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 16564   000760  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 16565   000762  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 16566   000764  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 16567   000766  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 16568   000768  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 16569   00076A  B0D8               	btfsc	status,0,c
 16570   00076C  EFBA  F003         	goto	u19451
 16571   000770  EFBC  F003         	goto	u19450
 16572   000774                     u19451:
 16573   000774  EFBE  F003         	goto	l15965
 16574   000778                     u19450:
 16575   000778  EFEB  F001         	goto	l15897
 16576   00077C                     l15965:
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 16580   00077C  511C               	movf	find_volume@sysect& (0+255),w,b
 16581   00077E  5D24               	subwf	find_volume@tsect& (0+255),w,b
 16582   000780  0100               	movlb	0	; () banked
 16583   000782  6F60               	movwf	___lldiv@dividend& (0+255),b
 16584   000784  0101               	movlb	1	; () banked
 16585   000786  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 16586   000788  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 16587   00078A  0100               	movlb	0	; () banked
 16588   00078C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 16589   00078E  0101               	movlb	1	; () banked
 16590   000790  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 16591   000792  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 16592   000794  0100               	movlb	0	; () banked
 16593   000796  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 16594   000798  0101               	movlb	1	; () banked
 16595   00079A  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 16596   00079C  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 16597   00079E  0100               	movlb	0	; () banked
 16598   0007A0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 16599   0007A2  0101               	movlb	1	; () banked
 16600   0007A4  EE20 F009          	lfsr	2,9
 16601   0007A8  5138               	movf	find_volume@fs& (0+255),w,b
 16602   0007AA  26D9               	addwf	fsr2l,f,c
 16603   0007AC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16604   0007AE  22DA               	addwfc	fsr2h,f,c
 16605   0007B0  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16606   0007B6  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 16607   0007BC  C0DF  F064         	movff	??_find_volume,___lldiv@divisor
 16608   0007C0  C0E0  F065         	movff	??_find_volume+1,___lldiv@divisor+1
 16609   0007C4  0100               	movlb	0	; () banked
 16610   0007C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 16611   0007C8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 16612   0007CA  EC3D  F041         	call	___lldiv	;wreg free
 16613   0007CE  C060  F129         	movff	?___lldiv,find_volume@nclst
 16614   0007D2  C061  F12A         	movff	?___lldiv+1,find_volume@nclst+1
 16615   0007D6  C062  F12B         	movff	?___lldiv+2,find_volume@nclst+2
 16616   0007DA  C063  F12C         	movff	?___lldiv+3,find_volume@nclst+3
 16617   0007DE                     
 16618                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 16619   0007DE  0101               	movlb	1	; () banked
 16620   0007E0  5129               	movf	find_volume@nclst& (0+255),w,b
 16621   0007E2  112A               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 16622   0007E4  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16623   0007E6  112C               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 16624   0007E8  A4D8               	btfss	status,2,c
 16625   0007EA  EFF9  F003         	goto	u19461
 16626   0007EE  EFFB  F003         	goto	u19460
 16627   0007F2                     u19461:
 16628   0007F2  EFFD  F003         	goto	l15973
 16629   0007F6                     u19460:
 16630   0007F6  EFEB  F001         	goto	l15897
 16631   0007FA                     l15973:
 16632                           
 16633                           ; BSR set to: 1
 16634                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 16635   0007FA  0E00               	movlw	0
 16636   0007FC  6F37               	movwf	find_volume@fmt& (0+255),b
 16637   0007FE                     
 16638                           ; BSR set to: 1
 16639                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 16640   0007FE  0EF6               	movlw	246
 16641   000800  5D29               	subwf	find_volume@nclst& (0+255),w,b
 16642   000802  0EFF               	movlw	255
 16643   000804  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16644   000806  0EFF               	movlw	255
 16645   000808  592B               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 16646   00080A  0E0F               	movlw	15
 16647   00080C  592C               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 16648   00080E  B0D8               	btfsc	status,0,c
 16649   000810  EF0C  F004         	goto	u19471
 16650   000814  EF0E  F004         	goto	u19470
 16651   000818                     u19471:
 16652   000818  EF10  F004         	goto	l15979
 16653   00081C                     u19470:
 16654   00081C                     
 16655                           ; BSR set to: 1
 16656   00081C  0E03               	movlw	3
 16657   00081E  6F37               	movwf	find_volume@fmt& (0+255),b
 16658   000820                     l15979:
 16659                           
 16660                           ; BSR set to: 1
 16661                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 16662   000820  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 16663   000822  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16664   000824  E109               	bnz	u19481
 16665   000826  0EF6               	movlw	246
 16666   000828  5D29               	subwf	find_volume@nclst& (0+255),w,b
 16667   00082A  0EFF               	movlw	255
 16668   00082C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16669   00082E  B0D8               	btfsc	status,0,c
 16670   000830  EF1C  F004         	goto	u19481
 16671   000834  EF1E  F004         	goto	u19480
 16672   000838                     u19481:
 16673   000838  EF20  F004         	goto	l15983
 16674   00083C                     u19480:
 16675   00083C                     
 16676                           ; BSR set to: 1
 16677   00083C  0E02               	movlw	2
 16678   00083E  6F37               	movwf	find_volume@fmt& (0+255),b
 16679   000840                     l15983:
 16680                           
 16681                           ; BSR set to: 1
 16682                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 16683   000840  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 16684   000842  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16685   000844  E109               	bnz	u19491
 16686   000846  0EF6               	movlw	246
 16687   000848  5D29               	subwf	find_volume@nclst& (0+255),w,b
 16688   00084A  0E0F               	movlw	15
 16689   00084C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16690   00084E  B0D8               	btfsc	status,0,c
 16691   000850  EF2C  F004         	goto	u19491
 16692   000854  EF2E  F004         	goto	u19490
 16693   000858                     u19491:
 16694   000858  EF30  F004         	goto	l1251
 16695   00085C                     u19490:
 16696   00085C                     
 16697                           ; BSR set to: 1
 16698   00085C  0E01               	movlw	1
 16699   00085E  6F37               	movwf	find_volume@fmt& (0+255),b
 16700   000860                     l1251:
 16701                           
 16702                           ; BSR set to: 1
 16703                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 16704   000860  5137               	movf	find_volume@fmt& (0+255),w,b
 16705   000862  A4D8               	btfss	status,2,c
 16706   000864  EF36  F004         	goto	u19501
 16707   000868  EF38  F004         	goto	u19500
 16708   00086C                     u19501:
 16709   00086C  EF3A  F004         	goto	l15991
 16710   000870                     u19500:
 16711   000870  EFEB  F001         	goto	l15897
 16712   000874                     l15991:
 16713                           
 16714                           ; BSR set to: 1
 16715                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 16716   000874  0E02               	movlw	2
 16717   000876  2529               	addwf	find_volume@nclst& (0+255),w,b
 16718   000878  0100               	movlb	0	; () banked
 16719   00087A  6FDF               	movwf	??_find_volume& (0+255),b
 16720   00087C  0E00               	movlw	0
 16721   00087E  0101               	movlb	1	; () banked
 16722   000880  212A               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 16723   000882  0100               	movlb	0	; () banked
 16724   000884  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 16725   000886  0E00               	movlw	0
 16726   000888  0101               	movlb	1	; () banked
 16727   00088A  212B               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 16728   00088C  0100               	movlb	0	; () banked
 16729   00088E  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 16730   000890  0E00               	movlw	0
 16731   000892  0101               	movlb	1	; () banked
 16732   000894  212C               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 16733   000896  0100               	movlb	0	; () banked
 16734   000898  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 16735   00089A  0101               	movlb	1	; () banked
 16736   00089C  EE20 F017          	lfsr	2,23
 16737   0008A0  5138               	movf	find_volume@fs& (0+255),w,b
 16738   0008A2  26D9               	addwf	fsr2l,f,c
 16739   0008A4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16740   0008A6  22DA               	addwfc	fsr2h,f,c
 16741   0008A8  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 16742   0008AE  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 16743   0008B4  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 16744   0008BA  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 16745                           
 16746                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 16747   0008C0  EE20 F01F          	lfsr	2,31
 16748   0008C4  5138               	movf	find_volume@fs& (0+255),w,b
 16749   0008C6  26D9               	addwf	fsr2l,f,c
 16750   0008C8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16751   0008CA  22DA               	addwfc	fsr2h,f,c
 16752   0008CC  0060  F4C7  FFDE   	movff	find_volume@bsect,postinc2
 16753   0008D2  0060  F4CB  FFDE   	movff	find_volume@bsect+1,postinc2
 16754   0008D8  0060  F4CF  FFDE   	movff	find_volume@bsect+2,postinc2
 16755   0008DE  0060  F4D3  FFDE   	movff	find_volume@bsect+3,postinc2
 16756                           
 16757                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 16758   0008E4  5122               	movf	find_volume@nrsv& (0+255),w,b
 16759   0008E6  2531               	addwf	find_volume@bsect& (0+255),w,b
 16760   0008E8  0100               	movlb	0	; () banked
 16761   0008EA  6FDF               	movwf	??_find_volume& (0+255),b
 16762   0008EC  0101               	movlb	1	; () banked
 16763   0008EE  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 16764   0008F0  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16765   0008F2  0100               	movlb	0	; () banked
 16766   0008F4  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 16767   0008F6  0E00               	movlw	0
 16768   0008F8  0101               	movlb	1	; () banked
 16769   0008FA  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16770   0008FC  0100               	movlb	0	; () banked
 16771   0008FE  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 16772   000900  0E00               	movlw	0
 16773   000902  0101               	movlb	1	; () banked
 16774   000904  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16775   000906  0100               	movlb	0	; () banked
 16776   000908  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 16777   00090A  0101               	movlb	1	; () banked
 16778   00090C  EE20 F023          	lfsr	2,35
 16779   000910  5138               	movf	find_volume@fs& (0+255),w,b
 16780   000912  26D9               	addwf	fsr2l,f,c
 16781   000914  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16782   000916  22DA               	addwfc	fsr2h,f,c
 16783   000918  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 16784   00091E  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 16785   000924  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 16786   00092A  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 16787                           
 16788                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 16789   000930  511C               	movf	find_volume@sysect& (0+255),w,b
 16790   000932  2531               	addwf	find_volume@bsect& (0+255),w,b
 16791   000934  0100               	movlb	0	; () banked
 16792   000936  6FDF               	movwf	??_find_volume& (0+255),b
 16793   000938  0101               	movlb	1	; () banked
 16794   00093A  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 16795   00093C  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16796   00093E  0100               	movlb	0	; () banked
 16797   000940  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 16798   000942  0101               	movlb	1	; () banked
 16799   000944  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 16800   000946  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16801   000948  0100               	movlb	0	; () banked
 16802   00094A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 16803   00094C  0101               	movlb	1	; () banked
 16804   00094E  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 16805   000950  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16806   000952  0100               	movlb	0	; () banked
 16807   000954  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 16808   000956  0101               	movlb	1	; () banked
 16809   000958  EE20 F02B          	lfsr	2,43
 16810   00095C  5138               	movf	find_volume@fs& (0+255),w,b
 16811   00095E  26D9               	addwf	fsr2l,f,c
 16812   000960  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16813   000962  22DA               	addwfc	fsr2h,f,c
 16814   000964  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 16815   00096A  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 16816   000970  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 16817   000976  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 16818   00097C                     
 16819                           ; BSR set to: 1
 16820                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 16821   00097C  0E03               	movlw	3
 16822   00097E  1937               	xorwf	find_volume@fmt& (0+255),w,b
 16823   000980  A4D8               	btfss	status,2,c
 16824   000982  EFC5  F004         	goto	u19511
 16825   000986  EFC7  F004         	goto	u19510
 16826   00098A                     u19511:
 16827   00098A  EF36  F005         	goto	l16011
 16828   00098E                     u19510:
 16829   00098E                     
 16830                           ; BSR set to: 1
 16831                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 16832   00098E  0E5D               	movlw	93
 16833   000990  2538               	addwf	find_volume@fs& (0+255),w,b
 16834   000992  0100               	movlb	0	; () banked
 16835   000994  6F60               	movwf	ld_word@ptr& (0+255),b
 16836   000996  0E00               	movlw	0
 16837   000998  0101               	movlb	1	; () banked
 16838   00099A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16839   00099C  0100               	movlb	0	; () banked
 16840   00099E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16841   0009A0  ECF7  F046         	call	_ld_word	;wreg free
 16842   0009A4  0100               	movlb	0	; () banked
 16843   0009A6  5160               	movf	?_ld_word& (0+255),w,b
 16844   0009A8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 16845   0009AA  B4D8               	btfsc	status,2,c
 16846   0009AC  EFDA  F004         	goto	u19521
 16847   0009B0  EFDC  F004         	goto	u19520
 16848   0009B4                     u19521:
 16849   0009B4  EFDE  F004         	goto	l16001
 16850   0009B8                     u19520:
 16851   0009B8  EFEB  F001         	goto	l15897
 16852   0009BC                     l16001:
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 16856   0009BC  0101               	movlb	1	; () banked
 16857   0009BE  EE20 F007          	lfsr	2,7
 16858   0009C2  5138               	movf	find_volume@fs& (0+255),w,b
 16859   0009C4  26D9               	addwf	fsr2l,f,c
 16860   0009C6  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16861   0009C8  22DA               	addwfc	fsr2h,f,c
 16862   0009CA  50DE               	movf	postinc2,w,c
 16863   0009CC  10DE               	iorwf	postinc2,w,c
 16864   0009CE  B4D8               	btfsc	status,2,c
 16865   0009D0  EFEC  F004         	goto	u19531
 16866   0009D4  EFEE  F004         	goto	u19530
 16867   0009D8                     u19531:
 16868   0009D8  EFF0  F004         	goto	l16007
 16869   0009DC                     u19530:
 16870   0009DC  EFEB  F001         	goto	l15897
 16871   0009E0                     l16007:
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 16875   0009E0  0E5F               	movlw	95
 16876   0009E2  2538               	addwf	find_volume@fs& (0+255),w,b
 16877   0009E4  0100               	movlb	0	; () banked
 16878   0009E6  6F60               	movwf	ld_dword@ptr& (0+255),b
 16879   0009E8  0E00               	movlw	0
 16880   0009EA  0101               	movlb	1	; () banked
 16881   0009EC  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16882   0009EE  0100               	movlb	0	; () banked
 16883   0009F0  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16884   0009F2  EC32  F040         	call	_ld_dword	;wreg free
 16885   0009F6  0101               	movlb	1	; () banked
 16886   0009F8  EE20 F027          	lfsr	2,39
 16887   0009FC  5138               	movf	find_volume@fs& (0+255),w,b
 16888   0009FE  26D9               	addwf	fsr2l,f,c
 16889   000A00  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16890   000A02  22DA               	addwfc	fsr2h,f,c
 16891   000A04  0100               	movlb	0	; () banked
 16892   000A06  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 16893   000A0C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 16894   000A12  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 16895   000A18  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 16896   000A1E                     
 16897                           ; BSR set to: 0
 16898                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 16899   000A1E  0101               	movlb	1	; () banked
 16900   000A20  EE20 F017          	lfsr	2,23
 16901   000A24  5138               	movf	find_volume@fs& (0+255),w,b
 16902   000A26  26D9               	addwf	fsr2l,f,c
 16903   000A28  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16904   000A2A  22DA               	addwfc	fsr2h,f,c
 16905   000A2C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16906   000A32  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 16907   000A38  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 16908   000A3E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 16909   000A44  0E02               	movlw	2
 16910   000A46                     u19545:
 16911   000A46  90D8               	bcf	status,0,c
 16912   000A48  0100               	movlb	0	; () banked
 16913   000A4A  37DF               	rlcf	??_find_volume& (0+255),f,b
 16914   000A4C  37E0               	rlcf	(??_find_volume+1)& (0+255),f,b
 16915   000A4E  37E1               	rlcf	(??_find_volume+2)& (0+255),f,b
 16916   000A50  37E2               	rlcf	(??_find_volume+3)& (0+255),f,b
 16917   000A52  2EE8               	decfsz	wreg,f,c
 16918   000A54  EF23  F005         	goto	u19545
 16919   000A58  C0DF  F116         	movff	??_find_volume,find_volume@szbfat
 16920   000A5C  C0E0  F117         	movff	??_find_volume+1,find_volume@szbfat+1
 16921   000A60  C0E1  F118         	movff	??_find_volume+2,find_volume@szbfat+2
 16922   000A64  C0E2  F119         	movff	??_find_volume+3,find_volume@szbfat+3
 16923                           
 16924                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 16925   000A68  EF03  F006         	goto	l1256
 16926   000A6C                     l16011:
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 16930   000A6C  EE20 F007          	lfsr	2,7
 16931   000A70  5138               	movf	find_volume@fs& (0+255),w,b
 16932   000A72  26D9               	addwf	fsr2l,f,c
 16933   000A74  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16934   000A76  22DA               	addwfc	fsr2h,f,c
 16935   000A78  50DE               	movf	postinc2,w,c
 16936   000A7A  10DE               	iorwf	postinc2,w,c
 16937   000A7C  A4D8               	btfss	status,2,c
 16938   000A7E  EF43  F005         	goto	u19551
 16939   000A82  EF45  F005         	goto	u19550
 16940   000A86                     u19551:
 16941   000A86  EF47  F005         	goto	l16017
 16942   000A8A                     u19550:
 16943   000A8A  EFEB  F001         	goto	l15897
 16944   000A8E                     l16017:
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 16948   000A8E  EE20 F023          	lfsr	2,35
 16949   000A92  5138               	movf	find_volume@fs& (0+255),w,b
 16950   000A94  26D9               	addwf	fsr2l,f,c
 16951   000A96  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16952   000A98  22DA               	addwfc	fsr2h,f,c
 16953   000A9A  006F FF78  F0DF    	movff	postinc2,??_find_volume
 16954   000AA0  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 16955   000AA6  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 16956   000AAC  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 16957   000AB2  512D               	movf	find_volume@fasize& (0+255),w,b
 16958   000AB4  0100               	movlb	0	; () banked
 16959   000AB6  25DF               	addwf	??_find_volume& (0+255),w,b
 16960   000AB8  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 16961   000ABA  0101               	movlb	1	; () banked
 16962   000ABC  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 16963   000ABE  0100               	movlb	0	; () banked
 16964   000AC0  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 16965   000AC2  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 16966   000AC4  0101               	movlb	1	; () banked
 16967   000AC6  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 16968   000AC8  0100               	movlb	0	; () banked
 16969   000ACA  21E1               	addwfc	(??_find_volume+2)& (0+255),w,b
 16970   000ACC  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 16971   000ACE  0101               	movlb	1	; () banked
 16972   000AD0  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 16973   000AD2  0100               	movlb	0	; () banked
 16974   000AD4  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 16975   000AD6  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 16976   000AD8  0101               	movlb	1	; () banked
 16977   000ADA  EE20 F027          	lfsr	2,39
 16978   000ADE  5138               	movf	find_volume@fs& (0+255),w,b
 16979   000AE0  26D9               	addwf	fsr2l,f,c
 16980   000AE2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16981   000AE4  22DA               	addwfc	fsr2h,f,c
 16982   000AE6  0060  F38F  FFDE   	movff	??_find_volume+4,postinc2
 16983   000AEC  0060  F393  FFDE   	movff	??_find_volume+5,postinc2
 16984   000AF2  0060  F397  FFDE   	movff	??_find_volume+6,postinc2
 16985   000AF8  0060  F39B  FFDE   	movff	??_find_volume+7,postinc2
 16986   000AFE                     
 16987                           ; BSR set to: 1
 16988                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 16989   000AFE  0E02               	movlw	2
 16990   000B00  1937               	xorwf	find_volume@fmt& (0+255),w,b
 16991   000B02  B4D8               	btfsc	status,2,c
 16992   000B04  EF86  F005         	goto	u19561
 16993   000B08  EF88  F005         	goto	u19560
 16994   000B0C                     u19561:
 16995   000B0C  EFE0  F005         	goto	l16023
 16996   000B10                     u19560:
 16997   000B10                     
 16998                           ; BSR set to: 1
 16999   000B10  EE20 F017          	lfsr	2,23
 17000   000B14  5138               	movf	find_volume@fs& (0+255),w,b
 17001   000B16  26D9               	addwf	fsr2l,f,c
 17002   000B18  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17003   000B1A  22DA               	addwfc	fsr2h,f,c
 17004   000B1C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 17005   000B22  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 17006   000B28  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 17007   000B2E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 17008   000B34  0E01               	movlw	1
 17009   000B36  0100               	movlb	0	; () banked
 17010   000B38  15DF               	andwf	??_find_volume& (0+255),w,b
 17011   000B3A  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 17012   000B3C  0E00               	movlw	0
 17013   000B3E  15E0               	andwf	(??_find_volume+1)& (0+255),w,b
 17014   000B40  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 17015   000B42  0E00               	movlw	0
 17016   000B44  15E1               	andwf	(??_find_volume+2)& (0+255),w,b
 17017   000B46  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 17018   000B48  0E00               	movlw	0
 17019   000B4A  15E2               	andwf	(??_find_volume+3)& (0+255),w,b
 17020   000B4C  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 17021   000B4E  0101               	movlb	1	; () banked
 17022   000B50  EE20 F017          	lfsr	2,23
 17023   000B54  5138               	movf	find_volume@fs& (0+255),w,b
 17024   000B56  26D9               	addwf	fsr2l,f,c
 17025   000B58  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17026   000B5A  22DA               	addwfc	fsr2h,f,c
 17027   000B5C  006F FF78  F060    	movff	postinc2,___lmul@multiplier
 17028   000B62  006F FF78  F061    	movff	postinc2,___lmul@multiplier+1
 17029   000B68  006F FF78  F062    	movff	postinc2,___lmul@multiplier+2
 17030   000B6E  006F FF78  F063    	movff	postinc2,___lmul@multiplier+3
 17031   000B74  0E03               	movlw	3
 17032   000B76  0100               	movlb	0	; () banked
 17033   000B78  6F64               	movwf	___lmul@multiplicand& (0+255),b
 17034   000B7A  0E00               	movlw	0
 17035   000B7C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17036   000B7E  0E00               	movlw	0
 17037   000B80  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17038   000B82  0E00               	movlw	0
 17039   000B84  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17040   000B86  EC01  F044         	call	___lmul	;wreg free
 17041   000B8A  0100               	movlb	0	; () banked
 17042   000B8C  90D8               	bcf	status,0,c
 17043   000B8E  3363               	rrcf	(?___lmul+3)& (0+255),f,b
 17044   000B90  3362               	rrcf	(?___lmul+2)& (0+255),f,b
 17045   000B92  3361               	rrcf	(?___lmul+1)& (0+255),f,b
 17046   000B94  3360               	rrcf	?___lmul& (0+255),f,b
 17047   000B96  51E3               	movf	(??_find_volume+4)& (0+255),w,b
 17048   000B98  2560               	addwf	?___lmul& (0+255),w,b
 17049   000B9A  0101               	movlb	1	; () banked
 17050   000B9C  6F16               	movwf	find_volume@szbfat& (0+255),b
 17051   000B9E  0100               	movlb	0	; () banked
 17052   000BA0  51E4               	movf	(??_find_volume+5)& (0+255),w,b
 17053   000BA2  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 17054   000BA4  0101               	movlb	1	; () banked
 17055   000BA6  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 17056   000BA8  0100               	movlb	0	; () banked
 17057   000BAA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 17058   000BAC  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 17059   000BAE  0101               	movlb	1	; () banked
 17060   000BB0  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 17061   000BB2  0100               	movlb	0	; () banked
 17062   000BB4  51E6               	movf	(??_find_volume+7)& (0+255),w,b
 17063   000BB6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 17064   000BB8  0101               	movlb	1	; () banked
 17065   000BBA  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 17066   000BBC  EF03  F006         	goto	l1256
 17067   000BC0                     l16023:
 17068                           
 17069                           ; BSR set to: 1
 17070   000BC0  EE20 F017          	lfsr	2,23
 17071   000BC4  5138               	movf	find_volume@fs& (0+255),w,b
 17072   000BC6  26D9               	addwf	fsr2l,f,c
 17073   000BC8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17074   000BCA  22DA               	addwfc	fsr2h,f,c
 17075   000BCC  006F FF78  F0DF    	movff	postinc2,??_find_volume
 17076   000BD2  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 17077   000BD8  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 17078   000BDE  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 17079   000BE4  90D8               	bcf	status,0,c
 17080   000BE6  0100               	movlb	0	; () banked
 17081   000BE8  35DF               	rlcf	??_find_volume& (0+255),w,b
 17082   000BEA  0101               	movlb	1	; () banked
 17083   000BEC  6F16               	movwf	find_volume@szbfat& (0+255),b
 17084   000BEE  0100               	movlb	0	; () banked
 17085   000BF0  35E0               	rlcf	(??_find_volume+1)& (0+255),w,b
 17086   000BF2  0101               	movlb	1	; () banked
 17087   000BF4  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 17088   000BF6  0100               	movlb	0	; () banked
 17089   000BF8  35E1               	rlcf	(??_find_volume+2)& (0+255),w,b
 17090   000BFA  0101               	movlb	1	; () banked
 17091   000BFC  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 17092   000BFE  0100               	movlb	0	; () banked
 17093   000C00  35E2               	rlcf	(??_find_volume+3)& (0+255),w,b
 17094   000C02  0101               	movlb	1	; () banked
 17095   000C04  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 17096   000C06                     l1256:
 17097                           
 17098                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 17099   000C06  0EFF               	movlw	255
 17100   000C08  0101               	movlb	1	; () banked
 17101   000C0A  2516               	addwf	find_volume@szbfat& (0+255),w,b
 17102   000C0C  0100               	movlb	0	; () banked
 17103   000C0E  6FDF               	movwf	??_find_volume& (0+255),b
 17104   000C10  0E01               	movlw	1
 17105   000C12  0101               	movlb	1	; () banked
 17106   000C14  2117               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 17107   000C16  0100               	movlb	0	; () banked
 17108   000C18  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 17109   000C1A  0E00               	movlw	0
 17110   000C1C  0101               	movlb	1	; () banked
 17111   000C1E  2118               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 17112   000C20  0100               	movlb	0	; () banked
 17113   000C22  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 17114   000C24  0E00               	movlw	0
 17115   000C26  0101               	movlb	1	; () banked
 17116   000C28  2119               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 17117   000C2A  0100               	movlb	0	; () banked
 17118   000C2C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 17119   000C2E  0E0A               	movlw	10
 17120   000C30  EF1F  F006         	goto	u19570
 17121   000C34                     u19575:
 17122   000C34  90D8               	bcf	status,0,c
 17123   000C36  33E2               	rrcf	(??_find_volume+3)& (0+255),f,b
 17124   000C38  33E1               	rrcf	(??_find_volume+2)& (0+255),f,b
 17125   000C3A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 17126   000C3C  33DF               	rrcf	??_find_volume& (0+255),f,b
 17127   000C3E                     u19570:
 17128   000C3E  2EE8               	decfsz	wreg,f,c
 17129   000C40  EF1A  F006         	goto	u19575
 17130   000C44  0101               	movlb	1	; () banked
 17131   000C46  EE20 F01B          	lfsr	2,27
 17132   000C4A  5138               	movf	find_volume@fs& (0+255),w,b
 17133   000C4C  26D9               	addwf	fsr2l,f,c
 17134   000C4E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17135   000C50  22DA               	addwfc	fsr2h,f,c
 17136   000C52  0100               	movlb	0	; () banked
 17137   000C54  51DF               	movf	??_find_volume& (0+255),w,b
 17138   000C56  5CDE               	subwf	postinc2,w,c
 17139   000C58  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 17140   000C5A  58DE               	subwfb	postinc2,w,c
 17141   000C5C  51E1               	movf	(??_find_volume+2)& (0+255),w,b
 17142   000C5E  58DE               	subwfb	postinc2,w,c
 17143   000C60  51E2               	movf	(??_find_volume+3)& (0+255),w,b
 17144   000C62  58DE               	subwfb	postinc2,w,c
 17145   000C64  B0D8               	btfsc	status,0,c
 17146   000C66  EF37  F006         	goto	u19581
 17147   000C6A  EF39  F006         	goto	u19580
 17148   000C6E                     u19581:
 17149   000C6E  EF3B  F006         	goto	l16029
 17150   000C72                     u19580:
 17151   000C72  EFEB  F001         	goto	l15897
 17152   000C76                     l16029:
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 17156   000C76  0101               	movlb	1	; () banked
 17157   000C78  EE20 F00F          	lfsr	2,15
 17158   000C7C  5138               	movf	find_volume@fs& (0+255),w,b
 17159   000C7E  26D9               	addwf	fsr2l,f,c
 17160   000C80  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17161   000C82  22DA               	addwfc	fsr2h,f,c
 17162   000C84  0EFF               	movlw	255
 17163   000C86  6EDE               	movwf	postinc2,c
 17164   000C88  0EFF               	movlw	255
 17165   000C8A  6EDE               	movwf	postinc2,c
 17166   000C8C  0EFF               	movlw	255
 17167   000C8E  6EDE               	movwf	postinc2,c
 17168   000C90  0EFF               	movlw	255
 17169   000C92  6EDD               	movwf	postdec2,c
 17170   000C94  52DD               	movf	postdec2,f,c
 17171   000C96  52DD               	movf	postdec2,f,c
 17172   000C98  EE10 F00B          	lfsr	1,11
 17173   000C9C  5138               	movf	find_volume@fs& (0+255),w,b
 17174   000C9E  26E1               	addwf	fsr1l,f,c
 17175   000CA0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17176   000CA2  22E2               	addwfc	fsr1h,f,c
 17177   000CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17178   000CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17179   000CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 17180   000CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 17181   000CBC                     
 17182                           ; BSR set to: 1
 17183                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 17184   000CBC  EE20 F004          	lfsr	2,4
 17185   000CC0  5138               	movf	find_volume@fs& (0+255),w,b
 17186   000CC2  26D9               	addwf	fsr2l,f,c
 17187   000CC4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17188   000CC6  22DA               	addwfc	fsr2h,f,c
 17189   000CC8  0E80               	movlw	128
 17190   000CCA  6EDF               	movwf	indf2,c
 17191   000CCC                     
 17192                           ; BSR set to: 1
 17193                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 17194   000CCC  0E03               	movlw	3
 17195   000CCE  1937               	xorwf	find_volume@fmt& (0+255),w,b
 17196   000CD0  A4D8               	btfss	status,2,c
 17197   000CD2  EF6D  F006         	goto	u19591
 17198   000CD6  EF6F  F006         	goto	u19590
 17199   000CDA                     u19591:
 17200   000CDA  EF44  F007         	goto	l16049
 17201   000CDE                     u19590:
 17202   000CDE                     
 17203                           ; BSR set to: 1
 17204   000CDE  0E63               	movlw	99
 17205   000CE0  2538               	addwf	find_volume@fs& (0+255),w,b
 17206   000CE2  0100               	movlb	0	; () banked
 17207   000CE4  6F60               	movwf	ld_word@ptr& (0+255),b
 17208   000CE6  0E00               	movlw	0
 17209   000CE8  0101               	movlb	1	; () banked
 17210   000CEA  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17211   000CEC  0100               	movlb	0	; () banked
 17212   000CEE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 17213   000CF0  ECF7  F046         	call	_ld_word	;wreg free
 17214   000CF4  0100               	movlb	0	; () banked
 17215   000CF6  0560               	decf	?_ld_word& (0+255),w,b
 17216   000CF8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 17217   000CFA  A4D8               	btfss	status,2,c
 17218   000CFC  EF82  F006         	goto	u19601
 17219   000D00  EF84  F006         	goto	u19600
 17220   000D04                     u19601:
 17221   000D04  EF44  F007         	goto	l16049
 17222   000D08                     u19600:
 17223   000D08                     
 17224                           ; BSR set to: 0
 17225   000D08  C138  F0C8         	movff	find_volume@fs,move_window@fs
 17226   000D0C  C139  F0C9         	movff	find_volume@fs+1,move_window@fs+1
 17227   000D10  0E01               	movlw	1
 17228   000D12  0101               	movlb	1	; () banked
 17229   000D14  2531               	addwf	find_volume@bsect& (0+255),w,b
 17230   000D16  0100               	movlb	0	; () banked
 17231   000D18  6FCA               	movwf	move_window@sector& (0+255),b
 17232   000D1A  0E00               	movlw	0
 17233   000D1C  0101               	movlb	1	; () banked
 17234   000D1E  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 17235   000D20  0100               	movlb	0	; () banked
 17236   000D22  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 17237   000D24  0E00               	movlw	0
 17238   000D26  0101               	movlb	1	; () banked
 17239   000D28  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 17240   000D2A  0100               	movlb	0	; () banked
 17241   000D2C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 17242   000D2E  0E00               	movlw	0
 17243   000D30  0101               	movlb	1	; () banked
 17244   000D32  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 17245   000D34  0100               	movlb	0	; () banked
 17246   000D36  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 17247   000D38  EC9A  F03E         	call	_move_window	;wreg free
 17248   000D3C  0900               	iorlw	0
 17249   000D3E  A4D8               	btfss	status,2,c
 17250   000D40  EFA4  F006         	goto	u19611
 17251   000D44  EFA6  F006         	goto	u19610
 17252   000D48                     u19611:
 17253   000D48  EF44  F007         	goto	l16049
 17254   000D4C                     u19610:
 17255   000D4C                     
 17256                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 17257   000D4C  0101               	movlb	1	; () banked
 17258   000D4E  EE20 F004          	lfsr	2,4
 17259   000D52  5138               	movf	find_volume@fs& (0+255),w,b
 17260   000D54  26D9               	addwf	fsr2l,f,c
 17261   000D56  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17262   000D58  22DA               	addwfc	fsr2h,f,c
 17263   000D5A  6ADF               	clrf	indf2,c
 17264   000D5C                     
 17265                           ; BSR set to: 1
 17266                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 17267   000D5C  0E31               	movlw	49
 17268   000D5E  2538               	addwf	find_volume@fs& (0+255),w,b
 17269   000D60  0100               	movlb	0	; () banked
 17270   000D62  6F60               	movwf	ld_word@ptr& (0+255),b
 17271   000D64  0E02               	movlw	2
 17272   000D66  0101               	movlb	1	; () banked
 17273   000D68  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17274   000D6A  0100               	movlb	0	; () banked
 17275   000D6C  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 17276   000D6E  ECF7  F046         	call	_ld_word	;wreg free
 17277   000D72  0E55               	movlw	85
 17278   000D74  0100               	movlb	0	; () banked
 17279   000D76  1960               	xorwf	?_ld_word& (0+255),w,b
 17280   000D78  E107               	bnz	u19621
 17281   000D7A  0EAA               	movlw	170
 17282   000D7C  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 17283   000D7E  A4D8               	btfss	status,2,c
 17284   000D80  EFC4  F006         	goto	u19621
 17285   000D84  EFC6  F006         	goto	u19620
 17286   000D88                     u19621:
 17287   000D88  EF44  F007         	goto	l16049
 17288   000D8C                     u19620:
 17289   000D8C                     
 17290                           ; BSR set to: 0
 17291   000D8C  0E33               	movlw	51
 17292   000D8E  0101               	movlb	1	; () banked
 17293   000D90  2538               	addwf	find_volume@fs& (0+255),w,b
 17294   000D92  0100               	movlb	0	; () banked
 17295   000D94  6F60               	movwf	ld_dword@ptr& (0+255),b
 17296   000D96  0E00               	movlw	0
 17297   000D98  0101               	movlb	1	; () banked
 17298   000D9A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17299   000D9C  0100               	movlb	0	; () banked
 17300   000D9E  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 17301   000DA0  EC32  F040         	call	_ld_dword	;wreg free
 17302   000DA4  0E52               	movlw	82
 17303   000DA6  0100               	movlb	0	; () banked
 17304   000DA8  1960               	xorwf	?_ld_dword& (0+255),w,b
 17305   000DAA  E10D               	bnz	u19631
 17306   000DAC  0E52               	movlw	82
 17307   000DAE  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 17308   000DB0  E10A               	bnz	u19631
 17309   000DB2  0E61               	movlw	97
 17310   000DB4  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 17311   000DB6  E107               	bnz	u19631
 17312   000DB8  0E41               	movlw	65
 17313   000DBA  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 17314   000DBC  A4D8               	btfss	status,2,c
 17315   000DBE  EFE3  F006         	goto	u19631
 17316   000DC2  EFE5  F006         	goto	u19630
 17317   000DC6                     u19631:
 17318   000DC6  EF44  F007         	goto	l16049
 17319   000DCA                     u19630:
 17320   000DCA                     
 17321                           ; BSR set to: 0
 17322   000DCA  0E17               	movlw	23
 17323   000DCC  0101               	movlb	1	; () banked
 17324   000DCE  2538               	addwf	find_volume@fs& (0+255),w,b
 17325   000DD0  0100               	movlb	0	; () banked
 17326   000DD2  6F60               	movwf	ld_dword@ptr& (0+255),b
 17327   000DD4  0E02               	movlw	2
 17328   000DD6  0101               	movlb	1	; () banked
 17329   000DD8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17330   000DDA  0100               	movlb	0	; () banked
 17331   000DDC  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 17332   000DDE  EC32  F040         	call	_ld_dword	;wreg free
 17333   000DE2  0E72               	movlw	114
 17334   000DE4  0100               	movlb	0	; () banked
 17335   000DE6  1960               	xorwf	?_ld_dword& (0+255),w,b
 17336   000DE8  E10D               	bnz	u19641
 17337   000DEA  0E72               	movlw	114
 17338   000DEC  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 17339   000DEE  E10A               	bnz	u19641
 17340   000DF0  0E41               	movlw	65
 17341   000DF2  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 17342   000DF4  E107               	bnz	u19641
 17343   000DF6  0E61               	movlw	97
 17344   000DF8  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 17345   000DFA  A4D8               	btfss	status,2,c
 17346   000DFC  EF02  F007         	goto	u19641
 17347   000E00  EF04  F007         	goto	u19640
 17348   000E04                     u19641:
 17349   000E04  EF44  F007         	goto	l16049
 17350   000E08                     u19640:
 17351   000E08                     
 17352                           ; BSR set to: 0
 17353                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 17354   000E08  0E1B               	movlw	27
 17355   000E0A  0101               	movlb	1	; () banked
 17356   000E0C  2538               	addwf	find_volume@fs& (0+255),w,b
 17357   000E0E  0100               	movlb	0	; () banked
 17358   000E10  6F60               	movwf	ld_dword@ptr& (0+255),b
 17359   000E12  0E02               	movlw	2
 17360   000E14  0101               	movlb	1	; () banked
 17361   000E16  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17362   000E18  0100               	movlb	0	; () banked
 17363   000E1A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 17364   000E1C  EC32  F040         	call	_ld_dword	;wreg free
 17365   000E20  0101               	movlb	1	; () banked
 17366   000E22  EE20 F00F          	lfsr	2,15
 17367   000E26  5138               	movf	find_volume@fs& (0+255),w,b
 17368   000E28  26D9               	addwf	fsr2l,f,c
 17369   000E2A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17370   000E2C  22DA               	addwfc	fsr2h,f,c
 17371   000E2E  0100               	movlb	0	; () banked
 17372   000E30  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 17373   000E36  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 17374   000E3C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 17375   000E42  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 17376                           
 17377                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 17378   000E48  0E1F               	movlw	31
 17379   000E4A  0101               	movlb	1	; () banked
 17380   000E4C  2538               	addwf	find_volume@fs& (0+255),w,b
 17381   000E4E  0100               	movlb	0	; () banked
 17382   000E50  6F60               	movwf	ld_dword@ptr& (0+255),b
 17383   000E52  0E02               	movlw	2
 17384   000E54  0101               	movlb	1	; () banked
 17385   000E56  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 17386   000E58  0100               	movlb	0	; () banked
 17387   000E5A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 17388   000E5C  EC32  F040         	call	_ld_dword	;wreg free
 17389   000E60  0101               	movlb	1	; () banked
 17390   000E62  EE20 F00B          	lfsr	2,11
 17391   000E66  5138               	movf	find_volume@fs& (0+255),w,b
 17392   000E68  26D9               	addwf	fsr2l,f,c
 17393   000E6A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17394   000E6C  22DA               	addwfc	fsr2h,f,c
 17395   000E6E  0100               	movlb	0	; () banked
 17396   000E70  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 17397   000E76  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 17398   000E7C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 17399   000E82  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 17400   000E88                     l16049:
 17401                           
 17402                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 17403   000E88  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 17404   000E8E  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 17405   000E94  0060  F4DF  FFDF   	movff	find_volume@fmt,indf2
 17406   000E9A                     
 17407                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 17408   000E9A  0101               	movlb	1	; () banked
 17409   000E9C  4BE0               	infsnz	_Fsid& (0+255),f,b
 17410   000E9E  2BE1               	incf	(_Fsid+1)& (0+255),f,b
 17411   000EA0  EE20 F005          	lfsr	2,5
 17412   000EA4  5138               	movf	find_volume@fs& (0+255),w,b
 17413   000EA6  26D9               	addwf	fsr2l,f,c
 17414   000EA8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17415   000EAA  22DA               	addwfc	fsr2h,f,c
 17416   000EAC  0060  F783  FFDE   	movff	_Fsid,postinc2
 17417   000EB2  0060  F787  FFDD   	movff	_Fsid+1,postdec2
 17418   000EB8                     
 17419                           ; BSR set to: 1
 17420                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 17421   000EB8  EE20 F013          	lfsr	2,19
 17422   000EBC  5138               	movf	find_volume@fs& (0+255),w,b
 17423   000EBE  26D9               	addwf	fsr2l,f,c
 17424   000EC0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 17425   000EC2  22DA               	addwfc	fsr2h,f,c
 17426   000EC4  6ADE               	clrf	postinc2,c
 17427   000EC6  6ADE               	clrf	postinc2,c
 17428   000EC8  6ADE               	clrf	postinc2,c
 17429   000ECA  6ADD               	clrf	postdec2,c
 17430   000ECC  EF8A  F000         	goto	l15815
 17431   000ED0                     l1211:
 17432   000ED0  0012               	return		;funcret
 17433   000ED2                     __end_of_find_volume:
 17434                           	callstack 0
 17435                           
 17436 ;; *************** function _ld_dword *****************
 17437 ;; Defined at:
 17438 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 17439 ;; Parameters:    Size  Location     Type
 17440 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 17441 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 17442 ;; Auto vars:     Size  Location     Type
 17443 ;;  rv              4    9[BANK0 ] unsigned long 
 17444 ;; Return value:  Size  Location     Type
 17445 ;;                  4    0[BANK0 ] unsigned long 
 17446 ;; Registers used:
 17447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17448 ;; Tracked objects:
 17449 ;;		On entry : 0/0
 17450 ;;		On exit  : 0/0
 17451 ;;		Unchanged: 0/0
 17452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17455 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17456 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17457 ;;Total ram usage:       13 bytes
 17458 ;; Hardware stack levels used: 1
 17459 ;; Hardware stack levels required when called: 5
 17460 ;; This function calls:
 17461 ;;		Nothing
 17462 ;; This function is called by:
 17463 ;;		_get_fat
 17464 ;;		_put_fat
 17465 ;;		_find_volume
 17466 ;;		_f_open
 17467 ;; This function uses a non-reentrant model
 17468 ;;
 17469                           
 17470                           	psect	text60
 17471   008064                     __ptext60:
 17472                           	callstack 0
 17473   008064                     _ld_dword:
 17474                           	callstack 21
 17475   008064                     
 17476                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 17477   008064  0100               	movlb	0	; () banked
 17478   008066  EE20 F003          	lfsr	2,3
 17479   00806A  5160               	movf	ld_dword@ptr& (0+255),w,b
 17480   00806C  26D9               	addwf	fsr2l,f,c
 17481   00806E  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 17482   008070  22DA               	addwfc	fsr2h,f,c
 17483   008072  50DF               	movf	indf2,w,c
 17484   008074  6F64               	movwf	??_ld_dword& (0+255),b
 17485   008076  5164               	movf	??_ld_dword& (0+255),w,b
 17486   008078  6F69               	movwf	ld_dword@rv& (0+255),b
 17487   00807A  6B6A               	clrf	(ld_dword@rv+1)& (0+255),b
 17488   00807C  6B6B               	clrf	(ld_dword@rv+2)& (0+255),b
 17489   00807E  6B6C               	clrf	(ld_dword@rv+3)& (0+255),b
 17490                           
 17491                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 17492   008080  EE20 F002          	lfsr	2,2
 17493   008084  5160               	movf	ld_dword@ptr& (0+255),w,b
 17494   008086  26D9               	addwf	fsr2l,f,c
 17495   008088  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 17496   00808A  22DA               	addwfc	fsr2h,f,c
 17497   00808C  50DF               	movf	indf2,w,c
 17498   00808E  6F64               	movwf	??_ld_dword& (0+255),b
 17499   008090  5164               	movf	??_ld_dword& (0+255),w,b
 17500   008092  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 17501   008096  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 17502   00809A  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 17503   00809E  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 17504   0080A0  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 17505   0080A2  6F69               	movwf	ld_dword@rv& (0+255),b
 17506   0080A4  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 17507   0080A6  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 17508   0080A8  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 17509   0080AA  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 17510   0080AC  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 17511   0080AE  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 17512                           
 17513                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 17514   0080B0  EE20 F001          	lfsr	2,1
 17515   0080B4  5160               	movf	ld_dword@ptr& (0+255),w,b
 17516   0080B6  26D9               	addwf	fsr2l,f,c
 17517   0080B8  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 17518   0080BA  22DA               	addwfc	fsr2h,f,c
 17519   0080BC  50DF               	movf	indf2,w,c
 17520   0080BE  6F64               	movwf	??_ld_dword& (0+255),b
 17521   0080C0  5164               	movf	??_ld_dword& (0+255),w,b
 17522   0080C2  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 17523   0080C6  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 17524   0080CA  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 17525   0080CE  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 17526   0080D0  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 17527   0080D2  6F69               	movwf	ld_dword@rv& (0+255),b
 17528   0080D4  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 17529   0080D6  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 17530   0080D8  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 17531   0080DA  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 17532   0080DC  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 17533   0080DE  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 17534                           
 17535                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 17536   0080E0  0060  F183  FFD9   	movff	ld_dword@ptr,fsr2l
 17537   0080E6  0060  F187  FFDA   	movff	ld_dword@ptr+1,fsr2h
 17538   0080EC  50DF               	movf	indf2,w,c
 17539   0080EE  6F64               	movwf	??_ld_dword& (0+255),b
 17540   0080F0  5164               	movf	??_ld_dword& (0+255),w,b
 17541   0080F2  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 17542   0080F6  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 17543   0080FA  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 17544   0080FE  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 17545   008100  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 17546   008102  6F69               	movwf	ld_dword@rv& (0+255),b
 17547   008104  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 17548   008106  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 17549   008108  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 17550   00810A  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 17551   00810C  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 17552   00810E  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 17553   008110                     
 17554                           ; BSR set to: 0
 17555                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 17556   008110  C069  F060         	movff	ld_dword@rv,?_ld_dword
 17557   008114  C06A  F061         	movff	ld_dword@rv+1,?_ld_dword+1
 17558   008118  C06B  F062         	movff	ld_dword@rv+2,?_ld_dword+2
 17559   00811C  C06C  F063         	movff	ld_dword@rv+3,?_ld_dword+3
 17560   008120                     
 17561                           ; BSR set to: 0
 17562   008120  0012               	return		;funcret
 17563   008122                     __end_of_ld_dword:
 17564                           	callstack 0
 17565                           
 17566 ;; *************** function _get_ldnumber *****************
 17567 ;; Defined at:
 17568 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  path            2    0[BANK0 ] PTR PTR const unsigned c
 17571 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 17572 ;;		 -> f_mount@rp(2), 
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  tp              2   11[BANK0 ] PTR const unsigned char 
 17575 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 17576 ;;  vol             2    9[BANK0 ] int 
 17577 ;;  tt              2    7[BANK0 ] PTR const unsigned char 
 17578 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 17579 ;;  i               2    4[BANK0 ] int 
 17580 ;;  tc              1    6[BANK0 ] unsigned char 
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  2    0[BANK0 ] int 
 17583 ;; Registers used:
 17584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17591 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17593 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17594 ;;Total ram usage:       13 bytes
 17595 ;; Hardware stack levels used: 1
 17596 ;; Hardware stack levels required when called: 5
 17597 ;; This function calls:
 17598 ;;		Nothing
 17599 ;; This function is called by:
 17600 ;;		_find_volume
 17601 ;;		_f_mount
 17602 ;;		_f_chdrive
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           	psect	text61
 17607   006A14                     __ptext61:
 17608                           	callstack 0
 17609   006A14                     _get_ldnumber:
 17610                           	callstack 22
 17611   006A14                     
 17612                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 17613   006A14  0100               	movlb	0	; () banked
 17614   006A16  6969               	setf	get_ldnumber@vol& (0+255),b
 17615   006A18  696A               	setf	(get_ldnumber@vol+1)& (0+255),b
 17616   006A1A                     
 17617                           ; BSR set to: 0
 17618                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 17619   006A1A  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 17620   006A20  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 17621   006A26  006F FF78  F06B    	movff	postinc2,get_ldnumber@tp
 17622   006A2C  006F FF74  F06C    	movff	postdec2,get_ldnumber@tp+1
 17623   006A32  C06B  F067         	movff	get_ldnumber@tp,get_ldnumber@tt
 17624   006A36  C06C  F068         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 17625   006A3A                     
 17626                           ; BSR set to: 0
 17627                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 17628   006A3A  516B               	movf	get_ldnumber@tp& (0+255),w,b
 17629   006A3C  116C               	iorwf	(get_ldnumber@tp+1)& (0+255),w,b
 17630   006A3E  A4D8               	btfss	status,2,c
 17631   006A40  EF24  F035         	goto	u18581
 17632   006A44  EF26  F035         	goto	u18580
 17633   006A48                     u18581:
 17634   006A48  EF2A  F035         	goto	l15467
 17635   006A4C                     u18580:
 17636   006A4C                     
 17637                           ; BSR set to: 0
 17638   006A4C  6960               	setf	?_get_ldnumber& (0+255),b
 17639   006A4E  6961               	setf	(?_get_ldnumber+1)& (0+255),b
 17640   006A50  EFC2  F035         	goto	l1186
 17641   006A54                     l15467:
 17642                           
 17643                           ; BSR set to: 0
 17644   006A54  0060  F19F  FFF6   	movff	get_ldnumber@tt,tblptrl
 17645   006A5A  0060  F1A3  FFF7   	movff	get_ldnumber@tt+1,tblptrh
 17646   006A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17647   006A60  6AF8               	clrf	tblptru,c
 17648   006A62                     	endif
 17649   006A62                     	if	0	;tblptru may be non-zero
 17650   006A62                     	endif
 17651   006A62  0008               	tblrd		*
 17652   006A64  006F FFD4  F066    	movff	tablat,get_ldnumber@tc
 17653   006A6A                     
 17654                           ; BSR set to: 0
 17655   006A6A  4B67               	infsnz	get_ldnumber@tt& (0+255),f,b
 17656   006A6C  2B68               	incf	(get_ldnumber@tt+1)& (0+255),f,b
 17657   006A6E                     
 17658                           ; BSR set to: 0
 17659   006A6E  0E20               	movlw	32
 17660   006A70  6566               	cpfsgt	get_ldnumber@tc& (0+255),b
 17661   006A72  EF3D  F035         	goto	u18591
 17662   006A76  EF3F  F035         	goto	u18590
 17663   006A7A                     u18591:
 17664   006A7A  EF48  F035         	goto	l15479
 17665   006A7E                     u18590:
 17666   006A7E                     
 17667                           ; BSR set to: 0
 17668   006A7E  0E3A               	movlw	58
 17669   006A80  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 17670   006A82  A4D8               	btfss	status,2,c
 17671   006A84  EF46  F035         	goto	u18601
 17672   006A88  EF48  F035         	goto	u18600
 17673   006A8C                     u18601:
 17674   006A8C  EF2A  F035         	goto	l15467
 17675   006A90                     u18600:
 17676   006A90                     l15479:
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 17680   006A90  0E3A               	movlw	58
 17681   006A92  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 17682   006A94  A4D8               	btfss	status,2,c
 17683   006A96  EF4F  F035         	goto	u18611
 17684   006A9A  EF51  F035         	goto	u18610
 17685   006A9E                     u18611:
 17686   006A9E  EFBB  F035         	goto	l1195
 17687   006AA2                     u18610:
 17688   006AA2                     
 17689                           ; BSR set to: 0
 17690                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 17691   006AA2  0E00               	movlw	0
 17692   006AA4  6F65               	movwf	(get_ldnumber@i+1)& (0+255),b
 17693   006AA6  0E01               	movlw	1
 17694   006AA8  6F64               	movwf	get_ldnumber@i& (0+255),b
 17695   006AAA                     
 17696                           ; BSR set to: 0
 17697                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 17698   006AAA  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 17699   006AB0  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17700   006AB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17701   006AB6  6AF8               	clrf	tblptru,c
 17702   006AB8                     	endif
 17703   006AB8                     	if	0	;tblptru may be non-zero
 17704   006AB8                     	endif
 17705   006AB8  0E2F               	movlw	47
 17706   006ABA  0008               	tblrd		*
 17707   006ABC  64F5               	cpfsgt	tablat,c
 17708   006ABE  EF63  F035         	goto	u18621
 17709   006AC2  EF65  F035         	goto	u18620
 17710   006AC6                     u18621:
 17711   006AC6  EF98  F035         	goto	l15491
 17712   006ACA                     u18620:
 17713   006ACA                     
 17714                           ; BSR set to: 0
 17715   006ACA  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 17716   006AD0  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17717   006AD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17718   006AD6  6AF8               	clrf	tblptru,c
 17719   006AD8                     	endif
 17720   006AD8                     	if	0	;tblptru may be non-zero
 17721   006AD8                     	endif
 17722   006AD8  0E3A               	movlw	58
 17723   006ADA  0008               	tblrd		*
 17724   006ADC  60F5               	cpfslt	tablat,c
 17725   006ADE  EF73  F035         	goto	u18631
 17726   006AE2  EF75  F035         	goto	u18630
 17727   006AE6                     u18631:
 17728   006AE6  EF98  F035         	goto	l15491
 17729   006AEA                     u18630:
 17730   006AEA                     
 17731                           ; BSR set to: 0
 17732   006AEA  0E02               	movlw	2
 17733   006AEC  256B               	addwf	get_ldnumber@tp& (0+255),w,b
 17734   006AEE  6F62               	movwf	??_get_ldnumber& (0+255),b
 17735   006AF0  0E00               	movlw	0
 17736   006AF2  216C               	addwfc	(get_ldnumber@tp+1)& (0+255),w,b
 17737   006AF4  6F63               	movwf	(??_get_ldnumber+1)& (0+255),b
 17738   006AF6  5167               	movf	get_ldnumber@tt& (0+255),w,b
 17739   006AF8  1962               	xorwf	??_get_ldnumber& (0+255),w,b
 17740   006AFA  E107               	bnz	u18641
 17741   006AFC  5168               	movf	(get_ldnumber@tt+1)& (0+255),w,b
 17742   006AFE  1963               	xorwf	(??_get_ldnumber+1)& (0+255),w,b
 17743   006B00  A4D8               	btfss	status,2,c
 17744   006B02  EF85  F035         	goto	u18641
 17745   006B06  EF87  F035         	goto	u18640
 17746   006B0A                     u18641:
 17747   006B0A  EF98  F035         	goto	l15491
 17748   006B0E                     u18640:
 17749   006B0E                     
 17750                           ; BSR set to: 0
 17751                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 17752   006B0E  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 17753   006B14  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17754   006B1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17755   006B1A  6AF8               	clrf	tblptru,c
 17756   006B1C                     	endif
 17757   006B1C                     	if	0	;tblptru may be non-zero
 17758   006B1C                     	endif
 17759   006B1C  0008               	tblrd		*
 17760   006B1E  006F FFD4  F062    	movff	tablat,??_get_ldnumber
 17761   006B24  0ED0               	movlw	208
 17762   006B26  2562               	addwf	??_get_ldnumber& (0+255),w,b
 17763   006B28  6F64               	movwf	get_ldnumber@i& (0+255),b
 17764   006B2A  6B65               	clrf	(get_ldnumber@i+1)& (0+255),b
 17765   006B2C  0EFF               	movlw	255
 17766   006B2E  2365               	addwfc	(get_ldnumber@i+1)& (0+255),f,b
 17767   006B30                     l15491:
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 17771   006B30  BF65               	btfsc	(get_ldnumber@i+1)& (0+255),7,b
 17772   006B32  EFA5  F035         	goto	u18650
 17773   006B36  5165               	movf	(get_ldnumber@i+1)& (0+255),w,b
 17774   006B38  E106               	bnz	u18651
 17775   006B3A  0564               	decf	get_ldnumber@i& (0+255),w,b
 17776   006B3C  B0D8               	btfsc	status,0,c
 17777   006B3E  EFA3  F035         	goto	u18651
 17778   006B42  EFA5  F035         	goto	u18650
 17779   006B46                     u18651:
 17780   006B46  EFB5  F035         	goto	l15497
 17781   006B4A                     u18650:
 17782   006B4A                     
 17783                           ; BSR set to: 0
 17784                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 17785   006B4A  C064  F069         	movff	get_ldnumber@i,get_ldnumber@vol
 17786   006B4E  C065  F06A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 17787   006B52                     
 17788                           ; BSR set to: 0
 17789                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 17790   006B52  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 17791   006B58  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 17792   006B5E  0060  F19F  FFDE   	movff	get_ldnumber@tt,postinc2
 17793   006B64  0060  F1A3  FFDD   	movff	get_ldnumber@tt+1,postdec2
 17794   006B6A                     l15497:
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 17798   006B6A  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 17799   006B6E  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 17800   006B72  EFC2  F035         	goto	l1186
 17801   006B76                     l1195:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 17805   006B76  C04D  F069         	movff	_CurrVol,get_ldnumber@vol
 17806   006B7A  6B6A               	clrf	(get_ldnumber@vol+1)& (0+255),b
 17807                           
 17808                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 17809   006B7C  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 17810   006B80  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 17811   006B84                     l1186:
 17812                           
 17813                           ; BSR set to: 0
 17814   006B84  0012               	return		;funcret
 17815   006B86                     __end_of_get_ldnumber:
 17816                           	callstack 0
 17817                           
 17818 ;; *************** function _disk_status *****************
 17819 ;; Defined at:
 17820 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;  pdrv            1    wreg     unsigned char 
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;  pdrv            1    0[BANK0 ] unsigned char 
 17825 ;;  stat            1    1[BANK0 ] unsigned char 
 17826 ;; Return value:  Size  Location     Type
 17827 ;;                  1    wreg      unsigned char 
 17828 ;; Registers used:
 17829 ;;		wreg, status,2, status,0, cstack
 17830 ;; Tracked objects:
 17831 ;;		On entry : 0/0
 17832 ;;		On exit  : 0/0
 17833 ;;		Unchanged: 0/0
 17834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17839 ;;Total ram usage:        2 bytes
 17840 ;; Hardware stack levels used: 1
 17841 ;; Hardware stack levels required when called: 6
 17842 ;; This function calls:
 17843 ;;		_SD_SPI_IsMediaInitialized
 17844 ;;		_SD_SPI_IsMediaPresent
 17845 ;;		_SD_SPI_IsWriteProtected
 17846 ;; This function is called by:
 17847 ;;		_find_volume
 17848 ;;		_validate
 17849 ;; This function uses a non-reentrant model
 17850 ;;
 17851                           
 17852                           	psect	text62
 17853   0086B4                     __ptext62:
 17854                           	callstack 0
 17855   0086B4                     _disk_status:
 17856                           	callstack 21
 17857                           
 17858                           ; BSR set to: 0
 17859                           ;incstack = 0
 17860                           ;disk_status@pdrv stored from wreg
 17861   0086B4  0100               	movlb	0	; () banked
 17862   0086B6  6F60               	movwf	disk_status@pdrv& (0+255),b
 17863   0086B8                     
 17864                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 17865   0086B8  0E01               	movlw	1
 17866   0086BA  0100               	movlb	0	; () banked
 17867   0086BC  6F61               	movwf	disk_status@stat& (0+255),b
 17868                           
 17869                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 17870   0086BE  EF8A  F043         	goto	l14661
 17871   0086C2                     l14647:
 17872                           
 17873                           ; BSR set to: 0
 17874                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 17875   0086C2  ECE3  F048         	call	_SD_SPI_IsMediaPresent	;wreg free
 17876   0086C6  0900               	iorlw	0
 17877   0086C8  A4D8               	btfss	status,2,c
 17878   0086CA  EF69  F043         	goto	u17101
 17879   0086CE  EF6B  F043         	goto	u17100
 17880   0086D2                     u17101:
 17881   0086D2  EF70  F043         	goto	l14651
 17882   0086D6                     u17100:
 17883   0086D6                     
 17884                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 17885   0086D6  0E02               	movlw	2
 17886   0086D8  0100               	movlb	0	; () banked
 17887   0086DA  6F61               	movwf	disk_status@stat& (0+255),b
 17888                           
 17889                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 17890   0086DC  EF7C  F043         	goto	l14655
 17891   0086E0                     l14651:
 17892   0086E0  ECAD  F048         	call	_SD_SPI_IsMediaInitialized	;wreg free
 17893   0086E4  06E8               	decf	wreg,f,c
 17894   0086E6  A4D8               	btfss	status,2,c
 17895   0086E8  EF78  F043         	goto	u17111
 17896   0086EC  EF7A  F043         	goto	u17110
 17897   0086F0                     u17111:
 17898   0086F0  EF7C  F043         	goto	l14655
 17899   0086F4                     u17110:
 17900   0086F4                     
 17901                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 17902   0086F4  0100               	movlb	0	; () banked
 17903   0086F6  9161               	bcf	disk_status@stat& (0+255),0,b
 17904   0086F8                     l14655:
 17905                           
 17906                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 17907   0086F8  ECE1  F048         	call	_SD_SPI_IsWriteProtected	;wreg free
 17908   0086FC  06E8               	decf	wreg,f,c
 17909   0086FE  A4D8               	btfss	status,2,c
 17910   008700  EF84  F043         	goto	u17121
 17911   008704  EF86  F043         	goto	u17120
 17912   008708                     u17121:
 17913   008708  EF91  F043         	goto	l14663
 17914   00870C                     u17120:
 17915   00870C                     
 17916                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 17917   00870C  0100               	movlb	0	; () banked
 17918   00870E  8561               	bsf	disk_status@stat& (0+255),2,b
 17919   008710  EF91  F043         	goto	l14663
 17920   008714                     l14661:
 17921                           
 17922                           ; BSR set to: 0
 17923   008714  5160               	movf	disk_status@pdrv& (0+255),w,b
 17924                           
 17925                           ; Switch size 1, requested type "simple"
 17926                           ; Number of cases is 1, Range of values is 0 to 0
 17927                           ; switch strategies available:
 17928                           ; Name         Instructions Cycles
 17929                           ; simple_byte            4     3 (average)
 17930                           ;	Chosen strategy is simple_byte
 17931   008716  0A00               	xorlw	0	; case 0
 17932   008718  B4D8               	btfsc	status,2,c
 17933   00871A  EF61  F043         	goto	l14647
 17934   00871E  EF91  F043         	goto	l14663
 17935   008722                     l14663:
 17936                           
 17937                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 17938   008722  0100               	movlb	0	; () banked
 17939   008724  5161               	movf	disk_status@stat& (0+255),w,b
 17940   008726                     
 17941                           ; BSR set to: 0
 17942   008726  0012               	return		;funcret
 17943   008728                     __end_of_disk_status:
 17944                           	callstack 0
 17945                           
 17946 ;; *************** function _SD_SPI_IsWriteProtected *****************
 17947 ;; Defined at:
 17948 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17949 ;; Parameters:    Size  Location     Type
 17950 ;;		None
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;		None
 17953 ;; Return value:  Size  Location     Type
 17954 ;;                  1    wreg      _Bool 
 17955 ;; Registers used:
 17956 ;;		wreg
 17957 ;; Tracked objects:
 17958 ;;		On entry : 0/0
 17959 ;;		On exit  : 0/0
 17960 ;;		Unchanged: 0/0
 17961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17966 ;;Total ram usage:        0 bytes
 17967 ;; Hardware stack levels used: 1
 17968 ;; Hardware stack levels required when called: 5
 17969 ;; This function calls:
 17970 ;;		Nothing
 17971 ;; This function is called by:
 17972 ;;		_disk_status
 17973 ;; This function uses a non-reentrant model
 17974 ;;
 17975                           
 17976                           	psect	text63
 17977   0091C2                     __ptext63:
 17978                           	callstack 0
 17979   0091C2                     _SD_SPI_IsWriteProtected:
 17980                           	callstack 21
 17981   0091C2                     
 17982                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 17983   0091C2  0E00               	movlw	0
 17984   0091C4  0012               	return		;funcret
 17985   0091C6                     __end_of_SD_SPI_IsWriteProtected:
 17986                           	callstack 0
 17987                           
 17988 ;; *************** function _SD_SPI_IsMediaPresent *****************
 17989 ;; Defined at:
 17990 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17991 ;; Parameters:    Size  Location     Type
 17992 ;;		None
 17993 ;; Auto vars:     Size  Location     Type
 17994 ;;		None
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      _Bool 
 17997 ;; Registers used:
 17998 ;;		wreg
 17999 ;; Tracked objects:
 18000 ;;		On entry : 0/0
 18001 ;;		On exit  : 0/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18008 ;;Total ram usage:        0 bytes
 18009 ;; Hardware stack levels used: 1
 18010 ;; Hardware stack levels required when called: 5
 18011 ;; This function calls:
 18012 ;;		Nothing
 18013 ;; This function is called by:
 18014 ;;		_disk_status
 18015 ;; This function uses a non-reentrant model
 18016 ;;
 18017                           
 18018                           	psect	text64
 18019   0091C6                     __ptext64:
 18020                           	callstack 0
 18021   0091C6                     _SD_SPI_IsMediaPresent:
 18022                           	callstack 21
 18023   0091C6                     
 18024                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 18025   0091C6  0E01               	movlw	1
 18026   0091C8  0012               	return		;funcret
 18027   0091CA                     __end_of_SD_SPI_IsMediaPresent:
 18028                           	callstack 0
 18029                           
 18030 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 18031 ;; Defined at:
 18032 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 18033 ;; Parameters:    Size  Location     Type
 18034 ;;		None
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;		None
 18037 ;; Return value:  Size  Location     Type
 18038 ;;                  1    wreg      _Bool 
 18039 ;; Registers used:
 18040 ;;		wreg, status,2
 18041 ;; Tracked objects:
 18042 ;;		On entry : 0/0
 18043 ;;		On exit  : 0/0
 18044 ;;		Unchanged: 0/0
 18045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;Total ram usage:        0 bytes
 18051 ;; Hardware stack levels used: 1
 18052 ;; Hardware stack levels required when called: 5
 18053 ;; This function calls:
 18054 ;;		Nothing
 18055 ;; This function is called by:
 18056 ;;		_disk_status
 18057 ;; This function uses a non-reentrant model
 18058 ;;
 18059                           
 18060                           	psect	text65
 18061   00915A                     __ptext65:
 18062                           	callstack 0
 18063   00915A                     _SD_SPI_IsMediaInitialized:
 18064                           	callstack 21
 18065   00915A                     
 18066                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 18067   00915A  5053               	movf	(_mediaInformation+3)^0,w,c
 18068   00915C  A4D8               	btfss	status,2,c
 18069   00915E  EFB3  F048         	goto	u16751
 18070   009162  EFB6  F048         	goto	u16750
 18071   009166                     u16751:
 18072   009166  0E01               	movlw	1
 18073   009168  EFB7  F048         	goto	u16760
 18074   00916C                     u16750:
 18075   00916C  0E00               	movlw	0
 18076   00916E                     u16760:
 18077   00916E  0012               	return		;funcret
 18078   009170                     __end_of_SD_SPI_IsMediaInitialized:
 18079                           	callstack 0
 18080                           
 18081 ;; *************** function _disk_initialize *****************
 18082 ;; Defined at:
 18083 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 18084 ;; Parameters:    Size  Location     Type
 18085 ;;  pdrv            1    wreg     unsigned char 
 18086 ;; Auto vars:     Size  Location     Type
 18087 ;;  pdrv            1   84[BANK0 ] unsigned char 
 18088 ;;  stat            1   85[BANK0 ] unsigned char 
 18089 ;; Return value:  Size  Location     Type
 18090 ;;                  1    wreg      unsigned char 
 18091 ;; Registers used:
 18092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 18093 ;; Tracked objects:
 18094 ;;		On entry : 0/0
 18095 ;;		On exit  : 0/0
 18096 ;;		Unchanged: 0/0
 18097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18102 ;;Total ram usage:        2 bytes
 18103 ;; Hardware stack levels used: 1
 18104 ;; Hardware stack levels required when called: 8
 18105 ;; This function calls:
 18106 ;;		_SD_SPI_MediaInitialize
 18107 ;; This function is called by:
 18108 ;;		_find_volume
 18109 ;; This function uses a non-reentrant model
 18110 ;;
 18111                           
 18112                           	psect	text66
 18113   008D20                     __ptext66:
 18114                           	callstack 0
 18115   008D20                     _disk_initialize:
 18116                           	callstack 19
 18117                           
 18118                           ;incstack = 0
 18119                           ;disk_initialize@pdrv stored from wreg
 18120   008D20  0100               	movlb	0	; () banked
 18121   008D22  6FB4               	movwf	disk_initialize@pdrv& (0+255),b
 18122   008D24                     
 18123                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 18124   008D24  0E01               	movlw	1
 18125   008D26  0100               	movlb	0	; () banked
 18126   008D28  6FB5               	movwf	disk_initialize@stat& (0+255),b
 18127                           
 18128                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 18129   008D2A  EFAB  F046         	goto	l15189
 18130   008D2E                     l15181:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 18134   008D2E  EC92  F00B         	call	_SD_SPI_MediaInitialize	;wreg free
 18135   008D32  06E8               	decf	wreg,f,c
 18136   008D34  A4D8               	btfss	status,2,c
 18137   008D36  EF9F  F046         	goto	u18091
 18138   008D3A  EFA1  F046         	goto	u18090
 18139   008D3E                     u18091:
 18140   008D3E  EFA6  F046         	goto	l15185
 18141   008D42                     u18090:
 18142   008D42                     
 18143                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 18144   008D42  0E00               	movlw	0
 18145   008D44  0100               	movlb	0	; () banked
 18146   008D46  6FB5               	movwf	disk_initialize@stat& (0+255),b
 18147                           
 18148                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 18149   008D48  EFB2  F046         	goto	l15191
 18150   008D4C                     l15185:
 18151                           
 18152                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 18153   008D4C  0E01               	movlw	1
 18154   008D4E  0100               	movlb	0	; () banked
 18155   008D50  6FB5               	movwf	disk_initialize@stat& (0+255),b
 18156   008D52  EFB2  F046         	goto	l15191
 18157   008D56                     l15189:
 18158                           
 18159                           ; BSR set to: 0
 18160   008D56  51B4               	movf	disk_initialize@pdrv& (0+255),w,b
 18161                           
 18162                           ; Switch size 1, requested type "simple"
 18163                           ; Number of cases is 1, Range of values is 0 to 0
 18164                           ; switch strategies available:
 18165                           ; Name         Instructions Cycles
 18166                           ; simple_byte            4     3 (average)
 18167                           ;	Chosen strategy is simple_byte
 18168   008D58  0A00               	xorlw	0	; case 0
 18169   008D5A  B4D8               	btfsc	status,2,c
 18170   008D5C  EF97  F046         	goto	l15181
 18171   008D60  EFB2  F046         	goto	l15191
 18172   008D64                     l15191:
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 18176   008D64  51B5               	movf	disk_initialize@stat& (0+255),w,b
 18177   008D66                     
 18178                           ; BSR set to: 0
 18179   008D66  0012               	return		;funcret
 18180   008D68                     __end_of_disk_initialize:
 18181                           	callstack 0
 18182                           
 18183 ;; *************** function _SD_SPI_MediaInitialize *****************
 18184 ;; Defined at:
 18185 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 18186 ;; Parameters:    Size  Location     Type
 18187 ;;		None
 18188 ;; Auto vars:     Size  Location     Type
 18189 ;;  CSDResponse    20   45[BANK0 ] unsigned char [20]
 18190 ;;  response        5   77[BANK0 ] struct .
 18191 ;;  c_size          4   73[BANK0 ] unsigned long 
 18192 ;;  timeout         2   82[BANK0 ] unsigned short 
 18193 ;;  count           1   72[BANK0 ] unsigned char 
 18194 ;;  block_len       1   71[BANK0 ] unsigned char 
 18195 ;;  index           1   70[BANK0 ] unsigned char 
 18196 ;;  c_size_mult     1   69[BANK0 ] unsigned char 
 18197 ;; Return value:  Size  Location     Type
 18198 ;;                  1    wreg      _Bool 
 18199 ;; Registers used:
 18200 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 18201 ;; Tracked objects:
 18202 ;;		On entry : 0/0
 18203 ;;		On exit  : 0/0
 18204 ;;		Unchanged: 0/0
 18205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18207 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18208 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18209 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18210 ;;Total ram usage:       50 bytes
 18211 ;; Hardware stack levels used: 1
 18212 ;; Hardware stack levels required when called: 7
 18213 ;; This function calls:
 18214 ;;		_SDFAST_open
 18215 ;;		_SDSLOW_open
 18216 ;;		_SD_SPI_DelayMilliseconds
 18217 ;;		_SD_SendCmd
 18218 ;;		_SPI1_Close
 18219 ;;		_SPI1_ExchangeByte
 18220 ;;		___lmul
 18221 ;; This function is called by:
 18222 ;;		_disk_initialize
 18223 ;; This function uses a non-reentrant model
 18224 ;;
 18225                           
 18226                           	psect	text67
 18227   001724                     __ptext67:
 18228                           	callstack 0
 18229   001724                     _SD_SPI_MediaInitialize:
 18230                           	callstack 19
 18231   001724                     
 18232                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 18233   001724  0E00               	movlw	0
 18234   001726  6E53               	movwf	(_mediaInformation+3)^0,c
 18235                           
 18236                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 18237   001728  0E00               	movlw	0
 18238   00172A  6E50               	movwf	_mediaInformation^0,c
 18239                           
 18240                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 18241   00172C  0E00               	movlw	0
 18242   00172E  6E54               	movwf	(_mediaInformation+4)^0,c
 18243   001730  0E00               	movlw	0
 18244   001732  6E55               	movwf	(_mediaInformation+5)^0,c
 18245   001734  0E00               	movlw	0
 18246   001736  6E56               	movwf	(_mediaInformation+6)^0,c
 18247   001738  0E00               	movlw	0
 18248   00173A  6E57               	movwf	(_mediaInformation+7)^0,c
 18249                           
 18250                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 18251   00173C  0E00               	movlw	0
 18252   00173E  6E58               	movwf	(_mediaInformation+8)^0,c
 18253   001740  8ABA               	bsf	186,5,c	;volatile
 18254   001742                     
 18255                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 18256   001742  0EAB               	movlw	low (_spiMaster+22)
 18257   001744  6EF6               	movwf	tblptrl,c
 18258   001746  0EFF               	movlw	high (_spiMaster+22)
 18259   001748  6EF7               	movwf	tblptrh,c
 18260   00174A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18261   00174A  6AF8               	clrf	tblptru,c
 18262   00174C                     	endif
 18263   00174C                     	if	0	;tblptru may be non-zero
 18264   00174C                     	endif
 18265   00174C  0009               	tblrd		*+
 18266   00174E  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18267   001754  0009               	tblrd		*+
 18268   001756  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18269   00175C  D802               	call	u17138
 18270   00175E  EFBB  F00B         	goto	u17139
 18271   001762                     u17138:
 18272   001762  0005               	push	
 18273   001764  6EFA               	movwf	pclath,c
 18274   001766  0100               	movlb	0	; () banked
 18275   001768  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18276   00176A  6EFD               	movwf	tosl,c
 18277   00176C  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18278   00176E  6EFE               	movwf	tosh,c
 18279   001770  6AFF               	clrf	tosu,c
 18280   001772  50FA               	movf	pclath,w,c
 18281   001774  0012               	return		;indir
 18282   001776                     u17139:
 18283   001776  0900               	iorlw	0
 18284   001778  A4D8               	btfss	status,2,c
 18285   00177A  EFC1  F00B         	goto	u17141
 18286   00177E  EFC3  F00B         	goto	u17140
 18287   001782                     u17141:
 18288   001782  EFC6  F00B         	goto	l14677
 18289   001786                     u17140:
 18290   001786                     l14673:
 18291                           
 18292                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 18293   001786  0E00               	movlw	0
 18294   001788  EF9F  F00F         	goto	l1611
 18295   00178C                     l14677:
 18296                           
 18297                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 18298   00178C  0E1E               	movlw	30
 18299   00178E  EC94  F043         	call	_SD_SPI_DelayMilliseconds
 18300   001792                     
 18301                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 18302   001792  0E00               	movlw	0
 18303   001794  0100               	movlb	0	; () banked
 18304   001796  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 18305   001798  0E64               	movlw	100
 18306   00179A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 18307   00179C                     l14681:
 18308                           
 18309                           ; BSR set to: 0
 18310   00179C  8ABA               	bsf	186,5,c	;volatile
 18311   00179E                     
 18312                           ; BSR set to: 0
 18313                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 18314   00179E  0E99               	movlw	low (_spiMaster+4)
 18315   0017A0  6EF6               	movwf	tblptrl,c
 18316   0017A2  0EFF               	movlw	high (_spiMaster+4)
 18317   0017A4  6EF7               	movwf	tblptrh,c
 18318   0017A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18319   0017A6  6AF8               	clrf	tblptru,c
 18320   0017A8                     	endif
 18321   0017A8                     	if	0	;tblptru may be non-zero
 18322   0017A8                     	endif
 18323   0017A8  0009               	tblrd		*+
 18324   0017AA  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18325   0017B0  0009               	tblrd		*+
 18326   0017B2  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18327   0017B8  D802               	call	u17158
 18328   0017BA  EFE9  F00B         	goto	u17159
 18329   0017BE                     u17158:
 18330   0017BE  0005               	push	
 18331   0017C0  6EFA               	movwf	pclath,c
 18332   0017C2  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18333   0017C4  6EFD               	movwf	tosl,c
 18334   0017C6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18335   0017C8  6EFE               	movwf	tosh,c
 18336   0017CA  6AFF               	clrf	tosu,c
 18337   0017CC  50FA               	movf	pclath,w,c
 18338   0017CE  0EFF               	movlw	255
 18339   0017D0  0012               	return		;indir
 18340   0017D2                     u17159:
 18341   0017D2  9ABA               	bcf	186,5,c	;volatile
 18342   0017D4                     
 18343                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 18344   0017D4  0100               	movlb	0	; () banked
 18345   0017D6  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 18346   0017D8  A0D8               	btfss	status,0,c
 18347   0017DA  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 18348   0017DC                     
 18349                           ; BSR set to: 0
 18350                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 18351   0017DC  0E00               	movlw	0
 18352   0017DE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18353   0017E0  0E00               	movlw	0
 18354   0017E2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18355   0017E4  0E00               	movlw	0
 18356   0017E6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18357   0017E8  0E00               	movlw	0
 18358   0017EA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18359   0017EC  0E00               	movlw	0
 18360   0017EE  EC82  F01C         	call	_SD_SendCmd
 18361   0017F2  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18362   0017F6  0E04               	movlw	4
 18363   0017F8                     u17161:
 18364   0017F8  006F FFAF FFDB     	movff	plusw0,plusw2
 18365   0017FE  06E8               	decf	wreg,f,c
 18366   001800  E2FB               	bc	u17161
 18367   001802                     
 18368                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 18369   001802  0100               	movlb	0	; () banked
 18370   001804  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 18371   001806  B4D8               	btfsc	status,2,c
 18372   001808  EF08  F00C         	goto	u17171
 18373   00180C  EF0A  F00C         	goto	u17170
 18374   001810                     u17171:
 18375   001810  EF13  F00C         	goto	l14695
 18376   001814                     u17170:
 18377   001814                     
 18378                           ; BSR set to: 0
 18379   001814  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18380   001816  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18381   001818  A4D8               	btfss	status,2,c
 18382   00181A  EF11  F00C         	goto	u17181
 18383   00181E  EF13  F00C         	goto	u17180
 18384   001822                     u17181:
 18385   001822  EFCE  F00B         	goto	l14681
 18386   001826                     u17180:
 18387   001826                     l14695:
 18388                           
 18389                           ; BSR set to: 0
 18390                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 18391   001826  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18392   001828  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18393   00182A  A4D8               	btfss	status,2,c
 18394   00182C  EF1A  F00C         	goto	u17191
 18395   001830  EF1C  F00C         	goto	u17190
 18396   001834                     u17191:
 18397   001834  EF80  F00C         	goto	l14719
 18398   001838                     u17190:
 18399   001838                     
 18400                           ; BSR set to: 0
 18401   001838  8ABA               	bsf	186,5,c	;volatile
 18402   00183A                     
 18403                           ; BSR set to: 0
 18404                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 18405   00183A  0E99               	movlw	low (_spiMaster+4)
 18406   00183C  6EF6               	movwf	tblptrl,c
 18407   00183E  0EFF               	movlw	high (_spiMaster+4)
 18408   001840  6EF7               	movwf	tblptrh,c
 18409   001842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18410   001842  6AF8               	clrf	tblptru,c
 18411   001844                     	endif
 18412   001844                     	if	0	;tblptru may be non-zero
 18413   001844                     	endif
 18414   001844  0009               	tblrd		*+
 18415   001846  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18416   00184C  0009               	tblrd		*+
 18417   00184E  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18418   001854  D802               	call	u17208
 18419   001856  EF37  F00C         	goto	u17209
 18420   00185A                     u17208:
 18421   00185A  0005               	push	
 18422   00185C  6EFA               	movwf	pclath,c
 18423   00185E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18424   001860  6EFD               	movwf	tosl,c
 18425   001862  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18426   001864  6EFE               	movwf	tosh,c
 18427   001866  6AFF               	clrf	tosu,c
 18428   001868  50FA               	movf	pclath,w,c
 18429   00186A  0EFF               	movlw	255
 18430   00186C  0012               	return		;indir
 18431   00186E                     u17209:
 18432   00186E  9ABA               	bcf	186,5,c	;volatile
 18433   001870                     
 18434                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 18435   001870  0E00               	movlw	0
 18436   001872  0100               	movlb	0	; () banked
 18437   001874  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18438   001876  0E00               	movlw	0
 18439   001878  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18440   00187A  0E00               	movlw	0
 18441   00187C  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18442   00187E  0E00               	movlw	0
 18443   001880  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18444   001882  0E05               	movlw	5
 18445   001884  EC82  F01C         	call	_SD_SendCmd
 18446   001888                     
 18447                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 18448   001888  0E00               	movlw	0
 18449   00188A  0100               	movlb	0	; () banked
 18450   00188C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18451   00188E  0E00               	movlw	0
 18452   001890  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18453   001892  0E00               	movlw	0
 18454   001894  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18455   001896  0E00               	movlw	0
 18456   001898  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18457   00189A  0E00               	movlw	0
 18458   00189C  EC82  F01C         	call	_SD_SendCmd
 18459   0018A0  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18460   0018A4  0E04               	movlw	4
 18461   0018A6                     u17211:
 18462   0018A6  006F FFAF FFDB     	movff	plusw0,plusw2
 18463   0018AC  06E8               	decf	wreg,f,c
 18464   0018AE  E2FB               	bc	u17211
 18465   0018B0                     
 18466                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 18467   0018B0  0100               	movlb	0	; () banked
 18468   0018B2  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 18469   0018B4  B4D8               	btfsc	status,2,c
 18470   0018B6  EF5F  F00C         	goto	u17221
 18471   0018BA  EF61  F00C         	goto	u17220
 18472   0018BE                     u17221:
 18473   0018BE  EF80  F00C         	goto	l14719
 18474   0018C2                     u17220:
 18475   0018C2                     
 18476                           ; BSR set to: 0
 18477                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18478   0018C2  0E02               	movlw	2
 18479   0018C4  6E50               	movwf	_mediaInformation^0,c
 18480   0018C6                     
 18481                           ; BSR set to: 0
 18482   0018C6  8ABA               	bsf	186,5,c	;volatile
 18483   0018C8                     
 18484                           ; BSR set to: 0
 18485                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 18486   0018C8  0E95               	movlw	low _spiMaster
 18487   0018CA  6EF6               	movwf	tblptrl,c
 18488   0018CC                     	if	1	;There is more than 1 active tblptr byte
 18489   0018CC  0EFF               	movlw	high _spiMaster
 18490   0018CE  6EF7               	movwf	tblptrh,c
 18491   0018D0                     	endif
 18492   0018D0                     	if	1	;There are 3 active tblptr bytes
 18493   0018D0  0E00               	movlw	low (_spiMaster shr (0+16))
 18494   0018D2  6EF8               	movwf	tblptru,c
 18495   0018D4                     	endif
 18496   0018D4  0009               	tblrd		*+
 18497   0018D6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18498   0018DC  0009               	tblrd		*+
 18499   0018DE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18500   0018E4  D802               	call	u17238
 18501   0018E6  EF7E  F00C         	goto	u17239
 18502   0018EA                     u17238:
 18503   0018EA  0005               	push	
 18504   0018EC  6EFA               	movwf	pclath,c
 18505   0018EE  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18506   0018F0  6EFD               	movwf	tosl,c
 18507   0018F2  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18508   0018F4  6EFE               	movwf	tosh,c
 18509   0018F6  6AFF               	clrf	tosu,c
 18510   0018F8  50FA               	movf	pclath,w,c
 18511   0018FA  0012               	return		;indir
 18512   0018FC                     u17239:
 18513   0018FC  EFC3  F00B         	goto	l14673
 18514   001900                     l14719:
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 18518   001900  0EAA               	movlw	170
 18519   001902  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18520   001904  0E01               	movlw	1
 18521   001906  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18522   001908  0E00               	movlw	0
 18523   00190A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18524   00190C  0E00               	movlw	0
 18525   00190E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18526   001910  0E02               	movlw	2
 18527   001912  EC82  F01C         	call	_SD_SendCmd
 18528   001916  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18529   00191A  0E04               	movlw	4
 18530   00191C                     u17241:
 18531   00191C  006F FFAF FFDB     	movff	plusw0,plusw2
 18532   001922  06E8               	decf	wreg,f,c
 18533   001924  E2FB               	bc	u17241
 18534   001926                     
 18535                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 18536   001926  EE20  F0AE         	lfsr	2,SD_SPI_MediaInitialize@response+1
 18537   00192A  0EFF               	movlw	255
 18538   00192C  14DE               	andwf	postinc2,w,c
 18539   00192E  0100               	movlb	0	; () banked
 18540   001930  6F82               	movwf	??_SD_SPI_MediaInitialize& (0+255),b
 18541   001932  0E0F               	movlw	15
 18542   001934  14DE               	andwf	postinc2,w,c
 18543   001936  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 18544   001938  0E00               	movlw	0
 18545   00193A  14DE               	andwf	postinc2,w,c
 18546   00193C  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 18547   00193E  0E00               	movlw	0
 18548   001940  14DE               	andwf	postinc2,w,c
 18549   001942  6F85               	movwf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 18550   001944  0EAA               	movlw	170
 18551   001946  1982               	xorwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18552   001948  E108               	bnz	u17251
 18553   00194A  0583               	decf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18554   00194C  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 18555   00194E  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 18556   001950  A4D8               	btfss	status,2,c
 18557   001952  EFAD  F00C         	goto	u17251
 18558   001956  EFAF  F00C         	goto	u17250
 18559   00195A                     u17251:
 18560   00195A  EF2B  F00D         	goto	l14755
 18561   00195E                     u17250:
 18562   00195E                     
 18563                           ; BSR set to: 0
 18564   00195E  B5AD               	btfsc	SD_SPI_MediaInitialize@response& (0+255),2,b
 18565   001960  EFB4  F00C         	goto	u17261
 18566   001964  EFB6  F00C         	goto	u17260
 18567   001968                     u17261:
 18568   001968  EF2B  F00D         	goto	l14755
 18569   00196C                     u17260:
 18570   00196C                     
 18571                           ; BSR set to: 0
 18572   00196C  0E00               	movlw	0
 18573   00196E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18574   001970  0E00               	movlw	0
 18575   001972  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18576   001974  0E00               	movlw	0
 18577   001976  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18578   001978  0E00               	movlw	0
 18579   00197A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18580   00197C  0E10               	movlw	16
 18581   00197E  EC82  F01C         	call	_SD_SendCmd
 18582   001982                     
 18583                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 18584   001982  0E00               	movlw	0
 18585   001984  0100               	movlb	0	; () banked
 18586   001986  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 18587   001988  0E00               	movlw	0
 18588   00198A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 18589   00198C                     l14733:
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 18593   00198C  0E00               	movlw	0
 18594   00198E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18595   001990  0E00               	movlw	0
 18596   001992  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18597   001994  0E00               	movlw	0
 18598   001996  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18599   001998  0E00               	movlw	0
 18600   00199A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18601   00199C  0E0F               	movlw	15
 18602   00199E  EC82  F01C         	call	_SD_SendCmd
 18603                           
 18604                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 18605   0019A2  0E00               	movlw	0
 18606   0019A4  0100               	movlb	0	; () banked
 18607   0019A6  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18608   0019A8  0E00               	movlw	0
 18609   0019AA  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18610   0019AC  0E00               	movlw	0
 18611   0019AE  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18612   0019B0  0E40               	movlw	64
 18613   0019B2  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18614   0019B4  0E12               	movlw	18
 18615   0019B6  EC82  F01C         	call	_SD_SendCmd
 18616   0019BA  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18617   0019BE  0E04               	movlw	4
 18618   0019C0                     u17271:
 18619   0019C0  006F FFAF FFDB     	movff	plusw0,plusw2
 18620   0019C6  06E8               	decf	wreg,f,c
 18621   0019C8  E2FB               	bc	u17271
 18622   0019CA                     
 18623                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 18624   0019CA  0100               	movlb	0	; () banked
 18625   0019CC  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 18626   0019CE  A4D8               	btfss	status,2,c
 18627   0019D0  EFEC  F00C         	goto	u17281
 18628   0019D4  EFEE  F00C         	goto	u17280
 18629   0019D8                     u17281:
 18630   0019D8  EFF0  F00C         	goto	l14739
 18631   0019DC                     u17280:
 18632   0019DC  EFFC  F00C         	goto	l14743
 18633   0019E0                     l14739:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 18637   0019E0  4BB2               	infsnz	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 18638   0019E2  2BB3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 18639   0019E4                     
 18640                           ; BSR set to: 0
 18641   0019E4  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18642   0019E6  E106               	bnz	u17291
 18643   0019E8  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18644   0019EA  A4D8               	btfss	status,2,c
 18645   0019EC  EFFA  F00C         	goto	u17291
 18646   0019F0  EFFC  F00C         	goto	u17290
 18647   0019F4                     u17291:
 18648   0019F4  EFC6  F00C         	goto	l14733
 18649   0019F8                     u17290:
 18650   0019F8                     l14743:
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 18654   0019F8  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18655   0019FA  E106               	bnz	u17301
 18656   0019FC  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18657   0019FE  A4D8               	btfss	status,2,c
 18658   001A00  EF04  F00D         	goto	u17301
 18659   001A04  EF06  F00D         	goto	u17300
 18660   001A08                     u17301:
 18661   001A08  EF08  F00D         	goto	l14747
 18662   001A0C                     u17300:
 18663   001A0C                     
 18664                           ; BSR set to: 0
 18665                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18666   001A0C  0E02               	movlw	2
 18667   001A0E  6E50               	movwf	_mediaInformation^0,c
 18668   001A10                     l14747:
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 18672   001A10  0E00               	movlw	0
 18673   001A12  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18674   001A14  0E00               	movlw	0
 18675   001A16  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18676   001A18  0E00               	movlw	0
 18677   001A1A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18678   001A1C  0E00               	movlw	0
 18679   001A1E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18680   001A20  0E10               	movlw	16
 18681   001A22  EC82  F01C         	call	_SD_SendCmd
 18682   001A26  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18683   001A2A  0E04               	movlw	4
 18684   001A2C                     u17311:
 18685   001A2C  006F FFAF FFDB     	movff	plusw0,plusw2
 18686   001A32  06E8               	decf	wreg,f,c
 18687   001A34  E2FB               	bc	u17311
 18688   001A36                     
 18689                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 18690   001A36  0100               	movlb	0	; () banked
 18691   001A38  ADB1               	btfss	(SD_SPI_MediaInitialize@response+4)& (0+255),6,b
 18692   001A3A  EF21  F00D         	goto	u17321
 18693   001A3E  EF23  F00D         	goto	u17320
 18694   001A42                     u17321:
 18695   001A42  EF27  F00D         	goto	l14753
 18696   001A46                     u17320:
 18697   001A46                     
 18698                           ; BSR set to: 0
 18699                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 18700   001A46  0E01               	movlw	1
 18701   001A48  6E58               	movwf	(_mediaInformation+8)^0,c
 18702                           
 18703                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 18704   001A4A  EF69  F00D         	goto	l1648
 18705   001A4E                     l14753:
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 18709   001A4E  0E00               	movlw	0
 18710   001A50  6E58               	movwf	(_mediaInformation+8)^0,c
 18711   001A52  EF69  F00D         	goto	l1648
 18712   001A56                     l14755:
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 18716   001A56  0E01               	movlw	1
 18717   001A58  EC94  F043         	call	_SD_SPI_DelayMilliseconds
 18718   001A5C  9ABA               	bcf	186,5,c	;volatile
 18719   001A5E                     
 18720                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 18721   001A5E  0E00               	movlw	0
 18722   001A60  6E58               	movwf	(_mediaInformation+8)^0,c
 18723   001A62                     
 18724                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 18725   001A62  0E1F               	movlw	31
 18726   001A64  0100               	movlb	0	; () banked
 18727   001A66  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 18728   001A68  69B2               	setf	SD_SPI_MediaInitialize@timeout& (0+255),b
 18729   001A6A                     l14763:
 18730                           
 18731                           ; BSR set to: 0
 18732                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 18733   001A6A  0E00               	movlw	0
 18734   001A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18735   001A6E  0E00               	movlw	0
 18736   001A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18737   001A72  0E00               	movlw	0
 18738   001A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18739   001A76  0E00               	movlw	0
 18740   001A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18741   001A7A  0E01               	movlw	1
 18742   001A7C  EC82  F01C         	call	_SD_SendCmd
 18743   001A80  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18744   001A84  0E04               	movlw	4
 18745   001A86                     u17331:
 18746   001A86  006F FFAF FFDB     	movff	plusw0,plusw2
 18747   001A8C  06E8               	decf	wreg,f,c
 18748   001A8E  E2FB               	bc	u17331
 18749   001A90                     
 18750                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 18751   001A90  0100               	movlb	0	; () banked
 18752   001A92  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 18753   001A94  A0D8               	btfss	status,0,c
 18754   001A96  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 18755   001A98                     
 18756                           ; BSR set to: 0
 18757                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 18758   001A98  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 18759   001A9A  B4D8               	btfsc	status,2,c
 18760   001A9C  EF52  F00D         	goto	u17341
 18761   001AA0  EF54  F00D         	goto	u17340
 18762   001AA4                     u17341:
 18763   001AA4  EF5D  F00D         	goto	l14771
 18764   001AA8                     u17340:
 18765   001AA8                     
 18766                           ; BSR set to: 0
 18767   001AA8  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18768   001AAA  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18769   001AAC  A4D8               	btfss	status,2,c
 18770   001AAE  EF5B  F00D         	goto	u17351
 18771   001AB2  EF5D  F00D         	goto	u17350
 18772   001AB6                     u17351:
 18773   001AB6  EF35  F00D         	goto	l14763
 18774   001ABA                     u17350:
 18775   001ABA                     l14771:
 18776                           
 18777                           ; BSR set to: 0
 18778                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 18779   001ABA  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18780   001ABC  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18781   001ABE  A4D8               	btfss	status,2,c
 18782   001AC0  EF64  F00D         	goto	u17361
 18783   001AC4  EF66  F00D         	goto	u17360
 18784   001AC8                     u17361:
 18785   001AC8  EF69  F00D         	goto	l1648
 18786   001ACC                     u17360:
 18787   001ACC                     
 18788                           ; BSR set to: 0
 18789                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18790   001ACC  0E02               	movlw	2
 18791   001ACE  6E50               	movwf	_mediaInformation^0,c
 18792   001AD0                     
 18793                           ; BSR set to: 0
 18794   001AD0  8ABA               	bsf	186,5,c	;volatile
 18795   001AD2                     l1648:
 18796                           
 18797                           ; BSR set to: 0
 18798   001AD2  8ABA               	bsf	186,5,c	;volatile
 18799   001AD4                     
 18800                           ; BSR set to: 0
 18801                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 18802   001AD4  0E95               	movlw	low _spiMaster
 18803   001AD6  6EF6               	movwf	tblptrl,c
 18804   001AD8                     	if	1	;There is more than 1 active tblptr byte
 18805   001AD8  0EFF               	movlw	high _spiMaster
 18806   001ADA  6EF7               	movwf	tblptrh,c
 18807   001ADC                     	endif
 18808   001ADC                     	if	1	;There are 3 active tblptr bytes
 18809   001ADC  0E00               	movlw	low (_spiMaster shr (0+16))
 18810   001ADE  6EF8               	movwf	tblptru,c
 18811   001AE0                     	endif
 18812   001AE0  0009               	tblrd		*+
 18813   001AE2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18814   001AE8  0009               	tblrd		*+
 18815   001AEA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18816   001AF0  D802               	call	u17378
 18817   001AF2  EF84  F00D         	goto	u17379
 18818   001AF6                     u17378:
 18819   001AF6  0005               	push	
 18820   001AF8  6EFA               	movwf	pclath,c
 18821   001AFA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18822   001AFC  6EFD               	movwf	tosl,c
 18823   001AFE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18824   001B00  6EFE               	movwf	tosh,c
 18825   001B02  6AFF               	clrf	tosu,c
 18826   001B04  50FA               	movf	pclath,w,c
 18827   001B06  0012               	return		;indir
 18828   001B08                     u17379:
 18829   001B08                     
 18830                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 18831   001B08  0E97               	movlw	low (_spiMaster+2)
 18832   001B0A  6EF6               	movwf	tblptrl,c
 18833   001B0C  0EFF               	movlw	high (_spiMaster+2)
 18834   001B0E  6EF7               	movwf	tblptrh,c
 18835   001B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18836   001B10  6AF8               	clrf	tblptru,c
 18837   001B12                     	endif
 18838   001B12                     	if	0	;tblptru may be non-zero
 18839   001B12                     	endif
 18840   001B12  0009               	tblrd		*+
 18841   001B14  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18842   001B1A  0009               	tblrd		*+
 18843   001B1C  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18844   001B22  D802               	call	u17388
 18845   001B24  EF9E  F00D         	goto	u17389
 18846   001B28                     u17388:
 18847   001B28  0005               	push	
 18848   001B2A  6EFA               	movwf	pclath,c
 18849   001B2C  0100               	movlb	0	; () banked
 18850   001B2E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18851   001B30  6EFD               	movwf	tosl,c
 18852   001B32  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18853   001B34  6EFE               	movwf	tosh,c
 18854   001B36  6AFF               	clrf	tosu,c
 18855   001B38  50FA               	movf	pclath,w,c
 18856   001B3A  0012               	return		;indir
 18857   001B3C                     u17389:
 18858   001B3C  0900               	iorlw	0
 18859   001B3E  A4D8               	btfss	status,2,c
 18860   001B40  EFA4  F00D         	goto	u17391
 18861   001B44  EFA6  F00D         	goto	u17390
 18862   001B48                     u17391:
 18863   001B48  EFA8  F00D         	goto	l1651
 18864   001B4C                     u17390:
 18865   001B4C  EFC3  F00B         	goto	l14673
 18866   001B50                     l1651:
 18867   001B50  9ABA               	bcf	186,5,c	;volatile
 18868   001B52                     
 18869                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 18870   001B52  0E00               	movlw	0
 18871   001B54  0100               	movlb	0	; () banked
 18872   001B56  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 18873   001B58  0E14               	movlw	20
 18874   001B5A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 18875   001B5C                     l14787:
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 18879   001B5C  0E00               	movlw	0
 18880   001B5E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18881   001B60  0E00               	movlw	0
 18882   001B62  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18883   001B64  0E00               	movlw	0
 18884   001B66  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18885   001B68  0E00               	movlw	0
 18886   001B6A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18887   001B6C  0E03               	movlw	3
 18888   001B6E  EC82  F01C         	call	_SD_SendCmd
 18889   001B72  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 18890   001B76  0E04               	movlw	4
 18891   001B78                     u17401:
 18892   001B78  006F FFAF FFDB     	movff	plusw0,plusw2
 18893   001B7E  06E8               	decf	wreg,f,c
 18894   001B80  E2FB               	bc	u17401
 18895   001B82                     
 18896                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 18897   001B82  0100               	movlb	0	; () banked
 18898   001B84  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 18899   001B86  A0D8               	btfss	status,0,c
 18900   001B88  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 18901   001B8A                     
 18902                           ; BSR set to: 0
 18903                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 18904   001B8A  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 18905   001B8C  B4D8               	btfsc	status,2,c
 18906   001B8E  EFCB  F00D         	goto	u17411
 18907   001B92  EFCD  F00D         	goto	u17410
 18908   001B96                     u17411:
 18909   001B96  EFD6  F00D         	goto	l14795
 18910   001B9A                     u17410:
 18911   001B9A                     
 18912                           ; BSR set to: 0
 18913   001B9A  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18914   001B9C  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18915   001B9E  A4D8               	btfss	status,2,c
 18916   001BA0  EFD4  F00D         	goto	u17421
 18917   001BA4  EFD6  F00D         	goto	u17420
 18918   001BA8                     u17421:
 18919   001BA8  EFAE  F00D         	goto	l14787
 18920   001BAC                     u17420:
 18921   001BAC                     l14795:
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 18925   001BAC  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 18926   001BAE  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 18927   001BB0  A4D8               	btfss	status,2,c
 18928   001BB2  EFDD  F00D         	goto	u17431
 18929   001BB6  EFDF  F00D         	goto	u17430
 18930   001BBA                     u17431:
 18931   001BBA  EFFE  F00D         	goto	l14807
 18932   001BBE                     u17430:
 18933   001BBE                     
 18934                           ; BSR set to: 0
 18935                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18936   001BBE  0E02               	movlw	2
 18937   001BC0  6E50               	movwf	_mediaInformation^0,c
 18938   001BC2                     
 18939                           ; BSR set to: 0
 18940   001BC2  8ABA               	bsf	186,5,c	;volatile
 18941   001BC4                     
 18942                           ; BSR set to: 0
 18943                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 18944   001BC4  0E95               	movlw	low _spiMaster
 18945   001BC6  6EF6               	movwf	tblptrl,c
 18946   001BC8                     	if	1	;There is more than 1 active tblptr byte
 18947   001BC8  0EFF               	movlw	high _spiMaster
 18948   001BCA  6EF7               	movwf	tblptrh,c
 18949   001BCC                     	endif
 18950   001BCC                     	if	1	;There are 3 active tblptr bytes
 18951   001BCC  0E00               	movlw	low (_spiMaster shr (0+16))
 18952   001BCE  6EF8               	movwf	tblptru,c
 18953   001BD0                     	endif
 18954   001BD0  0009               	tblrd		*+
 18955   001BD2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18956   001BD8  0009               	tblrd		*+
 18957   001BDA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18958   001BE0  D802               	call	u17448
 18959   001BE2  EFFC  F00D         	goto	u17449
 18960   001BE6                     u17448:
 18961   001BE6  0005               	push	
 18962   001BE8  6EFA               	movwf	pclath,c
 18963   001BEA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18964   001BEC  6EFD               	movwf	tosl,c
 18965   001BEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18966   001BF0  6EFE               	movwf	tosh,c
 18967   001BF2  6AFF               	clrf	tosu,c
 18968   001BF4  50FA               	movf	pclath,w,c
 18969   001BF6  0012               	return		;indir
 18970   001BF8                     u17449:
 18971   001BF8  EFC3  F00B         	goto	l14673
 18972   001BFC                     l14807:
 18973                           
 18974                           ; BSR set to: 0
 18975                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 18976   001BFC  0E00               	movlw	0
 18977   001BFE  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 18978                           
 18979                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 18980   001C00  0E00               	movlw	0
 18981   001C02  6FA8               	movwf	SD_SPI_MediaInitialize@count& (0+255),b
 18982   001C04                     l14813:
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 18986   001C04  51A6               	movf	SD_SPI_MediaInitialize@index& (0+255),w,b
 18987   001C06  0F8D               	addlw	low SD_SPI_MediaInitialize@CSDResponse
 18988   001C08  6ED9               	movwf	fsr2l,c
 18989   001C0A  6ADA               	clrf	fsr2h,c
 18990   001C0C  0E99               	movlw	low (_spiMaster+4)
 18991   001C0E  6EF6               	movwf	tblptrl,c
 18992   001C10  0EFF               	movlw	high (_spiMaster+4)
 18993   001C12  6EF7               	movwf	tblptrh,c
 18994   001C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18995   001C14  6AF8               	clrf	tblptru,c
 18996   001C16                     	endif
 18997   001C16                     	if	0	;tblptru may be non-zero
 18998   001C16                     	endif
 18999   001C16  0009               	tblrd		*+
 19000   001C18  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 19001   001C1E  0009               	tblrd		*+
 19002   001C20  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 19003   001C26  D802               	call	u17458
 19004   001C28  EF20  F00E         	goto	u17459
 19005   001C2C                     u17458:
 19006   001C2C  0005               	push	
 19007   001C2E  6EFA               	movwf	pclath,c
 19008   001C30  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19009   001C32  6EFD               	movwf	tosl,c
 19010   001C34  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19011   001C36  6EFE               	movwf	tosh,c
 19012   001C38  6AFF               	clrf	tosu,c
 19013   001C3A  50FA               	movf	pclath,w,c
 19014   001C3C  0EFF               	movlw	255
 19015   001C3E  0012               	return		;indir
 19016   001C40                     u17459:
 19017   001C40  6EDF               	movwf	indf2,c
 19018   001C42                     
 19019                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 19020   001C42  0100               	movlb	0	; () banked
 19021   001C44  2BA6               	incf	SD_SPI_MediaInitialize@index& (0+255),f,b
 19022   001C46                     
 19023                           ; BSR set to: 0
 19024                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 19025   001C46  51A8               	movf	SD_SPI_MediaInitialize@count& (0+255),w,b
 19026   001C48  A4D8               	btfss	status,2,c
 19027   001C4A  EF29  F00E         	goto	u17461
 19028   001C4E  EF2B  F00E         	goto	u17460
 19029   001C52                     u17461:
 19030   001C52  EF36  F00E         	goto	l14823
 19031   001C56                     u17460:
 19032   001C56                     
 19033                           ; BSR set to: 0
 19034   001C56  0EFE               	movlw	254
 19035   001C58  198D               	xorwf	SD_SPI_MediaInitialize@CSDResponse& (0+255),w,b
 19036   001C5A  A4D8               	btfss	status,2,c
 19037   001C5C  EF32  F00E         	goto	u17471
 19038   001C60  EF34  F00E         	goto	u17470
 19039   001C64                     u17471:
 19040   001C64  EF36  F00E         	goto	l14823
 19041   001C68                     u17470:
 19042   001C68                     
 19043                           ; BSR set to: 0
 19044                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 19045   001C68  0E00               	movlw	0
 19046   001C6A  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 19047   001C6C                     l14823:
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 19051   001C6C  2BA8               	incf	SD_SPI_MediaInitialize@count& (0+255),f,b
 19052   001C6E                     
 19053                           ; BSR set to: 0
 19054   001C6E  0E13               	movlw	19
 19055   001C70  65A8               	cpfsgt	SD_SPI_MediaInitialize@count& (0+255),b
 19056   001C72  EF3D  F00E         	goto	u17481
 19057   001C76  EF3F  F00E         	goto	u17480
 19058   001C7A                     u17481:
 19059   001C7A  EF02  F00E         	goto	l14813
 19060   001C7E                     u17480:
 19061   001C7E                     
 19062                           ; BSR set to: 0
 19063                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 19064   001C7E  0E02               	movlw	2
 19065   001C80  6E52               	movwf	(_mediaInformation+2)^0,c
 19066   001C82  0E00               	movlw	0
 19067   001C84  6E51               	movwf	(_mediaInformation+1)^0,c
 19068   001C86                     
 19069                           ; BSR set to: 0
 19070                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 19071   001C86  C08D  F082         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 19072   001C8A  0EC0               	movlw	192
 19073   001C8C  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19074   001C8E  B4D8               	btfsc	status,2,c
 19075   001C90  EF4C  F00E         	goto	u17491
 19076   001C94  EF4E  F00E         	goto	u17490
 19077   001C98                     u17491:
 19078   001C98  EF94  F00E         	goto	l14833
 19079   001C9C                     u17490:
 19080   001C9C                     
 19081                           ; BSR set to: 0
 19082                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 19083   001C9C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 19084   001C9E  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 19085   001CA0  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 19086   001CA2  C094  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 19087   001CA6  0E3F               	movlw	63
 19088   001CA8  1784               	andwf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 19089   001CAA  C084  F085         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 19090   001CAE  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 19091   001CB0  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 19092   001CB2  6B88               	clrf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 19093   001CB4  C086  F088         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 19094   001CB8  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 19095   001CBC  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 19096   001CBE  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 19097   001CC0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19098   001CC2  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 19099   001CC4  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 19100   001CC6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19101   001CC8  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 19102   001CCA  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 19103   001CCC  0E00               	movlw	0
 19104   001CCE  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 19105   001CD0  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 19106   001CD2  0E00               	movlw	0
 19107   001CD4  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 19108   001CD6  6F8C               	movwf	(??_SD_SPI_MediaInitialize+10)& (0+255),b
 19109   001CD8  5196               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)& (0+255),w,b
 19110   001CDA  1189               	iorwf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 19111   001CDC  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 19112   001CDE  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 19113   001CE0  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 19114   001CE2  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 19115   001CE4  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 19116   001CE6  518C               	movf	(??_SD_SPI_MediaInitialize+10)& (0+255),w,b
 19117   001CE8  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 19118                           
 19119                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 19120   001CEA  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 19121   001CEE  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 19122   001CF2  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 19123   001CF6  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 19124   001CFA  0E0A               	movlw	10
 19125   001CFC                     u17505:
 19126   001CFC  90D8               	bcf	status,0,c
 19127   001CFE  3782               	rlcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19128   001D00  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 19129   001D02  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 19130   001D04  3785               	rlcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 19131   001D06  2EE8               	decfsz	wreg,f,c
 19132   001D08  EF7E  F00E         	goto	u17505
 19133   001D0C  0EFF               	movlw	255
 19134   001D0E  2582               	addwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19135   001D10  6E54               	movwf	(_mediaInformation+4)^0,c
 19136   001D12  0E03               	movlw	3
 19137   001D14  2183               	addwfc	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19138   001D16  6E55               	movwf	(_mediaInformation+5)^0,c
 19139   001D18  0E00               	movlw	0
 19140   001D1A  2184               	addwfc	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 19141   001D1C  6E56               	movwf	(_mediaInformation+6)^0,c
 19142   001D1E  0E00               	movlw	0
 19143   001D20  2185               	addwfc	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 19144   001D22  6E57               	movwf	(_mediaInformation+7)^0,c
 19145                           
 19146                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 19147   001D24  EF44  F00F         	goto	l14839
 19148   001D28                     l14833:
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 19152   001D28  5194               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)& (0+255),w,b
 19153   001D2A  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 19154   001D2C  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 19155   001D2E  C093  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 19156   001D32  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 19157   001D34  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 19158   001D36  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 19159   001D38  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 19160   001D3C  C084  F086         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 19161   001D40  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 19162   001D42  6B84               	clrf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 19163   001D44  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19164   001D46  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 19165   001D48  6F88               	movwf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 19166   001D4A  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19167   001D4C  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 19168   001D4E  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 19169   001D50  0E00               	movlw	0
 19170   001D52  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 19171   001D54  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 19172   001D56  0E00               	movlw	0
 19173   001D58  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 19174   001D5A  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 19175   001D5C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 19176   001D5E  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 19177   001D60  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 19178   001D62  5189               	movf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 19179   001D64  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 19180   001D66  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 19181   001D68  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 19182   001D6A  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 19183   001D6C  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 19184                           
 19185                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 19186   001D6E  0EC0               	movlw	192
 19187   001D70  17A9               	andwf	SD_SPI_MediaInitialize@c_size& (0+255),f,b
 19188   001D72  0EFF               	movlw	255
 19189   001D74  17AA               	andwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),f,b
 19190   001D76  0E03               	movlw	3
 19191   001D78  17AB               	andwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),f,b
 19192   001D7A  0E00               	movlw	0
 19193   001D7C  17AC               	andwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),f,b
 19194                           
 19195                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 19196   001D7E  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 19197   001D82  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 19198   001D86  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 19199   001D8A  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 19200   001D8E  0E07               	movlw	7
 19201   001D90  EFCF  F00E         	goto	u17510
 19202   001D94                     u17515:
 19203   001D94  90D8               	bcf	status,0,c
 19204   001D96  3385               	rrcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 19205   001D98  3384               	rrcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 19206   001D9A  3383               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 19207   001D9C  3382               	rrcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19208   001D9E                     u17510:
 19209   001D9E  2EE8               	decfsz	wreg,f,c
 19210   001DA0  EFCA  F00E         	goto	u17515
 19211   001DA4  C082  F0A9         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 19212   001DA8  C083  F0AA         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 19213   001DAC  C084  F0AB         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 19214   001DB0  C085  F0AC         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 19215                           
 19216                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 19217   001DB4  C096  F082         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 19218   001DB8  0E03               	movlw	3
 19219   001DBA  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19220   001DBC  6B83               	clrf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 19221   001DBE  AF97               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)& (0+255),7,b
 19222   001DC0  D001               	bra	u17525
 19223   001DC2  2B83               	incf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 19224   001DC4                     u17525:
 19225   001DC4  3183               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19226   001DC6  3582               	rlcf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19227   001DC8  6FA5               	movwf	SD_SPI_MediaInitialize@c_size_mult& (0+255),b
 19228                           
 19229                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 19230   001DCA  5192               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)& (0+255),w,b
 19231   001DCC  0B0F               	andlw	15
 19232   001DCE  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 19233                           
 19234                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 19235   001DD0  C0A7  F082         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 19236   001DD4  0EF7               	movlw	-9
 19237   001DD6  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19238   001DD8  0E01               	movlw	1
 19239   001DDA  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 19240   001DDC  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19241   001DDE  EFF3  F00E         	goto	u17534
 19242   001DE2                     u17535:
 19243   001DE2  90D8               	bcf	status,0,c
 19244   001DE4  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 19245   001DE6                     u17534:
 19246   001DE6  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 19247   001DE8  EFF1  F00E         	goto	u17535
 19248   001DEC  0100               	movlb	0	; () banked
 19249   001DEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19250   001DF0  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 19251   001DF2                     
 19252                           ; BSR set to: 0
 19253                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 19254   001DF2  0E01               	movlw	1
 19255   001DF4  25A9               	addwf	SD_SPI_MediaInitialize@c_size& (0+255),w,b
 19256   001DF6  6F60               	movwf	___lmul@multiplier& (0+255),b
 19257   001DF8  0E00               	movlw	0
 19258   001DFA  21AA               	addwfc	(SD_SPI_MediaInitialize@c_size+1)& (0+255),w,b
 19259   001DFC  6F61               	movwf	(___lmul@multiplier+1)& (0+255),b
 19260   001DFE  0E00               	movlw	0
 19261   001E00  21AB               	addwfc	(SD_SPI_MediaInitialize@c_size+2)& (0+255),w,b
 19262   001E02  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 19263   001E04  0E00               	movlw	0
 19264   001E06  21AC               	addwfc	(SD_SPI_MediaInitialize@c_size+3)& (0+255),w,b
 19265   001E08  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 19266   001E0A  C0A5  F082         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 19267   001E0E  0E02               	movlw	2
 19268   001E10  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19269   001E12  0E01               	movlw	1
 19270   001E14  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 19271   001E16  0E00               	movlw	0
 19272   001E18  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 19273   001E1A  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 19274   001E1C  EF13  F00F         	goto	u17544
 19275   001E20                     u17545:
 19276   001E20  90D8               	bcf	status,0,c
 19277   001E22  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 19278   001E24  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 19279   001E26                     u17544:
 19280   001E26  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 19281   001E28  EF10  F00F         	goto	u17545
 19282   001E2C  C083  F064         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 19283   001E30  C084  F065         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 19284   001E34  0100               	movlb	0	; () banked
 19285   001E36  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19286   001E38  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19287   001E3A  EC01  F044         	call	___lmul
 19288   001E3E  C060  F0A1         	movff	?___lmul,_SD_SPI_MediaInitialize$6530
 19289   001E42  C061  F0A2         	movff	?___lmul+1,_SD_SPI_MediaInitialize$6530+1
 19290   001E46  C062  F0A3         	movff	?___lmul+2,_SD_SPI_MediaInitialize$6530+2
 19291   001E4A  C063  F0A4         	movff	?___lmul+3,_SD_SPI_MediaInitialize$6530+3
 19292   001E4E                     
 19293                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 19294   001E4E  C0A1  F060         	movff	_SD_SPI_MediaInitialize$6530,___lmul@multiplier
 19295   001E52  C0A2  F061         	movff	_SD_SPI_MediaInitialize$6530+1,___lmul@multiplier+1
 19296   001E56  C0A3  F062         	movff	_SD_SPI_MediaInitialize$6530+2,___lmul@multiplier+2
 19297   001E5A  C0A4  F063         	movff	_SD_SPI_MediaInitialize$6530+3,___lmul@multiplier+3
 19298   001E5E  0100               	movlb	0	; () banked
 19299   001E60  51A7               	movf	SD_SPI_MediaInitialize@block_len& (0+255),w,b
 19300   001E62  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19301   001E64  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 19302   001E66  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19303   001E68  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19304   001E6A  EC01  F044         	call	___lmul	;wreg free
 19305   001E6E  0EFF               	movlw	255
 19306   001E70  0100               	movlb	0	; () banked
 19307   001E72  2560               	addwf	?___lmul& (0+255),w,b
 19308   001E74  6E54               	movwf	(_mediaInformation+4)^0,c
 19309   001E76  0EFF               	movlw	255
 19310   001E78  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19311   001E7A  6E55               	movwf	(_mediaInformation+5)^0,c
 19312   001E7C  0EFF               	movlw	255
 19313   001E7E  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19314   001E80  6E56               	movwf	(_mediaInformation+6)^0,c
 19315   001E82  0EFF               	movlw	255
 19316   001E84  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19317   001E86  6E57               	movwf	(_mediaInformation+7)^0,c
 19318   001E88                     l14839:
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 19322   001E88  0E00               	movlw	0
 19323   001E8A  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 19324   001E8C  0E00               	movlw	0
 19325   001E8E  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 19326   001E90  0E00               	movlw	0
 19327   001E92  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 19328   001E94  0E00               	movlw	0
 19329   001E96  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 19330   001E98  0E11               	movlw	17
 19331   001E9A  EC82  F01C         	call	_SD_SendCmd
 19332   001E9E                     
 19333                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 19334   001E9E  C051  F06B         	movff	_mediaInformation+1,SD_SendCmd@address
 19335   001EA2  C052  F06C         	movff	_mediaInformation+2,SD_SendCmd@address+1
 19336   001EA6  0100               	movlb	0	; () banked
 19337   001EA8  6B6D               	clrf	(SD_SendCmd@address+2)& (0+255),b
 19338   001EAA  6B6E               	clrf	(SD_SendCmd@address+3)& (0+255),b
 19339   001EAC  0E07               	movlw	7
 19340   001EAE  EC82  F01C         	call	_SD_SendCmd
 19341   001EB2  8ABA               	bsf	186,5,c	;volatile
 19342   001EB4                     
 19343                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 19344   001EB4  5050               	movf	_mediaInformation^0,w,c
 19345   001EB6  A4D8               	btfss	status,2,c
 19346   001EB8  EF60  F00F         	goto	u17551
 19347   001EBC  EF62  F00F         	goto	u17550
 19348   001EC0                     u17551:
 19349   001EC0  EF82  F00F         	goto	l14855
 19350   001EC4                     u17550:
 19351   001EC4                     
 19352                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 19353   001EC4  0E01               	movlw	1
 19354   001EC6  6E53               	movwf	(_mediaInformation+3)^0,c
 19355   001EC8                     
 19356                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 19357   001EC8  0E95               	movlw	low _spiMaster
 19358   001ECA  6EF6               	movwf	tblptrl,c
 19359   001ECC                     	if	1	;There is more than 1 active tblptr byte
 19360   001ECC  0EFF               	movlw	high _spiMaster
 19361   001ECE  6EF7               	movwf	tblptrh,c
 19362   001ED0                     	endif
 19363   001ED0                     	if	1	;There are 3 active tblptr bytes
 19364   001ED0  0E00               	movlw	low (_spiMaster shr (0+16))
 19365   001ED2  6EF8               	movwf	tblptru,c
 19366   001ED4                     	endif
 19367   001ED4  0009               	tblrd		*+
 19368   001ED6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 19369   001EDC  0009               	tblrd		*+
 19370   001EDE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 19371   001EE4  D802               	call	u17568
 19372   001EE6  EF7F  F00F         	goto	u17569
 19373   001EEA                     u17568:
 19374   001EEA  0005               	push	
 19375   001EEC  6EFA               	movwf	pclath,c
 19376   001EEE  0100               	movlb	0	; () banked
 19377   001EF0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19378   001EF2  6EFD               	movwf	tosl,c
 19379   001EF4  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19380   001EF6  6EFE               	movwf	tosh,c
 19381   001EF8  6AFF               	clrf	tosu,c
 19382   001EFA  50FA               	movf	pclath,w,c
 19383   001EFC  0012               	return		;indir
 19384   001EFE                     u17569:
 19385   001EFE                     
 19386                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 19387   001EFE  0E01               	movlw	1
 19388   001F00  EF9F  F00F         	goto	l1611
 19389   001F04                     l14855:
 19390                           
 19391                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 19392   001F04  0E95               	movlw	low _spiMaster
 19393   001F06  6EF6               	movwf	tblptrl,c
 19394   001F08                     	if	1	;There is more than 1 active tblptr byte
 19395   001F08  0EFF               	movlw	high _spiMaster
 19396   001F0A  6EF7               	movwf	tblptrh,c
 19397   001F0C                     	endif
 19398   001F0C                     	if	1	;There are 3 active tblptr bytes
 19399   001F0C  0E00               	movlw	low (_spiMaster shr (0+16))
 19400   001F0E  6EF8               	movwf	tblptru,c
 19401   001F10                     	endif
 19402   001F10  0009               	tblrd		*+
 19403   001F12  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 19404   001F18  0009               	tblrd		*+
 19405   001F1A  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 19406   001F20  D802               	call	u17578
 19407   001F22  EF9D  F00F         	goto	u17579
 19408   001F26                     u17578:
 19409   001F26  0005               	push	
 19410   001F28  6EFA               	movwf	pclath,c
 19411   001F2A  0100               	movlb	0	; () banked
 19412   001F2C  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 19413   001F2E  6EFD               	movwf	tosl,c
 19414   001F30  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 19415   001F32  6EFE               	movwf	tosh,c
 19416   001F34  6AFF               	clrf	tosu,c
 19417   001F36  50FA               	movf	pclath,w,c
 19418   001F38  0012               	return		;indir
 19419   001F3A                     u17579:
 19420   001F3A  EFC3  F00B         	goto	l14673
 19421   001F3E                     l1611:
 19422   001F3E  0012               	return		;funcret
 19423   001F40                     __end_of_SD_SPI_MediaInitialize:
 19424                           	callstack 0
 19425                           
 19426 ;; *************** function ___lmul *****************
 19427 ;; Defined at:
 19428 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 19429 ;; Parameters:    Size  Location     Type
 19430 ;;  multiplier      4    0[BANK0 ] unsigned long 
 19431 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;  product         4    8[BANK0 ] unsigned long 
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  4    0[BANK0 ] unsigned long 
 19436 ;; Registers used:
 19437 ;;		wreg, status,2, status,0
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/0
 19440 ;;		On exit  : 0/0
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19443 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19444 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19446 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19447 ;;Total ram usage:       12 bytes
 19448 ;; Hardware stack levels used: 1
 19449 ;; Hardware stack levels required when called: 5
 19450 ;; This function calls:
 19451 ;;		Nothing
 19452 ;; This function is called by:
 19453 ;;		_clst2sect
 19454 ;;		_find_volume
 19455 ;;		_SD_SPI_MediaInitialize
 19456 ;; This function uses a non-reentrant model
 19457 ;;
 19458                           
 19459                           	psect	text68
 19460   008802                     __ptext68:
 19461                           	callstack 0
 19462   008802                     ___lmul:
 19463                           	callstack 22
 19464   008802  0E00               	movlw	0
 19465   008804  0100               	movlb	0	; () banked
 19466   008806  6F68               	movwf	___lmul@product& (0+255),b
 19467   008808  0E00               	movlw	0
 19468   00880A  6F69               	movwf	(___lmul@product+1)& (0+255),b
 19469   00880C  0E00               	movlw	0
 19470   00880E  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 19471   008810  0E00               	movlw	0
 19472   008812  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 19473   008814                     l14331:
 19474                           
 19475                           ; BSR set to: 0
 19476   008814  A160               	btfss	___lmul@multiplier& (0+255),0,b
 19477   008816  EF0F  F044         	goto	u16481
 19478   00881A  EF11  F044         	goto	u16480
 19479   00881E                     u16481:
 19480   00881E  EF19  F044         	goto	l14335
 19481   008822                     u16480:
 19482   008822                     
 19483                           ; BSR set to: 0
 19484   008822  5164               	movf	___lmul@multiplicand& (0+255),w,b
 19485   008824  2768               	addwf	___lmul@product& (0+255),f,b
 19486   008826  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19487   008828  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 19488   00882A  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19489   00882C  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 19490   00882E  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19491   008830  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 19492   008832                     l14335:
 19493                           
 19494                           ; BSR set to: 0
 19495   008832  90D8               	bcf	status,0,c
 19496   008834  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 19497   008836  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19498   008838  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19499   00883A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19500   00883C                     
 19501                           ; BSR set to: 0
 19502   00883C  90D8               	bcf	status,0,c
 19503   00883E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19504   008840  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19505   008842  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19506   008844  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 19507   008846  5160               	movf	___lmul@multiplier& (0+255),w,b
 19508   008848  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19509   00884A  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19510   00884C  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19511   00884E  A4D8               	btfss	status,2,c
 19512   008850  EF2C  F044         	goto	u16491
 19513   008854  EF2E  F044         	goto	u16490
 19514   008858                     u16491:
 19515   008858  EF0A  F044         	goto	l14331
 19516   00885C                     u16490:
 19517   00885C                     
 19518                           ; BSR set to: 0
 19519   00885C  C068  F060         	movff	___lmul@product,?___lmul
 19520   008860  C069  F061         	movff	___lmul@product+1,?___lmul+1
 19521   008864  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 19522   008868  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 19523   00886C                     
 19524                           ; BSR set to: 0
 19525   00886C  0012               	return		;funcret
 19526   00886E                     __end_of___lmul:
 19527                           	callstack 0
 19528                           
 19529 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 19530 ;; Defined at:
 19531 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19532 ;; Parameters:    Size  Location     Type
 19533 ;;  milliseconds    1    wreg     unsigned char 
 19534 ;; Auto vars:     Size  Location     Type
 19535 ;;  milliseconds    1    3[BANK0 ] unsigned char 
 19536 ;;  timeout         2    4[BANK0 ] unsigned short 
 19537 ;; Return value:  Size  Location     Type
 19538 ;;                  1    wreg      void 
 19539 ;; Registers used:
 19540 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19541 ;; Tracked objects:
 19542 ;;		On entry : 0/0
 19543 ;;		On exit  : 0/0
 19544 ;;		Unchanged: 0/0
 19545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19549 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19550 ;;Total ram usage:        5 bytes
 19551 ;; Hardware stack levels used: 1
 19552 ;; Hardware stack levels required when called: 6
 19553 ;; This function calls:
 19554 ;;		_SPI1_ExchangeByte
 19555 ;; This function is called by:
 19556 ;;		_SD_SPI_MediaInitialize
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           	psect	text69
 19561   008728                     __ptext69:
 19562                           	callstack 0
 19563   008728                     _SD_SPI_DelayMilliseconds:
 19564                           	callstack 19
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;incstack = 0
 19568                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 19569   008728  0100               	movlb	0	; () banked
 19570   00872A  6F63               	movwf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),b
 19571   00872C                     
 19572                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 19573   00872C  0100               	movlb	0	; () banked
 19574   00872E  5163               	movf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),w,b
 19575   008730  0D32               	mullw	50
 19576   008732  006F FFCC  F064    	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 19577   008738  006F FFD0  F065    	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 19578   00873E                     
 19579                           ; BSR set to: 0
 19580   00873E  8ABA               	bsf	186,5,c	;volatile
 19581   008740  EFBC  F043         	goto	l14643
 19582   008744                     l14641:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 19586   008744  0E99               	movlw	low (_spiMaster+4)
 19587   008746  6EF6               	movwf	tblptrl,c
 19588   008748  0EFF               	movlw	high (_spiMaster+4)
 19589   00874A  6EF7               	movwf	tblptrh,c
 19590   00874C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19591   00874C  6AF8               	clrf	tblptru,c
 19592   00874E                     	endif
 19593   00874E                     	if	0	;tblptru may be non-zero
 19594   00874E                     	endif
 19595   00874E  0009               	tblrd		*+
 19596   008750  006F FFD4  F061    	movff	tablat,??_SD_SPI_DelayMilliseconds
 19597   008756  0009               	tblrd		*+
 19598   008758  006F FFD4  F062    	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 19599   00875E  D802               	call	u17088
 19600   008760  EFBC  F043         	goto	u17089
 19601   008764                     u17088:
 19602   008764  0005               	push	
 19603   008766  6EFA               	movwf	pclath,c
 19604   008768  5161               	movf	??_SD_SPI_DelayMilliseconds& (0+255),w,b
 19605   00876A  6EFD               	movwf	tosl,c
 19606   00876C  5162               	movf	(??_SD_SPI_DelayMilliseconds+1)& (0+255),w,b
 19607   00876E  6EFE               	movwf	tosh,c
 19608   008770  6AFF               	clrf	tosu,c
 19609   008772  50FA               	movf	pclath,w,c
 19610   008774  0EFF               	movlw	255
 19611   008776  0012               	return		;indir
 19612   008778                     u17089:
 19613   008778                     l14643:
 19614                           
 19615                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 19616   008778  0100               	movlb	0	; () banked
 19617   00877A  0764               	decf	SD_SPI_DelayMilliseconds@timeout& (0+255),f,b
 19618   00877C  A0D8               	btfss	status,0,c
 19619   00877E  0765               	decf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),f,b
 19620   008780  2964               	incf	SD_SPI_DelayMilliseconds@timeout& (0+255),w,b
 19621   008782  E106               	bnz	u17091
 19622   008784  2965               	incf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),w,b
 19623   008786  A4D8               	btfss	status,2,c
 19624   008788  EFC8  F043         	goto	u17091
 19625   00878C  EFCA  F043         	goto	u17090
 19626   008790                     u17091:
 19627   008790  EFA2  F043         	goto	l14641
 19628   008794                     u17090:
 19629   008794                     
 19630                           ; BSR set to: 0
 19631   008794  0012               	return		;funcret
 19632   008796                     __end_of_SD_SPI_DelayMilliseconds:
 19633                           	callstack 0
 19634                           
 19635 ;; *************** function _check_fs *****************
 19636 ;; Defined at:
 19637 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 19638 ;; Parameters:    Size  Location     Type
 19639 ;;  fs              2  115[BANK0 ] PTR struct .
 19640 ;;		 -> FatFs(563), NULL(0), 
 19641 ;;  sect            4  117[BANK0 ] unsigned long 
 19642 ;; Auto vars:     Size  Location     Type
 19643 ;;		None
 19644 ;; Return value:  Size  Location     Type
 19645 ;;                  1    wreg      unsigned char 
 19646 ;; Registers used:
 19647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19648 ;; Tracked objects:
 19649 ;;		On entry : 0/0
 19650 ;;		On exit  : 0/0
 19651 ;;		Unchanged: 0/0
 19652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19656 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19657 ;;Total ram usage:        7 bytes
 19658 ;; Hardware stack levels used: 1
 19659 ;; Hardware stack levels required when called: 12
 19660 ;; This function calls:
 19661 ;;		_ld_word
 19662 ;;		_mem_cmp
 19663 ;;		_move_window
 19664 ;; This function is called by:
 19665 ;;		_find_volume
 19666 ;; This function uses a non-reentrant model
 19667 ;;
 19668                           
 19669                           	psect	text70
 19670   006CF6                     __ptext70:
 19671                           	callstack 0
 19672   006CF6                     _check_fs:
 19673                           	callstack 15
 19674   006CF6                     
 19675                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 19676   006CF6  0100               	movlb	0	; () banked
 19677   006CF8  EE20 F003          	lfsr	2,3
 19678   006CFC  51D3               	movf	check_fs@fs& (0+255),w,b
 19679   006CFE  26D9               	addwf	fsr2l,f,c
 19680   006D00  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 19681   006D02  22DA               	addwfc	fsr2h,f,c
 19682   006D04  6ADF               	clrf	indf2,c
 19683   006D06  EE20 F02F          	lfsr	2,47
 19684   006D0A  51D3               	movf	check_fs@fs& (0+255),w,b
 19685   006D0C  26D9               	addwf	fsr2l,f,c
 19686   006D0E  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 19687   006D10  22DA               	addwfc	fsr2h,f,c
 19688   006D12  0EFF               	movlw	255
 19689   006D14  6EDE               	movwf	postinc2,c
 19690   006D16  0EFF               	movlw	255
 19691   006D18  6EDE               	movwf	postinc2,c
 19692   006D1A  0EFF               	movlw	255
 19693   006D1C  6EDE               	movwf	postinc2,c
 19694   006D1E  0EFF               	movlw	255
 19695   006D20  6EDD               	movwf	postdec2,c
 19696   006D22                     
 19697                           ; BSR set to: 0
 19698                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 19699   006D22  C0D3  F0C8         	movff	check_fs@fs,move_window@fs
 19700   006D26  C0D4  F0C9         	movff	check_fs@fs+1,move_window@fs+1
 19701   006D2A  C0D5  F0CA         	movff	check_fs@sect,move_window@sector
 19702   006D2E  C0D6  F0CB         	movff	check_fs@sect+1,move_window@sector+1
 19703   006D32  C0D7  F0CC         	movff	check_fs@sect+2,move_window@sector+2
 19704   006D36  C0D8  F0CD         	movff	check_fs@sect+3,move_window@sector+3
 19705   006D3A  EC9A  F03E         	call	_move_window
 19706   006D3E  0900               	iorlw	0
 19707   006D40  B4D8               	btfsc	status,2,c
 19708   006D42  EFA5  F036         	goto	u18661
 19709   006D46  EFA7  F036         	goto	u18660
 19710   006D4A                     u18661:
 19711   006D4A  EFAA  F036         	goto	l15509
 19712   006D4E                     u18660:
 19713   006D4E  0E04               	movlw	4
 19714   006D50  EF2A  F037         	goto	l1201
 19715   006D54                     l15509:
 19716                           
 19717                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 19718   006D54  0E31               	movlw	49
 19719   006D56  0100               	movlb	0	; () banked
 19720   006D58  25D3               	addwf	check_fs@fs& (0+255),w,b
 19721   006D5A  6F60               	movwf	ld_word@ptr& (0+255),b
 19722   006D5C  0E02               	movlw	2
 19723   006D5E  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19724   006D60  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19725   006D62  ECF7  F046         	call	_ld_word	;wreg free
 19726   006D66  0E55               	movlw	85
 19727   006D68  0100               	movlb	0	; () banked
 19728   006D6A  1960               	xorwf	?_ld_word& (0+255),w,b
 19729   006D6C  E109               	bnz	u18670
 19730   006D6E  0EAA               	movlw	170
 19731   006D70  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 19732   006D72  B4D8               	btfsc	status,2,c
 19733   006D74  EFBE  F036         	goto	u18671
 19734   006D78  EFC0  F036         	goto	u18670
 19735   006D7C                     u18671:
 19736   006D7C  EFC3  F036         	goto	l15515
 19737   006D80                     u18670:
 19738   006D80                     
 19739                           ; BSR set to: 0
 19740   006D80  0E03               	movlw	3
 19741   006D82  EF2A  F037         	goto	l1201
 19742   006D86                     l15515:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 19746   006D86  EE20 F033          	lfsr	2,51
 19747   006D8A  51D3               	movf	check_fs@fs& (0+255),w,b
 19748   006D8C  26D9               	addwf	fsr2l,f,c
 19749   006D8E  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 19750   006D90  22DA               	addwfc	fsr2h,f,c
 19751   006D92  0EE9               	movlw	233
 19752   006D94  18DE               	xorwf	postinc2,w,c
 19753   006D96  B4D8               	btfsc	status,2,c
 19754   006D98  EFD0  F036         	goto	u18681
 19755   006D9C  EFD2  F036         	goto	u18680
 19756   006DA0                     u18681:
 19757   006DA0  EFF0  F036         	goto	l15521
 19758   006DA4                     u18680:
 19759   006DA4                     
 19760                           ; BSR set to: 0
 19761   006DA4  EE20 F033          	lfsr	2,51
 19762   006DA8  51D3               	movf	check_fs@fs& (0+255),w,b
 19763   006DAA  26D9               	addwf	fsr2l,f,c
 19764   006DAC  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 19765   006DAE  22DA               	addwfc	fsr2h,f,c
 19766   006DB0  0EEB               	movlw	235
 19767   006DB2  18DE               	xorwf	postinc2,w,c
 19768   006DB4  B4D8               	btfsc	status,2,c
 19769   006DB6  EFDF  F036         	goto	u18691
 19770   006DBA  EFE1  F036         	goto	u18690
 19771   006DBE                     u18691:
 19772   006DBE  EFF0  F036         	goto	l15521
 19773   006DC2                     u18690:
 19774   006DC2                     
 19775                           ; BSR set to: 0
 19776   006DC2  EE20 F033          	lfsr	2,51
 19777   006DC6  51D3               	movf	check_fs@fs& (0+255),w,b
 19778   006DC8  26D9               	addwf	fsr2l,f,c
 19779   006DCA  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 19780   006DCC  22DA               	addwfc	fsr2h,f,c
 19781   006DCE  0EE8               	movlw	232
 19782   006DD0  18DE               	xorwf	postinc2,w,c
 19783   006DD2  A4D8               	btfss	status,2,c
 19784   006DD4  EFEE  F036         	goto	u18701
 19785   006DD8  EFF0  F036         	goto	u18700
 19786   006DDC                     u18701:
 19787   006DDC  EF29  F037         	goto	l15533
 19788   006DE0                     u18700:
 19789   006DE0                     l15521:
 19790                           
 19791                           ; BSR set to: 0
 19792                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 19793   006DE0  0E69               	movlw	105
 19794   006DE2  25D3               	addwf	check_fs@fs& (0+255),w,b
 19795   006DE4  6F60               	movwf	mem_cmp@dst& (0+255),b
 19796   006DE6  0E00               	movlw	0
 19797   006DE8  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19798   006DEA  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 19799   006DEC  0EFB               	movlw	low STR_3
 19800   006DEE  6F62               	movwf	mem_cmp@src& (0+255),b
 19801   006DF0  0EFF               	movlw	high STR_3
 19802   006DF2  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 19803   006DF4  0E00               	movlw	0
 19804   006DF6  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 19805   006DF8  0E03               	movlw	3
 19806   006DFA  6F64               	movwf	mem_cmp@cnt& (0+255),b
 19807   006DFC  EC90  F041         	call	_mem_cmp	;wreg free
 19808   006E00  0100               	movlb	0	; () banked
 19809   006E02  5160               	movf	?_mem_cmp& (0+255),w,b
 19810   006E04  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 19811   006E06  A4D8               	btfss	status,2,c
 19812   006E08  EF08  F037         	goto	u18711
 19813   006E0C  EF0A  F037         	goto	u18710
 19814   006E10                     u18711:
 19815   006E10  EF0D  F037         	goto	l15527
 19816   006E14                     u18710:
 19817   006E14                     l15523:
 19818                           
 19819                           ; BSR set to: 0
 19820   006E14  0E00               	movlw	0
 19821   006E16  EF2A  F037         	goto	l1201
 19822   006E1A                     l15527:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 19826   006E1A  0E85               	movlw	133
 19827   006E1C  25D3               	addwf	check_fs@fs& (0+255),w,b
 19828   006E1E  6F60               	movwf	mem_cmp@dst& (0+255),b
 19829   006E20  0E00               	movlw	0
 19830   006E22  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19831   006E24  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 19832   006E26  0EF0               	movlw	low STR_5
 19833   006E28  6F62               	movwf	mem_cmp@src& (0+255),b
 19834   006E2A  0EFF               	movlw	high STR_5
 19835   006E2C  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 19836   006E2E  0E00               	movlw	0
 19837   006E30  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 19838   006E32  0E05               	movlw	5
 19839   006E34  6F64               	movwf	mem_cmp@cnt& (0+255),b
 19840   006E36  EC90  F041         	call	_mem_cmp	;wreg free
 19841   006E3A  0100               	movlb	0	; () banked
 19842   006E3C  5160               	movf	?_mem_cmp& (0+255),w,b
 19843   006E3E  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 19844   006E40  A4D8               	btfss	status,2,c
 19845   006E42  EF25  F037         	goto	u18721
 19846   006E46  EF27  F037         	goto	u18720
 19847   006E4A                     u18721:
 19848   006E4A  EF29  F037         	goto	l15533
 19849   006E4E                     u18720:
 19850   006E4E  EF0A  F037         	goto	l15523
 19851   006E52                     l15533:
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 19855   006E52  0E02               	movlw	2
 19856   006E54                     l1201:
 19857   006E54  0012               	return		;funcret
 19858   006E56                     __end_of_check_fs:
 19859                           	callstack 0
 19860                           
 19861 ;; *************** function _move_window *****************
 19862 ;; Defined at:
 19863 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 19864 ;; Parameters:    Size  Location     Type
 19865 ;;  fs              2  104[BANK0 ] PTR struct .
 19866 ;;		 -> FatFs(563), NULL(0), 
 19867 ;;  sector          4  106[BANK0 ] unsigned long 
 19868 ;; Auto vars:     Size  Location     Type
 19869 ;;  res             1  114[BANK0 ] enum E68
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      enum E68
 19872 ;; Registers used:
 19873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19874 ;; Tracked objects:
 19875 ;;		On entry : 0/0
 19876 ;;		On exit  : 0/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19879 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19882 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19883 ;;Total ram usage:       11 bytes
 19884 ;; Hardware stack levels used: 1
 19885 ;; Hardware stack levels required when called: 11
 19886 ;; This function calls:
 19887 ;;		_disk_read
 19888 ;;		_sync_window
 19889 ;; This function is called by:
 19890 ;;		_get_fat
 19891 ;;		_put_fat
 19892 ;;		_dir_alloc
 19893 ;;		_dir_find
 19894 ;;		_dir_register
 19895 ;;		_check_fs
 19896 ;;		_find_volume
 19897 ;;		_f_open
 19898 ;;		_f_sync
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           	psect	text71
 19903   007D34                     __ptext71:
 19904                           	callstack 0
 19905   007D34                     _move_window:
 19906                           	callstack 15
 19907   007D34                     
 19908                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 19909   007D34  0E00               	movlw	0
 19910   007D36  0100               	movlb	0	; () banked
 19911   007D38  6FD2               	movwf	move_window@res& (0+255),b
 19912   007D3A                     
 19913                           ; BSR set to: 0
 19914                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 19915   007D3A  EE20 F02F          	lfsr	2,47
 19916   007D3E  51C8               	movf	move_window@fs& (0+255),w,b
 19917   007D40  26D9               	addwf	fsr2l,f,c
 19918   007D42  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 19919   007D44  22DA               	addwfc	fsr2h,f,c
 19920   007D46  51CA               	movf	move_window@sector& (0+255),w,b
 19921   007D48  18DE               	xorwf	postinc2,w,c
 19922   007D4A  E10F               	bnz	u16450
 19923   007D4C  51CB               	movf	(move_window@sector+1)& (0+255),w,b
 19924   007D4E  18DE               	xorwf	postinc2,w,c
 19925   007D50  E10C               	bnz	u16450
 19926   007D52  51CC               	movf	(move_window@sector+2)& (0+255),w,b
 19927   007D54  18DE               	xorwf	postinc2,w,c
 19928   007D56  E109               	bnz	u16450
 19929   007D58  51CD               	movf	(move_window@sector+3)& (0+255),w,b
 19930   007D5A  18DE               	xorwf	postinc2,w,c
 19931   007D5C  B4D8               	btfsc	status,2,c
 19932   007D5E  EFB3  F03E         	goto	u16451
 19933   007D62  EFB5  F03E         	goto	u16450
 19934   007D66                     u16451:
 19935   007D66  EF02  F03F         	goto	l14325
 19936   007D6A                     u16450:
 19937   007D6A                     
 19938                           ; BSR set to: 0
 19939                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 19940   007D6A  C0C8  F0B5         	movff	move_window@fs,sync_window@fs
 19941   007D6E  C0C9  F0B6         	movff	move_window@fs+1,sync_window@fs+1
 19942   007D72  EC94  F032         	call	_sync_window	;wreg free
 19943   007D76  0100               	movlb	0	; () banked
 19944   007D78  6FD2               	movwf	move_window@res& (0+255),b
 19945   007D7A                     
 19946                           ; BSR set to: 0
 19947                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 19948   007D7A  51D2               	movf	move_window@res& (0+255),w,b
 19949   007D7C  A4D8               	btfss	status,2,c
 19950   007D7E  EFC3  F03E         	goto	u16461
 19951   007D82  EFC5  F03E         	goto	u16460
 19952   007D86                     u16461:
 19953   007D86  EF02  F03F         	goto	l14325
 19954   007D8A                     u16460:
 19955   007D8A                     
 19956                           ; BSR set to: 0
 19957                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 19958   007D8A  0E33               	movlw	51
 19959   007D8C  25C8               	addwf	move_window@fs& (0+255),w,b
 19960   007D8E  6FA8               	movwf	disk_read@buff& (0+255),b
 19961   007D90  0E00               	movlw	0
 19962   007D92  21C9               	addwfc	(move_window@fs+1)& (0+255),w,b
 19963   007D94  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
 19964   007D96  C0CA  F0AA         	movff	move_window@sector,disk_read@sector
 19965   007D9A  C0CB  F0AB         	movff	move_window@sector+1,disk_read@sector+1
 19966   007D9E  C0CC  F0AC         	movff	move_window@sector+2,disk_read@sector+2
 19967   007DA2  C0CD  F0AD         	movff	move_window@sector+3,disk_read@sector+3
 19968   007DA6  0E00               	movlw	0
 19969   007DA8  6FAF               	movwf	(disk_read@count+1)& (0+255),b
 19970   007DAA  0E01               	movlw	1
 19971   007DAC  6FAE               	movwf	disk_read@count& (0+255),b
 19972   007DAE  EE20 F001          	lfsr	2,1
 19973   007DB2  51C8               	movf	move_window@fs& (0+255),w,b
 19974   007DB4  26D9               	addwf	fsr2l,f,c
 19975   007DB6  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 19976   007DB8  22DA               	addwfc	fsr2h,f,c
 19977   007DBA  50DF               	movf	indf2,w,c
 19978   007DBC  EC6B  F044         	call	_disk_read
 19979   007DC0  0900               	iorlw	0
 19980   007DC2  B4D8               	btfsc	status,2,c
 19981   007DC4  EFE6  F03E         	goto	u16471
 19982   007DC8  EFE8  F03E         	goto	u16470
 19983   007DCC                     u16471:
 19984   007DCC  EFEF  F03E         	goto	l14323
 19985   007DD0                     u16470:
 19986   007DD0                     
 19987                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 19988   007DD0  0100               	movlb	0	; () banked
 19989   007DD2  69CA               	setf	move_window@sector& (0+255),b
 19990   007DD4  69CB               	setf	(move_window@sector+1)& (0+255),b
 19991   007DD6  69CC               	setf	(move_window@sector+2)& (0+255),b
 19992   007DD8  69CD               	setf	(move_window@sector+3)& (0+255),b
 19993   007DDA                     
 19994                           ; BSR set to: 0
 19995                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 19996   007DDA  0E01               	movlw	1
 19997   007DDC  6FD2               	movwf	move_window@res& (0+255),b
 19998   007DDE                     l14323:
 19999                           
 20000                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 20001   007DDE  0100               	movlb	0	; () banked
 20002   007DE0  EE20 F02F          	lfsr	2,47
 20003   007DE4  51C8               	movf	move_window@fs& (0+255),w,b
 20004   007DE6  26D9               	addwf	fsr2l,f,c
 20005   007DE8  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 20006   007DEA  22DA               	addwfc	fsr2h,f,c
 20007   007DEC  0060  F32B  FFDE   	movff	move_window@sector,postinc2
 20008   007DF2  0060  F32F  FFDE   	movff	move_window@sector+1,postinc2
 20009   007DF8  0060  F333  FFDE   	movff	move_window@sector+2,postinc2
 20010   007DFE  0060  F337  FFDE   	movff	move_window@sector+3,postinc2
 20011   007E04                     l14325:
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 20015   007E04  51D2               	movf	move_window@res& (0+255),w,b
 20016   007E06                     
 20017                           ; BSR set to: 0
 20018   007E06  0012               	return		;funcret
 20019   007E08                     __end_of_move_window:
 20020                           	callstack 0
 20021                           
 20022 ;; *************** function _sync_window *****************
 20023 ;; Defined at:
 20024 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 20025 ;; Parameters:    Size  Location     Type
 20026 ;;  fs              2   85[BANK0 ] PTR struct .
 20027 ;;		 -> FatFs(563), NULL(0), 
 20028 ;; Auto vars:     Size  Location     Type
 20029 ;;  res             1  103[BANK0 ] enum E68
 20030 ;; Return value:  Size  Location     Type
 20031 ;;                  1    wreg      enum E68
 20032 ;; Registers used:
 20033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20034 ;; Tracked objects:
 20035 ;;		On entry : 0/0
 20036 ;;		On exit  : 0/0
 20037 ;;		Unchanged: 0/0
 20038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20041 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20042 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20043 ;;Total ram usage:       19 bytes
 20044 ;; Hardware stack levels used: 1
 20045 ;; Hardware stack levels required when called: 10
 20046 ;; This function calls:
 20047 ;;		_disk_write
 20048 ;; This function is called by:
 20049 ;;		_move_window
 20050 ;;		_sync_fs
 20051 ;;		_dir_clear
 20052 ;; This function uses a non-reentrant model
 20053 ;;
 20054                           
 20055                           	psect	text72
 20056   006528                     __ptext72:
 20057                           	callstack 0
 20058   006528                     _sync_window:
 20059                           	callstack 15
 20060   006528                     
 20061                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 20062   006528  0E00               	movlw	0
 20063   00652A  0100               	movlb	0	; () banked
 20064   00652C  6FC7               	movwf	sync_window@res& (0+255),b
 20065   00652E                     
 20066                           ; BSR set to: 0
 20067                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 20068   00652E  EE20 F003          	lfsr	2,3
 20069   006532  51B5               	movf	sync_window@fs& (0+255),w,b
 20070   006534  26D9               	addwf	fsr2l,f,c
 20071   006536  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20072   006538  22DA               	addwfc	fsr2h,f,c
 20073   00653A  50DF               	movf	indf2,w,c
 20074   00653C  B4D8               	btfsc	status,2,c
 20075   00653E  EFA3  F032         	goto	u16411
 20076   006542  EFA5  F032         	goto	u16410
 20077   006546                     u16411:
 20078   006546  EF76  F033         	goto	l898
 20079   00654A                     u16410:
 20080   00654A                     
 20081                           ; BSR set to: 0
 20082                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 20083   00654A  0E33               	movlw	51
 20084   00654C  25B5               	addwf	sync_window@fs& (0+255),w,b
 20085   00654E  6FAB               	movwf	disk_write@buff& (0+255),b
 20086   006550  0E00               	movlw	0
 20087   006552  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 20088   006554  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 20089   006556  EE20 F02F          	lfsr	2,47
 20090   00655A  51B5               	movf	sync_window@fs& (0+255),w,b
 20091   00655C  26D9               	addwf	fsr2l,f,c
 20092   00655E  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20093   006560  22DA               	addwfc	fsr2h,f,c
 20094   006562  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 20095   006568  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 20096   00656E  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 20097   006574  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 20098   00657A  0E00               	movlw	0
 20099   00657C  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 20100   00657E  0E01               	movlw	1
 20101   006580  6FB1               	movwf	disk_write@count& (0+255),b
 20102   006582  EE20 F001          	lfsr	2,1
 20103   006586  51B5               	movf	sync_window@fs& (0+255),w,b
 20104   006588  26D9               	addwf	fsr2l,f,c
 20105   00658A  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20106   00658C  22DA               	addwfc	fsr2h,f,c
 20107   00658E  50DF               	movf	indf2,w,c
 20108   006590  EC37  F044         	call	_disk_write
 20109   006594  0900               	iorlw	0
 20110   006596  A4D8               	btfss	status,2,c
 20111   006598  EFD0  F032         	goto	u16421
 20112   00659C  EFD2  F032         	goto	u16420
 20113   0065A0                     u16421:
 20114   0065A0  EF73  F033         	goto	l14265
 20115   0065A4                     u16420:
 20116   0065A4                     
 20117                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 20118   0065A4  0100               	movlb	0	; () banked
 20119   0065A6  EE20 F003          	lfsr	2,3
 20120   0065AA  51B5               	movf	sync_window@fs& (0+255),w,b
 20121   0065AC  26D9               	addwf	fsr2l,f,c
 20122   0065AE  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20123   0065B0  22DA               	addwfc	fsr2h,f,c
 20124   0065B2  6ADF               	clrf	indf2,c
 20125   0065B4                     
 20126                           ; BSR set to: 0
 20127                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 20128   0065B4  EE20 F01B          	lfsr	2,27
 20129   0065B8  51B5               	movf	sync_window@fs& (0+255),w,b
 20130   0065BA  26D9               	addwf	fsr2l,f,c
 20131   0065BC  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20132   0065BE  22DA               	addwfc	fsr2h,f,c
 20133   0065C0  EE10 F023          	lfsr	1,35
 20134   0065C4  51B5               	movf	sync_window@fs& (0+255),w,b
 20135   0065C6  26E1               	addwf	fsr1l,f,c
 20136   0065C8  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20137   0065CA  22E2               	addwfc	fsr1h,f,c
 20138   0065CC  006F FF98  F0BB    	movff	postinc1,??_sync_window+4
 20139   0065D2  006F FF98  F0BC    	movff	postinc1,??_sync_window+5
 20140   0065D8  006F FF98  F0BD    	movff	postinc1,??_sync_window+6
 20141   0065DE  006F FF98  F0BE    	movff	postinc1,??_sync_window+7
 20142   0065E4  EE10 F02F          	lfsr	1,47
 20143   0065E8  51B5               	movf	sync_window@fs& (0+255),w,b
 20144   0065EA  26E1               	addwf	fsr1l,f,c
 20145   0065EC  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20146   0065EE  22E2               	addwfc	fsr1h,f,c
 20147   0065F0  006F FF98  F0BF    	movff	postinc1,??_sync_window+8
 20148   0065F6  006F FF98  F0C0    	movff	postinc1,??_sync_window+9
 20149   0065FC  006F FF98  F0C1    	movff	postinc1,??_sync_window+10
 20150   006602  006F FF98  F0C2    	movff	postinc1,??_sync_window+11
 20151   006608  51BB               	movf	(??_sync_window+4)& (0+255),w,b
 20152   00660A  5DBF               	subwf	(??_sync_window+8)& (0+255),w,b
 20153   00660C  6FC3               	movwf	(??_sync_window+12)& (0+255),b
 20154   00660E  51BC               	movf	(??_sync_window+5)& (0+255),w,b
 20155   006610  59C0               	subwfb	(??_sync_window+9)& (0+255),w,b
 20156   006612  6FC4               	movwf	(??_sync_window+13)& (0+255),b
 20157   006614  51BD               	movf	(??_sync_window+6)& (0+255),w,b
 20158   006616  59C1               	subwfb	(??_sync_window+10)& (0+255),w,b
 20159   006618  6FC5               	movwf	(??_sync_window+14)& (0+255),b
 20160   00661A  51BE               	movf	(??_sync_window+7)& (0+255),w,b
 20161   00661C  59C2               	subwfb	(??_sync_window+11)& (0+255),w,b
 20162   00661E  6FC6               	movwf	(??_sync_window+15)& (0+255),b
 20163   006620  50DE               	movf	postinc2,w,c
 20164   006622  5DC3               	subwf	(??_sync_window+12)& (0+255),w,b
 20165   006624  50DE               	movf	postinc2,w,c
 20166   006626  59C4               	subwfb	(??_sync_window+13)& (0+255),w,b
 20167   006628  50DE               	movf	postinc2,w,c
 20168   00662A  59C5               	subwfb	(??_sync_window+14)& (0+255),w,b
 20169   00662C  50DE               	movf	postinc2,w,c
 20170   00662E  59C6               	subwfb	(??_sync_window+15)& (0+255),w,b
 20171   006630  B0D8               	btfsc	status,0,c
 20172   006632  EF1D  F033         	goto	u16431
 20173   006636  EF1F  F033         	goto	u16430
 20174   00663A                     u16431:
 20175   00663A  EF76  F033         	goto	l898
 20176   00663E                     u16430:
 20177   00663E                     
 20178                           ; BSR set to: 0
 20179                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 20180   00663E  EE20 F002          	lfsr	2,2
 20181   006642  51B5               	movf	sync_window@fs& (0+255),w,b
 20182   006644  26D9               	addwf	fsr2l,f,c
 20183   006646  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20184   006648  22DA               	addwfc	fsr2h,f,c
 20185   00664A  0E02               	movlw	2
 20186   00664C  18DE               	xorwf	postinc2,w,c
 20187   00664E  A4D8               	btfss	status,2,c
 20188   006650  EF2C  F033         	goto	u16441
 20189   006654  EF2E  F033         	goto	u16440
 20190   006658                     u16441:
 20191   006658  EF76  F033         	goto	l898
 20192   00665C                     u16440:
 20193   00665C                     
 20194                           ; BSR set to: 0
 20195   00665C  0E33               	movlw	51
 20196   00665E  25B5               	addwf	sync_window@fs& (0+255),w,b
 20197   006660  6FAB               	movwf	disk_write@buff& (0+255),b
 20198   006662  0E00               	movlw	0
 20199   006664  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 20200   006666  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 20201   006668  EE20 F01B          	lfsr	2,27
 20202   00666C  51B5               	movf	sync_window@fs& (0+255),w,b
 20203   00666E  26D9               	addwf	fsr2l,f,c
 20204   006670  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20205   006672  22DA               	addwfc	fsr2h,f,c
 20206   006674  006F FF78  F0B7    	movff	postinc2,??_sync_window
 20207   00667A  006F FF78  F0B8    	movff	postinc2,??_sync_window+1
 20208   006680  006F FF78  F0B9    	movff	postinc2,??_sync_window+2
 20209   006686  006F FF78  F0BA    	movff	postinc2,??_sync_window+3
 20210   00668C  EE20 F02F          	lfsr	2,47
 20211   006690  51B5               	movf	sync_window@fs& (0+255),w,b
 20212   006692  26D9               	addwf	fsr2l,f,c
 20213   006694  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20214   006696  22DA               	addwfc	fsr2h,f,c
 20215   006698  006F FF78  F0BB    	movff	postinc2,??_sync_window+4
 20216   00669E  006F FF78  F0BC    	movff	postinc2,??_sync_window+5
 20217   0066A4  006F FF78  F0BD    	movff	postinc2,??_sync_window+6
 20218   0066AA  006F FF78  F0BE    	movff	postinc2,??_sync_window+7
 20219   0066B0  51B7               	movf	??_sync_window& (0+255),w,b
 20220   0066B2  25BB               	addwf	(??_sync_window+4)& (0+255),w,b
 20221   0066B4  6FAD               	movwf	disk_write@sector& (0+255),b
 20222   0066B6  51B8               	movf	(??_sync_window+1)& (0+255),w,b
 20223   0066B8  21BC               	addwfc	(??_sync_window+5)& (0+255),w,b
 20224   0066BA  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 20225   0066BC  51B9               	movf	(??_sync_window+2)& (0+255),w,b
 20226   0066BE  21BD               	addwfc	(??_sync_window+6)& (0+255),w,b
 20227   0066C0  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 20228   0066C2  51BA               	movf	(??_sync_window+3)& (0+255),w,b
 20229   0066C4  21BE               	addwfc	(??_sync_window+7)& (0+255),w,b
 20230   0066C6  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 20231   0066C8  0E00               	movlw	0
 20232   0066CA  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 20233   0066CC  0E01               	movlw	1
 20234   0066CE  6FB1               	movwf	disk_write@count& (0+255),b
 20235   0066D0  EE20 F001          	lfsr	2,1
 20236   0066D4  51B5               	movf	sync_window@fs& (0+255),w,b
 20237   0066D6  26D9               	addwf	fsr2l,f,c
 20238   0066D8  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 20239   0066DA  22DA               	addwfc	fsr2h,f,c
 20240   0066DC  50DF               	movf	indf2,w,c
 20241   0066DE  EC37  F044         	call	_disk_write
 20242   0066E2  EF76  F033         	goto	l898
 20243   0066E6                     l14265:
 20244                           
 20245                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 20246   0066E6  0E01               	movlw	1
 20247   0066E8  0100               	movlb	0	; () banked
 20248   0066EA  6FC7               	movwf	sync_window@res& (0+255),b
 20249   0066EC                     l898:
 20250                           
 20251                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 20252   0066EC  0100               	movlb	0	; () banked
 20253   0066EE  51C7               	movf	sync_window@res& (0+255),w,b
 20254   0066F0                     
 20255                           ; BSR set to: 0
 20256   0066F0  0012               	return		;funcret
 20257   0066F2                     __end_of_sync_window:
 20258                           	callstack 0
 20259                           
 20260 ;; *************** function _disk_write *****************
 20261 ;; Defined at:
 20262 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 20263 ;; Parameters:    Size  Location     Type
 20264 ;;  pdrv            1    wreg     unsigned char 
 20265 ;;  buff            2   75[BANK0 ] PTR const unsigned char 
 20266 ;;		 -> pb$buf(64), Fil$buf(512), send_status_ok@text(32), STR_9(12), 
 20267 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 20268 ;;		 -> f_putc@pb(70), FatFs$win(512), NULL(0), 
 20269 ;;  sector          4   77[BANK0 ] unsigned long 
 20270 ;;  count           2   81[BANK0 ] unsigned int 
 20271 ;; Auto vars:     Size  Location     Type
 20272 ;;  pdrv            1   83[BANK0 ] unsigned char 
 20273 ;;  res             1   84[BANK0 ] enum E12
 20274 ;; Return value:  Size  Location     Type
 20275 ;;                  1    wreg      enum E12
 20276 ;; Registers used:
 20277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20286 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;Total ram usage:       10 bytes
 20288 ;; Hardware stack levels used: 1
 20289 ;; Hardware stack levels required when called: 9
 20290 ;; This function calls:
 20291 ;;		_SD_SPI_SectorWrite
 20292 ;; This function is called by:
 20293 ;;		_sync_window
 20294 ;;		_sync_fs
 20295 ;;		_dir_clear
 20296 ;;		_f_write
 20297 ;;		_f_sync
 20298 ;;		_f_read
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302                           	psect	text73
 20303   00886E                     __ptext73:
 20304                           	callstack 0
 20305   00886E                     _disk_write:
 20306                           	callstack 19
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;incstack = 0
 20310                           ;disk_write@pdrv stored from wreg
 20311   00886E  0100               	movlb	0	; () banked
 20312   008870  6FB3               	movwf	disk_write@pdrv& (0+255),b
 20313   008872                     
 20314                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 20315   008872  0E04               	movlw	4
 20316   008874  0100               	movlb	0	; () banked
 20317   008876  6FB4               	movwf	disk_write@res& (0+255),b
 20318                           
 20319                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 20320   008878  EF62  F044         	goto	l14229
 20321   00887C                     l14221:
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 20325   00887C  C0AD  F090         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 20326   008880  C0AE  F091         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 20327   008884  C0AF  F092         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 20328   008888  C0B0  F093         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 20329   00888C  C0AB  F094         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 20330   008890  C0AC  F095         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 20331   008894  C0B1  F096         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 20332   008898  C0B2  F097         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 20333   00889C  ECD7  F037         	call	_SD_SPI_SectorWrite	;wreg free
 20334   0088A0  06E8               	decf	wreg,f,c
 20335   0088A2  A4D8               	btfss	status,2,c
 20336   0088A4  EF56  F044         	goto	u16391
 20337   0088A8  EF58  F044         	goto	u16390
 20338   0088AC                     u16391:
 20339   0088AC  EF5D  F044         	goto	l14225
 20340   0088B0                     u16390:
 20341   0088B0                     
 20342                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 20343   0088B0  0E00               	movlw	0
 20344   0088B2  0100               	movlb	0	; () banked
 20345   0088B4  6FB4               	movwf	disk_write@res& (0+255),b
 20346                           
 20347                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 20348   0088B6  EF69  F044         	goto	l14231
 20349   0088BA                     l14225:
 20350                           
 20351                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 20352   0088BA  0E01               	movlw	1
 20353   0088BC  0100               	movlb	0	; () banked
 20354   0088BE  6FB4               	movwf	disk_write@res& (0+255),b
 20355   0088C0  EF69  F044         	goto	l14231
 20356   0088C4                     l14229:
 20357                           
 20358                           ; BSR set to: 0
 20359   0088C4  51B3               	movf	disk_write@pdrv& (0+255),w,b
 20360                           
 20361                           ; Switch size 1, requested type "simple"
 20362                           ; Number of cases is 1, Range of values is 0 to 0
 20363                           ; switch strategies available:
 20364                           ; Name         Instructions Cycles
 20365                           ; simple_byte            4     3 (average)
 20366                           ;	Chosen strategy is simple_byte
 20367   0088C6  0A00               	xorlw	0	; case 0
 20368   0088C8  B4D8               	btfsc	status,2,c
 20369   0088CA  EF3E  F044         	goto	l14221
 20370   0088CE  EF69  F044         	goto	l14231
 20371   0088D2                     l14231:
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 20375   0088D2  51B4               	movf	disk_write@res& (0+255),w,b
 20376   0088D4                     
 20377                           ; BSR set to: 0
 20378   0088D4  0012               	return		;funcret
 20379   0088D6                     __end_of_disk_write:
 20380                           	callstack 0
 20381                           
 20382 ;; *************** function _SD_SPI_SectorWrite *****************
 20383 ;; Defined at:
 20384 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20385 ;; Parameters:    Size  Location     Type
 20386 ;;  sector_addre    4   48[BANK0 ] unsigned long 
 20387 ;;  buffer          2   52[BANK0 ] PTR const unsigned char 
 20388 ;;		 -> pb$buf(64), Fil$buf(512), send_status_ok@text(32), STR_9(12), 
 20389 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 20390 ;;		 -> f_putc@pb(70), FatFs$win(512), NULL(0), 
 20391 ;;  sector_count    2   54[BANK0 ] unsigned short 
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;  info           13   62[BANK0 ] struct SD_ASYNC_IO
 20394 ;;  i               2   60[BANK0 ] unsigned short 
 20395 ;;  status          1   59[BANK0 ] unsigned char 
 20396 ;;  result          1   58[BANK0 ] _Bool 
 20397 ;; Return value:  Size  Location     Type
 20398 ;;                  1    wreg      _Bool 
 20399 ;; Registers used:
 20400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20401 ;; Tracked objects:
 20402 ;;		On entry : 0/0
 20403 ;;		On exit  : 0/0
 20404 ;;		Unchanged: 0/0
 20405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20407 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20409 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20410 ;;Total ram usage:       27 bytes
 20411 ;; Hardware stack levels used: 1
 20412 ;; Hardware stack levels required when called: 8
 20413 ;; This function calls:
 20414 ;;		_SDFAST_open
 20415 ;;		_SDSLOW_open
 20416 ;;		_SD_SPI_AsyncWriteTasks
 20417 ;;		_SPI1_Close
 20418 ;; This function is called by:
 20419 ;;		_disk_write
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text74
 20424   006FAE                     __ptext74:
 20425                           	callstack 0
 20426   006FAE                     _SD_SPI_SectorWrite:
 20427                           	callstack 19
 20428   006FAE                     
 20429                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 20430   006FAE  0E00               	movlw	0
 20431   006FB0  0100               	movlb	0	; () banked
 20432   006FB2  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 20433                           
 20434                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 20435   006FB4  0E00               	movlw	0
 20436   006FB6  6F9D               	movwf	(SD_SPI_SectorWrite@i+1)& (0+255),b
 20437   006FB8  0E00               	movlw	0
 20438   006FBA  6F9C               	movwf	SD_SPI_SectorWrite@i& (0+255),b
 20439   006FBC  EF6B  F038         	goto	l14037
 20440   006FC0                     l14009:
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 20444   006FC0  0E02               	movlw	2
 20445   006FC2  6F9F               	movwf	(SD_SPI_SectorWrite@info+1)& (0+255),b
 20446   006FC4  0E00               	movlw	0
 20447   006FC6  6F9E               	movwf	SD_SPI_SectorWrite@info& (0+255),b
 20448                           
 20449                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 20450   006FC8  0E00               	movlw	0
 20451   006FCA  6FA0               	movwf	(SD_SPI_SectorWrite@info+2)& (0+255),b
 20452   006FCC  0E02               	movlw	2
 20453   006FCE  6FA1               	movwf	(SD_SPI_SectorWrite@info+3)& (0+255),b
 20454   006FD0  0E00               	movlw	0
 20455   006FD2  6FA2               	movwf	(SD_SPI_SectorWrite@info+4)& (0+255),b
 20456   006FD4  0E00               	movlw	0
 20457   006FD6  6FA3               	movwf	(SD_SPI_SectorWrite@info+5)& (0+255),b
 20458   006FD8                     
 20459                           ; BSR set to: 0
 20460                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 20461   006FD8  C09C  F098         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 20462   006FDC  C09D  F099         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 20463   006FE0  0E09               	movlw	9
 20464   006FE2                     u16055:
 20465   006FE2  90D8               	bcf	status,0,c
 20466   006FE4  3798               	rlcf	??_SD_SPI_SectorWrite& (0+255),f,b
 20467   006FE6  3799               	rlcf	(??_SD_SPI_SectorWrite+1)& (0+255),f,b
 20468   006FE8  2EE8               	decfsz	wreg,f,c
 20469   006FEA  EFF1  F037         	goto	u16055
 20470   006FEE  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 20471   006FF0  2594               	addwf	SD_SPI_SectorWrite@buffer& (0+255),w,b
 20472   006FF2  6FA4               	movwf	(SD_SPI_SectorWrite@info+6)& (0+255),b
 20473   006FF4  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 20474   006FF6  2195               	addwfc	(SD_SPI_SectorWrite@buffer+1)& (0+255),w,b
 20475   006FF8  6FA5               	movwf	(SD_SPI_SectorWrite@info+7)& (0+255),b
 20476   006FFA                     
 20477                           ; BSR set to: 0
 20478                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 20479   006FFA  519C               	movf	SD_SPI_SectorWrite@i& (0+255),w,b
 20480   006FFC  2590               	addwf	SD_SPI_SectorWrite@sector_address& (0+255),w,b
 20481   006FFE  6FA6               	movwf	(SD_SPI_SectorWrite@info+8)& (0+255),b
 20482   007000  519D               	movf	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 20483   007002  2191               	addwfc	(SD_SPI_SectorWrite@sector_address+1)& (0+255),w,b
 20484   007004  6FA7               	movwf	(SD_SPI_SectorWrite@info+9)& (0+255),b
 20485   007006  0E00               	movlw	0
 20486   007008  2192               	addwfc	(SD_SPI_SectorWrite@sector_address+2)& (0+255),w,b
 20487   00700A  6FA8               	movwf	(SD_SPI_SectorWrite@info+10)& (0+255),b
 20488   00700C  0E00               	movlw	0
 20489   00700E  2193               	addwfc	(SD_SPI_SectorWrite@sector_address+3)& (0+255),w,b
 20490   007010  6FA9               	movwf	(SD_SPI_SectorWrite@info+11)& (0+255),b
 20491                           
 20492                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 20493   007012  0E01               	movlw	1
 20494   007014  6FAA               	movwf	(SD_SPI_SectorWrite@info+12)& (0+255),b
 20495   007016                     
 20496                           ; BSR set to: 0
 20497                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 20498   007016  0E97               	movlw	low (_spiMaster+2)
 20499   007018  6EF6               	movwf	tblptrl,c
 20500   00701A  0EFF               	movlw	high (_spiMaster+2)
 20501   00701C  6EF7               	movwf	tblptrh,c
 20502   00701E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20503   00701E  6AF8               	clrf	tblptru,c
 20504   007020                     	endif
 20505   007020                     	if	0	;tblptru may be non-zero
 20506   007020                     	endif
 20507   007020  0009               	tblrd		*+
 20508   007022  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 20509   007028  0009               	tblrd		*+
 20510   00702A  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 20511   007030  D802               	call	u16068
 20512   007032  EF24  F038         	goto	u16069
 20513   007036                     u16068:
 20514   007036  0005               	push	
 20515   007038  6EFA               	movwf	pclath,c
 20516   00703A  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 20517   00703C  6EFD               	movwf	tosl,c
 20518   00703E  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 20519   007040  6EFE               	movwf	tosh,c
 20520   007042  6AFF               	clrf	tosu,c
 20521   007044  50FA               	movf	pclath,w,c
 20522   007046  0012               	return		;indir
 20523   007048                     u16069:
 20524   007048  0900               	iorlw	0
 20525   00704A  A4D8               	btfss	status,2,c
 20526   00704C  EF2A  F038         	goto	u16071
 20527   007050  EF2C  F038         	goto	u16070
 20528   007054                     u16071:
 20529   007054  EF2F  F038         	goto	l1581
 20530   007058                     u16070:
 20531   007058                     
 20532                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 20533   007058  0E00               	movlw	0
 20534   00705A  EF77  F038         	goto	l1580
 20535   00705E                     l1581:
 20536   00705E  9ABA               	bcf	186,5,c	;volatile
 20537   007060                     l14021:
 20538                           
 20539                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 20540   007060  0E9E               	movlw	low SD_SPI_SectorWrite@info
 20541   007062  0100               	movlb	0	; () banked
 20542   007064  6F82               	movwf	SD_SPI_AsyncWriteTasks@info& (0+255),b
 20543   007066  EC97  F013         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 20544   00706A  0100               	movlb	0	; () banked
 20545   00706C  6F9B               	movwf	SD_SPI_SectorWrite@status& (0+255),b
 20546   00706E                     
 20547                           ; BSR set to: 0
 20548                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 20549   00706E  519B               	movf	SD_SPI_SectorWrite@status& (0+255),w,b
 20550   007070  A4D8               	btfss	status,2,c
 20551   007072  EF3D  F038         	goto	u16081
 20552   007076  EF3F  F038         	goto	u16080
 20553   00707A                     u16081:
 20554   00707A  EF43  F038         	goto	l14029
 20555   00707E                     u16080:
 20556   00707E                     
 20557                           ; BSR set to: 0
 20558                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 20559   00707E  0E01               	movlw	1
 20560   007080  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 20561                           
 20562                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 20563   007082  EF4D  F038         	goto	l1589
 20564   007086                     l14029:
 20565                           
 20566                           ; BSR set to: 0
 20567   007086  299B               	incf	SD_SPI_SectorWrite@status& (0+255),w,b
 20568   007088  A4D8               	btfss	status,2,c
 20569   00708A  EF49  F038         	goto	u16091
 20570   00708E  EF4B  F038         	goto	u16090
 20571   007092                     u16091:
 20572   007092  EF30  F038         	goto	l14021
 20573   007096                     u16090:
 20574   007096                     
 20575                           ; BSR set to: 0
 20576                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 20577   007096  0E00               	movlw	0
 20578   007098  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 20579   00709A                     l1589:
 20580                           
 20581                           ; BSR set to: 0
 20582   00709A  8ABA               	bsf	186,5,c	;volatile
 20583   00709C                     
 20584                           ; BSR set to: 0
 20585                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 20586   00709C  0E95               	movlw	low _spiMaster
 20587   00709E  6EF6               	movwf	tblptrl,c
 20588   0070A0                     	if	1	;There is more than 1 active tblptr byte
 20589   0070A0  0EFF               	movlw	high _spiMaster
 20590   0070A2  6EF7               	movwf	tblptrh,c
 20591   0070A4                     	endif
 20592   0070A4                     	if	1	;There are 3 active tblptr bytes
 20593   0070A4  0E00               	movlw	low (_spiMaster shr (0+16))
 20594   0070A6  6EF8               	movwf	tblptru,c
 20595   0070A8                     	endif
 20596   0070A8  0009               	tblrd		*+
 20597   0070AA  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 20598   0070B0  0009               	tblrd		*+
 20599   0070B2  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 20600   0070B8  D802               	call	u16108
 20601   0070BA  EF68  F038         	goto	u16109
 20602   0070BE                     u16108:
 20603   0070BE  0005               	push	
 20604   0070C0  6EFA               	movwf	pclath,c
 20605   0070C2  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 20606   0070C4  6EFD               	movwf	tosl,c
 20607   0070C6  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 20608   0070C8  6EFE               	movwf	tosh,c
 20609   0070CA  6AFF               	clrf	tosu,c
 20610   0070CC  50FA               	movf	pclath,w,c
 20611   0070CE  0012               	return		;indir
 20612   0070D0                     u16109:
 20613   0070D0                     
 20614                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 20615   0070D0  0100               	movlb	0	; () banked
 20616   0070D2  4B9C               	infsnz	SD_SPI_SectorWrite@i& (0+255),f,b
 20617   0070D4  2B9D               	incf	(SD_SPI_SectorWrite@i+1)& (0+255),f,b
 20618   0070D6                     l14037:
 20619                           
 20620                           ; BSR set to: 0
 20621   0070D6  5196               	movf	SD_SPI_SectorWrite@sector_count& (0+255),w,b
 20622   0070D8  5D9C               	subwf	SD_SPI_SectorWrite@i& (0+255),w,b
 20623   0070DA  5197               	movf	(SD_SPI_SectorWrite@sector_count+1)& (0+255),w,b
 20624   0070DC  599D               	subwfb	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 20625   0070DE  A0D8               	btfss	status,0,c
 20626   0070E0  EF74  F038         	goto	u16111
 20627   0070E4  EF76  F038         	goto	u16110
 20628   0070E8                     u16111:
 20629   0070E8  EFE0  F037         	goto	l14009
 20630   0070EC                     u16110:
 20631   0070EC                     
 20632                           ; BSR set to: 0
 20633                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 20634   0070EC  519A               	movf	SD_SPI_SectorWrite@result& (0+255),w,b
 20635   0070EE                     l1580:
 20636   0070EE  0012               	return		;funcret
 20637   0070F0                     __end_of_SD_SPI_SectorWrite:
 20638                           	callstack 0
 20639                           
 20640 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 20641 ;; Defined at:
 20642 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20643 ;; Parameters:    Size  Location     Type
 20644 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 20645 ;;		 -> SD_SPI_SectorWrite@info(13), 
 20646 ;; Auto vars:     Size  Location     Type
 20647 ;;  response        5   39[BANK0 ] struct .
 20648 ;;  preEraseBloc    4   44[BANK0 ] unsigned long 
 20649 ;; Return value:  Size  Location     Type
 20650 ;;                  1    wreg      unsigned char 
 20651 ;; Registers used:
 20652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20653 ;; Tracked objects:
 20654 ;;		On entry : 0/0
 20655 ;;		On exit  : 0/0
 20656 ;;		Unchanged: 0/0
 20657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20658 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20659 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20661 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20662 ;;Total ram usage:       14 bytes
 20663 ;; Hardware stack levels used: 1
 20664 ;; Hardware stack levels required when called: 7
 20665 ;; This function calls:
 20666 ;;		_SD_SendCmd
 20667 ;;		_SPI1_ExchangeBlock
 20668 ;;		_SPI1_ExchangeByte
 20669 ;; This function is called by:
 20670 ;;		_SD_SPI_SectorWrite
 20671 ;; This function uses a non-reentrant model
 20672 ;;
 20673                           
 20674                           	psect	text75
 20675   00272E                     __ptext75:
 20676                           	callstack 0
 20677   00272E                     _SD_SPI_AsyncWriteTasks:
 20678                           	callstack 19
 20679   00272E                     
 20680                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 20681   00272E  EFD8  F016         	goto	l13995
 20682   002732                     l13809:
 20683                           
 20684                           ; BSR set to: 0
 20685                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 20686   002732  0E00               	movlw	0
 20687   002734  EFF9  F016         	goto	l1717
 20688   002738                     l13813:
 20689                           
 20690                           ; BSR set to: 0
 20691                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 20692   002738  0E02               	movlw	2
 20693   00273A  6E53               	movwf	(_mediaInformation+3)^0,c
 20694                           
 20695                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 20696   00273C  0E02               	movlw	2
 20697   00273E  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 20698   002740  0E00               	movlw	0
 20699   002742  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 20700   002744                     
 20701                           ; BSR set to: 0
 20702                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 20703   002744  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20704   002746  6ED9               	movwf	fsr2l,c
 20705   002748  6ADA               	clrf	fsr2h,c
 20706   00274A  EE10  F02D         	lfsr	1,_ioInfo
 20707   00274E  0E0C               	movlw	12
 20708   002750                     u15691:
 20709   002750  006F FF6F FFE3     	movff	plusw2,plusw1
 20710   002756  06E8               	decf	wreg,f,c
 20711   002758  E2FB               	bc	u15691
 20712   00275A                     
 20713                           ; BSR set to: 0
 20714                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 20715   00275A  5032               	movf	(_ioInfo+5)^0,w,c
 20716   00275C  1031               	iorwf	(_ioInfo+4)^0,w,c
 20717   00275E  E108               	bnz	u15701
 20718   002760  042F               	decf	(_ioInfo+2)^0,w,c
 20719   002762  0E02               	movlw	2
 20720   002764  5830               	subwfb	(_ioInfo+3)^0,w,c
 20721   002766  B0D8               	btfsc	status,0,c
 20722   002768  EFB8  F013         	goto	u15701
 20723   00276C  EFBA  F013         	goto	u15700
 20724   002770                     u15701:
 20725   002770  EFBE  F013         	goto	l13821
 20726   002774                     u15700:
 20727   002774                     
 20728                           ; BSR set to: 0
 20729                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 20730   002774  0E0A               	movlw	10
 20731   002776  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 20732                           
 20733                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 20734   002778  EF13  F014         	goto	l13835
 20735   00277C                     l13821:
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 20739   00277C  0E0B               	movlw	11
 20740   00277E  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 20741   002780                     
 20742                           ; BSR set to: 0
 20743                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 20744   002780  C02F  F083         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 20745   002784  C030  F084         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 20746   002788  C031  F085         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 20747   00278C  C032  F086         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 20748   002790  0E0A               	movlw	10
 20749   002792  EFD0  F013         	goto	u15710
 20750   002796                     u15715:
 20751   002796  90D8               	bcf	status,0,c
 20752   002798  3386               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),f,b
 20753   00279A  3385               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),f,b
 20754   00279C  3384               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),f,b
 20755   00279E  3383               	rrcf	??_SD_SPI_AsyncWriteTasks& (0+255),f,b
 20756   0027A0                     u15710:
 20757   0027A0  2EE8               	decfsz	wreg,f,c
 20758   0027A2  EFCB  F013         	goto	u15715
 20759   0027A6  C083  F08C         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 20760   0027AA  C084  F08D         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 20761   0027AE  C085  F08E         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 20762   0027B2  C086  F08F         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 20763   0027B6                     
 20764                           ; BSR set to: 0
 20765                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 20766   0027B6  518C               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),w,b
 20767   0027B8  118D               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),w,b
 20768   0027BA  118E               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),w,b
 20769   0027BC  118F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),w,b
 20770   0027BE  A4D8               	btfss	status,2,c
 20771   0027C0  EFE4  F013         	goto	u15721
 20772   0027C4  EFE6  F013         	goto	u15720
 20773   0027C8                     u15721:
 20774   0027C8  EFEC  F013         	goto	l13829
 20775   0027CC                     u15720:
 20776   0027CC                     
 20777                           ; BSR set to: 0
 20778                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 20779   0027CC  0E01               	movlw	1
 20780   0027CE  278C               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),f,b
 20781   0027D0  0E00               	movlw	0
 20782   0027D2  238D               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),f,b
 20783   0027D4  238E               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),f,b
 20784   0027D6  238F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),f,b
 20785   0027D8                     l13829:
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 20789   0027D8  0E00               	movlw	0
 20790   0027DA  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 20791   0027DC  0E00               	movlw	0
 20792   0027DE  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 20793   0027E0  0E00               	movlw	0
 20794   0027E2  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 20795   0027E4  0E00               	movlw	0
 20796   0027E6  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 20797   0027E8  0E0F               	movlw	15
 20798   0027EA  EC82  F01C         	call	_SD_SendCmd
 20799   0027EE  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 20800   0027F2  0E04               	movlw	4
 20801   0027F4                     u15731:
 20802   0027F4  006F FFAF FFDB     	movff	plusw0,plusw2
 20803   0027FA  06E8               	decf	wreg,f,c
 20804   0027FC  E2FB               	bc	u15731
 20805   0027FE                     
 20806                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 20807   0027FE  0100               	movlb	0	; () banked
 20808   002800  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 20809   002802  A4D8               	btfss	status,2,c
 20810   002804  EF06  F014         	goto	u15741
 20811   002808  EF08  F014         	goto	u15740
 20812   00280C                     u15741:
 20813   00280C  EF13  F014         	goto	l13835
 20814   002810                     u15740:
 20815   002810                     
 20816                           ; BSR set to: 0
 20817                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 20818   002810  C08C  F06B         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 20819   002814  C08D  F06C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 20820   002818  C08E  F06D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 20821   00281C  C08F  F06E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 20822   002820  0E13               	movlw	19
 20823   002822  EC82  F01C         	call	_SD_SendCmd
 20824   002826                     l13835:
 20825                           
 20826                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 20827   002826  5058               	movf	(_mediaInformation+8)^0,w,c
 20828   002828  A4D8               	btfss	status,2,c
 20829   00282A  EF19  F014         	goto	u15751
 20830   00282E  EF1B  F014         	goto	u15750
 20831   002832                     u15751:
 20832   002832  EF24  F014         	goto	l13839
 20833   002836                     u15750:
 20834   002836                     
 20835                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 20836   002836  0E09               	movlw	9
 20837   002838                     u15765:
 20838   002838  90D8               	bcf	status,0,c
 20839   00283A  3635               	rlcf	(_ioInfo+8)^0,f,c
 20840   00283C  3636               	rlcf	(_ioInfo+9)^0,f,c
 20841   00283E  3637               	rlcf	(_ioInfo+10)^0,f,c
 20842   002840  3638               	rlcf	(_ioInfo+11)^0,f,c
 20843   002842  2EE8               	decfsz	wreg,f,c
 20844   002844  EF1C  F014         	goto	u15765
 20845   002848                     l13839:
 20846                           
 20847                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 20848   002848  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 20849   00284C  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 20850   002850  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 20851   002854  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 20852   002858  504A               	movf	SD_SPI_AsyncWriteTasks@command^0,w,c
 20853   00285A  EC82  F01C         	call	_SD_SendCmd
 20854   00285E  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 20855   002862  0E04               	movlw	4
 20856   002864                     u15771:
 20857   002864  006F FFAF FFDB     	movff	plusw0,plusw2
 20858   00286A  06E8               	decf	wreg,f,c
 20859   00286C  E2FB               	bc	u15771
 20860   00286E                     
 20861                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 20862   00286E  0100               	movlb	0	; () banked
 20863   002870  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 20864   002872  B4D8               	btfsc	status,2,c
 20865   002874  EF3E  F014         	goto	u15781
 20866   002878  EF40  F014         	goto	u15780
 20867   00287C                     u15781:
 20868   00287C  EF4A  F014         	goto	l13851
 20869   002880                     u15780:
 20870   002880                     
 20871                           ; BSR set to: 0
 20872                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 20873   002880  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20874   002882  6ED9               	movwf	fsr2l,c
 20875   002884  6ADA               	clrf	fsr2h,c
 20876   002886  0E0C               	movlw	12
 20877   002888  26D9               	addwf	fsr2l,f,c
 20878   00288A  0EFF               	movlw	255
 20879   00288C  6EDF               	movwf	indf2,c
 20880   00288E                     l13845:
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 20884   00288E  0EFF               	movlw	255
 20885   002890  EFF9  F016         	goto	l1717
 20886   002894                     l13851:
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 20890   002894  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20891   002896  6ED9               	movwf	fsr2l,c
 20892   002898  6ADA               	clrf	fsr2h,c
 20893   00289A  0E0C               	movlw	12
 20894   00289C  26D9               	addwf	fsr2l,f,c
 20895   00289E  0E02               	movlw	2
 20896   0028A0  6EDF               	movwf	indf2,c
 20897   0028A2                     l13853:
 20898                           
 20899                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 20900   0028A2  0E02               	movlw	2
 20901   0028A4  EFF9  F016         	goto	l1717
 20902   0028A8                     l13857:
 20903                           
 20904                           ; BSR set to: 0
 20905                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 20906   0028A8  0E02               	movlw	2
 20907   0028AA  1843               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 20908   0028AC  1042               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 20909   0028AE  A4D8               	btfss	status,2,c
 20910   0028B0  EF5C  F014         	goto	u15791
 20911   0028B4  EF5E  F014         	goto	u15790
 20912   0028B8                     u15791:
 20913   0028B8  EF9D  F014         	goto	l13865
 20914   0028BC                     u15790:
 20915   0028BC                     
 20916                           ; BSR set to: 0
 20917                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 20918   0028BC  0E0B               	movlw	11
 20919   0028BE  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 20920   0028C0  A4D8               	btfss	status,2,c
 20921   0028C2  EF65  F014         	goto	u15801
 20922   0028C6  EF67  F014         	goto	u15800
 20923   0028CA                     u15801:
 20924   0028CA  EF83  F014         	goto	l13863
 20925   0028CE                     u15800:
 20926   0028CE                     
 20927                           ; BSR set to: 0
 20928                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 20929   0028CE  0E99               	movlw	low (_spiMaster+4)
 20930   0028D0  6EF6               	movwf	tblptrl,c
 20931   0028D2  0EFF               	movlw	high (_spiMaster+4)
 20932   0028D4  6EF7               	movwf	tblptrh,c
 20933   0028D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20934   0028D6  6AF8               	clrf	tblptru,c
 20935   0028D8                     	endif
 20936   0028D8                     	if	0	;tblptru may be non-zero
 20937   0028D8                     	endif
 20938   0028D8  0009               	tblrd		*+
 20939   0028DA  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20940   0028E0  0009               	tblrd		*+
 20941   0028E2  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20942   0028E8  D802               	call	u15818
 20943   0028EA  EF81  F014         	goto	u15819
 20944   0028EE                     u15818:
 20945   0028EE  0005               	push	
 20946   0028F0  6EFA               	movwf	pclath,c
 20947   0028F2  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20948   0028F4  6EFD               	movwf	tosl,c
 20949   0028F6  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20950   0028F8  6EFE               	movwf	tosh,c
 20951   0028FA  6AFF               	clrf	tosu,c
 20952   0028FC  50FA               	movf	pclath,w,c
 20953   0028FE  0EFC               	movlw	252
 20954   002900  0012               	return		;indir
 20955   002902                     u15819:
 20956                           
 20957                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 20958   002902  EF9D  F014         	goto	l13865
 20959   002906                     l13863:
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 20963   002906  0E99               	movlw	low (_spiMaster+4)
 20964   002908  6EF6               	movwf	tblptrl,c
 20965   00290A  0EFF               	movlw	high (_spiMaster+4)
 20966   00290C  6EF7               	movwf	tblptrh,c
 20967   00290E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20968   00290E  6AF8               	clrf	tblptru,c
 20969   002910                     	endif
 20970   002910                     	if	0	;tblptru may be non-zero
 20971   002910                     	endif
 20972   002910  0009               	tblrd		*+
 20973   002912  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20974   002918  0009               	tblrd		*+
 20975   00291A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20976   002920  D802               	call	u15828
 20977   002922  EF9D  F014         	goto	u15829
 20978   002926                     u15828:
 20979   002926  0005               	push	
 20980   002928  6EFA               	movwf	pclath,c
 20981   00292A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20982   00292C  6EFD               	movwf	tosl,c
 20983   00292E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20984   002930  6EFE               	movwf	tosh,c
 20985   002932  6AFF               	clrf	tosu,c
 20986   002934  50FA               	movf	pclath,w,c
 20987   002936  0EFE               	movlw	254
 20988   002938  0012               	return		;indir
 20989   00293A                     u15829:
 20990   00293A                     l13865:
 20991                           
 20992                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 20993   00293A  0100               	movlb	0	; () banked
 20994   00293C  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20995   00293E  6ED9               	movwf	fsr2l,c
 20996   002940  6ADA               	clrf	fsr2h,c
 20997   002942  006F FF78  F02D    	movff	postinc2,_ioInfo
 20998   002948  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 20999   00294E                     
 21000                           ; BSR set to: 0
 21001                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 21002   00294E  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21003   002950  6ED9               	movwf	fsr2l,c
 21004   002952  6ADA               	clrf	fsr2h,c
 21005   002954  0E06               	movlw	6
 21006   002956  26D9               	addwf	fsr2l,f,c
 21007   002958  006F FF78  F033    	movff	postinc2,_ioInfo+6
 21008   00295E  006F FF74  F034    	movff	postdec2,_ioInfo+7
 21009   002964                     
 21010                           ; BSR set to: 0
 21011                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 21012   002964  502D               	movf	_ioInfo^0,w,c
 21013   002966  6F83               	movwf	??_SD_SPI_AsyncWriteTasks& (0+255),b
 21014   002968  502E               	movf	(_ioInfo+1)^0,w,c
 21015   00296A  6F84               	movwf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),b
 21016   00296C  6B85               	clrf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),b
 21017   00296E  6B86               	clrf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),b
 21018   002970  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21019   002972  5E2F               	subwf	(_ioInfo+2)^0,f,c
 21020   002974  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21021   002976  5A30               	subwfb	(_ioInfo+3)^0,f,c
 21022   002978  5185               	movf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),w,b
 21023   00297A  5A31               	subwfb	(_ioInfo+4)^0,f,c
 21024   00297C  5186               	movf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),w,b
 21025   00297E  5A32               	subwfb	(_ioInfo+5)^0,f,c
 21026   002980                     
 21027                           ; BSR set to: 0
 21028                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 21029   002980  502D               	movf	_ioInfo^0,w,c
 21030   002982  5E42               	subwf	SD_SPI_AsyncWriteTasks@blockCounter^0,f,c
 21031   002984  502E               	movf	(_ioInfo+1)^0,w,c
 21032   002986  5A43               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,f,c
 21033   002988                     
 21034                           ; BSR set to: 0
 21035                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 21036   002988  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 21037   00298C  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 21038   002990  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 21039   002994  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 21040   002998  0E9B               	movlw	low (_spiMaster+6)
 21041   00299A  6EF6               	movwf	tblptrl,c
 21042   00299C  0EFF               	movlw	high (_spiMaster+6)
 21043   00299E  6EF7               	movwf	tblptrh,c
 21044   0029A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21045   0029A0  6AF8               	clrf	tblptru,c
 21046   0029A2                     	endif
 21047   0029A2                     	if	0	;tblptru may be non-zero
 21048   0029A2                     	endif
 21049   0029A2  0009               	tblrd		*+
 21050   0029A4  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21051   0029AA  0009               	tblrd		*+
 21052   0029AC  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21053   0029B2  D802               	call	u15838
 21054   0029B4  EFE5  F014         	goto	u15839
 21055   0029B8                     u15838:
 21056   0029B8  0005               	push	
 21057   0029BA  6EFA               	movwf	pclath,c
 21058   0029BC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21059   0029BE  6EFD               	movwf	tosl,c
 21060   0029C0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21061   0029C2  6EFE               	movwf	tosh,c
 21062   0029C4  6AFF               	clrf	tosu,c
 21063   0029C6  50FA               	movf	pclath,w,c
 21064   0029C8  0012               	return		;indir
 21065   0029CA                     u15839:
 21066   0029CA                     
 21067                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 21068   0029CA  5042               	movf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 21069   0029CC  1043               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 21070   0029CE  A4D8               	btfss	status,2,c
 21071   0029D0  EFEC  F014         	goto	u15841
 21072   0029D4  EFEE  F014         	goto	u15840
 21073   0029D8                     u15841:
 21074   0029D8  EF51  F014         	goto	l13853
 21075   0029DC                     u15840:
 21076   0029DC                     
 21077                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 21078   0029DC  0E02               	movlw	2
 21079   0029DE  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 21080   0029E0  0E00               	movlw	0
 21081   0029E2  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 21082   0029E4                     
 21083                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 21084   0029E4  0E99               	movlw	low (_spiMaster+4)
 21085   0029E6  6EF6               	movwf	tblptrl,c
 21086   0029E8  0EFF               	movlw	high (_spiMaster+4)
 21087   0029EA  6EF7               	movwf	tblptrh,c
 21088   0029EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21089   0029EC  6AF8               	clrf	tblptru,c
 21090   0029EE                     	endif
 21091   0029EE                     	if	0	;tblptru may be non-zero
 21092   0029EE                     	endif
 21093   0029EE  0009               	tblrd		*+
 21094   0029F0  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21095   0029F6  0009               	tblrd		*+
 21096   0029F8  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21097   0029FE  D802               	call	u15858
 21098   002A00  EF0D  F015         	goto	u15859
 21099   002A04                     u15858:
 21100   002A04  0005               	push	
 21101   002A06  6EFA               	movwf	pclath,c
 21102   002A08  0100               	movlb	0	; () banked
 21103   002A0A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21104   002A0C  6EFD               	movwf	tosl,c
 21105   002A0E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21106   002A10  6EFE               	movwf	tosh,c
 21107   002A12  6AFF               	clrf	tosu,c
 21108   002A14  50FA               	movf	pclath,w,c
 21109   002A16  0EFF               	movlw	255
 21110   002A18  0012               	return		;indir
 21111   002A1A                     u15859:
 21112   002A1A                     
 21113                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 21114   002A1A  0E99               	movlw	low (_spiMaster+4)
 21115   002A1C  6EF6               	movwf	tblptrl,c
 21116   002A1E  0EFF               	movlw	high (_spiMaster+4)
 21117   002A20  6EF7               	movwf	tblptrh,c
 21118   002A22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21119   002A22  6AF8               	clrf	tblptru,c
 21120   002A24                     	endif
 21121   002A24                     	if	0	;tblptru may be non-zero
 21122   002A24                     	endif
 21123   002A24  0009               	tblrd		*+
 21124   002A26  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21125   002A2C  0009               	tblrd		*+
 21126   002A2E  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21127   002A34  D802               	call	u15868
 21128   002A36  EF28  F015         	goto	u15869
 21129   002A3A                     u15868:
 21130   002A3A  0005               	push	
 21131   002A3C  6EFA               	movwf	pclath,c
 21132   002A3E  0100               	movlb	0	; () banked
 21133   002A40  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21134   002A42  6EFD               	movwf	tosl,c
 21135   002A44  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21136   002A46  6EFE               	movwf	tosh,c
 21137   002A48  6AFF               	clrf	tosu,c
 21138   002A4A  50FA               	movf	pclath,w,c
 21139   002A4C  0EFF               	movlw	255
 21140   002A4E  0012               	return		;indir
 21141   002A50                     u15869:
 21142   002A50                     
 21143                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 21144   002A50  0E99               	movlw	low (_spiMaster+4)
 21145   002A52  6EF6               	movwf	tblptrl,c
 21146   002A54  0EFF               	movlw	high (_spiMaster+4)
 21147   002A56  6EF7               	movwf	tblptrh,c
 21148   002A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21149   002A58  6AF8               	clrf	tblptru,c
 21150   002A5A                     	endif
 21151   002A5A                     	if	0	;tblptru may be non-zero
 21152   002A5A                     	endif
 21153   002A5A  0009               	tblrd		*+
 21154   002A5C  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21155   002A62  0009               	tblrd		*+
 21156   002A64  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21157   002A6A  D802               	call	u15878
 21158   002A6C  EF43  F015         	goto	u15879
 21159   002A70                     u15878:
 21160   002A70  0005               	push	
 21161   002A72  6EFA               	movwf	pclath,c
 21162   002A74  0100               	movlb	0	; () banked
 21163   002A76  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21164   002A78  6EFD               	movwf	tosl,c
 21165   002A7A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21166   002A7C  6EFE               	movwf	tosh,c
 21167   002A7E  6AFF               	clrf	tosu,c
 21168   002A80  50FA               	movf	pclath,w,c
 21169   002A82  0EFF               	movlw	255
 21170   002A84  0012               	return		;indir
 21171   002A86                     u15879:
 21172   002A86  0B1F               	andlw	31
 21173   002A88  0A05               	xorlw	5
 21174   002A8A  B4D8               	btfsc	status,2,c
 21175   002A8C  EF4A  F015         	goto	u15881
 21176   002A90  EF4C  F015         	goto	u15880
 21177   002A94                     u15881:
 21178   002A94  EF57  F015         	goto	l13891
 21179   002A98                     u15880:
 21180   002A98                     
 21181                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 21182   002A98  0100               	movlb	0	; () banked
 21183   002A9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21184   002A9C  6ED9               	movwf	fsr2l,c
 21185   002A9E  6ADA               	clrf	fsr2h,c
 21186   002AA0  0E0C               	movlw	12
 21187   002AA2  26D9               	addwf	fsr2l,f,c
 21188   002AA4  0EFE               	movlw	254
 21189   002AA6  6EDF               	movwf	indf2,c
 21190   002AA8                     l13887:
 21191                           
 21192                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 21193   002AA8  0E03               	movlw	3
 21194   002AAA  EFF9  F016         	goto	l1717
 21195   002AAE                     l13891:
 21196                           
 21197                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 21198   002AAE  0100               	movlb	0	; () banked
 21199   002AB0  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21200   002AB2  6ED9               	movwf	fsr2l,c
 21201   002AB4  6ADA               	clrf	fsr2h,c
 21202   002AB6  0E0C               	movlw	12
 21203   002AB8  26D9               	addwf	fsr2l,f,c
 21204   002ABA  0E03               	movlw	3
 21205   002ABC  6EDF               	movwf	indf2,c
 21206   002ABE                     
 21207                           ; BSR set to: 0
 21208                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 21209   002ABE  0E00               	movlw	0
 21210   002AC0  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 21211   002AC2  0E00               	movlw	0
 21212   002AC4  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 21213   002AC6  0E0A               	movlw	10
 21214   002AC8  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 21215   002ACA  0E00               	movlw	0
 21216   002ACC  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 21217   002ACE  EF54  F015         	goto	l13887
 21218   002AD2                     l13903:
 21219                           
 21220                           ; BSR set to: 0
 21221                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 21222   002AD2  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 21223   002AD4  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 21224   002AD6  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 21225   002AD8  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 21226   002ADA  B4D8               	btfsc	status,2,c
 21227   002ADC  EF72  F015         	goto	u15891
 21228   002AE0  EF74  F015         	goto	u15890
 21229   002AE4                     u15891:
 21230   002AE4  EF44  F016         	goto	l13951
 21231   002AE8                     u15890:
 21232   002AE8                     
 21233                           ; BSR set to: 0
 21234                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 21235   002AE8  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 21236   002AEA  0E00               	movlw	0
 21237   002AEC  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 21238   002AEE  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 21239   002AF0  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 21240   002AF2                     
 21241                           ; BSR set to: 0
 21242                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 21243   002AF2  0E99               	movlw	low (_spiMaster+4)
 21244   002AF4  6EF6               	movwf	tblptrl,c
 21245   002AF6  0EFF               	movlw	high (_spiMaster+4)
 21246   002AF8  6EF7               	movwf	tblptrh,c
 21247   002AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21248   002AFA  6AF8               	clrf	tblptru,c
 21249   002AFC                     	endif
 21250   002AFC                     	if	0	;tblptru may be non-zero
 21251   002AFC                     	endif
 21252   002AFC  0009               	tblrd		*+
 21253   002AFE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21254   002B04  0009               	tblrd		*+
 21255   002B06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21256   002B0C  D802               	call	u15908
 21257   002B0E  EF93  F015         	goto	u15909
 21258   002B12                     u15908:
 21259   002B12  0005               	push	
 21260   002B14  6EFA               	movwf	pclath,c
 21261   002B16  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21262   002B18  6EFD               	movwf	tosl,c
 21263   002B1A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21264   002B1C  6EFE               	movwf	tosh,c
 21265   002B1E  6AFF               	clrf	tosu,c
 21266   002B20  50FA               	movf	pclath,w,c
 21267   002B22  0EFF               	movlw	255
 21268   002B24  0012               	return		;indir
 21269   002B26                     u15909:
 21270   002B26                     
 21271                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 21272   002B26  0E99               	movlw	low (_spiMaster+4)
 21273   002B28  6EF6               	movwf	tblptrl,c
 21274   002B2A  0EFF               	movlw	high (_spiMaster+4)
 21275   002B2C  6EF7               	movwf	tblptrh,c
 21276   002B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21277   002B2E  6AF8               	clrf	tblptru,c
 21278   002B30                     	endif
 21279   002B30                     	if	0	;tblptru may be non-zero
 21280   002B30                     	endif
 21281   002B30  0009               	tblrd		*+
 21282   002B32  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21283   002B38  0009               	tblrd		*+
 21284   002B3A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21285   002B40  D802               	call	u15918
 21286   002B42  EFAE  F015         	goto	u15919
 21287   002B46                     u15918:
 21288   002B46  0005               	push	
 21289   002B48  6EFA               	movwf	pclath,c
 21290   002B4A  0100               	movlb	0	; () banked
 21291   002B4C  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21292   002B4E  6EFD               	movwf	tosl,c
 21293   002B50  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21294   002B52  6EFE               	movwf	tosh,c
 21295   002B54  6AFF               	clrf	tosu,c
 21296   002B56  50FA               	movf	pclath,w,c
 21297   002B58  0EFF               	movlw	255
 21298   002B5A  0012               	return		;indir
 21299   002B5C                     u15919:
 21300   002B5C  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 21301   002B5E                     
 21302                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 21303   002B5E  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 21304   002B60  B4D8               	btfsc	status,2,c
 21305   002B62  EFB5  F015         	goto	u15921
 21306   002B66  EFB7  F015         	goto	u15920
 21307   002B6A                     u15921:
 21308   002B6A  EF54  F015         	goto	l13887
 21309   002B6E                     u15920:
 21310   002B6E                     
 21311                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 21312   002B6E  502F               	movf	(_ioInfo+2)^0,w,c
 21313   002B70  1030               	iorwf	(_ioInfo+3)^0,w,c
 21314   002B72  1031               	iorwf	(_ioInfo+4)^0,w,c
 21315   002B74  1032               	iorwf	(_ioInfo+5)^0,w,c
 21316   002B76  A4D8               	btfss	status,2,c
 21317   002B78  EFC0  F015         	goto	u15931
 21318   002B7C  EFC2  F015         	goto	u15930
 21319   002B80                     u15931:
 21320   002B80  EF3A  F016         	goto	l13939
 21321   002B84                     u15930:
 21322   002B84                     
 21323                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 21324   002B84  0E00               	movlw	0
 21325   002B86  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 21326   002B88  0E00               	movlw	0
 21327   002B8A  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 21328   002B8C  0E0A               	movlw	10
 21329   002B8E  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 21330   002B90  0E00               	movlw	0
 21331   002B92  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 21332   002B94                     
 21333                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 21334   002B94  0E0B               	movlw	11
 21335   002B96  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 21336   002B98  A4D8               	btfss	status,2,c
 21337   002B9A  EFD1  F015         	goto	u15941
 21338   002B9E  EFD3  F015         	goto	u15940
 21339   002BA2                     u15941:
 21340   002BA2  EF13  F016         	goto	l1738
 21341   002BA6                     u15940:
 21342   002BA6                     
 21343                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 21344   002BA6  0E99               	movlw	low (_spiMaster+4)
 21345   002BA8  6EF6               	movwf	tblptrl,c
 21346   002BAA  0EFF               	movlw	high (_spiMaster+4)
 21347   002BAC  6EF7               	movwf	tblptrh,c
 21348   002BAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21349   002BAE  6AF8               	clrf	tblptru,c
 21350   002BB0                     	endif
 21351   002BB0                     	if	0	;tblptru may be non-zero
 21352   002BB0                     	endif
 21353   002BB0  0009               	tblrd		*+
 21354   002BB2  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21355   002BB8  0009               	tblrd		*+
 21356   002BBA  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21357   002BC0  D802               	call	u15958
 21358   002BC2  EFEE  F015         	goto	u15959
 21359   002BC6                     u15958:
 21360   002BC6  0005               	push	
 21361   002BC8  6EFA               	movwf	pclath,c
 21362   002BCA  0100               	movlb	0	; () banked
 21363   002BCC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21364   002BCE  6EFD               	movwf	tosl,c
 21365   002BD0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21366   002BD2  6EFE               	movwf	tosh,c
 21367   002BD4  6AFF               	clrf	tosu,c
 21368   002BD6  50FA               	movf	pclath,w,c
 21369   002BD8  0EFD               	movlw	253
 21370   002BDA  0012               	return		;indir
 21371   002BDC                     u15959:
 21372                           
 21373                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 21374   002BDC  0E99               	movlw	low (_spiMaster+4)
 21375   002BDE  6EF6               	movwf	tblptrl,c
 21376   002BE0  0EFF               	movlw	high (_spiMaster+4)
 21377   002BE2  6EF7               	movwf	tblptrh,c
 21378   002BE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21379   002BE4  6AF8               	clrf	tblptru,c
 21380   002BE6                     	endif
 21381   002BE6                     	if	0	;tblptru may be non-zero
 21382   002BE6                     	endif
 21383   002BE6  0009               	tblrd		*+
 21384   002BE8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21385   002BEE  0009               	tblrd		*+
 21386   002BF0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21387   002BF6  D802               	call	u15968
 21388   002BF8  EF09  F016         	goto	u15969
 21389   002BFC                     u15968:
 21390   002BFC  0005               	push	
 21391   002BFE  6EFA               	movwf	pclath,c
 21392   002C00  0100               	movlb	0	; () banked
 21393   002C02  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21394   002C04  6EFD               	movwf	tosl,c
 21395   002C06  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21396   002C08  6EFE               	movwf	tosh,c
 21397   002C0A  6AFF               	clrf	tosu,c
 21398   002C0C  50FA               	movf	pclath,w,c
 21399   002C0E  0EFF               	movlw	255
 21400   002C10  0012               	return		;indir
 21401   002C12                     u15969:
 21402   002C12                     
 21403                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 21404   002C12  0100               	movlb	0	; () banked
 21405   002C14  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21406   002C16  6ED9               	movwf	fsr2l,c
 21407   002C18  6ADA               	clrf	fsr2h,c
 21408   002C1A  0E0C               	movlw	12
 21409   002C1C  26D9               	addwf	fsr2l,f,c
 21410   002C1E  0E04               	movlw	4
 21411   002C20  6EDF               	movwf	indf2,c
 21412   002C22  EF54  F015         	goto	l13887
 21413   002C26                     l1738:
 21414   002C26  8ABA               	bsf	186,5,c	;volatile
 21415   002C28                     
 21416                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 21417   002C28  0E99               	movlw	low (_spiMaster+4)
 21418   002C2A  6EF6               	movwf	tblptrl,c
 21419   002C2C  0EFF               	movlw	high (_spiMaster+4)
 21420   002C2E  6EF7               	movwf	tblptrh,c
 21421   002C30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21422   002C30  6AF8               	clrf	tblptru,c
 21423   002C32                     	endif
 21424   002C32                     	if	0	;tblptru may be non-zero
 21425   002C32                     	endif
 21426   002C32  0009               	tblrd		*+
 21427   002C34  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21428   002C3A  0009               	tblrd		*+
 21429   002C3C  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21430   002C42  D802               	call	u15978
 21431   002C44  EF2F  F016         	goto	u15979
 21432   002C48                     u15978:
 21433   002C48  0005               	push	
 21434   002C4A  6EFA               	movwf	pclath,c
 21435   002C4C  0100               	movlb	0	; () banked
 21436   002C4E  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21437   002C50  6EFD               	movwf	tosl,c
 21438   002C52  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21439   002C54  6EFE               	movwf	tosh,c
 21440   002C56  6AFF               	clrf	tosu,c
 21441   002C58  50FA               	movf	pclath,w,c
 21442   002C5A  0EFF               	movlw	255
 21443   002C5C  0012               	return		;indir
 21444   002C5E                     u15979:
 21445   002C5E                     
 21446                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 21447   002C5E  0100               	movlb	0	; () banked
 21448   002C60  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21449   002C62  6ED9               	movwf	fsr2l,c
 21450   002C64  6ADA               	clrf	fsr2h,c
 21451   002C66  0E0C               	movlw	12
 21452   002C68  26D9               	addwf	fsr2l,f,c
 21453   002C6A  6ADF               	clrf	indf2,c
 21454   002C6C                     l13933:
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 21458   002C6C  0E01               	movlw	1
 21459   002C6E  6E53               	movwf	(_mediaInformation+3)^0,c
 21460   002C70  EF99  F013         	goto	l13809
 21461   002C74                     l13939:
 21462                           
 21463                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 21464   002C74  0100               	movlb	0	; () banked
 21465   002C76  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21466   002C78  6ED9               	movwf	fsr2l,c
 21467   002C7A  6ADA               	clrf	fsr2h,c
 21468   002C7C  0E0C               	movlw	12
 21469   002C7E  26D9               	addwf	fsr2l,f,c
 21470   002C80  0E02               	movlw	2
 21471   002C82  6EDF               	movwf	indf2,c
 21472   002C84  EF51  F014         	goto	l13853
 21473   002C88                     l13951:
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 21477   002C88  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21478   002C8A  6ED9               	movwf	fsr2l,c
 21479   002C8C  6ADA               	clrf	fsr2h,c
 21480   002C8E  0E0C               	movlw	12
 21481   002C90  26D9               	addwf	fsr2l,f,c
 21482   002C92  0EFE               	movlw	254
 21483   002C94  6EDF               	movwf	indf2,c
 21484   002C96  EF54  F015         	goto	l13887
 21485   002C9A                     l13957:
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 21489   002C9A  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 21490   002C9C  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 21491   002C9E  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 21492   002CA0  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 21493   002CA2  B4D8               	btfsc	status,2,c
 21494   002CA4  EF56  F016         	goto	u15981
 21495   002CA8  EF58  F016         	goto	u15980
 21496   002CAC                     u15981:
 21497   002CAC  EFA5  F016         	goto	l13979
 21498   002CB0                     u15980:
 21499   002CB0                     
 21500                           ; BSR set to: 0
 21501                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 21502   002CB0  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 21503   002CB2  0E00               	movlw	0
 21504   002CB4  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 21505   002CB6  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 21506   002CB8  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 21507   002CBA                     
 21508                           ; BSR set to: 0
 21509                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 21510   002CBA  0E99               	movlw	low (_spiMaster+4)
 21511   002CBC  6EF6               	movwf	tblptrl,c
 21512   002CBE  0EFF               	movlw	high (_spiMaster+4)
 21513   002CC0  6EF7               	movwf	tblptrh,c
 21514   002CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21515   002CC2  6AF8               	clrf	tblptru,c
 21516   002CC4                     	endif
 21517   002CC4                     	if	0	;tblptru may be non-zero
 21518   002CC4                     	endif
 21519   002CC4  0009               	tblrd		*+
 21520   002CC6  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21521   002CCC  0009               	tblrd		*+
 21522   002CCE  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21523   002CD4  D802               	call	u15998
 21524   002CD6  EF77  F016         	goto	u15999
 21525   002CDA                     u15998:
 21526   002CDA  0005               	push	
 21527   002CDC  6EFA               	movwf	pclath,c
 21528   002CDE  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21529   002CE0  6EFD               	movwf	tosl,c
 21530   002CE2  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21531   002CE4  6EFE               	movwf	tosh,c
 21532   002CE6  6AFF               	clrf	tosu,c
 21533   002CE8  50FA               	movf	pclath,w,c
 21534   002CEA  0EFF               	movlw	255
 21535   002CEC  0012               	return		;indir
 21536   002CEE                     u15999:
 21537   002CEE  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 21538   002CF0                     
 21539                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 21540   002CF0  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 21541   002CF2  B4D8               	btfsc	status,2,c
 21542   002CF4  EF7E  F016         	goto	u16001
 21543   002CF8  EF80  F016         	goto	u16000
 21544   002CFC                     u16001:
 21545   002CFC  EF54  F015         	goto	l13887
 21546   002D00                     u16000:
 21547   002D00  8ABA               	bsf	186,5,c	;volatile
 21548   002D02                     
 21549                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 21550   002D02  0E99               	movlw	low (_spiMaster+4)
 21551   002D04  6EF6               	movwf	tblptrl,c
 21552   002D06  0EFF               	movlw	high (_spiMaster+4)
 21553   002D08  6EF7               	movwf	tblptrh,c
 21554   002D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21555   002D0A  6AF8               	clrf	tblptru,c
 21556   002D0C                     	endif
 21557   002D0C                     	if	0	;tblptru may be non-zero
 21558   002D0C                     	endif
 21559   002D0C  0009               	tblrd		*+
 21560   002D0E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21561   002D14  0009               	tblrd		*+
 21562   002D16  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21563   002D1C  D802               	call	u16018
 21564   002D1E  EF9C  F016         	goto	u16019
 21565   002D22                     u16018:
 21566   002D22  0005               	push	
 21567   002D24  6EFA               	movwf	pclath,c
 21568   002D26  0100               	movlb	0	; () banked
 21569   002D28  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21570   002D2A  6EFD               	movwf	tosl,c
 21571   002D2C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21572   002D2E  6EFE               	movwf	tosh,c
 21573   002D30  6AFF               	clrf	tosu,c
 21574   002D32  50FA               	movf	pclath,w,c
 21575   002D34  0EFF               	movlw	255
 21576   002D36  0012               	return		;indir
 21577   002D38                     u16019:
 21578   002D38                     
 21579                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 21580   002D38  0100               	movlb	0	; () banked
 21581   002D3A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21582   002D3C  6ED9               	movwf	fsr2l,c
 21583   002D3E  6ADA               	clrf	fsr2h,c
 21584   002D40  0E0C               	movlw	12
 21585   002D42  26D9               	addwf	fsr2l,f,c
 21586   002D44  6ADF               	clrf	indf2,c
 21587   002D46  EF36  F016         	goto	l13933
 21588   002D4A                     l13979:
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 21592   002D4A  0E00               	movlw	0
 21593   002D4C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21594   002D4E  0E00               	movlw	0
 21595   002D50  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21596   002D52  0E00               	movlw	0
 21597   002D54  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21598   002D56  0E00               	movlw	0
 21599   002D58  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21600   002D5A  0E05               	movlw	5
 21601   002D5C  EC82  F01C         	call	_SD_SendCmd
 21602   002D60  8ABA               	bsf	186,5,c	;volatile
 21603   002D62                     
 21604                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 21605   002D62  0E99               	movlw	low (_spiMaster+4)
 21606   002D64  6EF6               	movwf	tblptrl,c
 21607   002D66  0EFF               	movlw	high (_spiMaster+4)
 21608   002D68  6EF7               	movwf	tblptrh,c
 21609   002D6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21610   002D6A  6AF8               	clrf	tblptru,c
 21611   002D6C                     	endif
 21612   002D6C                     	if	0	;tblptru may be non-zero
 21613   002D6C                     	endif
 21614   002D6C  0009               	tblrd		*+
 21615   002D6E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 21616   002D74  0009               	tblrd		*+
 21617   002D76  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 21618   002D7C  D802               	call	u16028
 21619   002D7E  EFCC  F016         	goto	u16029
 21620   002D82                     u16028:
 21621   002D82  0005               	push	
 21622   002D84  6EFA               	movwf	pclath,c
 21623   002D86  0100               	movlb	0	; () banked
 21624   002D88  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 21625   002D8A  6EFD               	movwf	tosl,c
 21626   002D8C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 21627   002D8E  6EFE               	movwf	tosh,c
 21628   002D90  6AFF               	clrf	tosu,c
 21629   002D92  50FA               	movf	pclath,w,c
 21630   002D94  0EFF               	movlw	255
 21631   002D96  0012               	return		;indir
 21632   002D98                     u16029:
 21633   002D98                     
 21634                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 21635   002D98  0100               	movlb	0	; () banked
 21636   002D9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21637   002D9C  6ED9               	movwf	fsr2l,c
 21638   002D9E  6ADA               	clrf	fsr2h,c
 21639   002DA0  0E0C               	movlw	12
 21640   002DA2  26D9               	addwf	fsr2l,f,c
 21641   002DA4  0EFF               	movlw	255
 21642   002DA6  6EDF               	movwf	indf2,c
 21643   002DA8                     l13987:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 21647   002DA8  0E01               	movlw	1
 21648   002DAA  6E53               	movwf	(_mediaInformation+3)^0,c
 21649   002DAC  EF47  F014         	goto	l13845
 21650   002DB0                     l13995:
 21651   002DB0  0100               	movlb	0	; () banked
 21652   002DB2  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 21653   002DB4  6ED9               	movwf	fsr2l,c
 21654   002DB6  6ADA               	clrf	fsr2h,c
 21655   002DB8  0E0C               	movlw	12
 21656   002DBA  26D9               	addwf	fsr2l,f,c
 21657   002DBC  50DF               	movf	indf2,w,c
 21658                           
 21659                           ; Switch size 1, requested type "simple"
 21660                           ; Number of cases is 6, Range of values is 0 to 254
 21661                           ; switch strategies available:
 21662                           ; Name         Instructions Cycles
 21663                           ; simple_byte           19    10 (average)
 21664                           ;	Chosen strategy is simple_byte
 21665   002DBE  0A00               	xorlw	0	; case 0
 21666   002DC0  B4D8               	btfsc	status,2,c
 21667   002DC2  EF99  F013         	goto	l13809
 21668   002DC6  0A01               	xorlw	1	; case 1
 21669   002DC8  B4D8               	btfsc	status,2,c
 21670   002DCA  EF9C  F013         	goto	l13813
 21671   002DCE  0A03               	xorlw	3	; case 2
 21672   002DD0  B4D8               	btfsc	status,2,c
 21673   002DD2  EF54  F014         	goto	l13857
 21674   002DD6  0A01               	xorlw	1	; case 3
 21675   002DD8  B4D8               	btfsc	status,2,c
 21676   002DDA  EF69  F015         	goto	l13903
 21677   002DDE  0A07               	xorlw	7	; case 4
 21678   002DE0  B4D8               	btfsc	status,2,c
 21679   002DE2  EF4D  F016         	goto	l13957
 21680   002DE6  0AFA               	xorlw	250	; case 254
 21681   002DE8  B4D8               	btfsc	status,2,c
 21682   002DEA  EFA5  F016         	goto	l13979
 21683   002DEE  EFD4  F016         	goto	l13987
 21684   002DF2                     l1717:
 21685   002DF2  0012               	return		;funcret
 21686   002DF4                     __end_of_SD_SPI_AsyncWriteTasks:
 21687                           	callstack 0
 21688                           
 21689 ;; *************** function _disk_read *****************
 21690 ;; Defined at:
 21691 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 21692 ;; Parameters:    Size  Location     Type
 21693 ;;  pdrv            1    wreg     unsigned char 
 21694 ;;  buff            2   72[BANK0 ] PTR unsigned char 
 21695 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 21696 ;;		 -> NULL(0), 
 21697 ;;  sector          4   74[BANK0 ] unsigned long 
 21698 ;;  count           2   78[BANK0 ] unsigned int 
 21699 ;; Auto vars:     Size  Location     Type
 21700 ;;  pdrv            1   80[BANK0 ] unsigned char 
 21701 ;;  res             1   81[BANK0 ] enum E12
 21702 ;; Return value:  Size  Location     Type
 21703 ;;                  1    wreg      enum E12
 21704 ;; Registers used:
 21705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21706 ;; Tracked objects:
 21707 ;;		On entry : 0/0
 21708 ;;		On exit  : 0/0
 21709 ;;		Unchanged: 0/0
 21710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21711 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21714 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21715 ;;Total ram usage:       10 bytes
 21716 ;; Hardware stack levels used: 1
 21717 ;; Hardware stack levels required when called: 9
 21718 ;; This function calls:
 21719 ;;		_SD_SPI_SectorRead
 21720 ;; This function is called by:
 21721 ;;		_move_window
 21722 ;;		_f_open
 21723 ;;		_f_write
 21724 ;;		_f_read
 21725 ;; This function uses a non-reentrant model
 21726 ;;
 21727                           
 21728                           	psect	text76
 21729   0088D6                     __ptext76:
 21730                           	callstack 0
 21731   0088D6                     _disk_read:
 21732                           	callstack 19
 21733                           
 21734                           ;incstack = 0
 21735                           ;disk_read@pdrv stored from wreg
 21736   0088D6  0100               	movlb	0	; () banked
 21737   0088D8  6FB0               	movwf	disk_read@pdrv& (0+255),b
 21738   0088DA                     
 21739                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 21740   0088DA  0E04               	movlw	4
 21741   0088DC  0100               	movlb	0	; () banked
 21742   0088DE  6FB1               	movwf	disk_read@res& (0+255),b
 21743                           
 21744                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 21745   0088E0  EF96  F044         	goto	l14245
 21746   0088E4                     l14237:
 21747                           
 21748                           ; BSR set to: 0
 21749                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 21750   0088E4  C0AA  F08D         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 21751   0088E8  C0AB  F08E         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 21752   0088EC  C0AC  F08F         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 21753   0088F0  C0AD  F090         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 21754   0088F4  C0A8  F091         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 21755   0088F8  C0A9  F092         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 21756   0088FC  C0AE  F093         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 21757   008900  C0AF  F094         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 21758   008904  EC78  F038         	call	_SD_SPI_SectorRead
 21759   008908  06E8               	decf	wreg,f,c
 21760   00890A  A4D8               	btfss	status,2,c
 21761   00890C  EF8A  F044         	goto	u16401
 21762   008910  EF8C  F044         	goto	u16400
 21763   008914                     u16401:
 21764   008914  EF91  F044         	goto	l14241
 21765   008918                     u16400:
 21766   008918                     
 21767                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 21768   008918  0E00               	movlw	0
 21769   00891A  0100               	movlb	0	; () banked
 21770   00891C  6FB1               	movwf	disk_read@res& (0+255),b
 21771                           
 21772                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 21773   00891E  EF9D  F044         	goto	l14247
 21774   008922                     l14241:
 21775                           
 21776                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 21777   008922  0E01               	movlw	1
 21778   008924  0100               	movlb	0	; () banked
 21779   008926  6FB1               	movwf	disk_read@res& (0+255),b
 21780   008928  EF9D  F044         	goto	l14247
 21781   00892C                     l14245:
 21782                           
 21783                           ; BSR set to: 0
 21784   00892C  51B0               	movf	disk_read@pdrv& (0+255),w,b
 21785                           
 21786                           ; Switch size 1, requested type "simple"
 21787                           ; Number of cases is 1, Range of values is 0 to 0
 21788                           ; switch strategies available:
 21789                           ; Name         Instructions Cycles
 21790                           ; simple_byte            4     3 (average)
 21791                           ;	Chosen strategy is simple_byte
 21792   00892E  0A00               	xorlw	0	; case 0
 21793   008930  B4D8               	btfsc	status,2,c
 21794   008932  EF72  F044         	goto	l14237
 21795   008936  EF9D  F044         	goto	l14247
 21796   00893A                     l14247:
 21797                           
 21798                           ; BSR set to: 0
 21799                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 21800   00893A  51B1               	movf	disk_read@res& (0+255),w,b
 21801   00893C                     
 21802                           ; BSR set to: 0
 21803   00893C  0012               	return		;funcret
 21804   00893E                     __end_of_disk_read:
 21805                           	callstack 0
 21806                           
 21807 ;; *************** function _SD_SPI_SectorRead *****************
 21808 ;; Defined at:
 21809 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21810 ;; Parameters:    Size  Location     Type
 21811 ;;  sector_addre    4   45[BANK0 ] unsigned long 
 21812 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 21813 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 21814 ;;		 -> NULL(0), 
 21815 ;;  sector_count    2   51[BANK0 ] unsigned short 
 21816 ;; Auto vars:     Size  Location     Type
 21817 ;;  info           13   59[BANK0 ] struct SD_ASYNC_IO
 21818 ;;  i               2   57[BANK0 ] unsigned short 
 21819 ;;  status          1   56[BANK0 ] unsigned char 
 21820 ;;  result          1   55[BANK0 ] _Bool 
 21821 ;; Return value:  Size  Location     Type
 21822 ;;                  1    wreg      _Bool 
 21823 ;; Registers used:
 21824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21825 ;; Tracked objects:
 21826 ;;		On entry : 0/0
 21827 ;;		On exit  : 0/0
 21828 ;;		Unchanged: 0/0
 21829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21830 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21831 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21833 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21834 ;;Total ram usage:       27 bytes
 21835 ;; Hardware stack levels used: 1
 21836 ;; Hardware stack levels required when called: 8
 21837 ;; This function calls:
 21838 ;;		_SDFAST_open
 21839 ;;		_SDSLOW_open
 21840 ;;		_SD_SPI_AsyncReadTasks
 21841 ;;		_SPI1_Close
 21842 ;; This function is called by:
 21843 ;;		_disk_read
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           	psect	text77
 21848   0070F0                     __ptext77:
 21849                           	callstack 0
 21850   0070F0                     _SD_SPI_SectorRead:
 21851                           	callstack 19
 21852   0070F0                     
 21853                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 21854   0070F0  0E00               	movlw	0
 21855   0070F2  0100               	movlb	0	; () banked
 21856   0070F4  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 21857                           
 21858                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 21859   0070F6  0E00               	movlw	0
 21860   0070F8  6F9A               	movwf	(SD_SPI_SectorRead@i+1)& (0+255),b
 21861   0070FA  0E00               	movlw	0
 21862   0070FC  6F99               	movwf	SD_SPI_SectorRead@i& (0+255),b
 21863   0070FE  EF0C  F039         	goto	l14213
 21864   007102                     l14185:
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 21868   007102  0E02               	movlw	2
 21869   007104  6F9C               	movwf	(SD_SPI_SectorRead@info+1)& (0+255),b
 21870   007106  0E00               	movlw	0
 21871   007108  6F9B               	movwf	SD_SPI_SectorRead@info& (0+255),b
 21872                           
 21873                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 21874   00710A  0E00               	movlw	0
 21875   00710C  6F9D               	movwf	(SD_SPI_SectorRead@info+2)& (0+255),b
 21876   00710E  0E02               	movlw	2
 21877   007110  6F9E               	movwf	(SD_SPI_SectorRead@info+3)& (0+255),b
 21878   007112  0E00               	movlw	0
 21879   007114  6F9F               	movwf	(SD_SPI_SectorRead@info+4)& (0+255),b
 21880   007116  0E00               	movlw	0
 21881   007118  6FA0               	movwf	(SD_SPI_SectorRead@info+5)& (0+255),b
 21882   00711A                     
 21883                           ; BSR set to: 0
 21884                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 21885   00711A  C099  F095         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 21886   00711E  C09A  F096         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 21887   007122  0E09               	movlw	9
 21888   007124                     u16325:
 21889   007124  90D8               	bcf	status,0,c
 21890   007126  3795               	rlcf	??_SD_SPI_SectorRead& (0+255),f,b
 21891   007128  3796               	rlcf	(??_SD_SPI_SectorRead+1)& (0+255),f,b
 21892   00712A  2EE8               	decfsz	wreg,f,c
 21893   00712C  EF92  F038         	goto	u16325
 21894   007130  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 21895   007132  2591               	addwf	SD_SPI_SectorRead@buffer& (0+255),w,b
 21896   007134  6FA1               	movwf	(SD_SPI_SectorRead@info+6)& (0+255),b
 21897   007136  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 21898   007138  2192               	addwfc	(SD_SPI_SectorRead@buffer+1)& (0+255),w,b
 21899   00713A  6FA2               	movwf	(SD_SPI_SectorRead@info+7)& (0+255),b
 21900   00713C                     
 21901                           ; BSR set to: 0
 21902                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 21903   00713C  5199               	movf	SD_SPI_SectorRead@i& (0+255),w,b
 21904   00713E  258D               	addwf	SD_SPI_SectorRead@sector_address& (0+255),w,b
 21905   007140  6FA3               	movwf	(SD_SPI_SectorRead@info+8)& (0+255),b
 21906   007142  519A               	movf	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 21907   007144  218E               	addwfc	(SD_SPI_SectorRead@sector_address+1)& (0+255),w,b
 21908   007146  6FA4               	movwf	(SD_SPI_SectorRead@info+9)& (0+255),b
 21909   007148  0E00               	movlw	0
 21910   00714A  218F               	addwfc	(SD_SPI_SectorRead@sector_address+2)& (0+255),w,b
 21911   00714C  6FA5               	movwf	(SD_SPI_SectorRead@info+10)& (0+255),b
 21912   00714E  0E00               	movlw	0
 21913   007150  2190               	addwfc	(SD_SPI_SectorRead@sector_address+3)& (0+255),w,b
 21914   007152  6FA6               	movwf	(SD_SPI_SectorRead@info+11)& (0+255),b
 21915                           
 21916                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 21917   007154  0E01               	movlw	1
 21918   007156  6FA7               	movwf	(SD_SPI_SectorRead@info+12)& (0+255),b
 21919   007158                     
 21920                           ; BSR set to: 0
 21921                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 21922   007158  0E97               	movlw	low (_spiMaster+2)
 21923   00715A  6EF6               	movwf	tblptrl,c
 21924   00715C  0EFF               	movlw	high (_spiMaster+2)
 21925   00715E  6EF7               	movwf	tblptrh,c
 21926   007160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21927   007160  6AF8               	clrf	tblptru,c
 21928   007162                     	endif
 21929   007162                     	if	0	;tblptru may be non-zero
 21930   007162                     	endif
 21931   007162  0009               	tblrd		*+
 21932   007164  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 21933   00716A  0009               	tblrd		*+
 21934   00716C  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 21935   007172  D802               	call	u16338
 21936   007174  EFC5  F038         	goto	u16339
 21937   007178                     u16338:
 21938   007178  0005               	push	
 21939   00717A  6EFA               	movwf	pclath,c
 21940   00717C  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 21941   00717E  6EFD               	movwf	tosl,c
 21942   007180  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 21943   007182  6EFE               	movwf	tosh,c
 21944   007184  6AFF               	clrf	tosu,c
 21945   007186  50FA               	movf	pclath,w,c
 21946   007188  0012               	return		;indir
 21947   00718A                     u16339:
 21948   00718A  0900               	iorlw	0
 21949   00718C  A4D8               	btfss	status,2,c
 21950   00718E  EFCB  F038         	goto	u16341
 21951   007192  EFCD  F038         	goto	u16340
 21952   007196                     u16341:
 21953   007196  EFD0  F038         	goto	l1564
 21954   00719A                     u16340:
 21955   00719A                     
 21956                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 21957   00719A  0E00               	movlw	0
 21958   00719C  EF18  F039         	goto	l1563
 21959   0071A0                     l1564:
 21960   0071A0  9ABA               	bcf	186,5,c	;volatile
 21961   0071A2                     l14197:
 21962                           
 21963                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 21964   0071A2  0E9B               	movlw	low SD_SPI_SectorRead@info
 21965   0071A4  0100               	movlb	0	; () banked
 21966   0071A6  6F82               	movwf	SD_SPI_AsyncReadTasks@info& (0+255),b
 21967   0071A8  EC93  F023         	call	_SD_SPI_AsyncReadTasks	;wreg free
 21968   0071AC  0100               	movlb	0	; () banked
 21969   0071AE  6F98               	movwf	SD_SPI_SectorRead@status& (0+255),b
 21970   0071B0                     
 21971                           ; BSR set to: 0
 21972                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 21973   0071B0  5198               	movf	SD_SPI_SectorRead@status& (0+255),w,b
 21974   0071B2  A4D8               	btfss	status,2,c
 21975   0071B4  EFDE  F038         	goto	u16351
 21976   0071B8  EFE0  F038         	goto	u16350
 21977   0071BC                     u16351:
 21978   0071BC  EFE4  F038         	goto	l14205
 21979   0071C0                     u16350:
 21980   0071C0                     
 21981                           ; BSR set to: 0
 21982                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 21983   0071C0  0E01               	movlw	1
 21984   0071C2  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 21985                           
 21986                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 21987   0071C4  EFEE  F038         	goto	l1572
 21988   0071C8                     l14205:
 21989                           
 21990                           ; BSR set to: 0
 21991   0071C8  2998               	incf	SD_SPI_SectorRead@status& (0+255),w,b
 21992   0071CA  A4D8               	btfss	status,2,c
 21993   0071CC  EFEA  F038         	goto	u16361
 21994   0071D0  EFEC  F038         	goto	u16360
 21995   0071D4                     u16361:
 21996   0071D4  EFD1  F038         	goto	l14197
 21997   0071D8                     u16360:
 21998   0071D8                     
 21999                           ; BSR set to: 0
 22000                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 22001   0071D8  0E00               	movlw	0
 22002   0071DA  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 22003   0071DC                     l1572:
 22004                           
 22005                           ; BSR set to: 0
 22006   0071DC  8ABA               	bsf	186,5,c	;volatile
 22007   0071DE                     
 22008                           ; BSR set to: 0
 22009                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 22010   0071DE  0E95               	movlw	low _spiMaster
 22011   0071E0  6EF6               	movwf	tblptrl,c
 22012   0071E2                     	if	1	;There is more than 1 active tblptr byte
 22013   0071E2  0EFF               	movlw	high _spiMaster
 22014   0071E4  6EF7               	movwf	tblptrh,c
 22015   0071E6                     	endif
 22016   0071E6                     	if	1	;There are 3 active tblptr bytes
 22017   0071E6  0E00               	movlw	low (_spiMaster shr (0+16))
 22018   0071E8  6EF8               	movwf	tblptru,c
 22019   0071EA                     	endif
 22020   0071EA  0009               	tblrd		*+
 22021   0071EC  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 22022   0071F2  0009               	tblrd		*+
 22023   0071F4  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 22024   0071FA  D802               	call	u16378
 22025   0071FC  EF09  F039         	goto	u16379
 22026   007200                     u16378:
 22027   007200  0005               	push	
 22028   007202  6EFA               	movwf	pclath,c
 22029   007204  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 22030   007206  6EFD               	movwf	tosl,c
 22031   007208  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 22032   00720A  6EFE               	movwf	tosh,c
 22033   00720C  6AFF               	clrf	tosu,c
 22034   00720E  50FA               	movf	pclath,w,c
 22035   007210  0012               	return		;indir
 22036   007212                     u16379:
 22037   007212                     
 22038                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 22039   007212  0100               	movlb	0	; () banked
 22040   007214  4B99               	infsnz	SD_SPI_SectorRead@i& (0+255),f,b
 22041   007216  2B9A               	incf	(SD_SPI_SectorRead@i+1)& (0+255),f,b
 22042   007218                     l14213:
 22043                           
 22044                           ; BSR set to: 0
 22045   007218  5193               	movf	SD_SPI_SectorRead@sector_count& (0+255),w,b
 22046   00721A  5D99               	subwf	SD_SPI_SectorRead@i& (0+255),w,b
 22047   00721C  5194               	movf	(SD_SPI_SectorRead@sector_count+1)& (0+255),w,b
 22048   00721E  599A               	subwfb	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 22049   007220  A0D8               	btfss	status,0,c
 22050   007222  EF15  F039         	goto	u16381
 22051   007226  EF17  F039         	goto	u16380
 22052   00722A                     u16381:
 22053   00722A  EF81  F038         	goto	l14185
 22054   00722E                     u16380:
 22055   00722E                     
 22056                           ; BSR set to: 0
 22057                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 22058   00722E  5197               	movf	SD_SPI_SectorRead@result& (0+255),w,b
 22059   007230                     l1563:
 22060   007230  0012               	return		;funcret
 22061   007232                     __end_of_SD_SPI_SectorRead:
 22062                           	callstack 0
 22063                           
 22064 ;; *************** function _SPI1_Close *****************
 22065 ;; Defined at:
 22066 ;;		line 96 in file "mcc_generated_files/spi1.c"
 22067 ;; Parameters:    Size  Location     Type
 22068 ;;		None
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;		None
 22071 ;; Return value:  Size  Location     Type
 22072 ;;                  1    wreg      void 
 22073 ;; Registers used:
 22074 ;;		None
 22075 ;; Tracked objects:
 22076 ;;		On entry : 0/0
 22077 ;;		On exit  : 0/0
 22078 ;;		Unchanged: 0/0
 22079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22084 ;;Total ram usage:        0 bytes
 22085 ;; Hardware stack levels used: 1
 22086 ;; Hardware stack levels required when called: 5
 22087 ;; This function calls:
 22088 ;;		Nothing
 22089 ;; This function is called by:
 22090 ;;		_SD_SPI_SectorWrite
 22091 ;;		_SD_SPI_SectorRead
 22092 ;;		_SD_SPI_MediaInitialize
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           
 22096                           	psect	text78
 22097   0091B4                     __ptext78:
 22098                           	callstack 0
 22099   0091B4                     _SPI1_Close:
 22100                           	callstack 21
 22101   0091B4                     
 22102                           ;mcc_generated_files/spi1.c: 98:     SPI1CON0bits.EN = 0;
 22103   0091B4  013D               	movlb	61	; () banked
 22104   0091B6  9F14               	bcf	20,7,b	;volatile
 22105   0091B8                     
 22106                           ; BSR set to: 61
 22107   0091B8  0012               	return		;funcret
 22108   0091BA                     __end_of_SPI1_Close:
 22109                           	callstack 0
 22110                           
 22111 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 22112 ;; Defined at:
 22113 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 22114 ;; Parameters:    Size  Location     Type
 22115 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 22116 ;;		 -> SD_SPI_SectorRead@info(13), 
 22117 ;; Auto vars:     Size  Location     Type
 22118 ;;  response        5   39[BANK0 ] struct .
 22119 ;;  bData           1   44[BANK0 ] unsigned char 
 22120 ;; Return value:  Size  Location     Type
 22121 ;;                  1    wreg      unsigned char 
 22122 ;; Registers used:
 22123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22124 ;; Tracked objects:
 22125 ;;		On entry : 0/0
 22126 ;;		On exit  : 0/0
 22127 ;;		Unchanged: 0/0
 22128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22129 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22130 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22132 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22133 ;;Total ram usage:       11 bytes
 22134 ;; Hardware stack levels used: 1
 22135 ;; Hardware stack levels required when called: 7
 22136 ;; This function calls:
 22137 ;;		_SD_SendCmd
 22138 ;;		_SPI1_ExchangeBlock
 22139 ;;		_SPI1_ExchangeByte
 22140 ;;		_memset
 22141 ;; This function is called by:
 22142 ;;		_SD_SPI_SectorRead
 22143 ;; This function uses a non-reentrant model
 22144 ;;
 22145                           
 22146                           	psect	text79
 22147   004726                     __ptext79:
 22148                           	callstack 0
 22149   004726                     _SD_SPI_AsyncReadTasks:
 22150                           	callstack 19
 22151   004726                     
 22152                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 22153   004726  EF9A  F025         	goto	l14181
 22154   00472A                     l14045:
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 22158   00472A  0E00               	movlw	0
 22159   00472C  EFBB  F025         	goto	l1678
 22160   004730                     l14049:
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 22164   004730  0E02               	movlw	2
 22165   004732  6E53               	movwf	(_mediaInformation+3)^0,c
 22166                           
 22167                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 22168   004734  0E02               	movlw	2
 22169   004736  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 22170   004738  0E00               	movlw	0
 22171   00473A  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 22172   00473C                     
 22173                           ; BSR set to: 0
 22174                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 22175   00473C  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22176   00473E  6ED9               	movwf	fsr2l,c
 22177   004740  6ADA               	clrf	fsr2h,c
 22178   004742  EE10  F02D         	lfsr	1,_ioInfo
 22179   004746  0E0C               	movlw	12
 22180   004748                     u16121:
 22181   004748  006F FF6F FFE3     	movff	plusw2,plusw1
 22182   00474E  06E8               	decf	wreg,f,c
 22183   004750  E2FB               	bc	u16121
 22184   004752                     
 22185                           ; BSR set to: 0
 22186                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 22187   004752  5058               	movf	(_mediaInformation+8)^0,w,c
 22188   004754  A4D8               	btfss	status,2,c
 22189   004756  EFAF  F023         	goto	u16131
 22190   00475A  EFB1  F023         	goto	u16130
 22191   00475E                     u16131:
 22192   00475E  EFBA  F023         	goto	l1680
 22193   004762                     u16130:
 22194   004762                     
 22195                           ; BSR set to: 0
 22196                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 22197   004762  0E09               	movlw	9
 22198   004764                     u16145:
 22199   004764  90D8               	bcf	status,0,c
 22200   004766  3635               	rlcf	(_ioInfo+8)^0,f,c
 22201   004768  3636               	rlcf	(_ioInfo+9)^0,f,c
 22202   00476A  3637               	rlcf	(_ioInfo+10)^0,f,c
 22203   00476C  3638               	rlcf	(_ioInfo+11)^0,f,c
 22204   00476E  2EE8               	decfsz	wreg,f,c
 22205   004770  EFB2  F023         	goto	u16145
 22206   004774                     l1680:
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 22210   004774  5032               	movf	(_ioInfo+5)^0,w,c
 22211   004776  1031               	iorwf	(_ioInfo+4)^0,w,c
 22212   004778  E108               	bnz	u16151
 22213   00477A  042F               	decf	(_ioInfo+2)^0,w,c
 22214   00477C  0E02               	movlw	2
 22215   00477E  5830               	subwfb	(_ioInfo+3)^0,w,c
 22216   004780  B0D8               	btfsc	status,0,c
 22217   004782  EFC5  F023         	goto	u16151
 22218   004786  EFC7  F023         	goto	u16150
 22219   00478A                     u16151:
 22220   00478A  EFDE  F023         	goto	l14061
 22221   00478E                     u16150:
 22222   00478E                     
 22223                           ; BSR set to: 0
 22224                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 22225   00478E  0E01               	movlw	1
 22226   004790  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 22227   004792                     
 22228                           ; BSR set to: 0
 22229                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 22230   004792  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 22231   004796  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 22232   00479A  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 22233   00479E  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 22234   0047A2  0E08               	movlw	8
 22235   0047A4  EC82  F01C         	call	_SD_SendCmd
 22236   0047A8  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 22237   0047AC  0E04               	movlw	4
 22238   0047AE                     u16161:
 22239   0047AE  006F FFAF FFDB     	movff	plusw0,plusw2
 22240   0047B4  06E8               	decf	wreg,f,c
 22241   0047B6  E2FB               	bc	u16161
 22242                           
 22243                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 22244   0047B8  EFF3  F023         	goto	l14065
 22245   0047BC                     l14061:
 22246                           
 22247                           ; BSR set to: 0
 22248                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 22249   0047BC  0E00               	movlw	0
 22250   0047BE  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 22251   0047C0                     
 22252                           ; BSR set to: 0
 22253                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 22254   0047C0  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 22255   0047C4  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 22256   0047C8  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 22257   0047CC  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 22258   0047D0  0E09               	movlw	9
 22259   0047D2  EC82  F01C         	call	_SD_SendCmd
 22260   0047D6  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 22261   0047DA  0E04               	movlw	4
 22262   0047DC                     u16171:
 22263   0047DC  006F FFAF FFDB     	movff	plusw0,plusw2
 22264   0047E2  06E8               	decf	wreg,f,c
 22265   0047E4  E2FB               	bc	u16171
 22266   0047E6                     l14065:
 22267                           
 22268                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 22269   0047E6  0100               	movlb	0	; () banked
 22270   0047E8  5187               	movf	SD_SPI_AsyncReadTasks@response& (0+255),w,b
 22271   0047EA  B4D8               	btfsc	status,2,c
 22272   0047EC  EFFA  F023         	goto	u16181
 22273   0047F0  EFFC  F023         	goto	u16180
 22274   0047F4                     u16181:
 22275   0047F4  EF06  F024         	goto	l14073
 22276   0047F8                     u16180:
 22277   0047F8                     
 22278                           ; BSR set to: 0
 22279                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 22280   0047F8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22281   0047FA  6ED9               	movwf	fsr2l,c
 22282   0047FC  6ADA               	clrf	fsr2h,c
 22283   0047FE  0E0C               	movlw	12
 22284   004800  26D9               	addwf	fsr2l,f,c
 22285   004802  0EFE               	movlw	254
 22286   004804  6EDF               	movwf	indf2,c
 22287   004806                     l14069:
 22288                           
 22289                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 22290   004806  0E01               	movlw	1
 22291   004808  EFBB  F025         	goto	l1678
 22292   00480C                     l14073:
 22293                           
 22294                           ; BSR set to: 0
 22295                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 22296   00480C  0E00               	movlw	0
 22297   00480E  0101               	movlb	1	; () banked
 22298   004810  6FCF               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 22299   004812  0E00               	movlw	0
 22300   004814  6FD0               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 22301   004816  0E04               	movlw	4
 22302   004818  6FD1               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 22303   00481A  0E00               	movlw	0
 22304   00481C  6FD2               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 22305   00481E                     
 22306                           ; BSR set to: 1
 22307                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 22308   00481E  0100               	movlb	0	; () banked
 22309   004820  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22310   004822  6ED9               	movwf	fsr2l,c
 22311   004824  6ADA               	clrf	fsr2h,c
 22312   004826  0E0C               	movlw	12
 22313   004828  26D9               	addwf	fsr2l,f,c
 22314   00482A  0E03               	movlw	3
 22315   00482C  6EDF               	movwf	indf2,c
 22316   00482E  EF03  F024         	goto	l14069
 22317   004832                     l14081:
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 22321   004832  0101               	movlb	1	; () banked
 22322   004834  51CF               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 22323   004836  11D0               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 22324   004838  11D1               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 22325   00483A  11D2               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 22326   00483C  B4D8               	btfsc	status,2,c
 22327   00483E  EF23  F024         	goto	u16191
 22328   004842  EF25  F024         	goto	u16190
 22329   004846                     u16191:
 22330   004846  EF6B  F024         	goto	l14109
 22331   00484A                     u16190:
 22332   00484A                     
 22333                           ; BSR set to: 1
 22334                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 22335   00484A  07CF               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 22336   00484C  0E00               	movlw	0
 22337   00484E  5BD0               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 22338   004850  5BD1               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 22339   004852  5BD2               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 22340   004854                     
 22341                           ; BSR set to: 1
 22342                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 22343   004854  0E99               	movlw	low (_spiMaster+4)
 22344   004856  6EF6               	movwf	tblptrl,c
 22345   004858  0EFF               	movlw	high (_spiMaster+4)
 22346   00485A  6EF7               	movwf	tblptrh,c
 22347   00485C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22348   00485C  6AF8               	clrf	tblptru,c
 22349   00485E                     	endif
 22350   00485E                     	if	0	;tblptru may be non-zero
 22351   00485E                     	endif
 22352   00485E  0009               	tblrd		*+
 22353   004860  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22354   004866  0009               	tblrd		*+
 22355   004868  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22356   00486E  D802               	call	u16208
 22357   004870  EF45  F024         	goto	u16209
 22358   004874                     u16208:
 22359   004874  0005               	push	
 22360   004876  6EFA               	movwf	pclath,c
 22361   004878  0100               	movlb	0	; () banked
 22362   00487A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22363   00487C  6EFD               	movwf	tosl,c
 22364   00487E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22365   004880  6EFE               	movwf	tosh,c
 22366   004882  6AFF               	clrf	tosu,c
 22367   004884  50FA               	movf	pclath,w,c
 22368   004886  0EFF               	movlw	255
 22369   004888  0012               	return		;indir
 22370   00488A                     u16209:
 22371   00488A  0100               	movlb	0	; () banked
 22372   00488C  6F8C               	movwf	SD_SPI_AsyncReadTasks@bData& (0+255),b
 22373   00488E                     
 22374                           ; BSR set to: 0
 22375                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 22376   00488E  298C               	incf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 22377   004890  B4D8               	btfsc	status,2,c
 22378   004892  EF4D  F024         	goto	u16211
 22379   004896  EF4F  F024         	goto	u16210
 22380   00489A                     u16211:
 22381   00489A  EF03  F024         	goto	l14069
 22382   00489E                     u16210:
 22383   00489E                     
 22384                           ; BSR set to: 0
 22385                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 22386   00489E  0EFE               	movlw	254
 22387   0048A0  198C               	xorwf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 22388   0048A2  A4D8               	btfss	status,2,c
 22389   0048A4  EF56  F024         	goto	u16221
 22390   0048A8  EF58  F024         	goto	u16220
 22391   0048AC                     u16221:
 22392   0048AC  EF62  F024         	goto	l14099
 22393   0048B0                     u16220:
 22394   0048B0                     
 22395                           ; BSR set to: 0
 22396                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 22397   0048B0  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22398   0048B2  6ED9               	movwf	fsr2l,c
 22399   0048B4  6ADA               	clrf	fsr2h,c
 22400   0048B6  0E0C               	movlw	12
 22401   0048B8  26D9               	addwf	fsr2l,f,c
 22402   0048BA  0E02               	movlw	2
 22403   0048BC  6EDF               	movwf	indf2,c
 22404   0048BE                     l14093:
 22405                           
 22406                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 22407   0048BE  0E02               	movlw	2
 22408   0048C0  EFBB  F025         	goto	l1678
 22409   0048C4                     l14099:
 22410                           
 22411                           ; BSR set to: 0
 22412                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 22413   0048C4  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22414   0048C6  6ED9               	movwf	fsr2l,c
 22415   0048C8  6ADA               	clrf	fsr2h,c
 22416   0048CA  0E0C               	movlw	12
 22417   0048CC  26D9               	addwf	fsr2l,f,c
 22418   0048CE  0EFE               	movlw	254
 22419   0048D0  6EDF               	movwf	indf2,c
 22420   0048D2  EF03  F024         	goto	l14069
 22421   0048D6                     l14109:
 22422                           
 22423                           ; BSR set to: 1
 22424                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 22425   0048D6  0100               	movlb	0	; () banked
 22426   0048D8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22427   0048DA  6ED9               	movwf	fsr2l,c
 22428   0048DC  6ADA               	clrf	fsr2h,c
 22429   0048DE  0E0C               	movlw	12
 22430   0048E0  26D9               	addwf	fsr2l,f,c
 22431   0048E2  0EFE               	movlw	254
 22432   0048E4  6EDF               	movwf	indf2,c
 22433   0048E6  EF03  F024         	goto	l14069
 22434   0048EA                     l14115:
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 22438   0048EA  502F               	movf	(_ioInfo+2)^0,w,c
 22439   0048EC  1030               	iorwf	(_ioInfo+3)^0,w,c
 22440   0048EE  1031               	iorwf	(_ioInfo+4)^0,w,c
 22441   0048F0  1032               	iorwf	(_ioInfo+5)^0,w,c
 22442   0048F2  B4D8               	btfsc	status,2,c
 22443   0048F4  EF7E  F024         	goto	u16231
 22444   0048F8  EF80  F024         	goto	u16230
 22445   0048FC                     u16231:
 22446   0048FC  EF2D  F025         	goto	l14149
 22447   004900                     u16230:
 22448   004900                     
 22449                           ; BSR set to: 0
 22450                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 22451   004900  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22452   004902  6ED9               	movwf	fsr2l,c
 22453   004904  6ADA               	clrf	fsr2h,c
 22454   004906  006F FF78  F02D    	movff	postinc2,_ioInfo
 22455   00490C  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 22456   004912                     
 22457                           ; BSR set to: 0
 22458                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 22459   004912  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22460   004914  6ED9               	movwf	fsr2l,c
 22461   004916  6ADA               	clrf	fsr2h,c
 22462   004918  0E06               	movlw	6
 22463   00491A  26D9               	addwf	fsr2l,f,c
 22464   00491C  006F FF78  F033    	movff	postinc2,_ioInfo+6
 22465   004922  006F FF74  F034    	movff	postdec2,_ioInfo+7
 22466   004928                     
 22467                           ; BSR set to: 0
 22468                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 22469   004928  502D               	movf	_ioInfo^0,w,c
 22470   00492A  6F83               	movwf	??_SD_SPI_AsyncReadTasks& (0+255),b
 22471   00492C  502E               	movf	(_ioInfo+1)^0,w,c
 22472   00492E  6F84               	movwf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),b
 22473   004930  6B85               	clrf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),b
 22474   004932  6B86               	clrf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),b
 22475   004934  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22476   004936  5E2F               	subwf	(_ioInfo+2)^0,f,c
 22477   004938  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22478   00493A  5A30               	subwfb	(_ioInfo+3)^0,f,c
 22479   00493C  5185               	movf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),w,b
 22480   00493E  5A31               	subwfb	(_ioInfo+4)^0,f,c
 22481   004940  5186               	movf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),w,b
 22482   004942  5A32               	subwfb	(_ioInfo+5)^0,f,c
 22483   004944                     
 22484                           ; BSR set to: 0
 22485                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 22486   004944  502D               	movf	_ioInfo^0,w,c
 22487   004946  5E44               	subwf	SD_SPI_AsyncReadTasks@blockCounter^0,f,c
 22488   004948  502E               	movf	(_ioInfo+1)^0,w,c
 22489   00494A  5A45               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,f,c
 22490   00494C                     
 22491                           ; BSR set to: 0
 22492                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 22493   00494C  C033  F060         	movff	_ioInfo+6,memset@dest
 22494   004950  C034  F061         	movff	_ioInfo+7,memset@dest+1
 22495   004954  0E00               	movlw	0
 22496   004956  6F63               	movwf	(memset@c+1)& (0+255),b
 22497   004958  6962               	setf	memset@c& (0+255),b
 22498   00495A  C02D  F064         	movff	_ioInfo,memset@n
 22499   00495E  C02E  F065         	movff	_ioInfo+1,memset@n+1
 22500   004962  ECD2  F044         	call	_memset
 22501   004966                     
 22502                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 22503   004966  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 22504   00496A  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 22505   00496E  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 22506   004972  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 22507   004976  0E9B               	movlw	low (_spiMaster+6)
 22508   004978  6EF6               	movwf	tblptrl,c
 22509   00497A  0EFF               	movlw	high (_spiMaster+6)
 22510   00497C  6EF7               	movwf	tblptrh,c
 22511   00497E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22512   00497E  6AF8               	clrf	tblptru,c
 22513   004980                     	endif
 22514   004980                     	if	0	;tblptru may be non-zero
 22515   004980                     	endif
 22516   004980  0009               	tblrd		*+
 22517   004982  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22518   004988  0009               	tblrd		*+
 22519   00498A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22520   004990  D802               	call	u16248
 22521   004992  EFD5  F024         	goto	u16249
 22522   004996                     u16248:
 22523   004996  0005               	push	
 22524   004998  6EFA               	movwf	pclath,c
 22525   00499A  0100               	movlb	0	; () banked
 22526   00499C  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22527   00499E  6EFD               	movwf	tosl,c
 22528   0049A0  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22529   0049A2  6EFE               	movwf	tosh,c
 22530   0049A4  6AFF               	clrf	tosu,c
 22531   0049A6  50FA               	movf	pclath,w,c
 22532   0049A8  0012               	return		;indir
 22533   0049AA                     u16249:
 22534   0049AA                     
 22535                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 22536   0049AA  5044               	movf	SD_SPI_AsyncReadTasks@blockCounter^0,w,c
 22537   0049AC  1045               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,w,c
 22538   0049AE  A4D8               	btfss	status,2,c
 22539   0049B0  EFDC  F024         	goto	u16251
 22540   0049B4  EFDE  F024         	goto	u16250
 22541   0049B8                     u16251:
 22542   0049B8  EF5F  F024         	goto	l14093
 22543   0049BC                     u16250:
 22544   0049BC                     
 22545                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22546   0049BC  0E99               	movlw	low (_spiMaster+4)
 22547   0049BE  6EF6               	movwf	tblptrl,c
 22548   0049C0  0EFF               	movlw	high (_spiMaster+4)
 22549   0049C2  6EF7               	movwf	tblptrh,c
 22550   0049C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22551   0049C4  6AF8               	clrf	tblptru,c
 22552   0049C6                     	endif
 22553   0049C6                     	if	0	;tblptru may be non-zero
 22554   0049C6                     	endif
 22555   0049C6  0009               	tblrd		*+
 22556   0049C8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22557   0049CE  0009               	tblrd		*+
 22558   0049D0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22559   0049D6  D802               	call	u16268
 22560   0049D8  EFF9  F024         	goto	u16269
 22561   0049DC                     u16268:
 22562   0049DC  0005               	push	
 22563   0049DE  6EFA               	movwf	pclath,c
 22564   0049E0  0100               	movlb	0	; () banked
 22565   0049E2  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22566   0049E4  6EFD               	movwf	tosl,c
 22567   0049E6  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22568   0049E8  6EFE               	movwf	tosh,c
 22569   0049EA  6AFF               	clrf	tosu,c
 22570   0049EC  50FA               	movf	pclath,w,c
 22571   0049EE  0EFF               	movlw	255
 22572   0049F0  0012               	return		;indir
 22573   0049F2                     u16269:
 22574                           
 22575                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 22576   0049F2  0E99               	movlw	low (_spiMaster+4)
 22577   0049F4  6EF6               	movwf	tblptrl,c
 22578   0049F6  0EFF               	movlw	high (_spiMaster+4)
 22579   0049F8  6EF7               	movwf	tblptrh,c
 22580   0049FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22581   0049FA  6AF8               	clrf	tblptru,c
 22582   0049FC                     	endif
 22583   0049FC                     	if	0	;tblptru may be non-zero
 22584   0049FC                     	endif
 22585   0049FC  0009               	tblrd		*+
 22586   0049FE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22587   004A04  0009               	tblrd		*+
 22588   004A06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22589   004A0C  D802               	call	u16278
 22590   004A0E  EF14  F025         	goto	u16279
 22591   004A12                     u16278:
 22592   004A12  0005               	push	
 22593   004A14  6EFA               	movwf	pclath,c
 22594   004A16  0100               	movlb	0	; () banked
 22595   004A18  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22596   004A1A  6EFD               	movwf	tosl,c
 22597   004A1C  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22598   004A1E  6EFE               	movwf	tosh,c
 22599   004A20  6AFF               	clrf	tosu,c
 22600   004A22  50FA               	movf	pclath,w,c
 22601   004A24  0EFF               	movlw	255
 22602   004A26  0012               	return		;indir
 22603   004A28                     u16279:
 22604   004A28                     
 22605                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 22606   004A28  502F               	movf	(_ioInfo+2)^0,w,c
 22607   004A2A  1030               	iorwf	(_ioInfo+3)^0,w,c
 22608   004A2C  1031               	iorwf	(_ioInfo+4)^0,w,c
 22609   004A2E  1032               	iorwf	(_ioInfo+5)^0,w,c
 22610   004A30  B4D8               	btfsc	status,2,c
 22611   004A32  EF1D  F025         	goto	u16281
 22612   004A36  EF1F  F025         	goto	u16280
 22613   004A3A                     u16281:
 22614   004A3A  EF27  F025         	goto	l14137
 22615   004A3E                     u16280:
 22616   004A3E                     
 22617                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 22618   004A3E  0100               	movlb	0	; () banked
 22619   004A40  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22620   004A42  6ED9               	movwf	fsr2l,c
 22621   004A44  6ADA               	clrf	fsr2h,c
 22622   004A46  0E0C               	movlw	12
 22623   004A48  26D9               	addwf	fsr2l,f,c
 22624   004A4A  0E03               	movlw	3
 22625   004A4C  6EDF               	movwf	indf2,c
 22626   004A4E                     l14137:
 22627                           
 22628                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 22629   004A4E  0E02               	movlw	2
 22630   004A50  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 22631   004A52  0E00               	movlw	0
 22632   004A54  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 22633   004A56  EF03  F024         	goto	l14069
 22634   004A5A                     l14149:
 22635                           
 22636                           ; BSR set to: 0
 22637                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 22638   004A5A  504C               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,w,c
 22639   004A5C  A4D8               	btfss	status,2,c
 22640   004A5E  EF33  F025         	goto	u16291
 22641   004A62  EF35  F025         	goto	u16290
 22642   004A66                     u16291:
 22643   004A66  EF40  F025         	goto	l14153
 22644   004A6A                     u16290:
 22645   004A6A                     
 22646                           ; BSR set to: 0
 22647                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 22648   004A6A  0E00               	movlw	0
 22649   004A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 22650   004A6E  0E00               	movlw	0
 22651   004A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 22652   004A72  0E00               	movlw	0
 22653   004A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 22654   004A76  0E00               	movlw	0
 22655   004A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 22656   004A7A  0E05               	movlw	5
 22657   004A7C  EC82  F01C         	call	_SD_SendCmd
 22658   004A80                     l14153:
 22659   004A80  8ABA               	bsf	186,5,c	;volatile
 22660   004A82                     
 22661                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 22662   004A82  0E99               	movlw	low (_spiMaster+4)
 22663   004A84  6EF6               	movwf	tblptrl,c
 22664   004A86  0EFF               	movlw	high (_spiMaster+4)
 22665   004A88  6EF7               	movwf	tblptrh,c
 22666   004A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22667   004A8A  6AF8               	clrf	tblptru,c
 22668   004A8C                     	endif
 22669   004A8C                     	if	0	;tblptru may be non-zero
 22670   004A8C                     	endif
 22671   004A8C  0009               	tblrd		*+
 22672   004A8E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22673   004A94  0009               	tblrd		*+
 22674   004A96  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22675   004A9C  D802               	call	u16308
 22676   004A9E  EF5C  F025         	goto	u16309
 22677   004AA2                     u16308:
 22678   004AA2  0005               	push	
 22679   004AA4  6EFA               	movwf	pclath,c
 22680   004AA6  0100               	movlb	0	; () banked
 22681   004AA8  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22682   004AAA  6EFD               	movwf	tosl,c
 22683   004AAC  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22684   004AAE  6EFE               	movwf	tosh,c
 22685   004AB0  6AFF               	clrf	tosu,c
 22686   004AB2  50FA               	movf	pclath,w,c
 22687   004AB4  0EFF               	movlw	255
 22688   004AB6  0012               	return		;indir
 22689   004AB8                     u16309:
 22690   004AB8                     
 22691                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 22692   004AB8  0100               	movlb	0	; () banked
 22693   004ABA  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22694   004ABC  6ED9               	movwf	fsr2l,c
 22695   004ABE  6ADA               	clrf	fsr2h,c
 22696   004AC0  0E0C               	movlw	12
 22697   004AC2  26D9               	addwf	fsr2l,f,c
 22698   004AC4  6ADF               	clrf	indf2,c
 22699   004AC6                     
 22700                           ; BSR set to: 0
 22701                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 22702   004AC6  0E01               	movlw	1
 22703   004AC8  6E53               	movwf	(_mediaInformation+3)^0,c
 22704   004ACA  EF95  F023         	goto	l14045
 22705   004ACE                     l14165:
 22706                           
 22707                           ; BSR set to: 0
 22708                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 22709   004ACE  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22710   004AD0  6ED9               	movwf	fsr2l,c
 22711   004AD2  6ADA               	clrf	fsr2h,c
 22712   004AD4  0E0C               	movlw	12
 22713   004AD6  26D9               	addwf	fsr2l,f,c
 22714   004AD8  0EFF               	movlw	255
 22715   004ADA  6EDF               	movwf	indf2,c
 22716   004ADC                     
 22717                           ; BSR set to: 0
 22718   004ADC  0E00               	movlw	0
 22719   004ADE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 22720   004AE0  0E00               	movlw	0
 22721   004AE2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 22722   004AE4  0E00               	movlw	0
 22723   004AE6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 22724   004AE8  0E00               	movlw	0
 22725   004AEA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 22726   004AEC  0E05               	movlw	5
 22727   004AEE  EC82  F01C         	call	_SD_SendCmd
 22728   004AF2                     l14169:
 22729   004AF2  8ABA               	bsf	186,5,c	;volatile
 22730   004AF4                     
 22731                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 22732   004AF4  0E99               	movlw	low (_spiMaster+4)
 22733   004AF6  6EF6               	movwf	tblptrl,c
 22734   004AF8  0EFF               	movlw	high (_spiMaster+4)
 22735   004AFA  6EF7               	movwf	tblptrh,c
 22736   004AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22737   004AFC  6AF8               	clrf	tblptru,c
 22738   004AFE                     	endif
 22739   004AFE                     	if	0	;tblptru may be non-zero
 22740   004AFE                     	endif
 22741   004AFE  0009               	tblrd		*+
 22742   004B00  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 22743   004B06  0009               	tblrd		*+
 22744   004B08  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 22745   004B0E  D802               	call	u16318
 22746   004B10  EF95  F025         	goto	u16319
 22747   004B14                     u16318:
 22748   004B14  0005               	push	
 22749   004B16  6EFA               	movwf	pclath,c
 22750   004B18  0100               	movlb	0	; () banked
 22751   004B1A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 22752   004B1C  6EFD               	movwf	tosl,c
 22753   004B1E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 22754   004B20  6EFE               	movwf	tosh,c
 22755   004B22  6AFF               	clrf	tosu,c
 22756   004B24  50FA               	movf	pclath,w,c
 22757   004B26  0EFF               	movlw	255
 22758   004B28  0012               	return		;indir
 22759   004B2A                     u16319:
 22760   004B2A                     
 22761                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 22762   004B2A  0E01               	movlw	1
 22763   004B2C  6E53               	movwf	(_mediaInformation+3)^0,c
 22764   004B2E                     
 22765                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 22766   004B2E  0EFF               	movlw	255
 22767   004B30  EFBB  F025         	goto	l1678
 22768   004B34                     l14181:
 22769   004B34  0100               	movlb	0	; () banked
 22770   004B36  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 22771   004B38  6ED9               	movwf	fsr2l,c
 22772   004B3A  6ADA               	clrf	fsr2h,c
 22773   004B3C  0E0C               	movlw	12
 22774   004B3E  26D9               	addwf	fsr2l,f,c
 22775   004B40  50DF               	movf	indf2,w,c
 22776                           
 22777                           ; Switch size 1, requested type "simple"
 22778                           ; Number of cases is 6, Range of values is 0 to 255
 22779                           ; switch strategies available:
 22780                           ; Name         Instructions Cycles
 22781                           ; simple_byte           19    10 (average)
 22782                           ;	Chosen strategy is simple_byte
 22783   004B42  0A00               	xorlw	0	; case 0
 22784   004B44  B4D8               	btfsc	status,2,c
 22785   004B46  EF95  F023         	goto	l14045
 22786   004B4A  0A01               	xorlw	1	; case 1
 22787   004B4C  B4D8               	btfsc	status,2,c
 22788   004B4E  EF98  F023         	goto	l14049
 22789   004B52  0A03               	xorlw	3	; case 2
 22790   004B54  B4D8               	btfsc	status,2,c
 22791   004B56  EF75  F024         	goto	l14115
 22792   004B5A  0A01               	xorlw	1	; case 3
 22793   004B5C  B4D8               	btfsc	status,2,c
 22794   004B5E  EF19  F024         	goto	l14081
 22795   004B62  0AFD               	xorlw	253	; case 254
 22796   004B64  B4D8               	btfsc	status,2,c
 22797   004B66  EF67  F025         	goto	l14165
 22798   004B6A  0A01               	xorlw	1	; case 255
 22799   004B6C  B4D8               	btfsc	status,2,c
 22800   004B6E  EF79  F025         	goto	l14169
 22801   004B72  EF79  F025         	goto	l14169
 22802   004B76                     l1678:
 22803   004B76  0012               	return		;funcret
 22804   004B78                     __end_of_SD_SPI_AsyncReadTasks:
 22805                           	callstack 0
 22806                           
 22807 ;; *************** function _memset *****************
 22808 ;; Defined at:
 22809 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 22810 ;; Parameters:    Size  Location     Type
 22811 ;;  dest            2    0[BANK0 ] PTR void 
 22812 ;;		 -> send_status_ok@text(32), STR_9(12), Fil(546), FatFs(563), 
 22813 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 22814 ;;		 -> NULL(0), 
 22815 ;;  c               2    2[BANK0 ] int 
 22816 ;;  n               2    4[BANK0 ] unsigned int 
 22817 ;; Auto vars:     Size  Location     Type
 22818 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22819 ;;		 -> send_status_ok@text(32), STR_9(12), Fil(546), FatFs(563), 
 22820 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 22821 ;;		 -> NULL(0), 
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  2    0[BANK0 ] PTR void 
 22824 ;; Registers used:
 22825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22826 ;; Tracked objects:
 22827 ;;		On entry : 0/0
 22828 ;;		On exit  : 0/0
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22831 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22835 ;;Total ram usage:        8 bytes
 22836 ;; Hardware stack levels used: 1
 22837 ;; Hardware stack levels required when called: 5
 22838 ;; This function calls:
 22839 ;;		Nothing
 22840 ;; This function is called by:
 22841 ;;		_SD_SPI_AsyncReadTasks
 22842 ;; This function uses a non-reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text80
 22846   0089A4                     __ptext80:
 22847                           	callstack 0
 22848   0089A4                     _memset:
 22849                           	callstack 20
 22850   0089A4  C060  F066         	movff	memset@dest,memset@p
 22851   0089A8  C061  F067         	movff	memset@dest+1,memset@p+1
 22852   0089AC  EFF4  F044         	goto	l14003
 22853   0089B0                     l13999:
 22854                           
 22855                           ; BSR set to: 0
 22856   0089B0  0060  F19B  FFF6   	movff	memset@p,tblptrl
 22857   0089B6  0060  F19F  FFF7   	movff	memset@p+1,tblptrh
 22858   0089BC  0E00               	movlw	low (__mediumconst shr (0+16))
 22859   0089BE  6EF8               	movwf	tblptru,c
 22860   0089C0  0E0F               	movlw	(high __ramtop+-1)
 22861   0089C2  64F7               	cpfsgt	tblptrh,c
 22862   0089C4  D005               	bra	u16037
 22863   0089C6  0060  F18B  FFF5   	movff	memset@c,tablat
 22864   0089CC  000C               	tblwt		*
 22865   0089CE  D009               	bra	u16030
 22866   0089D0                     u16037:
 22867   0089D0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22868   0089D6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22869   0089DC  0060  F18B  FFEF   	movff	memset@c,indf0
 22870   0089E2                     u16030:
 22871   0089E2  0100               	movlb	0	; () banked
 22872   0089E4  4B66               	infsnz	memset@p& (0+255),f,b
 22873   0089E6  2B67               	incf	(memset@p+1)& (0+255),f,b
 22874   0089E8                     l14003:
 22875   0089E8  0100               	movlb	0	; () banked
 22876   0089EA  0764               	decf	memset@n& (0+255),f,b
 22877   0089EC  A0D8               	btfss	status,0,c
 22878   0089EE  0765               	decf	(memset@n+1)& (0+255),f,b
 22879   0089F0  2964               	incf	memset@n& (0+255),w,b
 22880   0089F2  E106               	bnz	u16041
 22881   0089F4  2965               	incf	(memset@n+1)& (0+255),w,b
 22882   0089F6  A4D8               	btfss	status,2,c
 22883   0089F8  EF00  F045         	goto	u16041
 22884   0089FC  EF02  F045         	goto	u16040
 22885   008A00                     u16041:
 22886   008A00  EFD8  F044         	goto	l13999
 22887   008A04                     u16040:
 22888   008A04                     
 22889                           ; BSR set to: 0
 22890   008A04  0012               	return		;funcret
 22891   008A06                     __end_of_memset:
 22892                           	callstack 0
 22893                           
 22894 ;; *************** function _SPI1_ExchangeBlock *****************
 22895 ;; Defined at:
 22896 ;;		line 109 in file "mcc_generated_files/spi1.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;  block           2    0[BANK0 ] PTR void 
 22899 ;;		 -> send_status_ok@text(32), STR_9(12), Fil(546), FatFs(563), 
 22900 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 22901 ;;		 -> NULL(0), 
 22902 ;;  blockSize       2    2[BANK0 ] unsigned int 
 22903 ;; Auto vars:     Size  Location     Type
 22904 ;;  data            2    4[BANK0 ] PTR unsigned char 
 22905 ;;		 -> send_status_ok@text(32), STR_9(12), Fil(546), FatFs(563), 
 22906 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 22907 ;;		 -> NULL(0), 
 22908 ;; Return value:  Size  Location     Type
 22909 ;;                  1    wreg      void 
 22910 ;; Registers used:
 22911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22912 ;; Tracked objects:
 22913 ;;		On entry : 0/0
 22914 ;;		On exit  : 0/0
 22915 ;;		Unchanged: 0/0
 22916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22921 ;;Total ram usage:        6 bytes
 22922 ;; Hardware stack levels used: 1
 22923 ;; Hardware stack levels required when called: 5
 22924 ;; This function calls:
 22925 ;;		Nothing
 22926 ;; This function is called by:
 22927 ;;		_SD_SPI_AsyncWriteTasks
 22928 ;;		_SD_SPI_AsyncReadTasks
 22929 ;; This function uses a non-reentrant model
 22930 ;;
 22931                           
 22932                           	psect	text81
 22933   0081D4                     __ptext81:
 22934                           	callstack 0
 22935   0081D4                     _SPI1_ExchangeBlock:
 22936                           	callstack 20
 22937   0081D4                     
 22938                           ;mcc_generated_files/spi1.c: 109: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 110: {;mcc_generated_files/spi1.c: 111:     uint8_t *data =
      +                           block;
 22939   0081D4  C060  F064         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 22940   0081D8  C061  F065         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 22941                           
 22942                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 22943   0081DC  EF2E  F041         	goto	l13797
 22944   0081E0                     l13789:
 22945                           
 22946                           ; BSR set to: 0
 22947                           ;mcc_generated_files/spi1.c: 113:     {;mcc_generated_files/spi1.c: 114:         SPI1TCN
      +                          TL = 1;
 22948   0081E0  0E01               	movlw	1
 22949   0081E2  013D               	movlb	61	; () banked
 22950   0081E4  6F12               	movwf	18,b	;volatile
 22951   0081E6                     
 22952                           ; BSR set to: 61
 22953                           ;mcc_generated_files/spi1.c: 115:         SPI1TXB = *data;
 22954   0081E6  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 22955   0081EC  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 22956   0081F2  0E00               	movlw	low (__mediumconst shr (0+16))
 22957   0081F4  6EF8               	movwf	tblptru,c
 22958   0081F6  0E0F               	movlw	(high __ramtop+-1)
 22959   0081F8  64F7               	cpfsgt	tblptrh,c
 22960   0081FA  D003               	bra	u15657
 22961   0081FC  0008               	tblrd		*
 22962   0081FE  50F5               	movf	tablat,w,c
 22963   008200  D007               	bra	u15650
 22964   008202                     u15657:
 22965   008202  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22966   008208  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22967   00820E  50EF               	movf	indf0,w,c
 22968   008210                     u15650:
 22969   008210  013D               	movlb	61	; () banked
 22970   008212  6F11               	movwf	17,b	;volatile
 22971   008214                     l1921:
 22972   008214  0139               	movlb	57	; () banked
 22973   008216  A9A2               	btfss	162,4,b	;volatile
 22974   008218  EF10  F041         	goto	u15661
 22975   00821C  EF12  F041         	goto	u15660
 22976   008220                     u15661:
 22977   008220  EF0A  F041         	goto	l1921
 22978   008224                     u15660:
 22979   008224                     
 22980                           ; BSR set to: 57
 22981                           ;mcc_generated_files/spi1.c: 117:         *data++ = SPI1RXB;
 22982   008224  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 22983   00822A  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 22984   008230  0E00               	movlw	low (__mediumconst shr (0+16))
 22985   008232  6EF8               	movwf	tblptru,c
 22986   008234  0E0F               	movlw	(high __ramtop+-1)
 22987   008236  64F7               	cpfsgt	tblptrh,c
 22988   008238  D005               	bra	u15677
 22989   00823A  006F F443 FFF5     	movff	15632,tablat	;volatile
 22990   008240  000C               	tblwt		*
 22991   008242  D009               	bra	u15670
 22992   008244                     u15677:
 22993   008244  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22994   00824A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22995   008250  006F F443 FFEF     	movff	15632,indf0	;volatile
 22996   008256                     u15670:
 22997   008256  0100               	movlb	0	; () banked
 22998   008258  4B64               	infsnz	SPI1_ExchangeBlock@data& (0+255),f,b
 22999   00825A  2B65               	incf	(SPI1_ExchangeBlock@data+1)& (0+255),f,b
 23000   00825C                     l13797:
 23001                           
 23002                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 23003   00825C  0100               	movlb	0	; () banked
 23004   00825E  0762               	decf	SPI1_ExchangeBlock@blockSize& (0+255),f,b
 23005   008260  A0D8               	btfss	status,0,c
 23006   008262  0763               	decf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),f,b
 23007   008264  2962               	incf	SPI1_ExchangeBlock@blockSize& (0+255),w,b
 23008   008266  E106               	bnz	u15681
 23009   008268  2963               	incf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),w,b
 23010   00826A  A4D8               	btfss	status,2,c
 23011   00826C  EF3A  F041         	goto	u15681
 23012   008270  EF3C  F041         	goto	u15680
 23013   008274                     u15681:
 23014   008274  EFF0  F040         	goto	l13789
 23015   008278                     u15680:
 23016   008278                     
 23017                           ; BSR set to: 0
 23018   008278  0012               	return		;funcret
 23019   00827A                     __end_of_SPI1_ExchangeBlock:
 23020                           	callstack 0
 23021                           
 23022 ;; *************** function _SD_SendCmd *****************
 23023 ;; Defined at:
 23024 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 23025 ;; Parameters:    Size  Location     Type
 23026 ;;  cmd             1    wreg     unsigned char 
 23027 ;;  address         4   11[BANK0 ] unsigned long 
 23028 ;; Auto vars:     Size  Location     Type
 23029 ;;  cmd             1   28[BANK0 ] unsigned char 
 23030 ;;  response        5   29[BANK0 ] struct .
 23031 ;;  address_byte    4   24[BANK0 ] unsigned char [4]
 23032 ;;  longTimeout     4   18[BANK0 ] unsigned long 
 23033 ;;  timeout         2   22[BANK0 ] unsigned short 
 23034 ;; Return value:  Size  Location     Type
 23035 ;;                  5   11[BANK0 ] struct .
 23036 ;; Registers used:
 23037 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23038 ;; Tracked objects:
 23039 ;;		On entry : 0/0
 23040 ;;		On exit  : 0/0
 23041 ;;		Unchanged: 0/0
 23042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23043 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23044 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23046 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23047 ;;Total ram usage:       23 bytes
 23048 ;; Hardware stack levels used: 1
 23049 ;; Hardware stack levels required when called: 6
 23050 ;; This function calls:
 23051 ;;		_SPI1_ExchangeByte
 23052 ;;		_memcpy
 23053 ;; This function is called by:
 23054 ;;		_SD_SPI_MediaInitialize
 23055 ;;		_SD_SPI_AsyncReadTasks
 23056 ;;		_SD_SPI_AsyncWriteTasks
 23057 ;; This function uses a non-reentrant model
 23058 ;;
 23059                           
 23060                           	psect	text82
 23061   003904                     __ptext82:
 23062                           	callstack 0
 23063   003904                     _SD_SendCmd:
 23064                           	callstack 19
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;incstack = 0
 23068                           ;SD_SendCmd@cmd stored from wreg
 23069   003904  0100               	movlb	0	; () banked
 23070   003906  6F7C               	movwf	SD_SendCmd@cmd& (0+255),b
 23071   003908  9ABA               	bcf	186,5,c	;volatile
 23072   00390A                     
 23073                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 23074   00390A  0E78               	movlw	low SD_SendCmd@address_bytes
 23075   00390C  0100               	movlb	0	; () banked
 23076   00390E  6F60               	movwf	memcpy@d1& (0+255),b
 23077   003910  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 23078   003912  0E6B               	movlw	low SD_SendCmd@address
 23079   003914  6F62               	movwf	memcpy@s1& (0+255),b
 23080   003916  6B63               	clrf	(memcpy@s1+1)& (0+255),b
 23081   003918  0E00               	movlw	0
 23082   00391A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23083   00391C  0E04               	movlw	4
 23084   00391E  6F64               	movwf	memcpy@n& (0+255),b
 23085   003920  EC64  F045         	call	_memcpy
 23086   003924                     
 23087                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 23088   003924  0E99               	movlw	low (_spiMaster+4)
 23089   003926  6EF6               	movwf	tblptrl,c
 23090   003928  0EFF               	movlw	high (_spiMaster+4)
 23091   00392A  6EF7               	movwf	tblptrh,c
 23092   00392C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23093   00392C  6AF8               	clrf	tblptru,c
 23094   00392E                     	endif
 23095   00392E                     	if	0	;tblptru may be non-zero
 23096   00392E                     	endif
 23097   00392E  0009               	tblrd		*+
 23098   003930  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23099   003936  0009               	tblrd		*+
 23100   003938  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23101   00393E  D802               	call	u15408
 23102   003940  EFBA  F01C         	goto	u15409
 23103   003944                     u15408:
 23104   003944  0005               	push	
 23105   003946  6EFA               	movwf	pclath,c
 23106   003948  0100               	movlb	0	; () banked
 23107   00394A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23108   00394C  6EFD               	movwf	tosl,c
 23109   00394E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23110   003950  6EFE               	movwf	tosh,c
 23111   003952  6AFF               	clrf	tosu,c
 23112   003954  50FA               	movf	pclath,w,c
 23113   003956  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23114   003958  0D04               	mullw	4
 23115   00395A  0E45               	movlw	low _sdmmc_cmdtable
 23116   00395C  24F3               	addwf	243,w,c
 23117   00395E  6EF6               	movwf	tblptrl,c
 23118   003960  0EFF               	movlw	high _sdmmc_cmdtable
 23119   003962  20F4               	addwfc	244,w,c
 23120   003964  6EF7               	movwf	tblptrh,c
 23121   003966                     	if	1	;There are 3 active tblptr bytes
 23122   003966  6AF8               	clrf	tblptru,c
 23123   003968  0E00               	movlw	low (__mediumconst shr (0+16))
 23124   00396A  22F8               	addwfc	tblptru,f,c
 23125   00396C                     	endif
 23126   00396C  0008               	tblrd		*
 23127   00396E  50F5               	movf	tablat,w,c
 23128   003970  0940               	iorlw	64
 23129   003972  0012               	return		;indir
 23130   003974                     u15409:
 23131   003974                     
 23132                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 23133   003974  0E99               	movlw	low (_spiMaster+4)
 23134   003976  6EF6               	movwf	tblptrl,c
 23135   003978  0EFF               	movlw	high (_spiMaster+4)
 23136   00397A  6EF7               	movwf	tblptrh,c
 23137   00397C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23138   00397C  6AF8               	clrf	tblptru,c
 23139   00397E                     	endif
 23140   00397E                     	if	0	;tblptru may be non-zero
 23141   00397E                     	endif
 23142   00397E  0009               	tblrd		*+
 23143   003980  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23144   003986  0009               	tblrd		*+
 23145   003988  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23146   00398E  D802               	call	u15418
 23147   003990  EFD5  F01C         	goto	u15419
 23148   003994                     u15418:
 23149   003994  0005               	push	
 23150   003996  6EFA               	movwf	pclath,c
 23151   003998  0100               	movlb	0	; () banked
 23152   00399A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23153   00399C  6EFD               	movwf	tosl,c
 23154   00399E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23155   0039A0  6EFE               	movwf	tosh,c
 23156   0039A2  6AFF               	clrf	tosu,c
 23157   0039A4  50FA               	movf	pclath,w,c
 23158   0039A6  517B               	movf	(SD_SendCmd@address_bytes+3)& (0+255),w,b
 23159   0039A8  0012               	return		;indir
 23160   0039AA                     u15419:
 23161   0039AA                     
 23162                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 23163   0039AA  0E99               	movlw	low (_spiMaster+4)
 23164   0039AC  6EF6               	movwf	tblptrl,c
 23165   0039AE  0EFF               	movlw	high (_spiMaster+4)
 23166   0039B0  6EF7               	movwf	tblptrh,c
 23167   0039B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23168   0039B2  6AF8               	clrf	tblptru,c
 23169   0039B4                     	endif
 23170   0039B4                     	if	0	;tblptru may be non-zero
 23171   0039B4                     	endif
 23172   0039B4  0009               	tblrd		*+
 23173   0039B6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23174   0039BC  0009               	tblrd		*+
 23175   0039BE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23176   0039C4  D802               	call	u15428
 23177   0039C6  EFF0  F01C         	goto	u15429
 23178   0039CA                     u15428:
 23179   0039CA  0005               	push	
 23180   0039CC  6EFA               	movwf	pclath,c
 23181   0039CE  0100               	movlb	0	; () banked
 23182   0039D0  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23183   0039D2  6EFD               	movwf	tosl,c
 23184   0039D4  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23185   0039D6  6EFE               	movwf	tosh,c
 23186   0039D8  6AFF               	clrf	tosu,c
 23187   0039DA  50FA               	movf	pclath,w,c
 23188   0039DC  517A               	movf	(SD_SendCmd@address_bytes+2)& (0+255),w,b
 23189   0039DE  0012               	return		;indir
 23190   0039E0                     u15429:
 23191   0039E0                     
 23192                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 23193   0039E0  0E99               	movlw	low (_spiMaster+4)
 23194   0039E2  6EF6               	movwf	tblptrl,c
 23195   0039E4  0EFF               	movlw	high (_spiMaster+4)
 23196   0039E6  6EF7               	movwf	tblptrh,c
 23197   0039E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23198   0039E8  6AF8               	clrf	tblptru,c
 23199   0039EA                     	endif
 23200   0039EA                     	if	0	;tblptru may be non-zero
 23201   0039EA                     	endif
 23202   0039EA  0009               	tblrd		*+
 23203   0039EC  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23204   0039F2  0009               	tblrd		*+
 23205   0039F4  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23206   0039FA  D802               	call	u15438
 23207   0039FC  EF0B  F01D         	goto	u15439
 23208   003A00                     u15438:
 23209   003A00  0005               	push	
 23210   003A02  6EFA               	movwf	pclath,c
 23211   003A04  0100               	movlb	0	; () banked
 23212   003A06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23213   003A08  6EFD               	movwf	tosl,c
 23214   003A0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23215   003A0C  6EFE               	movwf	tosh,c
 23216   003A0E  6AFF               	clrf	tosu,c
 23217   003A10  50FA               	movf	pclath,w,c
 23218   003A12  5179               	movf	(SD_SendCmd@address_bytes+1)& (0+255),w,b
 23219   003A14  0012               	return		;indir
 23220   003A16                     u15439:
 23221   003A16                     
 23222                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 23223   003A16  0E99               	movlw	low (_spiMaster+4)
 23224   003A18  6EF6               	movwf	tblptrl,c
 23225   003A1A  0EFF               	movlw	high (_spiMaster+4)
 23226   003A1C  6EF7               	movwf	tblptrh,c
 23227   003A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23228   003A1E  6AF8               	clrf	tblptru,c
 23229   003A20                     	endif
 23230   003A20                     	if	0	;tblptru may be non-zero
 23231   003A20                     	endif
 23232   003A20  0009               	tblrd		*+
 23233   003A22  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23234   003A28  0009               	tblrd		*+
 23235   003A2A  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23236   003A30  D802               	call	u15448
 23237   003A32  EF26  F01D         	goto	u15449
 23238   003A36                     u15448:
 23239   003A36  0005               	push	
 23240   003A38  6EFA               	movwf	pclath,c
 23241   003A3A  0100               	movlb	0	; () banked
 23242   003A3C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23243   003A3E  6EFD               	movwf	tosl,c
 23244   003A40  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23245   003A42  6EFE               	movwf	tosh,c
 23246   003A44  6AFF               	clrf	tosu,c
 23247   003A46  50FA               	movf	pclath,w,c
 23248   003A48  5178               	movf	SD_SendCmd@address_bytes& (0+255),w,b
 23249   003A4A  0012               	return		;indir
 23250   003A4C                     u15449:
 23251   003A4C                     
 23252                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 23253   003A4C  0E99               	movlw	low (_spiMaster+4)
 23254   003A4E  6EF6               	movwf	tblptrl,c
 23255   003A50  0EFF               	movlw	high (_spiMaster+4)
 23256   003A52  6EF7               	movwf	tblptrh,c
 23257   003A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23258   003A54  6AF8               	clrf	tblptru,c
 23259   003A56                     	endif
 23260   003A56                     	if	0	;tblptru may be non-zero
 23261   003A56                     	endif
 23262   003A56  0009               	tblrd		*+
 23263   003A58  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23264   003A5E  0009               	tblrd		*+
 23265   003A60  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23266   003A66  D802               	call	u15458
 23267   003A68  EF51  F01D         	goto	u15459
 23268   003A6C                     u15458:
 23269   003A6C  0005               	push	
 23270   003A6E  6EFA               	movwf	pclath,c
 23271   003A70  0100               	movlb	0	; () banked
 23272   003A72  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23273   003A74  6EFD               	movwf	tosl,c
 23274   003A76  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23275   003A78  6EFE               	movwf	tosh,c
 23276   003A7A  6AFF               	clrf	tosu,c
 23277   003A7C  50FA               	movf	pclath,w,c
 23278   003A7E  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23279   003A80  0D04               	mullw	4
 23280   003A82  0E01               	movlw	1
 23281   003A84  26F3               	addwf	243,f,c
 23282   003A86  0E00               	movlw	0
 23283   003A88  22F4               	addwfc	244,f,c
 23284   003A8A  0E45               	movlw	low _sdmmc_cmdtable
 23285   003A8C  24F3               	addwf	243,w,c
 23286   003A8E  6EF6               	movwf	tblptrl,c
 23287   003A90  0EFF               	movlw	high _sdmmc_cmdtable
 23288   003A92  20F4               	addwfc	244,w,c
 23289   003A94  6EF7               	movwf	tblptrh,c
 23290   003A96                     	if	1	;There are 3 active tblptr bytes
 23291   003A96  6AF8               	clrf	tblptru,c
 23292   003A98  0E00               	movlw	low (__mediumconst shr (0+16))
 23293   003A9A  22F8               	addwfc	tblptru,f,c
 23294   003A9C                     	endif
 23295   003A9C  0008               	tblrd		*
 23296   003A9E  50F5               	movf	tablat,w,c
 23297   003AA0  0012               	return		;indir
 23298   003AA2                     u15459:
 23299   003AA2                     
 23300                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 23301   003AA2  0E05               	movlw	5
 23302   003AA4  0100               	movlb	0	; () banked
 23303   003AA6  197C               	xorwf	SD_SendCmd@cmd& (0+255),w,b
 23304   003AA8  A4D8               	btfss	status,2,c
 23305   003AAA  EF59  F01D         	goto	u15461
 23306   003AAE  EF5B  F01D         	goto	u15460
 23307   003AB2                     u15461:
 23308   003AB2  EF75  F01D         	goto	l13747
 23309   003AB6                     u15460:
 23310   003AB6                     
 23311                           ; BSR set to: 0
 23312                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 23313   003AB6  0E99               	movlw	low (_spiMaster+4)
 23314   003AB8  6EF6               	movwf	tblptrl,c
 23315   003ABA  0EFF               	movlw	high (_spiMaster+4)
 23316   003ABC  6EF7               	movwf	tblptrh,c
 23317   003ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23318   003ABE  6AF8               	clrf	tblptru,c
 23319   003AC0                     	endif
 23320   003AC0                     	if	0	;tblptru may be non-zero
 23321   003AC0                     	endif
 23322   003AC0  0009               	tblrd		*+
 23323   003AC2  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23324   003AC8  0009               	tblrd		*+
 23325   003ACA  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23326   003AD0  D802               	call	u15478
 23327   003AD2  EF75  F01D         	goto	u15479
 23328   003AD6                     u15478:
 23329   003AD6  0005               	push	
 23330   003AD8  6EFA               	movwf	pclath,c
 23331   003ADA  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23332   003ADC  6EFD               	movwf	tosl,c
 23333   003ADE  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23334   003AE0  6EFE               	movwf	tosh,c
 23335   003AE2  6AFF               	clrf	tosu,c
 23336   003AE4  50FA               	movf	pclath,w,c
 23337   003AE6  0EFF               	movlw	255
 23338   003AE8  0012               	return		;indir
 23339   003AEA                     u15479:
 23340   003AEA                     l13747:
 23341                           
 23342                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 23343   003AEA  0E00               	movlw	0
 23344   003AEC  0100               	movlb	0	; () banked
 23345   003AEE  6F77               	movwf	(SD_SendCmd@timeout+1)& (0+255),b
 23346   003AF0  0E14               	movlw	20
 23347   003AF2  6F76               	movwf	SD_SendCmd@timeout& (0+255),b
 23348   003AF4                     l13749:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 23352   003AF4  0E99               	movlw	low (_spiMaster+4)
 23353   003AF6  6EF6               	movwf	tblptrl,c
 23354   003AF8  0EFF               	movlw	high (_spiMaster+4)
 23355   003AFA  6EF7               	movwf	tblptrh,c
 23356   003AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23357   003AFC  6AF8               	clrf	tblptru,c
 23358   003AFE                     	endif
 23359   003AFE                     	if	0	;tblptru may be non-zero
 23360   003AFE                     	endif
 23361   003AFE  0009               	tblrd		*+
 23362   003B00  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23363   003B06  0009               	tblrd		*+
 23364   003B08  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23365   003B0E  D802               	call	u15488
 23366   003B10  EF94  F01D         	goto	u15489
 23367   003B14                     u15488:
 23368   003B14  0005               	push	
 23369   003B16  6EFA               	movwf	pclath,c
 23370   003B18  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23371   003B1A  6EFD               	movwf	tosl,c
 23372   003B1C  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23373   003B1E  6EFE               	movwf	tosh,c
 23374   003B20  6AFF               	clrf	tosu,c
 23375   003B22  50FA               	movf	pclath,w,c
 23376   003B24  0EFF               	movlw	255
 23377   003B26  0012               	return		;indir
 23378   003B28                     u15489:
 23379   003B28  0100               	movlb	0	; () banked
 23380   003B2A  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 23381   003B2C                     
 23382                           ; BSR set to: 0
 23383                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 23384   003B2C  0776               	decf	SD_SendCmd@timeout& (0+255),f,b
 23385   003B2E  A0D8               	btfss	status,0,c
 23386   003B30  0777               	decf	(SD_SendCmd@timeout+1)& (0+255),f,b
 23387   003B32                     
 23388                           ; BSR set to: 0
 23389                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 23390   003B32  297D               	incf	SD_SendCmd@response& (0+255),w,b
 23391   003B34  A4D8               	btfss	status,2,c
 23392   003B36  EF9F  F01D         	goto	u15491
 23393   003B3A  EFA1  F01D         	goto	u15490
 23394   003B3E                     u15491:
 23395   003B3E  EFAA  F01D         	goto	l13757
 23396   003B42                     u15490:
 23397   003B42                     
 23398                           ; BSR set to: 0
 23399   003B42  5176               	movf	SD_SendCmd@timeout& (0+255),w,b
 23400   003B44  1177               	iorwf	(SD_SendCmd@timeout+1)& (0+255),w,b
 23401   003B46  A4D8               	btfss	status,2,c
 23402   003B48  EFA8  F01D         	goto	u15501
 23403   003B4C  EFAA  F01D         	goto	u15500
 23404   003B50                     u15501:
 23405   003B50  EF7A  F01D         	goto	l13749
 23406   003B54                     u15500:
 23407   003B54                     l13757:
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 23411   003B54  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23412   003B56  0D04               	mullw	4
 23413   003B58  0E02               	movlw	2
 23414   003B5A  26F3               	addwf	243,f,c
 23415   003B5C  0E00               	movlw	0
 23416   003B5E  22F4               	addwfc	244,f,c
 23417   003B60  0E45               	movlw	low _sdmmc_cmdtable
 23418   003B62  24F3               	addwf	243,w,c
 23419   003B64  6EF6               	movwf	tblptrl,c
 23420   003B66  0EFF               	movlw	high _sdmmc_cmdtable
 23421   003B68  20F4               	addwfc	244,w,c
 23422   003B6A  6EF7               	movwf	tblptrh,c
 23423   003B6C                     	if	1	;There are 3 active tblptr bytes
 23424   003B6C  6AF8               	clrf	tblptru,c
 23425   003B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 23426   003B70  22F8               	addwfc	tblptru,f,c
 23427   003B72                     	endif
 23428   003B72  0008               	tblrd		*
 23429   003B74  50F5               	movf	tablat,w,c
 23430   003B76  0A02               	xorlw	2
 23431   003B78  A4D8               	btfss	status,2,c
 23432   003B7A  EFC1  F01D         	goto	u15511
 23433   003B7E  EFC3  F01D         	goto	u15510
 23434   003B82                     u15511:
 23435   003B82  EFE3  F01D         	goto	l13763
 23436   003B86                     u15510:
 23437   003B86                     
 23438                           ; BSR set to: 0
 23439                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 23440   003B86  C07D  F07E         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 23441   003B8A                     
 23442                           ; BSR set to: 0
 23443                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 23444   003B8A  0E99               	movlw	low (_spiMaster+4)
 23445   003B8C  6EF6               	movwf	tblptrl,c
 23446   003B8E  0EFF               	movlw	high (_spiMaster+4)
 23447   003B90  6EF7               	movwf	tblptrh,c
 23448   003B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23449   003B92  6AF8               	clrf	tblptru,c
 23450   003B94                     	endif
 23451   003B94                     	if	0	;tblptru may be non-zero
 23452   003B94                     	endif
 23453   003B94  0009               	tblrd		*+
 23454   003B96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23455   003B9C  0009               	tblrd		*+
 23456   003B9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23457   003BA4  D802               	call	u15528
 23458   003BA6  EFDF  F01D         	goto	u15529
 23459   003BAA                     u15528:
 23460   003BAA  0005               	push	
 23461   003BAC  6EFA               	movwf	pclath,c
 23462   003BAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23463   003BB0  6EFD               	movwf	tosl,c
 23464   003BB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23465   003BB4  6EFE               	movwf	tosh,c
 23466   003BB6  6AFF               	clrf	tosu,c
 23467   003BB8  50FA               	movf	pclath,w,c
 23468   003BBA  0EFF               	movlw	255
 23469   003BBC  0012               	return		;indir
 23470   003BBE                     u15529:
 23471   003BBE  0100               	movlb	0	; () banked
 23472   003BC0  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 23473                           
 23474                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 23475   003BC2  EFC5  F01E         	goto	l1762
 23476   003BC6                     l13763:
 23477                           
 23478                           ; BSR set to: 0
 23479   003BC6  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23480   003BC8  0D04               	mullw	4
 23481   003BCA  0E02               	movlw	2
 23482   003BCC  26F3               	addwf	243,f,c
 23483   003BCE  0E00               	movlw	0
 23484   003BD0  22F4               	addwfc	244,f,c
 23485   003BD2  0E45               	movlw	low _sdmmc_cmdtable
 23486   003BD4  24F3               	addwf	243,w,c
 23487   003BD6  6EF6               	movwf	tblptrl,c
 23488   003BD8  0EFF               	movlw	high _sdmmc_cmdtable
 23489   003BDA  20F4               	addwfc	244,w,c
 23490   003BDC  6EF7               	movwf	tblptrh,c
 23491   003BDE                     	if	1	;There are 3 active tblptr bytes
 23492   003BDE  6AF8               	clrf	tblptru,c
 23493   003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 23494   003BE2  22F8               	addwfc	tblptru,f,c
 23495   003BE4                     	endif
 23496   003BE4  0008               	tblrd		*
 23497   003BE6  50F5               	movf	tablat,w,c
 23498   003BE8  06E8               	decf	wreg,f,c
 23499   003BEA  A4D8               	btfss	status,2,c
 23500   003BEC  EFFA  F01D         	goto	u15531
 23501   003BF0  EFFC  F01D         	goto	u15530
 23502   003BF4                     u15531:
 23503   003BF4  EF3C  F01E         	goto	l13777
 23504   003BF8                     u15530:
 23505   003BF8                     
 23506                           ; BSR set to: 0
 23507                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 23508   003BF8  0E00               	movlw	0
 23509   003BFA  6F72               	movwf	SD_SendCmd@longTimeout& (0+255),b
 23510   003BFC  0E00               	movlw	0
 23511   003BFE  6F73               	movwf	(SD_SendCmd@longTimeout+1)& (0+255),b
 23512   003C00  0E0A               	movlw	10
 23513   003C02  6F74               	movwf	(SD_SendCmd@longTimeout+2)& (0+255),b
 23514   003C04  0E00               	movlw	0
 23515   003C06  6F75               	movwf	(SD_SendCmd@longTimeout+3)& (0+255),b
 23516   003C08                     l13767:
 23517                           
 23518                           ; BSR set to: 0
 23519                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 23520   003C08  0E99               	movlw	low (_spiMaster+4)
 23521   003C0A  6EF6               	movwf	tblptrl,c
 23522   003C0C  0EFF               	movlw	high (_spiMaster+4)
 23523   003C0E  6EF7               	movwf	tblptrh,c
 23524   003C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23525   003C10  6AF8               	clrf	tblptru,c
 23526   003C12                     	endif
 23527   003C12                     	if	0	;tblptru may be non-zero
 23528   003C12                     	endif
 23529   003C12  0009               	tblrd		*+
 23530   003C14  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23531   003C1A  0009               	tblrd		*+
 23532   003C1C  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23533   003C22  D802               	call	u15548
 23534   003C24  EF1E  F01E         	goto	u15549
 23535   003C28                     u15548:
 23536   003C28  0005               	push	
 23537   003C2A  6EFA               	movwf	pclath,c
 23538   003C2C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23539   003C2E  6EFD               	movwf	tosl,c
 23540   003C30  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23541   003C32  6EFE               	movwf	tosh,c
 23542   003C34  6AFF               	clrf	tosu,c
 23543   003C36  50FA               	movf	pclath,w,c
 23544   003C38  0EFF               	movlw	255
 23545   003C3A  0012               	return		;indir
 23546   003C3C                     u15549:
 23547   003C3C  0100               	movlb	0	; () banked
 23548   003C3E  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 23549   003C40                     
 23550                           ; BSR set to: 0
 23551                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 23552   003C40  0772               	decf	SD_SendCmd@longTimeout& (0+255),f,b
 23553   003C42  0E00               	movlw	0
 23554   003C44  5B73               	subwfb	(SD_SendCmd@longTimeout+1)& (0+255),f,b
 23555   003C46  5B74               	subwfb	(SD_SendCmd@longTimeout+2)& (0+255),f,b
 23556   003C48  5B75               	subwfb	(SD_SendCmd@longTimeout+3)& (0+255),f,b
 23557   003C4A                     
 23558                           ; BSR set to: 0
 23559                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 23560   003C4A  517D               	movf	SD_SendCmd@response& (0+255),w,b
 23561   003C4C  A4D8               	btfss	status,2,c
 23562   003C4E  EF2B  F01E         	goto	u15551
 23563   003C52  EF2D  F01E         	goto	u15550
 23564   003C56                     u15551:
 23565   003C56  EF38  F01E         	goto	l13775
 23566   003C5A                     u15550:
 23567   003C5A                     
 23568                           ; BSR set to: 0
 23569   003C5A  5172               	movf	SD_SendCmd@longTimeout& (0+255),w,b
 23570   003C5C  1173               	iorwf	(SD_SendCmd@longTimeout+1)& (0+255),w,b
 23571   003C5E  1174               	iorwf	(SD_SendCmd@longTimeout+2)& (0+255),w,b
 23572   003C60  1175               	iorwf	(SD_SendCmd@longTimeout+3)& (0+255),w,b
 23573   003C62  A4D8               	btfss	status,2,c
 23574   003C64  EF36  F01E         	goto	u15561
 23575   003C68  EF38  F01E         	goto	u15560
 23576   003C6C                     u15561:
 23577   003C6C  EF04  F01E         	goto	l13767
 23578   003C70                     u15560:
 23579   003C70                     l13775:
 23580                           
 23581                           ; BSR set to: 0
 23582                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 23583   003C70  0E00               	movlw	0
 23584   003C72  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 23585                           
 23586                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 23587   003C74  EFC5  F01E         	goto	l1762
 23588   003C78                     l13777:
 23589                           
 23590                           ; BSR set to: 0
 23591   003C78  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23592   003C7A  0D04               	mullw	4
 23593   003C7C  0E02               	movlw	2
 23594   003C7E  26F3               	addwf	243,f,c
 23595   003C80  0E00               	movlw	0
 23596   003C82  22F4               	addwfc	244,f,c
 23597   003C84  0E45               	movlw	low _sdmmc_cmdtable
 23598   003C86  24F3               	addwf	243,w,c
 23599   003C88  6EF6               	movwf	tblptrl,c
 23600   003C8A  0EFF               	movlw	high _sdmmc_cmdtable
 23601   003C8C  20F4               	addwfc	244,w,c
 23602   003C8E  6EF7               	movwf	tblptrh,c
 23603   003C90                     	if	1	;There are 3 active tblptr bytes
 23604   003C90  6AF8               	clrf	tblptru,c
 23605   003C92  0E00               	movlw	low (__mediumconst shr (0+16))
 23606   003C94  22F8               	addwfc	tblptru,f,c
 23607   003C96                     	endif
 23608   003C96  0008               	tblrd		*
 23609   003C98  50F5               	movf	tablat,w,c
 23610   003C9A  0A04               	xorlw	4
 23611   003C9C  A4D8               	btfss	status,2,c
 23612   003C9E  EF53  F01E         	goto	u15571
 23613   003CA2  EF55  F01E         	goto	u15570
 23614   003CA6                     u15571:
 23615   003CA6  EFC5  F01E         	goto	l1762
 23616   003CAA                     u15570:
 23617   003CAA                     
 23618                           ; BSR set to: 0
 23619                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 23620   003CAA  0E99               	movlw	low (_spiMaster+4)
 23621   003CAC  6EF6               	movwf	tblptrl,c
 23622   003CAE  0EFF               	movlw	high (_spiMaster+4)
 23623   003CB0  6EF7               	movwf	tblptrh,c
 23624   003CB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23625   003CB2  6AF8               	clrf	tblptru,c
 23626   003CB4                     	endif
 23627   003CB4                     	if	0	;tblptru may be non-zero
 23628   003CB4                     	endif
 23629   003CB4  0009               	tblrd		*+
 23630   003CB6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23631   003CBC  0009               	tblrd		*+
 23632   003CBE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23633   003CC4  D802               	call	u15588
 23634   003CC6  EF6F  F01E         	goto	u15589
 23635   003CCA                     u15588:
 23636   003CCA  0005               	push	
 23637   003CCC  6EFA               	movwf	pclath,c
 23638   003CCE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23639   003CD0  6EFD               	movwf	tosl,c
 23640   003CD2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23641   003CD4  6EFE               	movwf	tosh,c
 23642   003CD6  6AFF               	clrf	tosu,c
 23643   003CD8  50FA               	movf	pclath,w,c
 23644   003CDA  0EFF               	movlw	255
 23645   003CDC  0012               	return		;indir
 23646   003CDE                     u15589:
 23647   003CDE  0100               	movlb	0	; () banked
 23648   003CE0  6F81               	movwf	(SD_SendCmd@response+4)& (0+255),b
 23649                           
 23650                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23651   003CE2  0E99               	movlw	low (_spiMaster+4)
 23652   003CE4  6EF6               	movwf	tblptrl,c
 23653   003CE6  0EFF               	movlw	high (_spiMaster+4)
 23654   003CE8  6EF7               	movwf	tblptrh,c
 23655   003CEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23656   003CEA  6AF8               	clrf	tblptru,c
 23657   003CEC                     	endif
 23658   003CEC                     	if	0	;tblptru may be non-zero
 23659   003CEC                     	endif
 23660   003CEC  0009               	tblrd		*+
 23661   003CEE  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23662   003CF4  0009               	tblrd		*+
 23663   003CF6  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23664   003CFC  D802               	call	u15598
 23665   003CFE  EF8B  F01E         	goto	u15599
 23666   003D02                     u15598:
 23667   003D02  0005               	push	
 23668   003D04  6EFA               	movwf	pclath,c
 23669   003D06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23670   003D08  6EFD               	movwf	tosl,c
 23671   003D0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23672   003D0C  6EFE               	movwf	tosh,c
 23673   003D0E  6AFF               	clrf	tosu,c
 23674   003D10  50FA               	movf	pclath,w,c
 23675   003D12  0EFF               	movlw	255
 23676   003D14  0012               	return		;indir
 23677   003D16                     u15599:
 23678   003D16  0100               	movlb	0	; () banked
 23679   003D18  6F80               	movwf	(SD_SendCmd@response+3)& (0+255),b
 23680                           
 23681                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23682   003D1A  0E99               	movlw	low (_spiMaster+4)
 23683   003D1C  6EF6               	movwf	tblptrl,c
 23684   003D1E  0EFF               	movlw	high (_spiMaster+4)
 23685   003D20  6EF7               	movwf	tblptrh,c
 23686   003D22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23687   003D22  6AF8               	clrf	tblptru,c
 23688   003D24                     	endif
 23689   003D24                     	if	0	;tblptru may be non-zero
 23690   003D24                     	endif
 23691   003D24  0009               	tblrd		*+
 23692   003D26  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23693   003D2C  0009               	tblrd		*+
 23694   003D2E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23695   003D34  D802               	call	u15608
 23696   003D36  EFA7  F01E         	goto	u15609
 23697   003D3A                     u15608:
 23698   003D3A  0005               	push	
 23699   003D3C  6EFA               	movwf	pclath,c
 23700   003D3E  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23701   003D40  6EFD               	movwf	tosl,c
 23702   003D42  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23703   003D44  6EFE               	movwf	tosh,c
 23704   003D46  6AFF               	clrf	tosu,c
 23705   003D48  50FA               	movf	pclath,w,c
 23706   003D4A  0EFF               	movlw	255
 23707   003D4C  0012               	return		;indir
 23708   003D4E                     u15609:
 23709   003D4E  0100               	movlb	0	; () banked
 23710   003D50  6F7F               	movwf	(SD_SendCmd@response+2)& (0+255),b
 23711                           
 23712                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23713   003D52  0E99               	movlw	low (_spiMaster+4)
 23714   003D54  6EF6               	movwf	tblptrl,c
 23715   003D56  0EFF               	movlw	high (_spiMaster+4)
 23716   003D58  6EF7               	movwf	tblptrh,c
 23717   003D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23718   003D5A  6AF8               	clrf	tblptru,c
 23719   003D5C                     	endif
 23720   003D5C                     	if	0	;tblptru may be non-zero
 23721   003D5C                     	endif
 23722   003D5C  0009               	tblrd		*+
 23723   003D5E  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23724   003D64  0009               	tblrd		*+
 23725   003D66  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23726   003D6C  D802               	call	u15618
 23727   003D6E  EFC3  F01E         	goto	u15619
 23728   003D72                     u15618:
 23729   003D72  0005               	push	
 23730   003D74  6EFA               	movwf	pclath,c
 23731   003D76  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23732   003D78  6EFD               	movwf	tosl,c
 23733   003D7A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23734   003D7C  6EFE               	movwf	tosh,c
 23735   003D7E  6AFF               	clrf	tosu,c
 23736   003D80  50FA               	movf	pclath,w,c
 23737   003D82  0EFF               	movlw	255
 23738   003D84  0012               	return		;indir
 23739   003D86                     u15619:
 23740   003D86  0100               	movlb	0	; () banked
 23741   003D88  6F7E               	movwf	(SD_SendCmd@response+1)& (0+255),b
 23742   003D8A                     l1762:
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 23746   003D8A  0E99               	movlw	low (_spiMaster+4)
 23747   003D8C  6EF6               	movwf	tblptrl,c
 23748   003D8E  0EFF               	movlw	high (_spiMaster+4)
 23749   003D90  6EF7               	movwf	tblptrh,c
 23750   003D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23751   003D92  6AF8               	clrf	tblptru,c
 23752   003D94                     	endif
 23753   003D94                     	if	0	;tblptru may be non-zero
 23754   003D94                     	endif
 23755   003D94  0009               	tblrd		*+
 23756   003D96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 23757   003D9C  0009               	tblrd		*+
 23758   003D9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 23759   003DA4  D802               	call	u15628
 23760   003DA6  EFDF  F01E         	goto	u15629
 23761   003DAA                     u15628:
 23762   003DAA  0005               	push	
 23763   003DAC  6EFA               	movwf	pclath,c
 23764   003DAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 23765   003DB0  6EFD               	movwf	tosl,c
 23766   003DB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 23767   003DB4  6EFE               	movwf	tosh,c
 23768   003DB6  6AFF               	clrf	tosu,c
 23769   003DB8  50FA               	movf	pclath,w,c
 23770   003DBA  0EFF               	movlw	255
 23771   003DBC  0012               	return		;indir
 23772   003DBE                     u15629:
 23773   003DBE                     
 23774                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 23775   003DBE  0100               	movlb	0	; () banked
 23776   003DC0  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 23777   003DC2  0D04               	mullw	4
 23778   003DC4  0E03               	movlw	3
 23779   003DC6  26F3               	addwf	243,f,c
 23780   003DC8  0E00               	movlw	0
 23781   003DCA  22F4               	addwfc	244,f,c
 23782   003DCC  0E45               	movlw	low _sdmmc_cmdtable
 23783   003DCE  24F3               	addwf	243,w,c
 23784   003DD0  6EF6               	movwf	tblptrl,c
 23785   003DD2  0EFF               	movlw	high _sdmmc_cmdtable
 23786   003DD4  20F4               	addwfc	244,w,c
 23787   003DD6  6EF7               	movwf	tblptrh,c
 23788   003DD8                     	if	1	;There are 3 active tblptr bytes
 23789   003DD8  6AF8               	clrf	tblptru,c
 23790   003DDA  0E00               	movlw	low (__mediumconst shr (0+16))
 23791   003DDC  22F8               	addwfc	tblptru,f,c
 23792   003DDE                     	endif
 23793   003DDE  0008               	tblrd		*
 23794   003DE0  50F5               	movf	tablat,w,c
 23795   003DE2  0900               	iorlw	0
 23796   003DE4  A4D8               	btfss	status,2,c
 23797   003DE6  EFF7  F01E         	goto	u15631
 23798   003DEA  EFF9  F01E         	goto	u15630
 23799   003DEE                     u15631:
 23800   003DEE  EFFA  F01E         	goto	l13783
 23801   003DF2                     u15630:
 23802   003DF2                     
 23803                           ; BSR set to: 0
 23804   003DF2  8ABA               	bsf	186,5,c	;volatile
 23805   003DF4                     l13783:
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 23809   003DF4  EE20  F07D         	lfsr	2,SD_SendCmd@response
 23810   003DF8  EE00  F06B         	lfsr	0,?_SD_SendCmd
 23811   003DFC  0E04               	movlw	4
 23812   003DFE                     u15641:
 23813   003DFE  006F FF6F FFEB     	movff	plusw2,plusw0
 23814   003E04  06E8               	decf	wreg,f,c
 23815   003E06  E2FB               	bc	u15641
 23816   003E08                     
 23817                           ; BSR set to: 0
 23818   003E08  0012               	return		;funcret
 23819   003E0A                     __end_of_SD_SendCmd:
 23820                           	callstack 0
 23821                           
 23822 ;; *************** function _memcpy *****************
 23823 ;; Defined at:
 23824 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;  d1              2    0[BANK0 ] PTR void 
 23827 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 23828 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 23829 ;;  s1              2    2[BANK0 ] PTR const void 
 23830 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 23831 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 23832 ;;  n               2    4[BANK0 ] unsigned int 
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 23835 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 23836 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 23837 ;;  d               2    7[BANK0 ] PTR unsigned char 
 23838 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 23839 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 23840 ;;  tmp             1    6[BANK0 ] unsigned char 
 23841 ;; Return value:  Size  Location     Type
 23842 ;;                  2    0[BANK0 ] PTR void 
 23843 ;; Registers used:
 23844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23845 ;; Tracked objects:
 23846 ;;		On entry : 0/0
 23847 ;;		On exit  : 0/0
 23848 ;;		Unchanged: 0/0
 23849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23850 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23851 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23853 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23854 ;;Total ram usage:       11 bytes
 23855 ;; Hardware stack levels used: 1
 23856 ;; Hardware stack levels required when called: 5
 23857 ;; This function calls:
 23858 ;;		Nothing
 23859 ;; This function is called by:
 23860 ;;		_can_send
 23861 ;;		_SD_SendCmd
 23862 ;;		_srb_push
 23863 ;;		_srb_pop
 23864 ;;		_srb_peek
 23865 ;;		_build_state_est_data_msg
 23866 ;;		_get_state_est_data
 23867 ;; This function uses a non-reentrant model
 23868 ;;
 23869                           
 23870                           	psect	text83
 23871   008AC8                     __ptext83:
 23872                           	callstack 0
 23873   008AC8                     _memcpy:
 23874                           	callstack 19
 23875   008AC8  C062  F069         	movff	memcpy@s1,memcpy@s
 23876   008ACC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 23877   008AD0  C060  F067         	movff	memcpy@d1,memcpy@d
 23878   008AD4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 23879   008AD8  EF83  F045         	goto	l13709
 23880   008ADC                     l13701:
 23881                           
 23882                           ; BSR set to: 0
 23883   008ADC  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 23884   008AE2  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 23885   008AE8  50DF               	movf	indf2,w,c
 23886   008AEA  6F66               	movwf	memcpy@tmp& (0+255),b
 23887   008AEC                     
 23888                           ; BSR set to: 0
 23889   008AEC  4B69               	infsnz	memcpy@s& (0+255),f,b
 23890   008AEE  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 23891   008AF0                     
 23892                           ; BSR set to: 0
 23893   008AF0  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 23894   008AF6  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 23895   008AFC  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 23896   008B02                     
 23897                           ; BSR set to: 0
 23898   008B02  4B67               	infsnz	memcpy@d& (0+255),f,b
 23899   008B04  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 23900   008B06                     l13709:
 23901   008B06  0100               	movlb	0	; () banked
 23902   008B08  0764               	decf	memcpy@n& (0+255),f,b
 23903   008B0A  A0D8               	btfss	status,0,c
 23904   008B0C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 23905   008B0E  2964               	incf	memcpy@n& (0+255),w,b
 23906   008B10  E106               	bnz	u15371
 23907   008B12  2965               	incf	(memcpy@n+1)& (0+255),w,b
 23908   008B14  A4D8               	btfss	status,2,c
 23909   008B16  EF8F  F045         	goto	u15371
 23910   008B1A  EF91  F045         	goto	u15370
 23911   008B1E                     u15371:
 23912   008B1E  EF6E  F045         	goto	l13701
 23913   008B22                     u15370:
 23914   008B22                     
 23915                           ; BSR set to: 0
 23916   008B22  0012               	return		;funcret
 23917   008B24                     __end_of_memcpy:
 23918                           	callstack 0
 23919                           
 23920 ;; *************** function _SPI1_ExchangeByte *****************
 23921 ;; Defined at:
 23922 ;;		line 101 in file "mcc_generated_files/spi1.c"
 23923 ;; Parameters:    Size  Location     Type
 23924 ;;  data            1    wreg     unsigned char 
 23925 ;; Auto vars:     Size  Location     Type
 23926 ;;  data            1    0[BANK0 ] unsigned char 
 23927 ;; Return value:  Size  Location     Type
 23928 ;;                  1    wreg      unsigned char 
 23929 ;; Registers used:
 23930 ;;		wreg, status,2
 23931 ;; Tracked objects:
 23932 ;;		On entry : 0/0
 23933 ;;		On exit  : 0/0
 23934 ;;		Unchanged: 0/0
 23935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23940 ;;Total ram usage:        1 bytes
 23941 ;; Hardware stack levels used: 1
 23942 ;; Hardware stack levels required when called: 5
 23943 ;; This function calls:
 23944 ;;		Nothing
 23945 ;; This function is called by:
 23946 ;;		_SPI1_WriteBlock
 23947 ;;		_SPI1_ReadBlock
 23948 ;;		_SD_SendCmd
 23949 ;;		_SD_SPI_AsyncWriteTasks
 23950 ;;		_SD_SPI_AsyncReadTasks
 23951 ;;		_SD_SPI_DelayMilliseconds
 23952 ;;		_SD_SPI_MediaInitialize
 23953 ;; This function uses a non-reentrant model
 23954 ;;
 23955                           
 23956                           	psect	text84
 23957   008FFC                     __ptext84:
 23958                           	callstack 0
 23959   008FFC                     _SPI1_ExchangeByte:
 23960                           	callstack 20
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;incstack = 0
 23964                           ;SPI1_ExchangeByte@data stored from wreg
 23965   008FFC  0100               	movlb	0	; () banked
 23966   008FFE  6F60               	movwf	SPI1_ExchangeByte@data& (0+255),b
 23967   009000                     
 23968                           ;mcc_generated_files/spi1.c: 101: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 102: {;mcc_generated_files/spi1.c: 103:     SPI1TCNTL = 1;
 23969   009000  0E01               	movlw	1
 23970   009002  013D               	movlb	61	; () banked
 23971   009004  6F12               	movwf	18,b	;volatile
 23972   009006                     
 23973                           ; BSR set to: 61
 23974                           ;mcc_generated_files/spi1.c: 104:     SPI1TXB = data;
 23975   009006  0060  F183  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 23976   00900C                     l1913:
 23977   00900C  0139               	movlb	57	; () banked
 23978   00900E  A9A2               	btfss	162,4,b	;volatile
 23979   009010  EF0C  F048         	goto	u15381
 23980   009014  EF0E  F048         	goto	u15380
 23981   009018                     u15381:
 23982   009018  EF06  F048         	goto	l1913
 23983   00901C                     u15380:
 23984   00901C                     
 23985                           ; BSR set to: 57
 23986                           ;mcc_generated_files/spi1.c: 106:     return SPI1RXB;
 23987   00901C  013D               	movlb	61	; () banked
 23988   00901E  5110               	movf	16,w,b	;volatile
 23989   009020                     
 23990                           ; BSR set to: 61
 23991   009020  0012               	return		;funcret
 23992   009022                     __end_of_SPI1_ExchangeByte:
 23993                           	callstack 0
 23994                           
 23995 ;; *************** function _SDFAST_open *****************
 23996 ;; Defined at:
 23997 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 23998 ;; Parameters:    Size  Location     Type
 23999 ;;		None
 24000 ;; Auto vars:     Size  Location     Type
 24001 ;;		None
 24002 ;; Return value:  Size  Location     Type
 24003 ;;                  1    wreg      _Bool 
 24004 ;; Registers used:
 24005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24006 ;; Tracked objects:
 24007 ;;		On entry : 0/0
 24008 ;;		On exit  : 0/0
 24009 ;;		Unchanged: 0/0
 24010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24015 ;;Total ram usage:        0 bytes
 24016 ;; Hardware stack levels used: 1
 24017 ;; Hardware stack levels required when called: 6
 24018 ;; This function calls:
 24019 ;;		_SPI1_Open
 24020 ;; This function is called by:
 24021 ;;		_spi_master_open
 24022 ;;		_SD_SPI_SectorWrite
 24023 ;;		_SD_SPI_SectorRead
 24024 ;;		_SD_SPI_MediaInitialize
 24025 ;; This function uses a non-reentrant model
 24026 ;;
 24027                           
 24028                           	psect	text85
 24029   0091A4                     __ptext85:
 24030                           	callstack 0
 24031   0091A4                     _SDFAST_open:
 24032                           	callstack 20
 24033   0091A4                     
 24034                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 24035   0091A4  0E00               	movlw	0
 24036   0091A6  ECD6  F03C         	call	_SPI1_Open
 24037   0091AA  0012               	return		;funcret
 24038   0091AC                     __end_of_SDFAST_open:
 24039                           	callstack 0
 24040                           
 24041 ;; *************** function _SDSLOW_open *****************
 24042 ;; Defined at:
 24043 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 24044 ;; Parameters:    Size  Location     Type
 24045 ;;		None
 24046 ;; Auto vars:     Size  Location     Type
 24047 ;;		None
 24048 ;; Return value:  Size  Location     Type
 24049 ;;                  1    wreg      _Bool 
 24050 ;; Registers used:
 24051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24052 ;; Tracked objects:
 24053 ;;		On entry : 0/0
 24054 ;;		On exit  : 0/0
 24055 ;;		Unchanged: 0/0
 24056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24061 ;;Total ram usage:        0 bytes
 24062 ;; Hardware stack levels used: 1
 24063 ;; Hardware stack levels required when called: 6
 24064 ;; This function calls:
 24065 ;;		_SPI1_Open
 24066 ;; This function is called by:
 24067 ;;		_spi_master_open
 24068 ;;		_SD_SPI_SectorWrite
 24069 ;;		_SD_SPI_SectorRead
 24070 ;;		_SD_SPI_MediaInitialize
 24071 ;; This function uses a non-reentrant model
 24072 ;;
 24073                           
 24074                           	psect	text86
 24075   0091AC                     __ptext86:
 24076                           	callstack 0
 24077   0091AC                     _SDSLOW_open:
 24078                           	callstack 20
 24079   0091AC                     
 24080                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 24081   0091AC  0E01               	movlw	1
 24082   0091AE  ECD6  F03C         	call	_SPI1_Open
 24083   0091B2  0012               	return		;funcret
 24084   0091B4                     __end_of_SDSLOW_open:
 24085                           	callstack 0
 24086                           
 24087 ;; *************** function _SPI1_Open *****************
 24088 ;; Defined at:
 24089 ;;		line 81 in file "mcc_generated_files/spi1.c"
 24090 ;; Parameters:    Size  Location     Type
 24091 ;;  spi1UniqueCo    1    wreg     enum E358
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;  spi1UniqueCo    1    1[BANK0 ] enum E358
 24094 ;; Return value:  Size  Location     Type
 24095 ;;                  1    wreg      _Bool 
 24096 ;; Registers used:
 24097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/0
 24100 ;;		On exit  : 0/0
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24107 ;;Total ram usage:        2 bytes
 24108 ;; Hardware stack levels used: 1
 24109 ;; Hardware stack levels required when called: 5
 24110 ;; This function calls:
 24111 ;;		Nothing
 24112 ;; This function is called by:
 24113 ;;		_SDFAST_open
 24114 ;;		_SDSLOW_open
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	text87
 24119   0079AC                     __ptext87:
 24120                           	callstack 0
 24121   0079AC                     _SPI1_Open:
 24122                           	callstack 20
 24123                           
 24124                           ;incstack = 0
 24125                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 24126   0079AC  0100               	movlb	0	; () banked
 24127   0079AE  6F61               	movwf	SPI1_Open@spi1UniqueConfiguration& (0+255),b
 24128   0079B0                     
 24129                           ;mcc_generated_files/spi1.c: 81: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 82: {;mcc_generated_files/spi1.c: 83:     if(!SPI1CON0bits.EN
      +                          )
 24130   0079B0  013D               	movlb	61	; () banked
 24131   0079B2  BF14               	btfsc	20,7,b	;volatile
 24132   0079B4  EFDE  F03C         	goto	u15391
 24133   0079B8  EFE0  F03C         	goto	u15390
 24134   0079BC                     u15391:
 24135   0079BC  EF4B  F03D         	goto	l13725
 24136   0079C0                     u15390:
 24137   0079C0                     
 24138                           ; BSR set to: 61
 24139                           ;mcc_generated_files/spi1.c: 84:     {;mcc_generated_files/spi1.c: 85:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
 24140   0079C0  0100               	movlb	0	; () banked
 24141   0079C2  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 24142   0079C4  0D05               	mullw	5
 24143   0079C6  0EBD               	movlw	low _spi1_configuration
 24144   0079C8  24F3               	addwf	243,w,c
 24145   0079CA  6EF6               	movwf	tblptrl,c
 24146   0079CC  0EFF               	movlw	high _spi1_configuration
 24147   0079CE  20F4               	addwfc	244,w,c
 24148   0079D0  6EF7               	movwf	tblptrh,c
 24149   0079D2                     	if	1	;There are 3 active tblptr bytes
 24150   0079D2  6AF8               	clrf	tblptru,c
 24151   0079D4  0E00               	movlw	low (__mediumconst shr (0+16))
 24152   0079D6  22F8               	addwfc	tblptru,f,c
 24153   0079D8                     	endif
 24154   0079D8  0008               	tblrd		*
 24155   0079DA  006F FFD7 FD14     	movff	tablat,15636	;volatile
 24156                           
 24157                           ;mcc_generated_files/spi1.c: 86:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 24158   0079E0  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 24159   0079E2  0D05               	mullw	5
 24160   0079E4  0E01               	movlw	1
 24161   0079E6  26F3               	addwf	243,f,c
 24162   0079E8  0E00               	movlw	0
 24163   0079EA  22F4               	addwfc	244,f,c
 24164   0079EC  0EBD               	movlw	low _spi1_configuration
 24165   0079EE  24F3               	addwf	243,w,c
 24166   0079F0  6EF6               	movwf	tblptrl,c
 24167   0079F2  0EFF               	movlw	high _spi1_configuration
 24168   0079F4  20F4               	addwfc	244,w,c
 24169   0079F6  6EF7               	movwf	tblptrh,c
 24170   0079F8                     	if	1	;There are 3 active tblptr bytes
 24171   0079F8  6AF8               	clrf	tblptru,c
 24172   0079FA  0E00               	movlw	low (__mediumconst shr (0+16))
 24173   0079FC  22F8               	addwfc	tblptru,f,c
 24174   0079FE                     	endif
 24175   0079FE  0008               	tblrd		*
 24176   007A00  006F FFD7 FD15     	movff	tablat,15637	;volatile
 24177                           
 24178                           ;mcc_generated_files/spi1.c: 87:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
 24179   007A06  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 24180   007A08  0D05               	mullw	5
 24181   007A0A  0E02               	movlw	2
 24182   007A0C  26F3               	addwf	243,f,c
 24183   007A0E  0E00               	movlw	0
 24184   007A10  22F4               	addwfc	244,f,c
 24185   007A12  0EBD               	movlw	low _spi1_configuration
 24186   007A14  24F3               	addwf	243,w,c
 24187   007A16  6EF6               	movwf	tblptrl,c
 24188   007A18  0EFF               	movlw	high _spi1_configuration
 24189   007A1A  20F4               	addwfc	244,w,c
 24190   007A1C  6EF7               	movwf	tblptrh,c
 24191   007A1E                     	if	1	;There are 3 active tblptr bytes
 24192   007A1E  6AF8               	clrf	tblptru,c
 24193   007A20  0E00               	movlw	low (__mediumconst shr (0+16))
 24194   007A22  22F8               	addwfc	tblptru,f,c
 24195   007A24                     	endif
 24196   007A24  0008               	tblrd		*
 24197   007A26  50F5               	movf	tablat,w,c
 24198   007A28  0903               	iorlw	3
 24199   007A2A  013D               	movlb	61	; () banked
 24200   007A2C  6F16               	movwf	22,b	;volatile
 24201                           
 24202                           ;mcc_generated_files/spi1.c: 88:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
 24203   007A2E  0100               	movlb	0	; () banked
 24204   007A30  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 24205   007A32  0D05               	mullw	5
 24206   007A34  0E03               	movlw	3
 24207   007A36  26F3               	addwf	243,f,c
 24208   007A38  0E00               	movlw	0
 24209   007A3A  22F4               	addwfc	244,f,c
 24210   007A3C  0EBD               	movlw	low _spi1_configuration
 24211   007A3E  24F3               	addwf	243,w,c
 24212   007A40  6EF6               	movwf	tblptrl,c
 24213   007A42  0EFF               	movlw	high _spi1_configuration
 24214   007A44  20F4               	addwfc	244,w,c
 24215   007A46  6EF7               	movwf	tblptrh,c
 24216   007A48                     	if	1	;There are 3 active tblptr bytes
 24217   007A48  6AF8               	clrf	tblptru,c
 24218   007A4A  0E00               	movlw	low (__mediumconst shr (0+16))
 24219   007A4C  22F8               	addwfc	tblptru,f,c
 24220   007A4E                     	endif
 24221   007A4E  0008               	tblrd		*
 24222   007A50  006F FFD7 FD19     	movff	tablat,15641	;volatile
 24223                           
 24224                           ;mcc_generated_files/spi1.c: 89:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 24225   007A56  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 24226   007A58  0D05               	mullw	5
 24227   007A5A  0E04               	movlw	4
 24228   007A5C  26F3               	addwf	243,f,c
 24229   007A5E  0E00               	movlw	0
 24230   007A60  22F4               	addwfc	244,f,c
 24231   007A62  0EBD               	movlw	low _spi1_configuration
 24232   007A64  24F3               	addwf	243,w,c
 24233   007A66  6EF6               	movwf	tblptrl,c
 24234   007A68  0EFF               	movlw	high _spi1_configuration
 24235   007A6A  20F4               	addwfc	244,w,c
 24236   007A6C  6EF7               	movwf	tblptrh,c
 24237   007A6E                     	if	1	;There are 3 active tblptr bytes
 24238   007A6E  6AF8               	clrf	tblptru,c
 24239   007A70  0E00               	movlw	low (__mediumconst shr (0+16))
 24240   007A72  22F8               	addwfc	tblptru,f,c
 24241   007A74                     	endif
 24242   007A74  0008               	tblrd		*
 24243   007A76  006F FFD4  F060    	movff	tablat,??_SPI1_Open
 24244   007A7C  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 24245   007A7E  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 24246   007A80  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 24247   007A82  50C4               	movf	196,w,c	;volatile
 24248   007A84  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 24249   007A86  0BF7               	andlw	-9
 24250   007A88  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 24251   007A8A  6EC4               	movwf	196,c	;volatile
 24252   007A8C                     
 24253                           ; BSR set to: 0
 24254                           ;mcc_generated_files/spi1.c: 90:         SPI1CON0bits.EN = 1;
 24255   007A8C  013D               	movlb	61	; () banked
 24256   007A8E  8F14               	bsf	20,7,b	;volatile
 24257   007A90                     
 24258                           ; BSR set to: 61
 24259                           ;mcc_generated_files/spi1.c: 91:         return 1;
 24260   007A90  0E01               	movlw	1
 24261   007A92  EF4C  F03D         	goto	l1907
 24262   007A96                     l13725:
 24263                           
 24264                           ; BSR set to: 61
 24265                           ;mcc_generated_files/spi1.c: 93:     return 0;
 24266   007A96  0E00               	movlw	0
 24267   007A98                     l1907:
 24268                           
 24269                           ; BSR set to: 61
 24270   007A98  0012               	return		;funcret
 24271   007A9A                     __end_of_SPI1_Open:
 24272                           	callstack 0
 24273                           
 24274 ;; *************** function _mem_cmp *****************
 24275 ;; Defined at:
 24276 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;  dst             2    0[BANK0 ] PTR const void 
 24279 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 24280 ;;  src             2    2[BANK0 ] PTR const void 
 24281 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 24282 ;;		 -> STR_4(4), 
 24283 ;;  cnt             2    4[BANK0 ] unsigned int 
 24284 ;; Auto vars:     Size  Location     Type
 24285 ;;  r               2   12[BANK0 ] int 
 24286 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 24287 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 24288 ;;		 -> STR_4(4), 
 24289 ;;  d               2    8[BANK0 ] PTR const unsigned char 
 24290 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 24291 ;; Return value:  Size  Location     Type
 24292 ;;                  2    0[BANK0 ] int 
 24293 ;; Registers used:
 24294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24295 ;; Tracked objects:
 24296 ;;		On entry : 0/0
 24297 ;;		On exit  : 0/0
 24298 ;;		Unchanged: 0/0
 24299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24300 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24301 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24303 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24304 ;;Total ram usage:       14 bytes
 24305 ;; Hardware stack levels used: 1
 24306 ;; Hardware stack levels required when called: 5
 24307 ;; This function calls:
 24308 ;;		Nothing
 24309 ;; This function is called by:
 24310 ;;		_dir_find
 24311 ;;		_check_fs
 24312 ;; This function uses a non-reentrant model
 24313 ;;
 24314                           
 24315                           	psect	text88
 24316   008320                     __ptext88:
 24317                           	callstack 0
 24318   008320                     _mem_cmp:
 24319                           	callstack 21
 24320   008320                     
 24321                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 24322   008320  C060  F068         	movff	mem_cmp@dst,mem_cmp@d
 24323   008324  C061  F069         	movff	mem_cmp@dst+1,mem_cmp@d+1
 24324   008328  C062  F06A         	movff	mem_cmp@src,mem_cmp@s
 24325   00832C  C063  F06B         	movff	mem_cmp@src+1,mem_cmp@s+1
 24326   008330                     l14875:
 24327                           
 24328                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 24329   008330  0060  F1A3  FFD9   	movff	mem_cmp@d,fsr2l
 24330   008336  0060  F1A7  FFDA   	movff	mem_cmp@d+1,fsr2h
 24331   00833C  50DF               	movf	indf2,w,c
 24332   00833E  0100               	movlb	0	; () banked
 24333   008340  6F66               	movwf	??_mem_cmp& (0+255),b
 24334   008342  0060  F1AB  FFF6   	movff	mem_cmp@s,tblptrl
 24335   008348  0060  F1AF  FFF7   	movff	mem_cmp@s+1,tblptrh
 24336   00834E  0E00               	movlw	low (__mediumconst shr (0+16))
 24337   008350  6EF8               	movwf	tblptru,c
 24338   008352  0E0F               	movlw	(high __ramtop+-1)
 24339   008354  64F7               	cpfsgt	tblptrh,c
 24340   008356  D003               	bra	u17587
 24341   008358  0008               	tblrd		*
 24342   00835A  50F5               	movf	tablat,w,c
 24343   00835C  D007               	bra	u17580
 24344   00835E                     u17587:
 24345   00835E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 24346   008364  006F FFDF FFEA     	movff	tblptrh,fsr0h
 24347   00836A  50EF               	movf	indf0,w,c
 24348   00836C                     u17580:
 24349   00836C  0100               	movlb	0	; () banked
 24350   00836E  6F67               	movwf	(??_mem_cmp+1)& (0+255),b
 24351   008370  5167               	movf	(??_mem_cmp+1)& (0+255),w,b
 24352   008372  5D66               	subwf	??_mem_cmp& (0+255),w,b
 24353   008374  6F6C               	movwf	mem_cmp@r& (0+255),b
 24354   008376  6B6D               	clrf	(mem_cmp@r+1)& (0+255),b
 24355   008378  A0D8               	btfss	status,0,c
 24356   00837A  076D               	decf	(mem_cmp@r+1)& (0+255),f,b
 24357   00837C                     
 24358                           ; BSR set to: 0
 24359   00837C  4B6A               	infsnz	mem_cmp@s& (0+255),f,b
 24360   00837E  2B6B               	incf	(mem_cmp@s+1)& (0+255),f,b
 24361   008380                     
 24362                           ; BSR set to: 0
 24363   008380  4B68               	infsnz	mem_cmp@d& (0+255),f,b
 24364   008382  2B69               	incf	(mem_cmp@d+1)& (0+255),f,b
 24365   008384                     
 24366                           ; BSR set to: 0
 24367                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 24368   008384  0764               	decf	mem_cmp@cnt& (0+255),f,b
 24369   008386  A0D8               	btfss	status,0,c
 24370   008388  0765               	decf	(mem_cmp@cnt+1)& (0+255),f,b
 24371   00838A  5164               	movf	mem_cmp@cnt& (0+255),w,b
 24372   00838C  1165               	iorwf	(mem_cmp@cnt+1)& (0+255),w,b
 24373   00838E  B4D8               	btfsc	status,2,c
 24374   008390  EFCC  F041         	goto	u17591
 24375   008394  EFCE  F041         	goto	u17590
 24376   008398                     u17591:
 24377   008398  EFD7  F041         	goto	l878
 24378   00839C                     u17590:
 24379   00839C                     
 24380                           ; BSR set to: 0
 24381   00839C  516C               	movf	mem_cmp@r& (0+255),w,b
 24382   00839E  116D               	iorwf	(mem_cmp@r+1)& (0+255),w,b
 24383   0083A0  B4D8               	btfsc	status,2,c
 24384   0083A2  EFD5  F041         	goto	u17601
 24385   0083A6  EFD7  F041         	goto	u17600
 24386   0083AA                     u17601:
 24387   0083AA  EF98  F041         	goto	l14875
 24388   0083AE                     u17600:
 24389   0083AE                     l878:
 24390                           
 24391                           ; BSR set to: 0
 24392                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 24393   0083AE  C06C  F060         	movff	mem_cmp@r,?_mem_cmp
 24394   0083B2  C06D  F061         	movff	mem_cmp@r+1,?_mem_cmp+1
 24395   0083B6                     
 24396                           ; BSR set to: 0
 24397   0083B6  0012               	return		;funcret
 24398   0083B8                     __end_of_mem_cmp:
 24399                           	callstack 0
 24400                           
 24401 ;; *************** function _ld_word *****************
 24402 ;; Defined at:
 24403 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 24404 ;; Parameters:    Size  Location     Type
 24405 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 24406 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 24407 ;; Auto vars:     Size  Location     Type
 24408 ;;  rv              2    5[BANK0 ] unsigned short 
 24409 ;; Return value:  Size  Location     Type
 24410 ;;                  2    0[BANK0 ] unsigned short 
 24411 ;; Registers used:
 24412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24413 ;; Tracked objects:
 24414 ;;		On entry : 0/0
 24415 ;;		On exit  : 0/0
 24416 ;;		Unchanged: 0/0
 24417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24420 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24421 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24422 ;;Total ram usage:        7 bytes
 24423 ;; Hardware stack levels used: 1
 24424 ;; Hardware stack levels required when called: 5
 24425 ;; This function calls:
 24426 ;;		Nothing
 24427 ;; This function is called by:
 24428 ;;		_get_fat
 24429 ;;		_ld_clust
 24430 ;;		_check_fs
 24431 ;;		_find_volume
 24432 ;; This function uses a non-reentrant model
 24433 ;;
 24434                           
 24435                           	psect	text89
 24436   008DEE                     __ptext89:
 24437                           	callstack 0
 24438   008DEE                     _ld_word:
 24439                           	callstack 21
 24440   008DEE                     
 24441                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 24442   008DEE  0100               	movlb	0	; () banked
 24443   008DF0  EE20 F001          	lfsr	2,1
 24444   008DF4  5160               	movf	ld_word@ptr& (0+255),w,b
 24445   008DF6  26D9               	addwf	fsr2l,f,c
 24446   008DF8  5161               	movf	(ld_word@ptr+1)& (0+255),w,b
 24447   008DFA  22DA               	addwfc	fsr2h,f,c
 24448   008DFC  50DF               	movf	indf2,w,c
 24449   008DFE  6F62               	movwf	??_ld_word& (0+255),b
 24450   008E00  5162               	movf	??_ld_word& (0+255),w,b
 24451   008E02  6F65               	movwf	ld_word@rv& (0+255),b
 24452   008E04  6B66               	clrf	(ld_word@rv+1)& (0+255),b
 24453                           
 24454                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 24455   008E06  0060  F183  FFD9   	movff	ld_word@ptr,fsr2l
 24456   008E0C  0060  F187  FFDA   	movff	ld_word@ptr+1,fsr2h
 24457   008E12  50DF               	movf	indf2,w,c
 24458   008E14  6F62               	movwf	??_ld_word& (0+255),b
 24459   008E16  5165               	movf	ld_word@rv& (0+255),w,b
 24460   008E18  6F63               	movwf	(??_ld_word+1)& (0+255),b
 24461   008E1A  5162               	movf	??_ld_word& (0+255),w,b
 24462   008E1C  6F65               	movwf	ld_word@rv& (0+255),b
 24463   008E1E  C063  F066         	movff	??_ld_word+1,ld_word@rv+1
 24464   008E22                     
 24465                           ; BSR set to: 0
 24466                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 24467   008E22  C065  F060         	movff	ld_word@rv,?_ld_word
 24468   008E26  C066  F061         	movff	ld_word@rv+1,?_ld_word+1
 24469   008E2A                     
 24470                           ; BSR set to: 0
 24471   008E2A  0012               	return		;funcret
 24472   008E2C                     __end_of_ld_word:
 24473                           	callstack 0
 24474                           
 24475 ;; *************** function ___lldiv *****************
 24476 ;; Defined at:
 24477 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 24478 ;; Parameters:    Size  Location     Type
 24479 ;;  dividend        4    0[BANK0 ] unsigned long 
 24480 ;;  divisor         4    4[BANK0 ] unsigned long 
 24481 ;; Auto vars:     Size  Location     Type
 24482 ;;  quotient        4    8[BANK0 ] unsigned long 
 24483 ;;  counter         1   12[BANK0 ] unsigned char 
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  4    0[BANK0 ] unsigned long 
 24486 ;; Registers used:
 24487 ;;		wreg, status,2, status,0
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/0
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24493 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24494 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24496 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24497 ;;Total ram usage:       13 bytes
 24498 ;; Hardware stack levels used: 1
 24499 ;; Hardware stack levels required when called: 5
 24500 ;; This function calls:
 24501 ;;		Nothing
 24502 ;; This function is called by:
 24503 ;;		_find_volume
 24504 ;;		_f_printf
 24505 ;; This function uses a non-reentrant model
 24506 ;;
 24507                           
 24508                           	psect	text90
 24509   00827A                     __ptext90:
 24510                           	callstack 0
 24511   00827A                     ___lldiv:
 24512                           	callstack 22
 24513   00827A  0E00               	movlw	0
 24514   00827C  0100               	movlb	0	; () banked
 24515   00827E  6F68               	movwf	___lldiv@quotient& (0+255),b
 24516   008280  0E00               	movlw	0
 24517   008282  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24518   008284  0E00               	movlw	0
 24519   008286  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24520   008288  0E00               	movlw	0
 24521   00828A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24522   00828C                     
 24523                           ; BSR set to: 0
 24524   00828C  5164               	movf	___lldiv@divisor& (0+255),w,b
 24525   00828E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24526   008290  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24527   008292  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24528   008294  B4D8               	btfsc	status,2,c
 24529   008296  EF4F  F041         	goto	u18791
 24530   00829A  EF51  F041         	goto	u18790
 24531   00829E                     u18791:
 24532   00829E  EF87  F041         	goto	l2276
 24533   0082A2                     u18790:
 24534   0082A2                     
 24535                           ; BSR set to: 0
 24536   0082A2  0E01               	movlw	1
 24537   0082A4  6F6C               	movwf	___lldiv@counter& (0+255),b
 24538   0082A6  EF5B  F041         	goto	l15567
 24539   0082AA                     l15565:
 24540                           
 24541                           ; BSR set to: 0
 24542   0082AA  90D8               	bcf	status,0,c
 24543   0082AC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24544   0082AE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24545   0082B0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24546   0082B2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24547   0082B4  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24548   0082B6                     l15567:
 24549                           
 24550                           ; BSR set to: 0
 24551   0082B6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24552   0082B8  EF60  F041         	goto	u18801
 24553   0082BC  EF62  F041         	goto	u18800
 24554   0082C0                     u18801:
 24555   0082C0  EF55  F041         	goto	l15565
 24556   0082C4                     u18800:
 24557   0082C4                     l15569:
 24558                           
 24559                           ; BSR set to: 0
 24560   0082C4  90D8               	bcf	status,0,c
 24561   0082C6  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24562   0082C8  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24563   0082CA  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24564   0082CC  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24565   0082CE                     
 24566                           ; BSR set to: 0
 24567   0082CE  5164               	movf	___lldiv@divisor& (0+255),w,b
 24568   0082D0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24569   0082D2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24570   0082D4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24571   0082D6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24572   0082D8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24573   0082DA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24574   0082DC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24575   0082DE  A0D8               	btfss	status,0,c
 24576   0082E0  EF74  F041         	goto	u18811
 24577   0082E4  EF76  F041         	goto	u18810
 24578   0082E8                     u18811:
 24579   0082E8  EF7F  F041         	goto	l15577
 24580   0082EC                     u18810:
 24581   0082EC                     
 24582                           ; BSR set to: 0
 24583   0082EC  5164               	movf	___lldiv@divisor& (0+255),w,b
 24584   0082EE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24585   0082F0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24586   0082F2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24587   0082F4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24588   0082F6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24589   0082F8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24590   0082FA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24591   0082FC                     
 24592                           ; BSR set to: 0
 24593   0082FC  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24594   0082FE                     l15577:
 24595                           
 24596                           ; BSR set to: 0
 24597   0082FE  90D8               	bcf	status,0,c
 24598   008300  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24599   008302  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24600   008304  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24601   008306  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24602   008308                     
 24603                           ; BSR set to: 0
 24604   008308  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24605   00830A  EF62  F041         	goto	l15569
 24606   00830E                     l2276:
 24607                           
 24608                           ; BSR set to: 0
 24609   00830E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24610   008312  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24611   008316  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24612   00831A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24613   00831E                     
 24614                           ; BSR set to: 0
 24615   00831E  0012               	return		;funcret
 24616   008320                     __end_of___lldiv:
 24617                           	callstack 0
 24618                           
 24619 ;; *************** function _can_init *****************
 24620 ;; Defined at:
 24621 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 24622 ;; Parameters:    Size  Location     Type
 24623 ;;  timing          2    0[BANK0 ] PTR const struct .
 24624 ;;		 -> main@can_setup(7), 
 24625 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
 24626 ;;		 -> can_msg_handler(1), 
 24627 ;; Auto vars:     Size  Location     Type
 24628 ;;		None
 24629 ;; Return value:  Size  Location     Type
 24630 ;;                  1    wreg      void 
 24631 ;; Registers used:
 24632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24633 ;; Tracked objects:
 24634 ;;		On entry : 0/0
 24635 ;;		On exit  : 0/0
 24636 ;;		Unchanged: 0/0
 24637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24641 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24642 ;;Total ram usage:        5 bytes
 24643 ;; Hardware stack levels used: 1
 24644 ;; Hardware stack levels required when called: 5
 24645 ;; This function calls:
 24646 ;;		Nothing
 24647 ;; This function is called by:
 24648 ;;		_main
 24649 ;; This function uses a non-reentrant model
 24650 ;;
 24651                           
 24652                           	psect	text91
 24653   00689A                     __ptext91:
 24654                           	callstack 0
 24655   00689A                     _can_init:
 24656                           	callstack 25
 24657   00689A                     
 24658                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
 24659   00689A  C062  F046         	movff	can_init@receive_callback,_can_rcv_cb
 24660   00689E  C063  F047         	movff	can_init@receive_callback+1,_can_rcv_cb+1
 24661   0068A2                     
 24662                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
 24663   0068A2  508F               	movf	143,w,c	;volatile
 24664   0068A4  0B1F               	andlw	-225
 24665   0068A6  0980               	iorlw	128
 24666   0068A8  6E8F               	movwf	143,c	;volatile
 24667   0068AA                     l16713:
 24668   0068AA  388E               	swapf	142,w,c	;volatile
 24669   0068AC  32E8               	rrcf	wreg,f,c
 24670   0068AE  0B07               	andlw	7
 24671   0068B0  0A04               	xorlw	4
 24672   0068B2  A4D8               	btfss	status,2,c
 24673   0068B4  EF5E  F034         	goto	u20681
 24674   0068B8  EF60  F034         	goto	u20680
 24675   0068BC                     u20681:
 24676   0068BC  EF55  F034         	goto	l16713
 24677   0068C0                     u20680:
 24678   0068C0                     
 24679                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
 24680   0068C0  0E3F               	movlw	-193
 24681   0068C2  1691               	andwf	145,f,c	;volatile
 24682   0068C4                     
 24683                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
 24684   0068C4  0137               	movlb	55	; () banked
 24685   0068C6  9100               	bcf	0,0,b	;volatile
 24686   0068C8                     
 24687                           ; BSR set to: 55
 24688                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
 24689   0068C8  0100               	movlb	0	; () banked
 24690   0068CA  EE20 F001          	lfsr	2,1
 24691   0068CE  5160               	movf	can_init@timing& (0+255),w,b
 24692   0068D0  26D9               	addwf	fsr2l,f,c
 24693   0068D2  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24694   0068D4  22DA               	addwfc	fsr2h,f,c
 24695   0068D6  50DF               	movf	indf2,w,c
 24696   0068D8  6F64               	movwf	??_can_init& (0+255),b
 24697   0068DA  3B64               	swapf	??_can_init& (0+255),f,b
 24698   0068DC  4764               	rlncf	??_can_init& (0+255),f,b
 24699   0068DE  4764               	rlncf	??_can_init& (0+255),f,b
 24700   0068E0  0137               	movlb	55	; () banked
 24701   0068E2  5103               	movf	3,w,b	;volatile
 24702   0068E4  0100               	movlb	0	; () banked
 24703   0068E6  1964               	xorwf	??_can_init& (0+255),w,b
 24704   0068E8  0B3F               	andlw	-193
 24705   0068EA  1964               	xorwf	??_can_init& (0+255),w,b
 24706   0068EC  0137               	movlb	55	; () banked
 24707   0068EE  6F03               	movwf	3,b	;volatile
 24708   0068F0                     
 24709                           ; BSR set to: 55
 24710                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
 24711   0068F0  0060  F183  FFD9   	movff	can_init@timing,fsr2l
 24712   0068F6  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
 24713   0068FC  50DF               	movf	indf2,w,c
 24714   0068FE  0100               	movlb	0	; () banked
 24715   006900  6F64               	movwf	??_can_init& (0+255),b
 24716   006902  0137               	movlb	55	; () banked
 24717   006904  5103               	movf	3,w,b	;volatile
 24718   006906  0100               	movlb	0	; () banked
 24719   006908  1964               	xorwf	??_can_init& (0+255),w,b
 24720   00690A  0BC0               	andlw	-64
 24721   00690C  1964               	xorwf	??_can_init& (0+255),w,b
 24722   00690E  0137               	movlb	55	; () banked
 24723   006910  6F03               	movwf	3,b	;volatile
 24724   006912                     
 24725                           ; BSR set to: 55
 24726                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
 24727   006912  0100               	movlb	0	; () banked
 24728   006914  EE20 F006          	lfsr	2,6
 24729   006918  5160               	movf	can_init@timing& (0+255),w,b
 24730   00691A  26D9               	addwf	fsr2l,f,c
 24731   00691C  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24732   00691E  22DA               	addwfc	fsr2h,f,c
 24733   006920  50DF               	movf	indf2,w,c
 24734   006922  6F64               	movwf	??_can_init& (0+255),b
 24735   006924  3364               	rrcf	??_can_init& (0+255),f,b
 24736   006926  3364               	rrcf	??_can_init& (0+255),f,b
 24737   006928  0137               	movlb	55	; () banked
 24738   00692A  5104               	movf	4,w,b	;volatile
 24739   00692C  0100               	movlb	0	; () banked
 24740   00692E  1964               	xorwf	??_can_init& (0+255),w,b
 24741   006930  0B7F               	andlw	-129
 24742   006932  1964               	xorwf	??_can_init& (0+255),w,b
 24743   006934  0137               	movlb	55	; () banked
 24744   006936  6F04               	movwf	4,b	;volatile
 24745   006938                     
 24746                           ; BSR set to: 55
 24747                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
 24748   006938  0100               	movlb	0	; () banked
 24749   00693A  EE20 F002          	lfsr	2,2
 24750   00693E  5160               	movf	can_init@timing& (0+255),w,b
 24751   006940  26D9               	addwf	fsr2l,f,c
 24752   006942  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24753   006944  22DA               	addwfc	fsr2h,f,c
 24754   006946  50DF               	movf	indf2,w,c
 24755   006948  6F64               	movwf	??_can_init& (0+255),b
 24756   00694A  3B64               	swapf	??_can_init& (0+255),f,b
 24757   00694C  4764               	rlncf	??_can_init& (0+255),f,b
 24758   00694E  4764               	rlncf	??_can_init& (0+255),f,b
 24759   006950  0137               	movlb	55	; () banked
 24760   006952  5104               	movf	4,w,b	;volatile
 24761   006954  0100               	movlb	0	; () banked
 24762   006956  1964               	xorwf	??_can_init& (0+255),w,b
 24763   006958  0BBF               	andlw	-65
 24764   00695A  1964               	xorwf	??_can_init& (0+255),w,b
 24765   00695C  0137               	movlb	55	; () banked
 24766   00695E  6F04               	movwf	4,b	;volatile
 24767   006960                     
 24768                           ; BSR set to: 55
 24769                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
 24770   006960  0100               	movlb	0	; () banked
 24771   006962  EE20 F003          	lfsr	2,3
 24772   006966  5160               	movf	can_init@timing& (0+255),w,b
 24773   006968  26D9               	addwf	fsr2l,f,c
 24774   00696A  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24775   00696C  22DA               	addwfc	fsr2h,f,c
 24776   00696E  50DF               	movf	indf2,w,c
 24777   006970  6F64               	movwf	??_can_init& (0+255),b
 24778   006972  4764               	rlncf	??_can_init& (0+255),f,b
 24779   006974  4764               	rlncf	??_can_init& (0+255),f,b
 24780   006976  4764               	rlncf	??_can_init& (0+255),f,b
 24781   006978  0137               	movlb	55	; () banked
 24782   00697A  5104               	movf	4,w,b	;volatile
 24783   00697C  0100               	movlb	0	; () banked
 24784   00697E  1964               	xorwf	??_can_init& (0+255),w,b
 24785   006980  0BC7               	andlw	-57
 24786   006982  1964               	xorwf	??_can_init& (0+255),w,b
 24787   006984  0137               	movlb	55	; () banked
 24788   006986  6F04               	movwf	4,b	;volatile
 24789   006988                     
 24790                           ; BSR set to: 55
 24791                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
 24792   006988  0100               	movlb	0	; () banked
 24793   00698A  EE20 F005          	lfsr	2,5
 24794   00698E  5160               	movf	can_init@timing& (0+255),w,b
 24795   006990  26D9               	addwf	fsr2l,f,c
 24796   006992  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24797   006994  22DA               	addwfc	fsr2h,f,c
 24798   006996  50DF               	movf	indf2,w,c
 24799   006998  6F64               	movwf	??_can_init& (0+255),b
 24800   00699A  0137               	movlb	55	; () banked
 24801   00699C  5104               	movf	4,w,b	;volatile
 24802   00699E  0100               	movlb	0	; () banked
 24803   0069A0  1964               	xorwf	??_can_init& (0+255),w,b
 24804   0069A2  0BF8               	andlw	-8
 24805   0069A4  1964               	xorwf	??_can_init& (0+255),w,b
 24806   0069A6  0137               	movlb	55	; () banked
 24807   0069A8  6F04               	movwf	4,b	;volatile
 24808   0069AA                     
 24809                           ; BSR set to: 55
 24810                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
 24811   0069AA  0100               	movlb	0	; () banked
 24812   0069AC  EE20 F004          	lfsr	2,4
 24813   0069B0  5160               	movf	can_init@timing& (0+255),w,b
 24814   0069B2  26D9               	addwf	fsr2l,f,c
 24815   0069B4  5161               	movf	(can_init@timing+1)& (0+255),w,b
 24816   0069B6  22DA               	addwfc	fsr2h,f,c
 24817   0069B8  50DF               	movf	indf2,w,c
 24818   0069BA  6F64               	movwf	??_can_init& (0+255),b
 24819   0069BC  0137               	movlb	55	; () banked
 24820   0069BE  5105               	movf	5,w,b	;volatile
 24821   0069C0  0100               	movlb	0	; () banked
 24822   0069C2  1964               	xorwf	??_can_init& (0+255),w,b
 24823   0069C4  0BF8               	andlw	-8
 24824   0069C6  1964               	xorwf	??_can_init& (0+255),w,b
 24825   0069C8  0137               	movlb	55	; () banked
 24826   0069CA  6F05               	movwf	5,b	;volatile
 24827   0069CC                     
 24828                           ; BSR set to: 55
 24829                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
 24830   0069CC  8F05               	bsf	5,7,b	;volatile
 24831   0069CE                     
 24832                           ; BSR set to: 55
 24833                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
 24834   0069CE  9D05               	bcf	5,6,b	;volatile
 24835   0069D0                     
 24836                           ; BSR set to: 55
 24837                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
 24838   0069D0  0E00               	movlw	0
 24839   0069D2  6FB8               	movwf	184,b	;volatile
 24840   0069D4                     
 24841                           ; BSR set to: 55
 24842                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
 24843   0069D4  0E00               	movlw	0
 24844   0069D6  6FB9               	movwf	185,b	;volatile
 24845   0069D8                     
 24846                           ; BSR set to: 55
 24847                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
 24848   0069D8  0E00               	movlw	0
 24849   0069DA  6FBC               	movwf	188,b	;volatile
 24850   0069DC                     
 24851                           ; BSR set to: 55
 24852                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
 24853   0069DC  0E00               	movlw	0
 24854   0069DE  6FBD               	movwf	189,b	;volatile
 24855   0069E0                     
 24856                           ; BSR set to: 55
 24857                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
 24858   0069E0  8A80               	bsf	128,5,c	;volatile
 24859   0069E2                     
 24860                           ; BSR set to: 55
 24861                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
 24862   0069E2  8C80               	bsf	128,6,c	;volatile
 24863   0069E4                     
 24864                           ; BSR set to: 55
 24865                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
 24866   0069E4  8480               	bsf	128,2,c	;volatile
 24867   0069E6                     
 24868                           ; BSR set to: 55
 24869                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
 24870   0069E6  0139               	movlb	57	; () banked
 24871   0069E8  8F95               	bsf	149,7,b	;volatile
 24872   0069EA                     
 24873                           ; BSR set to: 57
 24874                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
 24875   0069EA  9D95               	bcf	149,6,b	;volatile
 24876   0069EC                     
 24877                           ; BSR set to: 57
 24878                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
 24879   0069EC  8B95               	bsf	149,5,b	;volatile
 24880   0069EE                     
 24881                           ; BSR set to: 57
 24882                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
 24883   0069EE  9995               	bcf	149,4,b	;volatile
 24884   0069F0                     
 24885                           ; BSR set to: 57
 24886                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
 24887   0069F0  9795               	bcf	149,3,b	;volatile
 24888   0069F2                     
 24889                           ; BSR set to: 57
 24890                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
 24891   0069F2  9595               	bcf	149,2,b	;volatile
 24892   0069F4                     
 24893                           ; BSR set to: 57
 24894                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
 24895   0069F4  8395               	bsf	149,1,b	;volatile
 24896   0069F6                     
 24897                           ; BSR set to: 57
 24898                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
 24899   0069F6  8195               	bsf	149,0,b	;volatile
 24900   0069F8                     
 24901                           ; BSR set to: 57
 24902                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
 24903   0069F8  0E1F               	movlw	-225
 24904   0069FA  168F               	andwf	143,f,c	;volatile
 24905   0069FC                     l16769:
 24906   0069FC  388E               	swapf	142,w,c	;volatile
 24907   0069FE  32E8               	rrcf	wreg,f,c
 24908   006A00  0B07               	andlw	7
 24909   006A02  0900               	iorlw	0
 24910   006A04  A4D8               	btfss	status,2,c
 24911   006A06  EF07  F035         	goto	u20691
 24912   006A0A  EF09  F035         	goto	u20690
 24913   006A0E                     u20691:
 24914   006A0E  EFFE  F034         	goto	l16769
 24915   006A12                     u20690:
 24916   006A12  0012               	return		;funcret
 24917   006A14                     __end_of_can_init:
 24918                           	callstack 0
 24919                           
 24920 ;; *************** function _can_generate_timing_params *****************
 24921 ;; Defined at:
 24922 ;;		line 7 in file "canlib/util/timing_util.c"
 24923 ;; Parameters:    Size  Location     Type
 24924 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
 24925 ;;  timing          2    4[BANK0 ] PTR struct .
 24926 ;;		 -> main@can_setup(7), 
 24927 ;; Auto vars:     Size  Location     Type
 24928 ;;		None
 24929 ;; Return value:  Size  Location     Type
 24930 ;;                  1    wreg      _Bool 
 24931 ;; Registers used:
 24932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24933 ;; Tracked objects:
 24934 ;;		On entry : 0/0
 24935 ;;		On exit  : 0/0
 24936 ;;		Unchanged: 0/0
 24937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24938 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24940 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24941 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24942 ;;Total ram usage:       10 bytes
 24943 ;; Hardware stack levels used: 1
 24944 ;; Hardware stack levels required when called: 5
 24945 ;; This function calls:
 24946 ;;		Nothing
 24947 ;; This function is called by:
 24948 ;;		_main
 24949 ;; This function uses a non-reentrant model
 24950 ;;
 24951                           
 24952                           	psect	text92
 24953   006334                     __ptext92:
 24954                           	callstack 0
 24955   006334                     _can_generate_timing_params:
 24956                           	callstack 25
 24957   006334                     
 24958                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
 24959   006334  EF43  F032         	goto	l16857
 24960   006338                     l16807:
 24961                           
 24962                           ; BSR set to: 0
 24963                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
 24964   006338  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 24965   00633E  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 24966   006344  0E07               	movlw	7
 24967   006346  6EDF               	movwf	indf2,c
 24968   006348                     
 24969                           ; BSR set to: 0
 24970                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
 24971   006348  EE20 F001          	lfsr	2,1
 24972   00634C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 24973   00634E  26D9               	addwf	fsr2l,f,c
 24974   006350  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 24975   006352  22DA               	addwfc	fsr2h,f,c
 24976   006354  0E03               	movlw	3
 24977   006356  6EDF               	movwf	indf2,c
 24978   006358                     
 24979                           ; BSR set to: 0
 24980                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
 24981   006358  EE20 F006          	lfsr	2,6
 24982   00635C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 24983   00635E  26D9               	addwf	fsr2l,f,c
 24984   006360  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 24985   006362  22DA               	addwfc	fsr2h,f,c
 24986   006364  0E01               	movlw	1
 24987   006366  6EDF               	movwf	indf2,c
 24988   006368                     
 24989                           ; BSR set to: 0
 24990                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
 24991   006368  EE20 F002          	lfsr	2,2
 24992   00636C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 24993   00636E  26D9               	addwf	fsr2l,f,c
 24994   006370  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 24995   006372  22DA               	addwfc	fsr2h,f,c
 24996   006374  6ADF               	clrf	indf2,c
 24997   006376                     
 24998                           ; BSR set to: 0
 24999                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
 25000   006376  EE20 F003          	lfsr	2,3
 25001   00637A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25002   00637C  26D9               	addwf	fsr2l,f,c
 25003   00637E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25004   006380  22DA               	addwfc	fsr2h,f,c
 25005   006382  0E04               	movlw	4
 25006   006384  6EDF               	movwf	indf2,c
 25007   006386                     
 25008                           ; BSR set to: 0
 25009                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
 25010   006386  EE20 F005          	lfsr	2,5
 25011   00638A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25012   00638C  26D9               	addwf	fsr2l,f,c
 25013   00638E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25014   006390  22DA               	addwfc	fsr2h,f,c
 25015   006392  6ADF               	clrf	indf2,c
 25016   006394                     
 25017                           ; BSR set to: 0
 25018                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
 25019   006394  EE20 F004          	lfsr	2,4
 25020   006398  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25021   00639A  26D9               	addwf	fsr2l,f,c
 25022   00639C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25023   00639E  22DA               	addwfc	fsr2h,f,c
 25024   0063A0  0E04               	movlw	4
 25025   0063A2  6EDF               	movwf	indf2,c
 25026   0063A4  EF93  F032         	goto	l234
 25027   0063A8                     l16823:
 25028                           
 25029                           ; BSR set to: 0
 25030                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
 25031   0063A8  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 25032   0063AE  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 25033   0063B4  0E01               	movlw	1
 25034   0063B6  6EDF               	movwf	indf2,c
 25035   0063B8                     
 25036                           ; BSR set to: 0
 25037                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
 25038   0063B8  EE20 F001          	lfsr	2,1
 25039   0063BC  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25040   0063BE  26D9               	addwf	fsr2l,f,c
 25041   0063C0  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25042   0063C2  22DA               	addwfc	fsr2h,f,c
 25043   0063C4  0E03               	movlw	3
 25044   0063C6  6EDF               	movwf	indf2,c
 25045   0063C8                     
 25046                           ; BSR set to: 0
 25047                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
 25048   0063C8  EE20 F006          	lfsr	2,6
 25049   0063CC  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25050   0063CE  26D9               	addwf	fsr2l,f,c
 25051   0063D0  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25052   0063D2  22DA               	addwfc	fsr2h,f,c
 25053   0063D4  0E01               	movlw	1
 25054   0063D6  6EDF               	movwf	indf2,c
 25055   0063D8                     
 25056                           ; BSR set to: 0
 25057                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
 25058   0063D8  EE20 F002          	lfsr	2,2
 25059   0063DC  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25060   0063DE  26D9               	addwf	fsr2l,f,c
 25061   0063E0  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25062   0063E2  22DA               	addwfc	fsr2h,f,c
 25063   0063E4  6ADF               	clrf	indf2,c
 25064   0063E6                     
 25065                           ; BSR set to: 0
 25066                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
 25067   0063E6  EE20 F003          	lfsr	2,3
 25068   0063EA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25069   0063EC  26D9               	addwf	fsr2l,f,c
 25070   0063EE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25071   0063F0  22DA               	addwfc	fsr2h,f,c
 25072   0063F2  0E04               	movlw	4
 25073   0063F4  6EDF               	movwf	indf2,c
 25074   0063F6                     
 25075                           ; BSR set to: 0
 25076                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
 25077   0063F6  EE20 F005          	lfsr	2,5
 25078   0063FA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25079   0063FC  26D9               	addwf	fsr2l,f,c
 25080   0063FE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25081   006400  22DA               	addwfc	fsr2h,f,c
 25082   006402  6ADF               	clrf	indf2,c
 25083   006404                     
 25084                           ; BSR set to: 0
 25085                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
 25086   006404  EE20 F004          	lfsr	2,4
 25087   006408  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25088   00640A  26D9               	addwf	fsr2l,f,c
 25089   00640C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25090   00640E  22DA               	addwfc	fsr2h,f,c
 25091   006410  0E04               	movlw	4
 25092   006412  6EDF               	movwf	indf2,c
 25093   006414  EF93  F032         	goto	l234
 25094   006418                     l16839:
 25095                           
 25096                           ; BSR set to: 0
 25097                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
 25098   006418  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 25099   00641E  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 25100   006424  6ADF               	clrf	indf2,c
 25101   006426                     
 25102                           ; BSR set to: 0
 25103                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
 25104   006426  EE20 F001          	lfsr	2,1
 25105   00642A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25106   00642C  26D9               	addwf	fsr2l,f,c
 25107   00642E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25108   006430  22DA               	addwfc	fsr2h,f,c
 25109   006432  0E03               	movlw	3
 25110   006434  6EDF               	movwf	indf2,c
 25111   006436                     
 25112                           ; BSR set to: 0
 25113                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
 25114   006436  EE20 F006          	lfsr	2,6
 25115   00643A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25116   00643C  26D9               	addwf	fsr2l,f,c
 25117   00643E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25118   006440  22DA               	addwfc	fsr2h,f,c
 25119   006442  0E01               	movlw	1
 25120   006444  6EDF               	movwf	indf2,c
 25121   006446                     
 25122                           ; BSR set to: 0
 25123                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
 25124   006446  EE20 F002          	lfsr	2,2
 25125   00644A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25126   00644C  26D9               	addwf	fsr2l,f,c
 25127   00644E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25128   006450  22DA               	addwfc	fsr2h,f,c
 25129   006452  6ADF               	clrf	indf2,c
 25130   006454                     
 25131                           ; BSR set to: 0
 25132                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
 25133   006454  EE20 F003          	lfsr	2,3
 25134   006458  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25135   00645A  26D9               	addwf	fsr2l,f,c
 25136   00645C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25137   00645E  22DA               	addwfc	fsr2h,f,c
 25138   006460  0E04               	movlw	4
 25139   006462  6EDF               	movwf	indf2,c
 25140   006464                     
 25141                           ; BSR set to: 0
 25142                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
 25143   006464  EE20 F005          	lfsr	2,5
 25144   006468  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25145   00646A  26D9               	addwf	fsr2l,f,c
 25146   00646C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25147   00646E  22DA               	addwfc	fsr2h,f,c
 25148   006470  6ADF               	clrf	indf2,c
 25149   006472                     
 25150                           ; BSR set to: 0
 25151                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
 25152   006472  EE20 F004          	lfsr	2,4
 25153   006476  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 25154   006478  26D9               	addwf	fsr2l,f,c
 25155   00647A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 25156   00647C  22DA               	addwfc	fsr2h,f,c
 25157   00647E  0E04               	movlw	4
 25158   006480  6EDF               	movwf	indf2,c
 25159   006482  EF93  F032         	goto	l234
 25160   006486                     l16857:
 25161   006486  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
 25162   00648A  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
 25163   00648E  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
 25164   006492  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
 25165                           
 25166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
 25167                           ; Switch size 1, requested type "simple"
 25168                           ; Number of cases is 2, Range of values is 0 to 2
 25169                           ; switch strategies available:
 25170                           ; Name         Instructions Cycles
 25171                           ; simple_byte            7     4 (average)
 25172                           ;	Chosen strategy is simple_byte
 25173   006496  0100               	movlb	0	; () banked
 25174   006498  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
 25175   00649A  0A00               	xorlw	0	; case 0
 25176   00649C  B4D8               	btfsc	status,2,c
 25177   00649E  EF81  F032         	goto	l18361
 25178   0064A2  0A02               	xorlw	2	; case 2
 25179   0064A4  B4D8               	btfsc	status,2,c
 25180   0064A6  EF8C  F032         	goto	l18363
 25181   0064AA  EF93  F032         	goto	l234
 25182   0064AE                     l18355:
 25183                           
 25184                           ; BSR set to: 0
 25185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25186                           ; Switch size 1, requested type "simple"
 25187                           ; Number of cases is 1, Range of values is 141 to 141
 25188                           ; switch strategies available:
 25189                           ; Name         Instructions Cycles
 25190                           ; simple_byte            4     3 (average)
 25191                           ;	Chosen strategy is simple_byte
 25192   0064AE  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 25193   0064B0  0A8D               	xorlw	141	; case 141
 25194   0064B2  B4D8               	btfsc	status,2,c
 25195   0064B4  EF5E  F032         	goto	l18365
 25196   0064B8  EF93  F032         	goto	l234
 25197   0064BC                     l18365:
 25198                           
 25199                           ; BSR set to: 0
 25200                           ; Switch size 1, requested type "simple"
 25201                           ; Number of cases is 1, Range of values is 128 to 128
 25202                           ; switch strategies available:
 25203                           ; Name         Instructions Cycles
 25204                           ; simple_byte            4     3 (average)
 25205                           ;	Chosen strategy is simple_byte
 25206   0064BC  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 25207   0064BE  0A80               	xorlw	128	; case 128
 25208   0064C0  B4D8               	btfsc	status,2,c
 25209   0064C2  EF0C  F032         	goto	l16839
 25210   0064C6  EF93  F032         	goto	l234
 25211   0064CA                     l18357:
 25212                           
 25213                           ; BSR set to: 0
 25214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25215                           ; Switch size 1, requested type "simple"
 25216                           ; Number of cases is 1, Range of values is 27 to 27
 25217                           ; switch strategies available:
 25218                           ; Name         Instructions Cycles
 25219                           ; simple_byte            4     3 (average)
 25220                           ;	Chosen strategy is simple_byte
 25221   0064CA  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 25222   0064CC  0A1B               	xorlw	27	; case 27
 25223   0064CE  B4D8               	btfsc	status,2,c
 25224   0064D0  EF6C  F032         	goto	l18367
 25225   0064D4  EF93  F032         	goto	l234
 25226   0064D8                     l18367:
 25227                           
 25228                           ; BSR set to: 0
 25229                           ; Switch size 1, requested type "simple"
 25230                           ; Number of cases is 1, Range of values is 0 to 0
 25231                           ; switch strategies available:
 25232                           ; Name         Instructions Cycles
 25233                           ; simple_byte            4     3 (average)
 25234                           ;	Chosen strategy is simple_byte
 25235   0064D8  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 25236   0064DA  0A00               	xorlw	0	; case 0
 25237   0064DC  B4D8               	btfsc	status,2,c
 25238   0064DE  EFD4  F031         	goto	l16823
 25239   0064E2  EF93  F032         	goto	l234
 25240   0064E6                     l18359:
 25241                           
 25242                           ; BSR set to: 0
 25243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25244                           ; Switch size 1, requested type "simple"
 25245                           ; Number of cases is 1, Range of values is 108 to 108
 25246                           ; switch strategies available:
 25247                           ; Name         Instructions Cycles
 25248                           ; simple_byte            4     3 (average)
 25249                           ;	Chosen strategy is simple_byte
 25250   0064E6  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 25251   0064E8  0A6C               	xorlw	108	; case 108
 25252   0064EA  B4D8               	btfsc	status,2,c
 25253   0064EC  EF7A  F032         	goto	l18369
 25254   0064F0  EF93  F032         	goto	l234
 25255   0064F4                     l18369:
 25256                           
 25257                           ; BSR set to: 0
 25258                           ; Switch size 1, requested type "simple"
 25259                           ; Number of cases is 1, Range of values is 0 to 0
 25260                           ; switch strategies available:
 25261                           ; Name         Instructions Cycles
 25262                           ; simple_byte            4     3 (average)
 25263                           ;	Chosen strategy is simple_byte
 25264   0064F4  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 25265   0064F6  0A00               	xorlw	0	; case 0
 25266   0064F8  B4D8               	btfsc	status,2,c
 25267   0064FA  EF9C  F031         	goto	l16807
 25268   0064FE  EF93  F032         	goto	l234
 25269   006502                     l18361:
 25270                           
 25271                           ; BSR set to: 0
 25272                           ; Switch size 1, requested type "simple"
 25273                           ; Number of cases is 2, Range of values is 91 to 183
 25274                           ; switch strategies available:
 25275                           ; Name         Instructions Cycles
 25276                           ; simple_byte            7     4 (average)
 25277                           ;	Chosen strategy is simple_byte
 25278   006502  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 25279   006504  0A5B               	xorlw	91	; case 91
 25280   006506  B4D8               	btfsc	status,2,c
 25281   006508  EF57  F032         	goto	l18355
 25282   00650C  0AEC               	xorlw	236	; case 183
 25283   00650E  B4D8               	btfsc	status,2,c
 25284   006510  EF65  F032         	goto	l18357
 25285   006514  EF93  F032         	goto	l234
 25286   006518                     l18363:
 25287                           
 25288                           ; BSR set to: 0
 25289                           ; Switch size 1, requested type "simple"
 25290                           ; Number of cases is 1, Range of values is 220 to 220
 25291                           ; switch strategies available:
 25292                           ; Name         Instructions Cycles
 25293                           ; simple_byte            4     3 (average)
 25294                           ;	Chosen strategy is simple_byte
 25295   006518  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 25296   00651A  0ADC               	xorlw	220	; case 220
 25297   00651C  B4D8               	btfsc	status,2,c
 25298   00651E  EF73  F032         	goto	l18359
 25299   006522  EF93  F032         	goto	l234
 25300   006526                     l234:
 25301                           
 25302                           ; BSR set to: 0
 25303   006526  0012               	return		;funcret
 25304   006528                     __end_of_can_generate_timing_params:
 25305                           	callstack 0
 25306                           
 25307 ;; *************** function _SYSTEM_Initialize *****************
 25308 ;; Defined at:
 25309 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;		None
 25312 ;; Auto vars:     Size  Location     Type
 25313 ;;		None
 25314 ;; Return value:  Size  Location     Type
 25315 ;;                  1    wreg      void 
 25316 ;; Registers used:
 25317 ;;		wreg, status,2, cstack
 25318 ;; Tracked objects:
 25319 ;;		On entry : 0/0
 25320 ;;		On exit  : 0/0
 25321 ;;		Unchanged: 0/0
 25322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25327 ;;Total ram usage:        0 bytes
 25328 ;; Hardware stack levels used: 1
 25329 ;; Hardware stack levels required when called: 6
 25330 ;; This function calls:
 25331 ;;		_OSCILLATOR_Initialize
 25332 ;;		_PIN_MANAGER_Initialize
 25333 ;;		_PMD_Initialize
 25334 ;;		_SPI1_Initialize
 25335 ;; This function is called by:
 25336 ;;		_main
 25337 ;; This function uses a non-reentrant model
 25338 ;;
 25339                           
 25340                           	psect	text93
 25341   009170                     __ptext93:
 25342                           	callstack 0
 25343   009170                     _SYSTEM_Initialize:
 25344                           	callstack 24
 25345   009170                     
 25346                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 25347   009170  EC24  F048         	call	_PMD_Initialize	;wreg free
 25348                           
 25349                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 25350   009174  EC34  F045         	call	_PIN_MANAGER_Initialize	;wreg free
 25351                           
 25352                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 25353   009178  ECA1  F048         	call	_OSCILLATOR_Initialize	;wreg free
 25354                           
 25355                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
 25356   00917C  EC94  F048         	call	_SPI1_Initialize	;wreg free
 25357   009180  0012               	return		;funcret
 25358   009182                     __end_of_SYSTEM_Initialize:
 25359                           	callstack 0
 25360                           
 25361 ;; *************** function _SPI1_Initialize *****************
 25362 ;; Defined at:
 25363 ;;		line 66 in file "mcc_generated_files/spi1.c"
 25364 ;; Parameters:    Size  Location     Type
 25365 ;;		None
 25366 ;; Auto vars:     Size  Location     Type
 25367 ;;		None
 25368 ;; Return value:  Size  Location     Type
 25369 ;;                  1    wreg      void 
 25370 ;; Registers used:
 25371 ;;		wreg, status,2
 25372 ;; Tracked objects:
 25373 ;;		On entry : 0/0
 25374 ;;		On exit  : 0/0
 25375 ;;		Unchanged: 0/0
 25376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25381 ;;Total ram usage:        0 bytes
 25382 ;; Hardware stack levels used: 1
 25383 ;; Hardware stack levels required when called: 5
 25384 ;; This function calls:
 25385 ;;		Nothing
 25386 ;; This function is called by:
 25387 ;;		_SYSTEM_Initialize
 25388 ;; This function uses a non-reentrant model
 25389 ;;
 25390                           
 25391                           	psect	text94
 25392   009128                     __ptext94:
 25393                           	callstack 0
 25394   009128                     _SPI1_Initialize:
 25395                           	callstack 24
 25396   009128                     
 25397                           ;mcc_generated_files/spi1.c: 69:     SPI1CON0 = 0x02;
 25398   009128  0E02               	movlw	2
 25399   00912A  013D               	movlb	61	; () banked
 25400   00912C  6F14               	movwf	20,b	;volatile
 25401                           
 25402                           ;mcc_generated_files/spi1.c: 71:     SPI1CON1 = 0x40;
 25403   00912E  0E40               	movlw	64
 25404   009130  6F15               	movwf	21,b	;volatile
 25405                           
 25406                           ;mcc_generated_files/spi1.c: 73:     SPI1CON2 = 0x00;
 25407   009132  0E00               	movlw	0
 25408   009134  6F16               	movwf	22,b	;volatile
 25409                           
 25410                           ;mcc_generated_files/spi1.c: 75:     SPI1CLK = 0x00;
 25411   009136  0E00               	movlw	0
 25412   009138  6F1C               	movwf	28,b	;volatile
 25413                           
 25414                           ;mcc_generated_files/spi1.c: 77:     SPI1BAUD = 0x00;
 25415   00913A  0E00               	movlw	0
 25416   00913C  6F19               	movwf	25,b	;volatile
 25417   00913E                     
 25418                           ; BSR set to: 61
 25419                           ;mcc_generated_files/spi1.c: 78:     TRISCbits.TRISC3 = 0;
 25420   00913E  96C4               	bcf	196,3,c	;volatile
 25421   009140                     
 25422                           ; BSR set to: 61
 25423   009140  0012               	return		;funcret
 25424   009142                     __end_of_SPI1_Initialize:
 25425                           	callstack 0
 25426                           
 25427 ;; *************** function _PMD_Initialize *****************
 25428 ;; Defined at:
 25429 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;		None
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;		None
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      void 
 25436 ;; Registers used:
 25437 ;;		wreg, status,2
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/0
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25447 ;;Total ram usage:        0 bytes
 25448 ;; Hardware stack levels used: 1
 25449 ;; Hardware stack levels required when called: 5
 25450 ;; This function calls:
 25451 ;;		Nothing
 25452 ;; This function is called by:
 25453 ;;		_SYSTEM_Initialize
 25454 ;; This function uses a non-reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text95
 25458   009048                     __ptext95:
 25459                           	callstack 0
 25460   009048                     _PMD_Initialize:
 25461                           	callstack 24
 25462   009048                     
 25463                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 25464   009048  0E00               	movlw	0
 25465   00904A  0139               	movlb	57	; () banked
 25466   00904C  6FC0               	movwf	192,b	;volatile
 25467                           
 25468                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 25469   00904E  0E00               	movlw	0
 25470   009050  6FC1               	movwf	193,b	;volatile
 25471                           
 25472                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 25473   009052  0E00               	movlw	0
 25474   009054  6FC2               	movwf	194,b	;volatile
 25475                           
 25476                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 25477   009056  0E00               	movlw	0
 25478   009058  6FC3               	movwf	195,b	;volatile
 25479                           
 25480                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 25481   00905A  0E00               	movlw	0
 25482   00905C  6FC4               	movwf	196,b	;volatile
 25483                           
 25484                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 25485   00905E  0E00               	movlw	0
 25486   009060  6FC5               	movwf	197,b	;volatile
 25487                           
 25488                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
 25489   009062  0E00               	movlw	0
 25490   009064  6FC6               	movwf	198,b	;volatile
 25491                           
 25492                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
 25493   009066  0E00               	movlw	0
 25494   009068  6FC7               	movwf	199,b	;volatile
 25495   00906A                     
 25496                           ; BSR set to: 57
 25497   00906A  0012               	return		;funcret
 25498   00906C                     __end_of_PMD_Initialize:
 25499                           	callstack 0
 25500                           
 25501 ;; *************** function _PIN_MANAGER_Initialize *****************
 25502 ;; Defined at:
 25503 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25504 ;; Parameters:    Size  Location     Type
 25505 ;;		None
 25506 ;; Auto vars:     Size  Location     Type
 25507 ;;		None
 25508 ;; Return value:  Size  Location     Type
 25509 ;;                  1    wreg      void 
 25510 ;; Registers used:
 25511 ;;		wreg, status,2
 25512 ;; Tracked objects:
 25513 ;;		On entry : 0/0
 25514 ;;		On exit  : 0/0
 25515 ;;		Unchanged: 0/0
 25516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25521 ;;Total ram usage:        0 bytes
 25522 ;; Hardware stack levels used: 1
 25523 ;; Hardware stack levels required when called: 5
 25524 ;; This function calls:
 25525 ;;		Nothing
 25526 ;; This function is called by:
 25527 ;;		_SYSTEM_Initialize
 25528 ;; This function uses a non-reentrant model
 25529 ;;
 25530                           
 25531                           	psect	text96
 25532   008A68                     __ptext96:
 25533                           	callstack 0
 25534   008A68                     _PIN_MANAGER_Initialize:
 25535                           	callstack 24
 25536   008A68                     
 25537                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 25538   008A68  0E00               	movlw	0
 25539   008A6A  6EBA               	movwf	186,c	;volatile
 25540                           
 25541                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 25542   008A6C  0E00               	movlw	0
 25543   008A6E  6EBB               	movwf	187,c	;volatile
 25544                           
 25545                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 25546   008A70  0E00               	movlw	0
 25547   008A72  6EBC               	movwf	188,c	;volatile
 25548                           
 25549                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDF;
 25550   008A74  0EDF               	movlw	223
 25551   008A76  6EC2               	movwf	194,c	;volatile
 25552   008A78                     
 25553                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 25554   008A78  68C3               	setf	195,c	;volatile
 25555                           
 25556                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD7;
 25557   008A7A  0ED7               	movlw	215
 25558   008A7C  6EC4               	movwf	196,c	;volatile
 25559                           
 25560                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC7;
 25561   008A7E  0EC7               	movlw	199
 25562   008A80  013A               	movlb	58	; () banked
 25563   008A82  6F60               	movwf	96,b	;volatile
 25564   008A84                     
 25565                           ; BSR set to: 58
 25566                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
 25567   008A84  6950               	setf	80,b	;volatile
 25568                           
 25569                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xDF;
 25570   008A86  0EDF               	movlw	223
 25571   008A88  6F40               	movwf	64,b	;volatile
 25572                           
 25573                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 25574   008A8A  0E00               	movlw	0
 25575   008A8C  6F81               	movwf	129,b	;volatile
 25576                           
 25577                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 25578   008A8E  0E00               	movlw	0
 25579   008A90  6F51               	movwf	81,b	;volatile
 25580                           
 25581                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 25582   008A92  0E00               	movlw	0
 25583   008A94  6F41               	movwf	65,b	;volatile
 25584                           
 25585                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 25586   008A96  0E00               	movlw	0
 25587   008A98  6F61               	movwf	97,b	;volatile
 25588                           
 25589                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 25590   008A9A  0E00               	movlw	0
 25591   008A9C  6F42               	movwf	66,b	;volatile
 25592                           
 25593                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 25594   008A9E  0E00               	movlw	0
 25595   008AA0  6F52               	movwf	82,b	;volatile
 25596                           
 25597                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 25598   008AA2  0E00               	movlw	0
 25599   008AA4  6F62               	movwf	98,b	;volatile
 25600   008AA6                     
 25601                           ; BSR set to: 58
 25602                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 25603   008AA6  6943               	setf	67,b	;volatile
 25604   008AA8                     
 25605                           ; BSR set to: 58
 25606                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 25607   008AA8  6953               	setf	83,b	;volatile
 25608   008AAA                     
 25609                           ; BSR set to: 58
 25610                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 25611   008AAA  6963               	setf	99,b	;volatile
 25612   008AAC                     
 25613                           ; BSR set to: 58
 25614                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 25615   008AAC  6944               	setf	68,b	;volatile
 25616   008AAE                     
 25617                           ; BSR set to: 58
 25618                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 25619   008AAE  6954               	setf	84,b	;volatile
 25620   008AB0                     
 25621                           ; BSR set to: 58
 25622                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 25623   008AB0  6964               	setf	100,b	;volatile
 25624                           
 25625                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 25626   008AB2  0E08               	movlw	8
 25627   008AB4  6F84               	movwf	132,b	;volatile
 25628                           
 25629                           ;mcc_generated_files/pin_manager.c: 115:     SPI1SCKPPS = 0x13;
 25630   008AB6  0E13               	movlw	19
 25631   008AB8  6FE0               	movwf	224,b	;volatile
 25632                           
 25633                           ;mcc_generated_files/pin_manager.c: 116:     RC3PPS = 0x1E;
 25634   008ABA  0E1E               	movlw	30
 25635   008ABC  6F13               	movwf	19,b	;volatile
 25636                           
 25637                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x1F;
 25638   008ABE  0E1F               	movlw	31
 25639   008AC0  6F15               	movwf	21,b	;volatile
 25640                           
 25641                           ;mcc_generated_files/pin_manager.c: 118:     SPI1SDIPPS = 0x14;
 25642   008AC2  0E14               	movlw	20
 25643   008AC4  6FE1               	movwf	225,b	;volatile
 25644   008AC6                     
 25645                           ; BSR set to: 58
 25646   008AC6  0012               	return		;funcret
 25647   008AC8                     __end_of_PIN_MANAGER_Initialize:
 25648                           	callstack 0
 25649                           
 25650 ;; *************** function _OSCILLATOR_Initialize *****************
 25651 ;; Defined at:
 25652 ;;		line 58 in file "mcc_generated_files/mcc.c"
 25653 ;; Parameters:    Size  Location     Type
 25654 ;;		None
 25655 ;; Auto vars:     Size  Location     Type
 25656 ;;		None
 25657 ;; Return value:  Size  Location     Type
 25658 ;;                  1    wreg      void 
 25659 ;; Registers used:
 25660 ;;		wreg, status,2
 25661 ;; Tracked objects:
 25662 ;;		On entry : 0/0
 25663 ;;		On exit  : 0/0
 25664 ;;		Unchanged: 0/0
 25665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25670 ;;Total ram usage:        0 bytes
 25671 ;; Hardware stack levels used: 1
 25672 ;; Hardware stack levels required when called: 5
 25673 ;; This function calls:
 25674 ;;		Nothing
 25675 ;; This function is called by:
 25676 ;;		_SYSTEM_Initialize
 25677 ;; This function uses a non-reentrant model
 25678 ;;
 25679                           
 25680                           	psect	text97
 25681   009142                     __ptext97:
 25682                           	callstack 0
 25683   009142                     _OSCILLATOR_Initialize:
 25684                           	callstack 24
 25685   009142                     
 25686                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x70;
 25687   009142  0E70               	movlw	112
 25688   009144  0139               	movlb	57	; () banked
 25689   009146  6FD9               	movwf	217,b	;volatile
 25690                           
 25691                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 25692   009148  0E00               	movlw	0
 25693   00914A  6FDB               	movwf	219,b	;volatile
 25694                           
 25695                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 25696   00914C  0E00               	movlw	0
 25697   00914E  6FDD               	movwf	221,b	;volatile
 25698                           
 25699                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
 25700   009150  0E02               	movlw	2
 25701   009152  6FDF               	movwf	223,b	;volatile
 25702                           
 25703                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 25704   009154  0E00               	movlw	0
 25705   009156  6FDE               	movwf	222,b	;volatile
 25706   009158                     
 25707                           ; BSR set to: 57
 25708   009158  0012               	return		;funcret
 25709   00915A                     __end_of_OSCILLATOR_Initialize:
 25710                           	callstack 0
 25711                           
 25712 ;; *************** function _SET_ACCEL_I2C_ADDR *****************
 25713 ;; Defined at:
 25714 ;;		line 17 in file "main.c"
 25715 ;; Parameters:    Size  Location     Type
 25716 ;;  addr            1    wreg     unsigned char 
 25717 ;; Auto vars:     Size  Location     Type
 25718 ;;  addr            1    0[BANK0 ] unsigned char 
 25719 ;; Return value:  Size  Location     Type
 25720 ;;                  1    wreg      void 
 25721 ;; Registers used:
 25722 ;;		wreg, status,2, status,0
 25723 ;; Tracked objects:
 25724 ;;		On entry : 0/0
 25725 ;;		On exit  : 0/0
 25726 ;;		Unchanged: 0/0
 25727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25732 ;;Total ram usage:        1 bytes
 25733 ;; Hardware stack levels used: 1
 25734 ;; Hardware stack levels required when called: 5
 25735 ;; This function calls:
 25736 ;;		Nothing
 25737 ;; This function is called by:
 25738 ;;		_main
 25739 ;; This function uses a non-reentrant model
 25740 ;;
 25741                           
 25742                           	psect	text98
 25743   00910A                     __ptext98:
 25744                           	callstack 0
 25745   00910A                     _SET_ACCEL_I2C_ADDR:
 25746                           	callstack 25
 25747                           
 25748                           ; BSR set to: 57
 25749                           ;incstack = 0
 25750                           ;SET_ACCEL_I2C_ADDR@addr stored from wreg
 25751   00910A  0100               	movlb	0	; () banked
 25752   00910C  6F60               	movwf	SET_ACCEL_I2C_ADDR@addr& (0+255),b
 25753   00910E                     
 25754                           ;main.c: 18:     LATC2 = (addr == 0x19);
 25755   00910E  0E19               	movlw	25
 25756   009110  0100               	movlb	0	; () banked
 25757   009112  1960               	xorwf	SET_ACCEL_I2C_ADDR@addr& (0+255),w,b
 25758   009114  B4D8               	btfsc	status,2,c
 25759   009116  EF8F  F048         	goto	u21011
 25760   00911A  EF92  F048         	goto	u21010
 25761   00911E                     u21011:
 25762   00911E  84BC               	bsf	16316,2,c	;volatile
 25763   009120  EF93  F048         	goto	u21025
 25764   009124                     u21010:
 25765   009124  94BC               	bcf	16316,2,c	;volatile
 25766   009126                     u21025:
 25767   009126  0012               	return		;funcret
 25768   009128                     __end_of_SET_ACCEL_I2C_ADDR:
 25769                           	callstack 0
 25770                           
 25771 ;; *************** function _ADCC_Initialize *****************
 25772 ;; Defined at:
 25773 ;;		line 45 in file "adcc.c"
 25774 ;; Parameters:    Size  Location     Type
 25775 ;;		None
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;		None
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  1    wreg      void 
 25780 ;; Registers used:
 25781 ;;		wreg, status,2
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25791 ;;Total ram usage:        0 bytes
 25792 ;; Hardware stack levels used: 1
 25793 ;; Hardware stack levels required when called: 5
 25794 ;; This function calls:
 25795 ;;		Nothing
 25796 ;; This function is called by:
 25797 ;;		_main
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text99
 25802   008A06                     __ptext99:
 25803                           	callstack 0
 25804   008A06                     _ADCC_Initialize:
 25805                           	callstack 25
 25806   008A06                     
 25807                           ;adcc.c: 49:     ADLTHL = 0x0;
 25808   008A06  0E00               	movlw	0
 25809   008A08  013E               	movlb	62	; () banked
 25810   008A0A  6FDE               	movwf	222,b	;volatile
 25811                           
 25812                           ;adcc.c: 51:     ADLTHH = 0x0;
 25813   008A0C  0E00               	movlw	0
 25814   008A0E  6FDF               	movwf	223,b	;volatile
 25815                           
 25816                           ;adcc.c: 53:     ADUTHL = 0x0;
 25817   008A10  0E00               	movlw	0
 25818   008A12  6FE0               	movwf	224,b	;volatile
 25819                           
 25820                           ;adcc.c: 55:     ADUTHH = 0x0;
 25821   008A14  0E00               	movlw	0
 25822   008A16  6FE1               	movwf	225,b	;volatile
 25823                           
 25824                           ;adcc.c: 57:     ADSTPTL = 0x0;
 25825   008A18  0E00               	movlw	0
 25826   008A1A  6FE4               	movwf	228,b	;volatile
 25827                           
 25828                           ;adcc.c: 59:     ADSTPTH = 0x0;
 25829   008A1C  0E00               	movlw	0
 25830   008A1E  6FE5               	movwf	229,b	;volatile
 25831                           
 25832                           ;adcc.c: 61:     ADACCU = 0x0;
 25833   008A20  0E00               	movlw	0
 25834   008A22  6FEA               	movwf	234,b	;volatile
 25835                           
 25836                           ;adcc.c: 63:     ADRPT = 0x0;
 25837   008A24  0E00               	movlw	0
 25838   008A26  6FEC               	movwf	236,b	;volatile
 25839                           
 25840                           ;adcc.c: 65:     ADPCH = 0x0;
 25841   008A28  0E00               	movlw	0
 25842   008A2A  6FF1               	movwf	241,b	;volatile
 25843                           
 25844                           ;adcc.c: 67:     ADACQL = 0x1;
 25845   008A2C  0E01               	movlw	1
 25846   008A2E  6FF3               	movwf	243,b	;volatile
 25847                           
 25848                           ;adcc.c: 69:     ADACQH = 0x0;
 25849   008A30  0E00               	movlw	0
 25850   008A32  6FF4               	movwf	244,b	;volatile
 25851                           
 25852                           ;adcc.c: 71:     ADCAP = 0x0;
 25853   008A34  0E00               	movlw	0
 25854   008A36  6FF5               	movwf	245,b	;volatile
 25855                           
 25856                           ;adcc.c: 73:     ADPREL = 0x0;
 25857   008A38  0E00               	movlw	0
 25858   008A3A  6FF6               	movwf	246,b	;volatile
 25859                           
 25860                           ;adcc.c: 75:     ADPREH = 0x0;
 25861   008A3C  0E00               	movlw	0
 25862   008A3E  6FF7               	movwf	247,b	;volatile
 25863                           
 25864                           ;adcc.c: 77:     ADCON1 = 0x0;
 25865   008A40  0E00               	movlw	0
 25866   008A42  6FF9               	movwf	249,b	;volatile
 25867                           
 25868                           ;adcc.c: 79:     ADCON2 = 0x10;
 25869   008A44  0E10               	movlw	16
 25870   008A46  6FFA               	movwf	250,b	;volatile
 25871                           
 25872                           ;adcc.c: 81:     ADCON3 = 0x0;
 25873   008A48  0E00               	movlw	0
 25874   008A4A  6FFB               	movwf	251,b	;volatile
 25875                           
 25876                           ;adcc.c: 83:     ADSTAT = 0x0;
 25877   008A4C  0E00               	movlw	0
 25878   008A4E  6FFC               	movwf	252,b	;volatile
 25879                           
 25880                           ;adcc.c: 85:     ADREF = 0x0;
 25881   008A50  0E00               	movlw	0
 25882   008A52  6FFD               	movwf	253,b	;volatile
 25883                           
 25884                           ;adcc.c: 87:     ADACT = 0x0;
 25885   008A54  0E00               	movlw	0
 25886   008A56  6FFE               	movwf	254,b	;volatile
 25887                           
 25888                           ;adcc.c: 89:     ADCLK = 0x1F;
 25889   008A58  0E1F               	movlw	31
 25890   008A5A  6FFF               	movwf	255,b	;volatile
 25891                           
 25892                           ;adcc.c: 91:     ADCON0 = 0x84;
 25893   008A5C  0E84               	movlw	132
 25894   008A5E  6FF8               	movwf	248,b	;volatile
 25895   008A60                     
 25896                           ; BSR set to: 62
 25897                           ;adcc.c: 94:     PIR1bits.ADIF = 0;
 25898   008A60  0139               	movlb	57	; () banked
 25899   008A62  95A1               	bcf	161,2,b	;volatile
 25900   008A64                     
 25901                           ; BSR set to: 57
 25902                           ;adcc.c: 97:     PIR1bits.ADTIF = 0;
 25903   008A64  97A1               	bcf	161,3,b	;volatile
 25904   008A66                     
 25905                           ; BSR set to: 57
 25906   008A66  0012               	return		;funcret
 25907   008A68                     __end_of_ADCC_Initialize:
 25908                           	callstack 0
 25909                           
 25910 ;; *************** function _interrupt_handler *****************
 25911 ;; Defined at:
 25912 ;;		line 241 in file "main.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;		None
 25915 ;; Auto vars:     Size  Location     Type
 25916 ;;		None
 25917 ;; Return value:  Size  Location     Type
 25918 ;;                  1    wreg      void 
 25919 ;; Registers used:
 25920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 25921 ;; Tracked objects:
 25922 ;;		On entry : 0/0
 25923 ;;		On exit  : 0/0
 25924 ;;		Unchanged: 0/0
 25925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25930 ;;Total ram usage:        2 bytes
 25931 ;; Hardware stack levels used: 1
 25932 ;; Hardware stack levels required when called: 4
 25933 ;; This function calls:
 25934 ;;		_can_handle_interrupt
 25935 ;;		_timer0_handle_interrupt
 25936 ;; This function is called by:
 25937 ;;		Interrupt level 2
 25938 ;; This function uses a non-reentrant model
 25939 ;;
 25940                           
 25941                           	psect	text100
 25942   008BD6                     __ptext100:
 25943                           	callstack 0
 25944   008BD6                     _interrupt_handler:
 25945                           	callstack 12
 25946                           
 25947                           ; BSR set to: 57
 25948                           ;incstack = 0
 25949   008BD6  006F FFE8  F02B    	movff	pclath,??_interrupt_handler
 25950   008BDC  006F FFEC  F02C    	movff	pclatu,??_interrupt_handler+1
 25951   008BE2                     
 25952                           ;main.c: 242:     if (PIR5) {
 25953   008BE2  0139               	movlb	57	; () banked
 25954   008BE4  51A5               	movf	165,w,b	;volatile
 25955   008BE6  B4D8               	btfsc	status,2,c
 25956   008BE8  EFF8  F045         	goto	i2u1534_41
 25957   008BEC  EFFA  F045         	goto	i2u1534_40
 25958   008BF0                     i2u1534_41:
 25959   008BF0  EFFC  F045         	goto	i2l13365
 25960   008BF4                     i2u1534_40:
 25961   008BF4                     
 25962                           ; BSR set to: 57
 25963                           ;main.c: 243:         can_handle_interrupt();
 25964   008BF4  EC9D  F030         	call	_can_handle_interrupt	;wreg free
 25965   008BF8                     i2l13365:
 25966                           
 25967                           ;main.c: 248:     if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
 25968   008BF8  0139               	movlb	57	; () banked
 25969   008BFA  AF93               	btfss	147,7,b	;volatile
 25970   008BFC  EF02  F046         	goto	i2u1535_41
 25971   008C00  EF04  F046         	goto	i2u1535_40
 25972   008C04                     i2u1535_41:
 25973   008C04  EF0F  F046         	goto	i2l2215
 25974   008C08                     i2u1535_40:
 25975   008C08                     
 25976                           ; BSR set to: 57
 25977   008C08  AFA3               	btfss	163,7,b	;volatile
 25978   008C0A  EF09  F046         	goto	i2u1536_41
 25979   008C0E  EF0B  F046         	goto	i2u1536_40
 25980   008C12                     i2u1536_41:
 25981   008C12  EF0F  F046         	goto	i2l2215
 25982   008C16                     i2u1536_40:
 25983   008C16                     
 25984                           ; BSR set to: 57
 25985                           ;main.c: 249:         timer0_handle_interrupt();
 25986   008C16  EC11  F048         	call	_timer0_handle_interrupt	;wreg free
 25987   008C1A                     
 25988                           ;main.c: 250:         PIR3bits.TMR0IF = 0;
 25989   008C1A  0139               	movlb	57	; () banked
 25990   008C1C  9FA3               	bcf	163,7,b	;volatile
 25991   008C1E                     i2l2215:
 25992                           
 25993                           ; BSR set to: 57
 25994   008C1E  0060  F0B3  FFFB   	movff	??_interrupt_handler+1,pclatu
 25995   008C24  0060  F0AF  FFFA   	movff	??_interrupt_handler,pclath
 25996   008C2A  0011               	retfie		f
 25997   008C2C                     __end_of_interrupt_handler:
 25998                           	callstack 0
 25999                           
 26000 ;; *************** function _timer0_handle_interrupt *****************
 26001 ;; Defined at:
 26002 ;;		line 52 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 26003 ;; Parameters:    Size  Location     Type
 26004 ;;		None
 26005 ;; Auto vars:     Size  Location     Type
 26006 ;;		None
 26007 ;; Return value:  Size  Location     Type
 26008 ;;                  1    wreg      void 
 26009 ;; Registers used:
 26010 ;;		wreg, status,2, status,0
 26011 ;; Tracked objects:
 26012 ;;		On entry : 0/0
 26013 ;;		On exit  : 0/0
 26014 ;;		Unchanged: 0/0
 26015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26020 ;;Total ram usage:        0 bytes
 26021 ;; Hardware stack levels used: 1
 26022 ;; This function calls:
 26023 ;;		Nothing
 26024 ;; This function is called by:
 26025 ;;		_interrupt_handler
 26026 ;; This function uses a non-reentrant model
 26027 ;;
 26028                           
 26029                           	psect	text101
 26030   009022                     __ptext101:
 26031                           	callstack 0
 26032   009022                     _timer0_handle_interrupt:
 26033                           	callstack 15
 26034   009022                     
 26035                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 56:     internal_count += 64;
 26036   009022  0E40               	movlw	64
 26037   009024  264F               	addwf	timer0_handle_interrupt@internal_count^0,f,c
 26038                           
 26039                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 57:     if (internal_count > 125) {
 26040   009026  0E7D               	movlw	125
 26041   009028  644F               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
 26042   00902A  EF19  F048         	goto	i2u563_41
 26043   00902E  EF1B  F048         	goto	i2u563_40
 26044   009032                     i2u563_41:
 26045   009032  EF23  F048         	goto	i2l125
 26046   009036                     i2u563_40:
 26047   009036                     
 26048                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 58:         internal_count -= 125;
 26049   009036  0E7D               	movlw	125
 26050   009038  5E4F               	subwf	timer0_handle_interrupt@internal_count^0,f,c
 26051                           
 26052                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 59:         millis_counter++;
 26053   00903A  0E01               	movlw	1
 26054   00903C  263E               	addwf	_millis_counter^0,f,c	;volatile
 26055   00903E  0E00               	movlw	0
 26056   009040  223F               	addwfc	(_millis_counter+1)^0,f,c	;volatile
 26057   009042  2240               	addwfc	(_millis_counter+2)^0,f,c	;volatile
 26058   009044  2241               	addwfc	(_millis_counter+3)^0,f,c	;volatile
 26059   009046                     i2l125:
 26060   009046  0012               	return		;funcret
 26061   009048                     __end_of_timer0_handle_interrupt:
 26062                           	callstack 0
 26063                           
 26064 ;; *************** function _can_handle_interrupt *****************
 26065 ;; Defined at:
 26066 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 26067 ;; Parameters:    Size  Location     Type
 26068 ;;		None
 26069 ;; Auto vars:     Size  Location     Type
 26070 ;;  rcvd_msg       11   31[COMRAM] struct .
 26071 ;;  rcvd_msg       11   20[COMRAM] struct .
 26072 ;; Return value:  Size  Location     Type
 26073 ;;                  1    wreg      void 
 26074 ;; Registers used:
 26075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 26076 ;; Tracked objects:
 26077 ;;		On entry : 0/0
 26078 ;;		On exit  : 0/0
 26079 ;;		Unchanged: 0/0
 26080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26082 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26084 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26085 ;;Total ram usage:       26 bytes
 26086 ;; Hardware stack levels used: 1
 26087 ;; Hardware stack levels required when called: 3
 26088 ;; This function calls:
 26089 ;;		NULL
 26090 ;;		_can_msg_handler
 26091 ;;		i2_memcpy
 26092 ;; This function is called by:
 26093 ;;		_interrupt_handler
 26094 ;; This function uses a non-reentrant model
 26095 ;;
 26096                           
 26097                           	psect	text102
 26098   00613A                     __ptext102:
 26099                           	callstack 0
 26100   00613A                     _can_handle_interrupt:
 26101                           	callstack 12
 26102   00613A                     
 26103                           ;canlib/pic18f26k83/pic18f26k83_can.c: 124:     if (COMSTATbits.RXB0OVFL || COMSTATbits.
      +                          RXB1OVFL) {
 26104   00613A  BE90               	btfsc	144,7,c	;volatile
 26105   00613C  EFA2  F030         	goto	i2u1320_41
 26106   006140  EFA4  F030         	goto	i2u1320_40
 26107   006144                     i2u1320_41:
 26108   006144  EFAB  F030         	goto	i2l86
 26109   006148                     i2u1320_40:
 26110   006148  AC90               	btfss	144,6,c	;volatile
 26111   00614A  EFA9  F030         	goto	i2u1321_41
 26112   00614E  EFAB  F030         	goto	i2u1321_40
 26113   006152                     i2u1321_41:
 26114   006152  EFAD  F030         	goto	i2l84
 26115   006156                     i2u1321_40:
 26116   006156                     i2l86:
 26117                           
 26118                           ;canlib/pic18f26k83/pic18f26k83_can.c: 125:         COMSTATbits.RXB0OVFL = 0;
 26119   006156  9E90               	bcf	144,7,c	;volatile
 26120                           
 26121                           ;canlib/pic18f26k83/pic18f26k83_can.c: 126:         COMSTATbits.RXB1OVFL = 0;
 26122   006158  9C90               	bcf	144,6,c	;volatile
 26123   00615A                     i2l84:
 26124                           
 26125                           ;canlib/pic18f26k83/pic18f26k83_can.c: 129:     if (TXB0CONbits.TXREQ && TXB0CONbits.TXE
      +                          RR && PIR5bits.IRXIF) {
 26126   00615A  0137               	movlb	55	; () banked
 26127   00615C  A7E0               	btfss	224,3,b	;volatile
 26128   00615E  EFB3  F030         	goto	i2u1322_41
 26129   006162  EFB5  F030         	goto	i2u1322_40
 26130   006166                     i2u1322_41:
 26131   006166  EFC8  F030         	goto	i2l87
 26132   00616A                     i2u1322_40:
 26133   00616A                     
 26134                           ; BSR set to: 55
 26135   00616A  A9E0               	btfss	224,4,b	;volatile
 26136   00616C  EFBA  F030         	goto	i2u1323_41
 26137   006170  EFBC  F030         	goto	i2u1323_40
 26138   006174                     i2u1323_41:
 26139   006174  EFC8  F030         	goto	i2l87
 26140   006178                     i2u1323_40:
 26141   006178                     
 26142                           ; BSR set to: 55
 26143   006178  0139               	movlb	57	; () banked
 26144   00617A  AFA5               	btfss	165,7,b	;volatile
 26145   00617C  EFC2  F030         	goto	i2u1324_41
 26146   006180  EFC4  F030         	goto	i2u1324_40
 26147   006184                     i2u1324_41:
 26148   006184  EFC8  F030         	goto	i2l87
 26149   006188                     i2u1324_40:
 26150   006188                     
 26151                           ; BSR set to: 57
 26152                           ;canlib/pic18f26k83/pic18f26k83_can.c: 131:         TXB0CONbits.TXREQ = 0;
 26153   006188  0137               	movlb	55	; () banked
 26154   00618A  97E0               	bcf	224,3,b	;volatile
 26155                           
 26156                           ;canlib/pic18f26k83/pic18f26k83_can.c: 132:         return;
 26157   00618C  EF99  F031         	goto	i2l88
 26158   006190                     i2l87:
 26159                           
 26160                           ;canlib/pic18f26k83/pic18f26k83_can.c: 137:     if (PIR5bits.RXB0IF) {
 26161   006190  0139               	movlb	57	; () banked
 26162   006192  A1A5               	btfss	165,0,b	;volatile
 26163   006194  EFCE  F030         	goto	i2u1325_41
 26164   006198  EFD0  F030         	goto	i2u1325_40
 26165   00619C                     i2u1325_41:
 26166   00619C  EF17  F031         	goto	i2l89
 26167   0061A0                     i2u1325_40:
 26168   0061A0                     
 26169                           ; BSR set to: 57
 26170                           ;canlib/pic18f26k83/pic18f26k83_can.c: 138:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 139:         rcvd_msg.sid = (((uint16_t)RXB0SIDH) << 3) | (RXB0SID
      +                          L >> 5);
 26171   0061A0  006F FE08  F011    	movff	16258,??_can_handle_interrupt	;volatile
 26172   0061A6  0E05               	movlw	5
 26173   0061A8  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 26174   0061AA                     i2u1326_45:
 26175   0061AA  90D8               	bcf	status,0,c
 26176   0061AC  3211               	rrcf	??_can_handle_interrupt^0,f,c
 26177   0061AE  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 26178   0061B0  EFD5  F030         	goto	i2u1326_45
 26179   0061B4  5011               	movf	??_can_handle_interrupt^0,w,c
 26180   0061B6  006F FE04  F013    	movff	16257,??_can_handle_interrupt+2	;volatile
 26181   0061BC  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 26182   0061BE  90D8               	bcf	status,0,c
 26183   0061C0  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26184   0061C2  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26185   0061C4  90D8               	bcf	status,0,c
 26186   0061C6  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26187   0061C8  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26188   0061CA  90D8               	bcf	status,0,c
 26189   0061CC  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26190   0061CE  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26191   0061D0  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 26192   0061D2  6E15               	movwf	can_handle_interrupt@rcvd_msg^0,c
 26193   0061D4  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 26194   0061D6  6E16               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
 26195                           
 26196                           ;canlib/pic18f26k83/pic18f26k83_can.c: 140:         rcvd_msg.data_len = RXB0DLCbits.DLC;
 26197   0061D8  5085               	movf	133,w,c	;volatile
 26198   0061DA  0B0F               	andlw	15
 26199   0061DC  6E17               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
 26200   0061DE                     
 26201                           ; BSR set to: 57
 26202                           ;canlib/pic18f26k83/pic18f26k83_can.c: 141:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB0D0, rcvd_msg.data_len);
 26203   0061DE  0E18               	movlw	low (can_handle_interrupt@rcvd_msg+3)
 26204   0061E0  6E01               	movwf	i2memcpy@d1^0,c
 26205   0061E2  6A02               	clrf	(i2memcpy@d1+1)^0,c
 26206   0061E4  0E86               	movlw	134
 26207   0061E6  6E03               	movwf	i2memcpy@s1^0,c
 26208   0061E8  0E3F               	movlw	63
 26209   0061EA  6E04               	movwf	(i2memcpy@s1+1)^0,c
 26210   0061EC  C017  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
 26211   0061F0  6A06               	clrf	(i2memcpy@n+1)^0,c
 26212   0061F2  EC92  F045         	call	i2_memcpy	;wreg free
 26213   0061F6                     
 26214                           ;canlib/pic18f26k83/pic18f26k83_can.c: 144:         if (((void*)0) != can_rcv_cb) {
 26215   0061F6  5046               	movf	_can_rcv_cb^0,w,c
 26216   0061F8  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 26217   0061FA  B4D8               	btfsc	status,2,c
 26218   0061FC  EF02  F031         	goto	i2u1327_41
 26219   006200  EF04  F031         	goto	i2u1327_40
 26220   006204                     i2u1327_41:
 26221   006204  EF12  F031         	goto	i2l11605
 26222   006208                     i2u1327_40:
 26223   006208                     
 26224                           ;canlib/pic18f26k83/pic18f26k83_can.c: 145:             can_rcv_cb(&rcvd_msg);
 26225   006208  0E15               	movlw	low can_handle_interrupt@rcvd_msg
 26226   00620A  6E0A               	movwf	can_msg_handler@msg^0,c
 26227   00620C  D802               	call	i2u1328_48
 26228   00620E  EF12  F031         	goto	i2u1328_49
 26229   006212                     i2u1328_48:
 26230   006212  0005               	push	
 26231   006214  6EFA               	movwf	pclath,c
 26232   006216  5046               	movf	_can_rcv_cb^0,w,c
 26233   006218  6EFD               	movwf	tosl,c
 26234   00621A  5047               	movf	(_can_rcv_cb+1)^0,w,c
 26235   00621C  6EFE               	movwf	tosh,c
 26236   00621E  6AFF               	clrf	tosu,c
 26237   006220  50FA               	movf	pclath,w,c
 26238   006222  0012               	return		;indir
 26239   006224                     i2u1328_49:
 26240   006224                     i2l11605:
 26241                           
 26242                           ;canlib/pic18f26k83/pic18f26k83_can.c: 148:         PIR5bits.RXB0IF = 0;
 26243   006224  0139               	movlb	57	; () banked
 26244   006226  91A5               	bcf	165,0,b	;volatile
 26245   006228                     
 26246                           ; BSR set to: 57
 26247                           ;canlib/pic18f26k83/pic18f26k83_can.c: 149:         RXB0CONbits.RXFUL = 0;
 26248   006228  9E80               	bcf	128,7,c	;volatile
 26249   00622A  EF99  F031         	goto	i2l88
 26250   00622E                     i2l89:
 26251                           
 26252                           ; BSR set to: 57
 26253   00622E  A3A5               	btfss	165,1,b	;volatile
 26254   006230  EF1C  F031         	goto	i2u1329_41
 26255   006234  EF1E  F031         	goto	i2u1329_40
 26256   006238                     i2u1329_41:
 26257   006238  EF67  F031         	goto	i2l92
 26258   00623C                     i2u1329_40:
 26259   00623C                     
 26260                           ; BSR set to: 57
 26261                           ;canlib/pic18f26k83/pic18f26k83_can.c: 153:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 154:         rcvd_msg.sid = (((uint16_t)RXB1SIDH) << 3) | (RXB1SID
      +                          L >> 5);
 26262   00623C  006D FFC8  F011    	movff	14322,??_can_handle_interrupt	;volatile
 26263   006242  0E05               	movlw	5
 26264   006244  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 26265   006246                     i2u1330_45:
 26266   006246  90D8               	bcf	status,0,c
 26267   006248  3211               	rrcf	??_can_handle_interrupt^0,f,c
 26268   00624A  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 26269   00624C  EF23  F031         	goto	i2u1330_45
 26270   006250  5011               	movf	??_can_handle_interrupt^0,w,c
 26271   006252  006D FFC4  F013    	movff	14321,??_can_handle_interrupt+2	;volatile
 26272   006258  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 26273   00625A  90D8               	bcf	status,0,c
 26274   00625C  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26275   00625E  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26276   006260  90D8               	bcf	status,0,c
 26277   006262  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26278   006264  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26279   006266  90D8               	bcf	status,0,c
 26280   006268  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 26281   00626A  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 26282   00626C  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 26283   00626E  6E20               	movwf	can_handle_interrupt@rcvd_msg_753^0,c
 26284   006270  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 26285   006272  6E21               	movwf	(can_handle_interrupt@rcvd_msg_753+1)^0,c
 26286                           
 26287                           ;canlib/pic18f26k83/pic18f26k83_can.c: 155:         rcvd_msg.data_len = RXB1DLCbits.DLC;
 26288   006274  0137               	movlb	55	; () banked
 26289   006276  51F5               	movf	245,w,b	;volatile
 26290   006278  0B0F               	andlw	15
 26291   00627A  6E22               	movwf	(can_handle_interrupt@rcvd_msg_753+2)^0,c
 26292   00627C                     
 26293                           ; BSR set to: 55
 26294                           ;canlib/pic18f26k83/pic18f26k83_can.c: 156:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB1D0, rcvd_msg.data_len);
 26295   00627C  0E23               	movlw	low (can_handle_interrupt@rcvd_msg_753+3)
 26296   00627E  6E01               	movwf	i2memcpy@d1^0,c
 26297   006280  6A02               	clrf	(i2memcpy@d1+1)^0,c
 26298   006282  0EF6               	movlw	246
 26299   006284  6E03               	movwf	i2memcpy@s1^0,c
 26300   006286  0E37               	movlw	55
 26301   006288  6E04               	movwf	(i2memcpy@s1+1)^0,c
 26302   00628A  C022  F005         	movff	can_handle_interrupt@rcvd_msg_753+2,i2memcpy@n
 26303   00628E  6A06               	clrf	(i2memcpy@n+1)^0,c
 26304   006290  EC92  F045         	call	i2_memcpy	;wreg free
 26305   006294                     
 26306                           ;canlib/pic18f26k83/pic18f26k83_can.c: 159:         if (((void*)0) != can_rcv_cb) {
 26307   006294  5046               	movf	_can_rcv_cb^0,w,c
 26308   006296  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 26309   006298  B4D8               	btfsc	status,2,c
 26310   00629A  EF51  F031         	goto	i2u1331_41
 26311   00629E  EF53  F031         	goto	i2u1331_40
 26312   0062A2                     i2u1331_41:
 26313   0062A2  EF61  F031         	goto	i2l11621
 26314   0062A6                     i2u1331_40:
 26315   0062A6                     
 26316                           ;canlib/pic18f26k83/pic18f26k83_can.c: 160:             can_rcv_cb(&rcvd_msg);
 26317   0062A6  0E20               	movlw	low can_handle_interrupt@rcvd_msg_753
 26318   0062A8  6E0A               	movwf	can_msg_handler@msg^0,c
 26319   0062AA  D802               	call	i2u1332_48
 26320   0062AC  EF61  F031         	goto	i2u1332_49
 26321   0062B0                     i2u1332_48:
 26322   0062B0  0005               	push	
 26323   0062B2  6EFA               	movwf	pclath,c
 26324   0062B4  5046               	movf	_can_rcv_cb^0,w,c
 26325   0062B6  6EFD               	movwf	tosl,c
 26326   0062B8  5047               	movf	(_can_rcv_cb+1)^0,w,c
 26327   0062BA  6EFE               	movwf	tosh,c
 26328   0062BC  6AFF               	clrf	tosu,c
 26329   0062BE  50FA               	movf	pclath,w,c
 26330   0062C0  0012               	return		;indir
 26331   0062C2                     i2u1332_49:
 26332   0062C2                     i2l11621:
 26333                           
 26334                           ;canlib/pic18f26k83/pic18f26k83_can.c: 163:         PIR5bits.RXB1IF = 0;
 26335   0062C2  0139               	movlb	57	; () banked
 26336   0062C4  93A5               	bcf	165,1,b	;volatile
 26337   0062C6                     
 26338                           ; BSR set to: 57
 26339                           ;canlib/pic18f26k83/pic18f26k83_can.c: 164:         RXB1CONbits.RXFUL = 0;
 26340   0062C6  0137               	movlb	55	; () banked
 26341   0062C8  9FF0               	bcf	240,7,b	;volatile
 26342                           
 26343                           ;canlib/pic18f26k83/pic18f26k83_can.c: 165:     }
 26344   0062CA  EF99  F031         	goto	i2l88
 26345   0062CE                     i2l92:
 26346                           
 26347                           ; BSR set to: 57
 26348   0062CE  A5A5               	btfss	165,2,b	;volatile
 26349   0062D0  EF6C  F031         	goto	i2u1333_41
 26350   0062D4  EF6E  F031         	goto	i2u1333_40
 26351   0062D8                     i2u1333_41:
 26352   0062D8  EF71  F031         	goto	i2l95
 26353   0062DC                     i2u1333_40:
 26354   0062DC                     
 26355                           ; BSR set to: 57
 26356                           ;canlib/pic18f26k83/pic18f26k83_can.c: 170:         PIR5bits.TXB0IF = 0;
 26357   0062DC  95A5               	bcf	165,2,b	;volatile
 26358                           
 26359                           ;canlib/pic18f26k83/pic18f26k83_can.c: 171:         return;
 26360   0062DE  EF99  F031         	goto	i2l88
 26361   0062E2                     i2l95:
 26362                           
 26363                           ; BSR set to: 57
 26364   0062E2  A7A5               	btfss	165,3,b	;volatile
 26365   0062E4  EF76  F031         	goto	i2u1334_41
 26366   0062E8  EF78  F031         	goto	i2u1334_40
 26367   0062EC                     i2u1334_41:
 26368   0062EC  EF7B  F031         	goto	i2l97
 26369   0062F0                     i2u1334_40:
 26370   0062F0                     
 26371                           ; BSR set to: 57
 26372                           ;canlib/pic18f26k83/pic18f26k83_can.c: 173:         PIR5bits.TXB1IF = 0;
 26373   0062F0  97A5               	bcf	165,3,b	;volatile
 26374                           
 26375                           ;canlib/pic18f26k83/pic18f26k83_can.c: 174:         return;
 26376   0062F2  EF99  F031         	goto	i2l88
 26377   0062F6                     i2l97:
 26378                           
 26379                           ; BSR set to: 57
 26380   0062F6  A9A5               	btfss	165,4,b	;volatile
 26381   0062F8  EF80  F031         	goto	i2u1335_41
 26382   0062FC  EF82  F031         	goto	i2u1335_40
 26383   006300                     i2u1335_41:
 26384   006300  EF85  F031         	goto	i2l99
 26385   006304                     i2u1335_40:
 26386   006304                     
 26387                           ; BSR set to: 57
 26388                           ;canlib/pic18f26k83/pic18f26k83_can.c: 176:         PIR5bits.TXB2IF = 0;
 26389   006304  99A5               	bcf	165,4,b	;volatile
 26390                           
 26391                           ;canlib/pic18f26k83/pic18f26k83_can.c: 177:         return;
 26392   006306  EF99  F031         	goto	i2l88
 26393   00630A                     i2l99:
 26394                           
 26395                           ; BSR set to: 57
 26396   00630A  AFA5               	btfss	165,7,b	;volatile
 26397   00630C  EF8A  F031         	goto	i2u1336_41
 26398   006310  EF8C  F031         	goto	i2u1336_40
 26399   006314                     i2u1336_41:
 26400   006314  EF8F  F031         	goto	i2l101
 26401   006318                     i2u1336_40:
 26402   006318                     
 26403                           ; BSR set to: 57
 26404                           ;canlib/pic18f26k83/pic18f26k83_can.c: 181:         PIR5bits.IRXIF = 0;
 26405   006318  9FA5               	bcf	165,7,b	;volatile
 26406                           
 26407                           ;canlib/pic18f26k83/pic18f26k83_can.c: 182:         return;
 26408   00631A  EF99  F031         	goto	i2l88
 26409   00631E                     i2l101:
 26410                           
 26411                           ; BSR set to: 57
 26412   00631E  ABA5               	btfss	165,5,b	;volatile
 26413   006320  EF94  F031         	goto	i2u1337_41
 26414   006324  EF96  F031         	goto	i2u1337_40
 26415   006328                     i2u1337_41:
 26416   006328  EF99  F031         	goto	i2l98
 26417   00632C                     i2u1337_40:
 26418   00632C                     
 26419                           ; BSR set to: 57
 26420                           ;canlib/pic18f26k83/pic18f26k83_can.c: 186:         PIR5bits.ERRIF = 0;
 26421   00632C  9BA5               	bcf	165,5,b	;volatile
 26422                           
 26423                           ;canlib/pic18f26k83/pic18f26k83_can.c: 187:         return;
 26424   00632E  EF99  F031         	goto	i2l88
 26425   006332                     i2l98:
 26426   006332                     i2l88:
 26427   006332  0012               	return		;funcret
 26428   006334                     __end_of_can_handle_interrupt:
 26429                           	callstack 0
 26430                           
 26431 ;; *************** function i2_memcpy *****************
 26432 ;; Defined at:
 26433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 26434 ;; Parameters:    Size  Location     Type
 26435 ;;  d1              2    0[COMRAM] PTR void 
 26436 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26437 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26438 ;;  s1              2    2[COMRAM] PTR const void 
 26439 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 26440 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26441 ;;  n               2    4[COMRAM] unsigned int 
 26442 ;; Auto vars:     Size  Location     Type
 26443 ;;  s               2    8[COMRAM] PTR const unsigned char 
 26444 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 26445 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26446 ;;  d               2    6[COMRAM] PTR unsigned char 
 26447 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26448 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26449 ;;  tmp             1   10[COMRAM] unsigned char 
 26450 ;; Return value:  Size  Location     Type
 26451 ;;                  2    0[COMRAM] PTR void 
 26452 ;; Registers used:
 26453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26454 ;; Tracked objects:
 26455 ;;		On entry : 0/0
 26456 ;;		On exit  : 0/0
 26457 ;;		Unchanged: 0/0
 26458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26459 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26460 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26462 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26463 ;;Total ram usage:       11 bytes
 26464 ;; Hardware stack levels used: 1
 26465 ;; This function calls:
 26466 ;;		Nothing
 26467 ;; This function is called by:
 26468 ;;		_can_handle_interrupt
 26469 ;; This function uses a non-reentrant model
 26470 ;;
 26471                           
 26472                           	psect	text103
 26473   008B24                     __ptext103:
 26474                           	callstack 0
 26475   008B24                     i2_memcpy:
 26476                           	callstack 14
 26477   008B24  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 26478   008B28  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 26479   008B2C  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 26480   008B30  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 26481   008B34  EFB1  F045         	goto	i2l11519
 26482   008B38                     i2l11511:
 26483   008B38  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 26484   008B3E  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 26485   008B44  50DF               	movf	indf2,w,c
 26486   008B46  6E0B               	movwf	i2memcpy@tmp^0,c
 26487   008B48  4A09               	infsnz	i2memcpy@s^0,f,c
 26488   008B4A  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 26489   008B4C  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 26490   008B52  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 26491   008B58  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 26492   008B5E  4A07               	infsnz	i2memcpy@d^0,f,c
 26493   008B60  2A08               	incf	(i2memcpy@d+1)^0,f,c
 26494   008B62                     i2l11519:
 26495   008B62  0605               	decf	i2memcpy@n^0,f,c
 26496   008B64  A0D8               	btfss	status,0,c
 26497   008B66  0606               	decf	(i2memcpy@n+1)^0,f,c
 26498   008B68  2805               	incf	i2memcpy@n^0,w,c
 26499   008B6A  E106               	bnz	i2u1315_41
 26500   008B6C  2806               	incf	(i2memcpy@n+1)^0,w,c
 26501   008B6E  A4D8               	btfss	status,2,c
 26502   008B70  EFBC  F045         	goto	i2u1315_41
 26503   008B74  EFBE  F045         	goto	i2u1315_40
 26504   008B78                     i2u1315_41:
 26505   008B78  EF9C  F045         	goto	i2l11511
 26506   008B7C                     i2u1315_40:
 26507   008B7C  0012               	return		;funcret
 26508   008B7E                     __end_ofi2_memcpy:
 26509                           	callstack 0
 26510                           
 26511 ;; *************** function _can_msg_handler *****************
 26512 ;; Defined at:
 26513 ;;		line 176 in file "main.c"
 26514 ;; Parameters:    Size  Location     Type
 26515 ;;  msg             1    9[COMRAM] PTR const struct .
 26516 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 26517 ;; Auto vars:     Size  Location     Type
 26518 ;;  dest_id         2   14[COMRAM] int 
 26519 ;;  msg_type        2   12[COMRAM] unsigned short 
 26520 ;;  cmd_type        2    0        int 
 26521 ;; Return value:  Size  Location     Type
 26522 ;;                  1    wreg      void 
 26523 ;; Registers used:
 26524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26525 ;; Tracked objects:
 26526 ;;		On entry : 0/0
 26527 ;;		On exit  : 0/0
 26528 ;;		Unchanged: 0/0
 26529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26534 ;;Total ram usage:        7 bytes
 26535 ;; Hardware stack levels used: 1
 26536 ;; Hardware stack levels required when called: 2
 26537 ;; This function calls:
 26538 ;;		_BLUE_LED_OFF
 26539 ;;		_BLUE_LED_ON
 26540 ;;		_GREEN_LED_OFF
 26541 ;;		_GREEN_LED_ON
 26542 ;;		_RED_LED_OFF
 26543 ;;		_RED_LED_ON
 26544 ;;		_get_board_unique_id
 26545 ;;		_get_message_type
 26546 ;;		_get_reset_board_id
 26547 ;; This function is called by:
 26548 ;;		_main
 26549 ;;		_can_handle_interrupt
 26550 ;; This function uses a non-reentrant model
 26551 ;;
 26552                           
 26553                           	psect	text104
 26554   007E08                     __ptext104:
 26555                           	callstack 0
 26556   007E08                     _can_msg_handler:
 26557                           	callstack 12
 26558   007E08                     
 26559                           ;main.c: 177:     seen_can_message = 1;
 26560   007E08  0E01               	movlw	1
 26561   007E0A  6E49               	movwf	_seen_can_message^0,c	;volatile
 26562   007E0C                     
 26563                           ;main.c: 178:     uint16_t msg_type = get_message_type(msg);
 26564   007E0C  C00A  F001         	movff	can_msg_handler@msg,get_message_type@msg
 26565   007E10  EC16  F047         	call	_get_message_type	;wreg free
 26566   007E14  C001  F00D         	movff	?_get_message_type,can_msg_handler@msg_type
 26567   007E18  C002  F00E         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
 26568   007E1C                     
 26569                           ;main.c: 182:     if (get_board_unique_id(msg) == 0x0C) {
 26570   007E1C  C00A  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
 26571   007E20  EC47  F048         	call	_get_board_unique_id	;wreg free
 26572   007E24  0A0C               	xorlw	12
 26573   007E26  A4D8               	btfss	status,2,c
 26574   007E28  EF18  F03F         	goto	i2u1312_41
 26575   007E2C  EF1A  F03F         	goto	i2u1312_40
 26576   007E30                     i2u1312_41:
 26577   007E30  EF4A  F03F         	goto	i2l11487
 26578   007E34                     i2u1312_40:
 26579   007E34  EF6B  F03F         	goto	i2l2194
 26580   007E38                     i2l11475:
 26581                           
 26582                           ;main.c: 188:             BLUE_LED_ON();
 26583   007E38  ECED  F048         	call	_BLUE_LED_ON	;wreg free
 26584                           
 26585                           ;main.c: 189:             GREEN_LED_ON();
 26586   007E3C  ECE9  F048         	call	_GREEN_LED_ON	;wreg free
 26587                           
 26588                           ;main.c: 190:             RED_LED_ON();
 26589   007E40  ECE5  F048         	call	_RED_LED_ON	;wreg free
 26590                           
 26591                           ;main.c: 191:             break;
 26592   007E44  EF6B  F03F         	goto	i2l2194
 26593   007E48                     i2l11477:
 26594                           
 26595                           ;main.c: 194:             BLUE_LED_OFF();
 26596   007E48  ECEF  F048         	call	_BLUE_LED_OFF	;wreg free
 26597                           
 26598                           ;main.c: 195:             GREEN_LED_OFF();
 26599   007E4C  ECEB  F048         	call	_GREEN_LED_OFF	;wreg free
 26600                           
 26601                           ;main.c: 196:             RED_LED_OFF();
 26602   007E50  ECE7  F048         	call	_RED_LED_OFF	;wreg free
 26603                           
 26604                           ;main.c: 197:             break;
 26605   007E54  EF6B  F03F         	goto	i2l2194
 26606   007E58                     i2l11479:
 26607                           
 26608                           ;main.c: 200:             dest_id = get_reset_board_id(msg);
 26609   007E58  C00A  F005         	movff	can_msg_handler@msg,get_reset_board_id@msg
 26610   007E5C  EC40  F046         	call	_get_reset_board_id	;wreg free
 26611   007E60  C005  F00F         	movff	?_get_reset_board_id,can_msg_handler@dest_id
 26612   007E64  C006  F010         	movff	?_get_reset_board_id+1,can_msg_handler@dest_id+1
 26613   007E68                     
 26614                           ;main.c: 201:             if (dest_id == 0x0C || dest_id == 0) {
 26615   007E68  0E0C               	movlw	12
 26616   007E6A  180F               	xorwf	can_msg_handler@dest_id^0,w,c
 26617   007E6C  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 26618   007E6E  B4D8               	btfsc	status,2,c
 26619   007E70  EF3C  F03F         	goto	i2u1313_41
 26620   007E74  EF3E  F03F         	goto	i2u1313_40
 26621   007E78                     i2u1313_41:
 26622   007E78  EF47  F03F         	goto	i2l2202
 26623   007E7C                     i2u1313_40:
 26624   007E7C  500F               	movf	can_msg_handler@dest_id^0,w,c
 26625   007E7E  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 26626   007E80  A4D8               	btfss	status,2,c
 26627   007E82  EF45  F03F         	goto	i2u1314_41
 26628   007E86  EF47  F03F         	goto	i2u1314_40
 26629   007E8A                     i2u1314_41:
 26630   007E8A  EF6B  F03F         	goto	i2l2194
 26631   007E8E                     i2u1314_40:
 26632   007E8E                     i2l2202:
 26633   007E8E  00FF               	reset		;# 
 26634   007E90  EF6B  F03F         	goto	i2l2194
 26635   007E94                     i2l11487:
 26636   007E94  C00D  F00B         	movff	can_msg_handler@msg_type,??_can_msg_handler
 26637   007E98  C00E  F00C         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
 26638                           
 26639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 26640                           ; Switch size 1, requested type "simple"
 26641                           ; Number of cases is 2, Range of values is 1 to 7
 26642                           ; switch strategies available:
 26643                           ; Name         Instructions Cycles
 26644                           ; simple_byte            7     4 (average)
 26645                           ;	Chosen strategy is simple_byte
 26646   007E9C  500C               	movf	(??_can_msg_handler+1)^0,w,c
 26647   007E9E  0A01               	xorlw	1	; case 1
 26648   007EA0  B4D8               	btfsc	status,2,c
 26649   007EA2  EF59  F03F         	goto	i2l18371
 26650   007EA6  0A06               	xorlw	6	; case 7
 26651   007EA8  B4D8               	btfsc	status,2,c
 26652   007EAA  EF60  F03F         	goto	i2l18373
 26653   007EAE  EF6B  F03F         	goto	i2l2194
 26654   007EB2                     i2l18371:
 26655                           
 26656                           ; Switch size 1, requested type "simple"
 26657                           ; Number of cases is 1, Range of values is 96 to 96
 26658                           ; switch strategies available:
 26659                           ; Name         Instructions Cycles
 26660                           ; simple_byte            4     3 (average)
 26661                           ;	Chosen strategy is simple_byte
 26662   007EB2  500B               	movf	??_can_msg_handler^0,w,c
 26663   007EB4  0A60               	xorlw	96	; case 96
 26664   007EB6  B4D8               	btfsc	status,2,c
 26665   007EB8  EF2C  F03F         	goto	i2l11479
 26666   007EBC  EF6B  F03F         	goto	i2l2194
 26667   007EC0                     i2l18373:
 26668                           
 26669                           ; Switch size 1, requested type "simple"
 26670                           ; Number of cases is 2, Range of values is 192 to 224
 26671                           ; switch strategies available:
 26672                           ; Name         Instructions Cycles
 26673                           ; simple_byte            7     4 (average)
 26674                           ;	Chosen strategy is simple_byte
 26675   007EC0  500B               	movf	??_can_msg_handler^0,w,c
 26676   007EC2  0AC0               	xorlw	192	; case 192
 26677   007EC4  B4D8               	btfsc	status,2,c
 26678   007EC6  EF24  F03F         	goto	i2l11477
 26679   007ECA  0A20               	xorlw	32	; case 224
 26680   007ECC  B4D8               	btfsc	status,2,c
 26681   007ECE  EF1C  F03F         	goto	i2l11475
 26682   007ED2  EF6B  F03F         	goto	i2l2194
 26683   007ED6                     i2l2194:
 26684   007ED6  0012               	return		;funcret
 26685   007ED8                     __end_of_can_msg_handler:
 26686                           	callstack 0
 26687                           
 26688 ;; *************** function _get_reset_board_id *****************
 26689 ;; Defined at:
 26690 ;;		line 490 in file "canlib/can_common.c"
 26691 ;; Parameters:    Size  Location     Type
 26692 ;;  msg             1    4[COMRAM] PTR const struct .
 26693 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 26694 ;; Auto vars:     Size  Location     Type
 26695 ;;  msg_type        2    7[COMRAM] unsigned short 
 26696 ;; Return value:  Size  Location     Type
 26697 ;;                  2    4[COMRAM] int 
 26698 ;; Registers used:
 26699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26700 ;; Tracked objects:
 26701 ;;		On entry : 0/0
 26702 ;;		On exit  : 0/0
 26703 ;;		Unchanged: 0/0
 26704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26708 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26709 ;;Total ram usage:        5 bytes
 26710 ;; Hardware stack levels used: 1
 26711 ;; Hardware stack levels required when called: 1
 26712 ;; This function calls:
 26713 ;;		_get_message_type
 26714 ;; This function is called by:
 26715 ;;		_can_msg_handler
 26716 ;; This function uses a non-reentrant model
 26717 ;;
 26718                           
 26719                           	psect	text105
 26720   008C80                     __ptext105:
 26721                           	callstack 0
 26722   008C80                     _get_reset_board_id:
 26723                           	callstack 12
 26724   008C80                     
 26725                           ;canlib/can_common.c: 491:     if (!msg) { return -1; }
 26726   008C80  5005               	movf	get_reset_board_id@msg^0,w,c
 26727   008C82  A4D8               	btfss	status,2,c
 26728   008C84  EF46  F046         	goto	i2u1133_41
 26729   008C88  EF48  F046         	goto	i2u1133_40
 26730   008C8C                     i2u1133_41:
 26731   008C8C  EF4C  F046         	goto	i2l10379
 26732   008C90                     i2u1133_40:
 26733   008C90                     i2l10377:
 26734   008C90  6805               	setf	?_get_reset_board_id^0,c
 26735   008C92  6806               	setf	(?_get_reset_board_id+1)^0,c
 26736   008C94  EF69  F046         	goto	i2l363
 26737   008C98                     i2l10379:
 26738                           
 26739                           ;canlib/can_common.c: 493:     uint16_t msg_type = get_message_type(msg);
 26740   008C98  C005  F001         	movff	get_reset_board_id@msg,get_message_type@msg
 26741   008C9C  EC16  F047         	call	_get_message_type	;wreg free
 26742   008CA0  C001  F008         	movff	?_get_message_type,get_reset_board_id@msg_type
 26743   008CA4  C002  F009         	movff	?_get_message_type+1,get_reset_board_id@msg_type+1
 26744   008CA8                     
 26745                           ;canlib/can_common.c: 494:     if (msg_type == 0x160) {
 26746   008CA8  0E60               	movlw	96
 26747   008CAA  1808               	xorwf	get_reset_board_id@msg_type^0,w,c
 26748   008CAC  E106               	bnz	i2u1134_41
 26749   008CAE  0409               	decf	(get_reset_board_id@msg_type+1)^0,w,c
 26750   008CB0  A4D8               	btfss	status,2,c
 26751   008CB2  EF5D  F046         	goto	i2u1134_41
 26752   008CB6  EF5F  F046         	goto	i2u1134_40
 26753   008CBA                     i2u1134_41:
 26754   008CBA  EF48  F046         	goto	i2l10377
 26755   008CBE                     i2u1134_40:
 26756   008CBE                     
 26757                           ;canlib/can_common.c: 495:         return msg->data[3];
 26758   008CBE  5005               	movf	get_reset_board_id@msg^0,w,c
 26759   008CC0  6ED9               	movwf	fsr2l,c
 26760   008CC2  6ADA               	clrf	fsr2h,c
 26761   008CC4  0E06               	movlw	6
 26762   008CC6  26D9               	addwf	fsr2l,f,c
 26763   008CC8  50DF               	movf	indf2,w,c
 26764   008CCA  6E07               	movwf	??_get_reset_board_id^0,c
 26765   008CCC  5007               	movf	??_get_reset_board_id^0,w,c
 26766   008CCE  6E05               	movwf	?_get_reset_board_id^0,c
 26767   008CD0  6A06               	clrf	(?_get_reset_board_id+1)^0,c
 26768   008CD2                     i2l363:
 26769   008CD2  0012               	return		;funcret
 26770   008CD4                     __end_of_get_reset_board_id:
 26771                           	callstack 0
 26772                           
 26773 ;; *************** function _get_message_type *****************
 26774 ;; Defined at:
 26775 ;;		line 584 in file "canlib/can_common.c"
 26776 ;; Parameters:    Size  Location     Type
 26777 ;;  msg             1    0[COMRAM] PTR const struct .
 26778 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 26779 ;; Auto vars:     Size  Location     Type
 26780 ;;		None
 26781 ;; Return value:  Size  Location     Type
 26782 ;;                  2    0[COMRAM] unsigned short 
 26783 ;; Registers used:
 26784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26785 ;; Tracked objects:
 26786 ;;		On entry : 0/0
 26787 ;;		On exit  : 0/0
 26788 ;;		Unchanged: 0/0
 26789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26794 ;;Total ram usage:        4 bytes
 26795 ;; Hardware stack levels used: 1
 26796 ;; This function calls:
 26797 ;;		Nothing
 26798 ;; This function is called by:
 26799 ;;		_get_reset_board_id
 26800 ;;		_can_msg_handler
 26801 ;;		_get_fill_info
 26802 ;;		_get_general_cmd_type
 26803 ;;		_get_actuator_id
 26804 ;;		_get_curr_actuator_state
 26805 ;;		_get_req_actuator_state
 26806 ;;		_get_req_actuator_state_analog
 26807 ;;		_get_curr_arm_state
 26808 ;;		_get_req_arm_state
 26809 ;;		_get_timestamp
 26810 ;;		_is_sensor_data
 26811 ;;		_get_imu_data
 26812 ;;		_get_state_est_data
 26813 ;;		_get_analog_data
 26814 ;;		_get_temp_data
 26815 ;;		_get_altitude_data
 26816 ;;		_get_pyro_voltage_data
 26817 ;;		_get_gps_time
 26818 ;;		_get_gps_lat
 26819 ;;		_get_gps_lon
 26820 ;;		_get_gps_alt
 26821 ;;		_get_gps_info
 26822 ;;		_get_state_est_calibration_msg
 26823 ;;		_message_debug_level
 26824 ;; This function uses a non-reentrant model
 26825 ;;
 26826                           
 26827                           	psect	text106
 26828   008E2C                     __ptext106:
 26829                           	callstack 0
 26830   008E2C                     _get_message_type:
 26831                           	callstack 12
 26832   008E2C                     
 26833                           ;canlib/can_common.c: 584: uint16_t get_message_type(const can_msg_t *msg);canlib/can_co
      +                          mmon.c: 585: {;canlib/can_common.c: 587:     if (!msg) { return 0; }
 26834   008E2C  5001               	movf	get_message_type@msg^0,w,c
 26835   008E2E  A4D8               	btfss	status,2,c
 26836   008E30  EF1C  F047         	goto	i2u1049_41
 26837   008E34  EF1E  F047         	goto	i2u1049_40
 26838   008E38                     i2u1049_41:
 26839   008E38  EF24  F047         	goto	i2l9917
 26840   008E3C                     i2u1049_40:
 26841   008E3C  0E00               	movlw	0
 26842   008E3E  6E02               	movwf	(?_get_message_type+1)^0,c
 26843   008E40  0E00               	movlw	0
 26844   008E42  6E01               	movwf	?_get_message_type^0,c
 26845   008E44  EF33  F047         	goto	i2l416
 26846   008E48                     i2l9917:
 26847                           
 26848                           ;canlib/can_common.c: 589:     return (msg->sid & 0x7E0);
 26849   008E48  5001               	movf	get_message_type@msg^0,w,c
 26850   008E4A  6ED9               	movwf	fsr2l,c
 26851   008E4C  6ADA               	clrf	fsr2h,c
 26852   008E4E  006F FF78  F003    	movff	postinc2,??_get_message_type
 26853   008E54  006F FF74  F004    	movff	postdec2,??_get_message_type+1
 26854   008E5A  0EE0               	movlw	224
 26855   008E5C  1403               	andwf	??_get_message_type^0,w,c
 26856   008E5E  6E01               	movwf	?_get_message_type^0,c
 26857   008E60  0E07               	movlw	7
 26858   008E62  1404               	andwf	(??_get_message_type+1)^0,w,c
 26859   008E64  6E02               	movwf	(?_get_message_type+1)^0,c
 26860   008E66                     i2l416:
 26861   008E66  0012               	return		;funcret
 26862   008E68                     __end_of_get_message_type:
 26863                           	callstack 0
 26864                           
 26865 ;; *************** function _get_board_unique_id *****************
 26866 ;; Defined at:
 26867 ;;		line 592 in file "canlib/can_common.c"
 26868 ;; Parameters:    Size  Location     Type
 26869 ;;  msg             1    0[COMRAM] PTR const struct .
 26870 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 26871 ;; Auto vars:     Size  Location     Type
 26872 ;;		None
 26873 ;; Return value:  Size  Location     Type
 26874 ;;                  1    wreg      unsigned char 
 26875 ;; Registers used:
 26876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26877 ;; Tracked objects:
 26878 ;;		On entry : 0/0
 26879 ;;		On exit  : 0/0
 26880 ;;		Unchanged: 0/0
 26881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26886 ;;Total ram usage:        1 bytes
 26887 ;; Hardware stack levels used: 1
 26888 ;; This function calls:
 26889 ;;		Nothing
 26890 ;; This function is called by:
 26891 ;;		_can_msg_handler
 26892 ;; This function uses a non-reentrant model
 26893 ;;
 26894                           
 26895                           	psect	text107
 26896   00908E                     __ptext107:
 26897                           	callstack 0
 26898   00908E                     _get_board_unique_id:
 26899                           	callstack 13
 26900   00908E                     
 26901                           ;canlib/can_common.c: 592: uint8_t get_board_unique_id(const can_msg_t *msg);canlib/can_
      +                          common.c: 593: {;canlib/can_common.c: 595:     if (!msg) { return 0; }
 26902   00908E  5001               	movf	get_board_unique_id@msg^0,w,c
 26903   009090  A4D8               	btfss	status,2,c
 26904   009092  EF4D  F048         	goto	i2u1135_41
 26905   009096  EF4F  F048         	goto	i2u1135_40
 26906   00909A                     i2u1135_41:
 26907   00909A  EF52  F048         	goto	i2l10395
 26908   00909E                     i2u1135_40:
 26909   00909E  0E00               	movlw	0
 26910   0090A0  EF57  F048         	goto	i2l420
 26911   0090A4                     i2l10395:
 26912                           
 26913                           ;canlib/can_common.c: 597:     return ((uint8_t) (msg->sid & 0x1F));
 26914   0090A4  5001               	movf	get_board_unique_id@msg^0,w,c
 26915   0090A6  6ED9               	movwf	fsr2l,c
 26916   0090A8  6ADA               	clrf	fsr2h,c
 26917   0090AA  50DF               	movf	indf2,w,c
 26918   0090AC  0B1F               	andlw	31
 26919   0090AE                     i2l420:
 26920   0090AE  0012               	return		;funcret
 26921   0090B0                     __end_of_get_board_unique_id:
 26922                           	callstack 0
 26923                           
 26924 ;; *************** function _RED_LED_ON *****************
 26925 ;; Defined at:
 26926 ;;		line 60 in file "./common.h"
 26927 ;; Parameters:    Size  Location     Type
 26928 ;;		None
 26929 ;; Auto vars:     Size  Location     Type
 26930 ;;		None
 26931 ;; Return value:  Size  Location     Type
 26932 ;;                  1    wreg      void 
 26933 ;; Registers used:
 26934 ;;		None
 26935 ;; Tracked objects:
 26936 ;;		On entry : 0/0
 26937 ;;		On exit  : 0/0
 26938 ;;		Unchanged: 0/0
 26939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26944 ;;Total ram usage:        0 bytes
 26945 ;; Hardware stack levels used: 1
 26946 ;; This function calls:
 26947 ;;		Nothing
 26948 ;; This function is called by:
 26949 ;;		_can_msg_handler
 26950 ;; This function uses a non-reentrant model
 26951 ;;
 26952                           
 26953                           	psect	text108
 26954   0091CA                     __ptext108:
 26955                           	callstack 0
 26956   0091CA                     _RED_LED_ON:
 26957                           	callstack 13
 26958   0091CA                     
 26959                           ;./common.h: 61:     LATA4 = 0;
 26960   0091CA  98BA               	bcf	16314,4,c	;volatile
 26961   0091CC  0012               	return		;funcret
 26962   0091CE                     __end_of_RED_LED_ON:
 26963                           	callstack 0
 26964                           
 26965 ;; *************** function _RED_LED_OFF *****************
 26966 ;; Defined at:
 26967 ;;		line 64 in file "./common.h"
 26968 ;; Parameters:    Size  Location     Type
 26969 ;;		None
 26970 ;; Auto vars:     Size  Location     Type
 26971 ;;		None
 26972 ;; Return value:  Size  Location     Type
 26973 ;;                  1    wreg      void 
 26974 ;; Registers used:
 26975 ;;		None
 26976 ;; Tracked objects:
 26977 ;;		On entry : 0/0
 26978 ;;		On exit  : 0/0
 26979 ;;		Unchanged: 0/0
 26980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26985 ;;Total ram usage:        0 bytes
 26986 ;; Hardware stack levels used: 1
 26987 ;; This function calls:
 26988 ;;		Nothing
 26989 ;; This function is called by:
 26990 ;;		_can_msg_handler
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text109
 26995   0091CE                     __ptext109:
 26996                           	callstack 0
 26997   0091CE                     _RED_LED_OFF:
 26998                           	callstack 13
 26999   0091CE                     
 27000                           ;./common.h: 65:     LATA4 = 1;
 27001   0091CE  88BA               	bsf	16314,4,c	;volatile
 27002   0091D0  0012               	return		;funcret
 27003   0091D2                     __end_of_RED_LED_OFF:
 27004                           	callstack 0
 27005                           
 27006 ;; *************** function _GREEN_LED_ON *****************
 27007 ;; Defined at:
 27008 ;;		line 48 in file "./common.h"
 27009 ;; Parameters:    Size  Location     Type
 27010 ;;		None
 27011 ;; Auto vars:     Size  Location     Type
 27012 ;;		None
 27013 ;; Return value:  Size  Location     Type
 27014 ;;                  1    wreg      void 
 27015 ;; Registers used:
 27016 ;;		None
 27017 ;; Tracked objects:
 27018 ;;		On entry : 0/0
 27019 ;;		On exit  : 0/0
 27020 ;;		Unchanged: 0/0
 27021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27026 ;;Total ram usage:        0 bytes
 27027 ;; Hardware stack levels used: 1
 27028 ;; This function calls:
 27029 ;;		Nothing
 27030 ;; This function is called by:
 27031 ;;		_can_msg_handler
 27032 ;; This function uses a non-reentrant model
 27033 ;;
 27034                           
 27035                           	psect	text110
 27036   0091D2                     __ptext110:
 27037                           	callstack 0
 27038   0091D2                     _GREEN_LED_ON:
 27039                           	callstack 13
 27040   0091D2                     
 27041                           ;./common.h: 49:     LATA3 = 0;
 27042   0091D2  96BA               	bcf	16314,3,c	;volatile
 27043   0091D4  0012               	return		;funcret
 27044   0091D6                     __end_of_GREEN_LED_ON:
 27045                           	callstack 0
 27046                           
 27047 ;; *************** function _GREEN_LED_OFF *****************
 27048 ;; Defined at:
 27049 ;;		line 52 in file "./common.h"
 27050 ;; Parameters:    Size  Location     Type
 27051 ;;		None
 27052 ;; Auto vars:     Size  Location     Type
 27053 ;;		None
 27054 ;; Return value:  Size  Location     Type
 27055 ;;                  1    wreg      void 
 27056 ;; Registers used:
 27057 ;;		None
 27058 ;; Tracked objects:
 27059 ;;		On entry : 0/0
 27060 ;;		On exit  : 0/0
 27061 ;;		Unchanged: 0/0
 27062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27067 ;;Total ram usage:        0 bytes
 27068 ;; Hardware stack levels used: 1
 27069 ;; This function calls:
 27070 ;;		Nothing
 27071 ;; This function is called by:
 27072 ;;		_can_msg_handler
 27073 ;; This function uses a non-reentrant model
 27074 ;;
 27075                           
 27076                           	psect	text111
 27077   0091D6                     __ptext111:
 27078                           	callstack 0
 27079   0091D6                     _GREEN_LED_OFF:
 27080                           	callstack 13
 27081   0091D6                     
 27082                           ;./common.h: 53:     LATA3 = 1;
 27083   0091D6  86BA               	bsf	16314,3,c	;volatile
 27084   0091D8  0012               	return		;funcret
 27085   0091DA                     __end_of_GREEN_LED_OFF:
 27086                           	callstack 0
 27087                           
 27088 ;; *************** function _BLUE_LED_ON *****************
 27089 ;; Defined at:
 27090 ;;		line 36 in file "./common.h"
 27091 ;; Parameters:    Size  Location     Type
 27092 ;;		None
 27093 ;; Auto vars:     Size  Location     Type
 27094 ;;		None
 27095 ;; Return value:  Size  Location     Type
 27096 ;;                  1    wreg      void 
 27097 ;; Registers used:
 27098 ;;		None
 27099 ;; Tracked objects:
 27100 ;;		On entry : 0/0
 27101 ;;		On exit  : 0/0
 27102 ;;		Unchanged: 0/0
 27103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27108 ;;Total ram usage:        0 bytes
 27109 ;; Hardware stack levels used: 1
 27110 ;; This function calls:
 27111 ;;		Nothing
 27112 ;; This function is called by:
 27113 ;;		_can_msg_handler
 27114 ;; This function uses a non-reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text112
 27118   0091DA                     __ptext112:
 27119                           	callstack 0
 27120   0091DA                     _BLUE_LED_ON:
 27121                           	callstack 13
 27122   0091DA                     
 27123                           ;./common.h: 37:     LATA2 = 0;
 27124   0091DA  94BA               	bcf	16314,2,c	;volatile
 27125   0091DC  0012               	return		;funcret
 27126   0091DE                     __end_of_BLUE_LED_ON:
 27127                           	callstack 0
 27128                           
 27129 ;; *************** function _BLUE_LED_OFF *****************
 27130 ;; Defined at:
 27131 ;;		line 40 in file "./common.h"
 27132 ;; Parameters:    Size  Location     Type
 27133 ;;		None
 27134 ;; Auto vars:     Size  Location     Type
 27135 ;;		None
 27136 ;; Return value:  Size  Location     Type
 27137 ;;                  1    wreg      void 
 27138 ;; Registers used:
 27139 ;;		None
 27140 ;; Tracked objects:
 27141 ;;		On entry : 0/0
 27142 ;;		On exit  : 0/0
 27143 ;;		Unchanged: 0/0
 27144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27149 ;;Total ram usage:        0 bytes
 27150 ;; Hardware stack levels used: 1
 27151 ;; This function calls:
 27152 ;;		Nothing
 27153 ;; This function is called by:
 27154 ;;		_can_msg_handler
 27155 ;; This function uses a non-reentrant model
 27156 ;;
 27157                           
 27158                           	psect	text113
 27159   0091DE                     __ptext113:
 27160                           	callstack 0
 27161   0091DE                     _BLUE_LED_OFF:
 27162                           	callstack 13
 27163   0091DE                     
 27164                           ;./common.h: 41:     LATA2 = 1;
 27165   0091DE  84BA               	bsf	16314,2,c	;volatile
 27166   0091E0  0012               	return		;funcret
 27167   0091E2                     __end_of_BLUE_LED_OFF:
 27168                           	callstack 0
 27169                           
 27170                           ;
 27171                           ; H/W Interrupt Vector Table @ 0x8
 27172                           ;
 27173                           
 27174                           	psect	ivt0x8
 27175   000008                     __pivt0x8:
 27176                           	callstack 0
 27177   000008                     ivt0x8_base:
 27178                           	callstack 0
 27179                           
 27180                           ; high-priority vector
 27181   000008  EFEB  F045         	goto	_interrupt_handler
 27182   000018                     	org	16
 27183                           
 27184                           ; low-priority vector
 27185   000018  00FF               	reset	
 27186                           
 27187                           	psect	rparam
 27188   000000                     
 27189                           	psect	config
 27190                           
 27191                           ;Config register CONFIG1L @ 0x300000
 27192                           ;	External Oscillator Selection
 27193                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 27194                           ;	Reset Oscillator Selection
 27195                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 27196   300000                     	org	3145728
 27197   300000  FA                 	db	250
 27198                           
 27199                           ;Config register CONFIG1H @ 0x300001
 27200                           ;	Clock out Enable bit
 27201                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 27202                           ;	PRLOCKED One-Way Set Enable bit
 27203                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 27204                           ;	Clock Switch Enable bit
 27205                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 27206                           ;	Fail-Safe Clock Monitor Enable bit
 27207                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 27208   300001                     	org	3145729
 27209   300001  FF                 	db	255
 27210                           
 27211                           ;Config register CONFIG2L @ 0x300002
 27212                           ;	MCLR Enable bit
 27213                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 27214                           ;	Power-up timer selection bits
 27215                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 27216                           ;	Multi-vector enable bit
 27217                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 27218                           ;	IVTLOCK bit One-way set enable bit
 27219                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 27220                           ;	Low Power BOR Enable bit
 27221                           ;	LPBOREN = OFF, ULPBOR disabled
 27222                           ;	Brown-out Reset Enable bits
 27223                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 27224   300002                     	org	3145730
 27225   300002  F7                 	db	247
 27226                           
 27227                           ;Config register CONFIG2H @ 0x300003
 27228                           ;	Brown-out Reset Voltage Selection bits
 27229                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 27230                           ;	ZCD Disable bit
 27231                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 27232                           ;	PPSLOCK bit One-Way Set Enable bit
 27233                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 27234                           ;	Stack Full/Underflow Reset Enable bit
 27235                           ;	STVREN = ON, Stack full/underflow will cause Reset
 27236                           ;	Debugger Enable bit
 27237                           ;	DEBUG = OFF, Background debugger disabled
 27238                           ;	Extended Instruction Set Enable bit
 27239                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 27240   300003                     	org	3145731
 27241   300003  FF                 	db	255
 27242                           
 27243                           ;Config register CONFIG3L @ 0x300004
 27244                           ;	WDT Period selection bits
 27245                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 27246                           ;	WDT operating mode
 27247                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 27248   300004                     	org	3145732
 27249   300004  9F                 	db	159
 27250                           
 27251                           ;Config register CONFIG3H @ 0x300005
 27252                           ;	WDT Window Select bits
 27253                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 27254                           ;	WDT input clock selector
 27255                           ;	WDTCCS = SC, Software Control
 27256   300005                     	org	3145733
 27257   300005  FF                 	db	255
 27258                           
 27259                           ;Config register CONFIG4L @ 0x300006
 27260                           ;	Boot Block Size selection bits
 27261                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 27262                           ;	Boot Block enable bit
 27263                           ;	BBEN = OFF, Boot block disabled
 27264                           ;	Storage Area Flash enable bit
 27265                           ;	SAFEN = OFF, SAF disabled
 27266                           ;	Application Block write protection bit
 27267                           ;	WRTAPP = OFF, Application Block not write protected
 27268   300006                     	org	3145734
 27269   300006  FF                 	db	255
 27270                           
 27271                           ;Config register CONFIG4H @ 0x300007
 27272                           ;	Boot Block Write Protection bit
 27273                           ;	WRTB = OFF, Boot Block not write-protected
 27274                           ;	Configuration Register Write Protection bit
 27275                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 27276                           ;	Data EEPROM Write Protection bit
 27277                           ;	WRTD = OFF, Data EEPROM not write-protected
 27278                           ;	SAF Write protection bit
 27279                           ;	WRTSAF = OFF, SAF not Write Protected
 27280                           ;	Low Voltage Programming Enable bit
 27281                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 27282   300007                     	org	3145735
 27283   300007  FF                 	db	255
 27284                           
 27285                           ;Config register CONFIG5L @ 0x300008
 27286                           ;	PFM and Data EEPROM Code Protection bit
 27287                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 27288   300008                     	org	3145736
 27289   300008  FF                 	db	255
 27290                           
 27291                           ;Config register CONFIG5H @ 0x300009
 27292                           ;	unspecified, using default values
 27293   300009                     	org	3145737
 27294   300009  FF                 	db	255
 27295                           tosu	equ	0x3FFF
 27296                           tosh	equ	0x3FFE
 27297                           tosl	equ	0x3FFD
 27298                           stkptr	equ	0x3FFC
 27299                           pclatu	equ	0x3FFB
 27300                           pclath	equ	0x3FFA
 27301                           pcl	equ	0x3FF9
 27302                           tblptru	equ	0x3FF8
 27303                           tblptrh	equ	0x3FF7
 27304                           tblptrl	equ	0x3FF6
 27305                           tablat	equ	0x3FF5
 27306                           prodh	equ	0x3FF4
 27307                           prodl	equ	0x3FF3
 27308                           indf0	equ	0x3FEF
 27309                           postinc0	equ	0x3FEE
 27310                           postdec0	equ	0x3FED
 27311                           preinc0	equ	0x3FEC
 27312                           plusw0	equ	0x3FEB
 27313                           fsr0h	equ	0x3FEA
 27314                           fsr0l	equ	0x3FE9
 27315                           wreg	equ	0x3FE8
 27316                           indf1	equ	0x3FE7
 27317                           postinc1	equ	0x3FE6
 27318                           postdec1	equ	0x3FE5
 27319                           preinc1	equ	0x3FE4
 27320                           plusw1	equ	0x3FE3
 27321                           fsr1h	equ	0x3FE2
 27322                           fsr1l	equ	0x3FE1
 27323                           bsr	equ	0x3FE0
 27324                           indf2	equ	0x3FDF
 27325                           postinc2	equ	0x3FDE
 27326                           postdec2	equ	0x3FDD
 27327                           preinc2	equ	0x3FDC
 27328                           plusw2	equ	0x3FDB
 27329                           fsr2h	equ	0x3FDA
 27330                           fsr2l	equ	0x3FD9
 27331                           status	equ	0x3FD8

Data Sizes:
    Strings     51
    Constant    263
    Data        9
    BSS         1319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      88
    BANK0           160    160     160
    BANK1           256    207     250
    BANK2           256      0     132
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    build_board_stat_msg@error_data	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_msg_handler@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_send@message	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    can_send_fp$0	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK1[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[32]), STR_9(CODE[12]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> bw(BANK1[2]), putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 

    FatFs@ff$F2407	PTR struct .[1] size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_mount@path(BANK0[2]), f_open@path(BANK1[2]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_chdir@fs(COMRAM[2]), f_mount@fs(BANK0[2]), f_open@fs(BANK1[2]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    get_board_unique_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 
		 -> f_open@path(BANK1[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_message_type@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    get_reset_board_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    i2c_read@data	PTR unsigned char  size(1) Largest target is 9
		 -> i2c_read_reg16@data(COMRAM[2]), i2c_read_reg8@data(BANK0[1]), read_flow_sensor_data@data(COMRAM[9]), 

    i2c_read_reg8@value	PTR unsigned char  size(2) Largest target is 4095
		 -> data_ready@status(COMRAM[1]), fxls_get_prod_rev@res(BANK0[1]), fxls_get_whoami@res(BANK0[1]), fxls_init@buf_config1(BANK0[1]), 
		 -> fxls_init@int_en(BANK0[1]), fxls_init@int_pin_sel(BANK0[1]), fxls_init@sens_config1(BANK0[1]), fxls_init@sens_config2(BANK0[1]), 
		 -> fxls_init@sens_config3(BANK0[1]), fxls_init@sys_mode(BANK0[1]), fxls_read_accel_data@x_lsb(COMRAM[1]), fxls_read_accel_data@x_msb(COMRAM[1]), 
		 -> fxls_read_accel_data@y_lsb(COMRAM[1]), fxls_read_accel_data@y_msb(COMRAM[1]), fxls_read_accel_data@z_lsb(COMRAM[1]), fxls_read_accel_data@z_msb(COMRAM[1]), 
		 -> RAM(DATA[4095]), 

    i2c_write@data	PTR const unsigned char  size(1) Largest target is 3
		 -> i2c_read_reg16@reg(COMRAM[1]), i2c_read_reg8@reg(BANK0[1]), i2c_write_reg16@data(COMRAM[3]), i2c_write_reg8@data(BANK0[2]), 
		 -> read_flow_sensor_data@start_cmd(COMRAM[2]), read_flow_sensor_data@stop_cmd(COMRAM[2]), 

    info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), pb$fp(COMRAM[3]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    ioInfo$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[100]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 100
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[100]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S1056$0$0	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    S1056$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1056$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2136$3$0	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    S2136$4$0	PTR void  size(2) Largest target is 0

    S2136$5$0	PTR void  size(2) Largest target is 0

    S2136$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S2136$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S2136$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S2136$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S2136$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S2136$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    S2136$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S2136$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S2367$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2374$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2383$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2393$fp	PTR struct . size(2) Largest target is 0

    S3656SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    S5715$buffer	PTR unsigned char  size(2) Largest target is 0

    S5715$source	PTR const unsigned char  size(2) Largest target is 0

    S978$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorRead@info(BANK0[13]), 

    SD_SPI_AsyncReadTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorWrite@info(BANK0[13]), 

    SD_SPI_AsyncWriteTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[32]), STR_9(CODE[12]), NULL(NULL[0]), 

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[32]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    spiMaster$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    spiMaster$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> send_status_ok@text(BANK1[32]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    validate$3131	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK0[2]), f_read@fs(COMRAM[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK1[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_reset_board_id
    _get_reset_board_id->_get_message_type

Critical Paths under _main in BANK0

    _txb_init->_srb_init
    _srb_init->___lwdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _f_write->_create_chain
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _ld_clust->_ld_word
    _dir_find->_dir_next
    _create_name->_mem_set
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _send_status_err->_build_board_stat_msg
    _can_send->_memcpy
    _build_board_stat_msg->_millis
    _fxls_init->_i2c_read_reg8
    _i2c_write_reg8->_i2c_write
    _fxls_get_whoami->_i2c_read_reg8
    _fxls_get_prod_rev->_i2c_read_reg8
    _i2c_read_reg8->_i2c_read
    _i2c_read_reg8->_i2c_write
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_send_status_ok
    _send_status_ok->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0 1623016
                                            192 BANK1     15    15      0
                    _ADCC_Initialize
                 _SET_ACCEL_I2C_ADDR
                  _SYSTEM_Initialize
         _can_generate_timing_params
                           _can_init
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
                  _fxls_get_prod_rev
                    _fxls_get_whoami
                          _fxls_init
                           _i2c_init
                             _millis
                    _send_status_err
                     _send_status_ok
                        _timer0_init
                           _txb_init
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    1904
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1420
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      47    47      0  767795
                                            145 BANK1     47    47      0
                    _BLUE_LED_TOGGLE
               _build_board_stat_msg
                           _can_send
                            _f_close
                             _f_open
                            _f_write
                             _millis
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    4316
                                             29 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    3830
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3369
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8   86756
                                             23 BANK1     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5  602578
                                             65 BANK1     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10   57970
                                            148 BANK0     10     0     10
                                              0 BANK1     15    15      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4  209880
                                             51 BANK1     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2060
                                              7 BANK0     12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2  170784
                                            158 BANK0      2     2      0
                                             45 BANK1      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         22    18      4    4355
                                              8 BANK0     22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     307
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2  195407
                                             57 BANK1      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    1008
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4  169739
                                             45 BANK1     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             30    24      6   31380
                                            141 BANK0     16    10      6
                                              0 BANK1     10    10      0
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            30    26      4  115254
                                            154 BANK0      4     0      4
                                             23 BANK1     22    22      0
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (6) _dir_clear                                           18    12      6   24662
                                            104 BANK0     18    12      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (3) _clst2sect                                           12     6      6    2234
                                             12 BANK0     12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        29    23      6   59336
                                            148 BANK0      6     0      6
                                              0 BANK1     23    23      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             33    23     10   29410
                                            115 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6   27404
                                            115 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_close                                              5     3      2   65928
                                            122 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                              11     9      2   64396
                                            115 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4    1147
                                              2 BANK0     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   25589
                                            104 BANK0     11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _st_dword                                             6     0      6    1889
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _mem_set                                              8     2      6    1750
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                           5     2      3     245
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    1728
                                              4 BANK0      9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (5) _st_word                                              4     0      4    1033
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BLUE_LED_TOGGLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_err                                     11    11      0    8091
                                             23 BANK0     11    11      0
                     _RED_LED_TOGGLE
               _build_board_stat_msg
                           _can_send
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _can_send                                             4     2      2    2890
                                             11 BANK0      4     2      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5039
                                              8 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3606
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RED_LED_TOGGLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fxls_init                                           10    10      0    9167
                                             12 BANK0     10    10      0
                           _i2c_init
                      _i2c_read_reg8
                     _i2c_write_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_write_reg8                                       5     3      2    2891
                                              6 BANK0      5     3      2
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _fxls_get_whoami                                      1     1      0    5804
                                             12 BANK0      1     1      0
                           _i2c_init
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _fxls_get_prod_rev                                    1     1      0    5804
                                             12 BANK0      1     1      0
                           _i2c_init
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_read_reg8                                        6     3      3    5705
                                              6 BANK0      6     3      3
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            6     4      2    1461
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             6     4      2     921
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5   67514
                                            135 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   65606
                                            122 BANK0     13     8      5
                                              0 BANK1     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1250
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     892
                                              0 BANK0     13    11      2
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          2     2      0      74
                                              0 BANK0      2     2      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                      2     2      0    7954
                                             84 BANK0      2     2      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_MediaInitialize                              50    50      0    7883
                                             34 BANK0     50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     996
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_DelayMilliseconds                             5     5      0      96
                                              1 BANK0      5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (4) _check_fs                                             7     1      6   25395
                                            115 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   22470
                                            104 BANK0     11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2   10333
                                             85 BANK0     19    17      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8    9623
                                             75 BANK0     10     2      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorWrite                                  27    19      8    7299
                                             48 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncWriteTasks                              14    13      1    6165
                                             34 BANK0     14    13      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           10     2      8    9115
                                             72 BANK0     10     2      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorRead                                   27    19      8    7601
                                             45 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncReadTasks                               11    10      1    6479
                                             34 BANK0     11    10      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     407
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeBlock                                   6     2      4     390
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SD_SendCmd                                          23    18      5    5084
                                             11 BANK0     23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6    2428
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SDSLOW_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SDFAST_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (6) _SPI1_Open                                            2     2      0     155
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6    1045
                                              0 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1210
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     541
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6     862
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_ACCEL_I2C_ADDR                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _interrupt_handler                                   2     2      0    4912
                                             42 COMRAM     2     2      0
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (16) _timer0_handle_interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _can_handle_interrupt                               26    26      0    4912
                                             16 COMRAM    26    26      0
                                NULL *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (17) i2_memcpy                                           11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (17) _can_msg_handler                                     9     8      1    4415
                                              9 COMRAM     7     6      1
                       _BLUE_LED_OFF
                        _BLUE_LED_ON
                      _GREEN_LED_OFF
                       _GREEN_LED_ON
                        _RED_LED_OFF
                         _RED_LED_ON
                _get_board_unique_id
                   _get_message_type
                 _get_reset_board_id
 ---------------------------------------------------------------------------------
 (18) _get_reset_board_id                                  5     3      2    2109
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (19) _get_message_type                                    4     2      2    1944
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) _get_board_unique_id                                 1     0      1     120
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (18) _RED_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _RED_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_ON                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_OFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_Initialize
   _SET_ACCEL_I2C_ADDR
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _can_generate_timing_params
   _can_init
   _f_close
     _f_sync
       _disk_write
         _SD_SPI_SectorWrite
           _SDFAST_open *
             _SPI1_Open
           _SDSLOW_open *
             _SPI1_Open
           _SD_SPI_AsyncWriteTasks *
             _SD_SendCmd
               _SPI1_ExchangeByte *
               _memcpy *
             _SPI1_ExchangeBlock *
             _SPI1_ExchangeByte *
           _SPI1_Close *
       _move_window
         _disk_read
           _SD_SPI_SectorRead
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_AsyncReadTasks *
               _SD_SendCmd
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
               _memset *
             _SPI1_Close *
         _sync_window
           _disk_write
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
         _disk_write
         _mem_set
         _st_dword
         _st_word
         _sync_window
       _validate
         _disk_status
           _SD_SPI_IsMediaInitialized
           _SD_SPI_IsMediaPresent
           _SD_SPI_IsWriteProtected
     _validate
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _ld_word
         _mem_cmp
         _move_window
       _disk_initialize
         _SD_SPI_MediaInitialize
           _SDFAST_open *
           _SDSLOW_open *
           _SD_SPI_DelayMilliseconds *
             _SPI1_ExchangeByte *
           _SD_SendCmd *
           _SPI1_Close *
           _SPI1_ExchangeByte *
           ___lmul *
       _disk_status
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
     _get_ldnumber
   _f_open
     _clst2sect
       ___lmul
     _dir_register
       _dir_alloc
         _dir_next
           _clst2sect
           _create_chain
             _get_fat
               _ld_dword
               _ld_word
               _move_window
             _put_fat
               _ld_dword
               _move_window
               _st_dword
               _st_word
           _dir_clear
             _clst2sect
             _disk_write
             _mem_set
             _sync_window
           _get_fat
         _dir_sdi
           _clst2sect
           _get_fat
         _move_window
       _mem_cpy
       _mem_set
       _move_window
     _disk_read
     _find_volume
     _follow_path
       _create_name
         _chk_chr
         _dbc_1st
         _dbc_2nd
         _mem_set
       _dir_find
         _dir_next
         _dir_sdi
         _mem_cmp
         _move_window
       _dir_sdi
       _ld_clust
         _ld_word
     _get_fat
     _ld_clust
     _ld_dword
     _mem_set
     _move_window
     _remove_chain
       _get_fat
       _put_fat
     _st_clust
     _st_dword
   _f_write
     _clst2sect
     _create_chain
     _disk_read
     _disk_write
     _mem_cpy
     _validate
   _fxls_get_prod_rev
     _i2c_init
     _i2c_read_reg8
       _i2c_read
       _i2c_write
   _fxls_get_whoami
     _i2c_init
     _i2c_read_reg8
   _fxls_init
     _i2c_init
     _i2c_read_reg8
     _i2c_write_reg8
       _i2c_write
   _i2c_init
   _millis
   _send_status_err
     _RED_LED_TOGGLE
     _build_board_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _can_send
       _memcpy
     _millis
   _send_status_ok
     _BLUE_LED_TOGGLE
     _build_board_stat_msg
     _can_send
     _f_close
     _f_open
     _f_write
     _millis
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _timer0_init
   _txb_init
     _srb_init
       ___lwdiv

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     NULL(Fake) *
     _can_msg_handler *
       _BLUE_LED_OFF
       _BLUE_LED_ON
       _GREEN_LED_OFF
       _GREEN_LED_ON
       _RED_LED_OFF
       _RED_LED_ON
       _get_board_unique_id
       _get_message_type
       _get_reset_board_id
         _get_message_type
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     455      81       27.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhlh    1F7      0       0      54        0.0%
BITBIGSFRlhhhll    19C      0       0      72        0.0%
BITBIGSFRlhhhlh    162      0       0      44        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      84       9       51.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CF      FA       7       97.7%
BITBIGSFRlhl        B2      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhhhlh     80      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      58       1       92.6%
BITBIGSFRlhhhlh     5B      0       0      56        0.0%
BITBIGSFRlhhhlh     4D      0       0      49        0.0%
BITBIGSFRlhhhlh     31      0       0      64        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhlh     2A      0       0      61        0.0%
BITBIGSFRlhhhlh     29      0       0      53        0.0%
BITBIGSFRhhll       26      0       0      39        0.0%
BITBIGSFRlhhhll     22      0       0      76        0.0%
BITBIGSFRlhhhlh     1C      0       0      58        0.0%
BITBIGSFRlhhhlh     1A      0       0      68        0.0%
BITBIGSFRlhhhlh     11      0       0      67        0.0%
BITBIGSFRhhlhh       D      0       0      37        0.0%
BITBIGSFRlhhhlh      B      0       0      55        0.0%
BITBIGSFRlhhhlh      B      0       0      60        0.0%
BITBIGSFRlhhhlh      B      0       0      59        0.0%
BITBIGSFRlhhhlh      B      0       0      70        0.0%
BITBIGSFRlhhhll      9      0       0      74        0.0%
BITBIGSFRlhhhhh      7      0       0      40        0.0%
BITBIGSFRhhlhl       5      0       0      38        0.0%
BITBIGSFRlhhhlh      4      0       0      47        0.0%
BITBIGSFRlhhhlh      2      0       0      50        0.0%
BITBIGSFRlhhhlh      2      0       0      51        0.0%
BITBIGSFRlhhhlh      2      0       0      57        0.0%
BITBIGSFRlhhhll      2      0       0      73        0.0%
BITBIGSFRlhhhll      2      0       0      75        0.0%
BITBIGSFRlhhhhl      2      0       0      41        0.0%
BITBIGSFRlhhl        2      0       0      77        0.0%
BITBIGSFRll          2      0       0      79        0.0%
BITBIGSFRlhhhlh      1      0       0      63        0.0%
BITBIGSFRlhhhlh      1      0       0      48        0.0%
BITBIGSFRlhhhlh      1      0       0      45        0.0%
BITBIGSFRlhhhlh      1      0       0      46        0.0%
BITBIGSFRlhhhlh      1      0       0      52        0.0%
BITBIGSFRlhhhlh      1      0       0      62        0.0%
BITBIGSFRlhhhlh      1      0       0      65        0.0%
BITBIGSFRlhhhlh      1      0       0      66        0.0%
BITBIGSFRlhhhlh      1      0       0      69        0.0%
BITBIGSFRlhhhlh      1      0       0      43        0.0%
BITBIGSFRlhhhll      1      0       0      71        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     276      80        0.0%
DATA                 0      0     6CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 28 15:13:29 2024

                SD_SPI_SectorWrite@result 009A                        ??_get_message_type 0003  
                       _SPI1_ExchangeByte 8FFC                              srb_init@pool 0069  
                             get_fat@clst 00D5                  SD_SPI_SectorWrite@status 009B  
           SD_SPI_MediaInitialize@timeout 00B2                        _SPI1_ExchangeBlock 81D4  
                            create_name@c 007D                              create_name@d 0072  
                            create_name@i 0077                              create_name@p 0075  
                        get_ldnumber@path 0060            SD_SPI_MediaInitialize@response 00AD  
                                      l71 6A12                                        l75 7598  
                            ___awdiv@sign 0065                        ?_SPI1_ExchangeByte 0001  
                                      _bw 01F8     timer0_handle_interrupt@internal_count 004F  
                          ??_dir_register 00FE                   ??_SD_SPI_IsMediaPresent 0060  
                        disk_write@sector 00AD                             create_name@dp 0068  
                           create_name@ni 0073                             create_name@si 007B  
                          create_chain@cs 0113                            create_chain@fs 0111  
                   build_board_stat_msg@i 0075                                       l203 8548  
                                     l116 8FD4                                       l119 90CC  
                                     l234 6526                                       l183 8F12  
                                     l248 8EDA                                       l292 76A0  
                                     l802 8D66                                       l811 893C  
                                     l820 88D4                                       l653 8A66  
               SD_SPI_AsyncReadTasks@info 0082                                       l903 66F0  
                                     l824 9074                                       l912 5CF8  
                                     l825 908C                                       l762 91B2  
                                     l922 4BEA                                       l915 5CFC  
                                     l852 8E2A                                       l940 4F8E  
                                     l909 7E06                                       l861 84C6  
                                     l925 4F7E                                       l759 91AA  
                                     l855 8120                                       l927 4BF6  
                                     l919 7D32                                       l872 8EA0  
                                     l793 8726                                       l961 3874  
                                     l945 342E                                       l858 8F7E  
                                     l970 5886                                       l867 85C8  
                                     l891 9198                                       l964 3902  
                                     l878 83AE                                       l879 83B6  
                                     l887 86B2                                       l895 918C  
                                     l993 33DE                                       l898 66EC  
                                     l995 2F5A                       ?_SPI1_ExchangeBlock 0060  
                                     _Fil 04B7                                       _abs 8F14  
                                     _buf 01EE                                       _ctx 01D3  
                            ___awmod@sign 0065                       ??_SPI1_ExchangeByte 0060  
                            disk_read@res 00B1                            ??_create_chain 0100  
            write_timestamp_3bytes@output 0064                                       tosl 3FFD  
                                     wreg 3FE8                   __end_of_fxls_get_whoami 90EC  
              get_reset_board_id@msg_type 0008                   SPI1_ExchangeBlock@block 0060  
                  main@last_status_millis 01C4                SD_SPI_AsyncReadTasks@bData 008C  
                          create_name@sfn 0079                           create_chain@obj 00F4  
                         create_chain@ncl 010D                           create_chain@scl 0109  
                         create_chain@res 0108                               ld_clust@dir 0069  
                ??_write_timestamp_3bytes 0066                            ??_GREEN_LED_ON 0001  
                                    l1102 8C7E                                      l1016 338E  
                                    l1201 6E54                                      l1017 33CE  
                                    l1025 6FAC                                      l1042 5390  
                                    l1106 6898                                      l1211 0ED0  
                                    l2011 7884                                      l2003 780E  
                                    l1019 33C6                                      ?_abs 0066  
                                    l2012 78A8                                      l1116 79AA  
                                    l1126 42B2                                      l1310 2708  
                                    l1302 224A                                      l2023 8FFA  
                                    l2032 89A2                                      l1048 5252  
                                    l1304 222A                                      l2210 8DEC  
                                    l3002 7F9C                                      l1251 0860  
                                    l1075 4658                                      l1067 4724  
                                    l1245 06B2                                      l1093 6CF2  
                                    l1173 5598                                      l3013 91E2  
                                    l2230 90EA                                      l1094 6CF4  
                                    l1182 5644                                      l2143 91BC  
                                    l1175 5582                                      l2207 7C56  
                                    l1256 0C06                                      l2224 735C  
                                    l1272 746C                                      l2161 91C0  
                                    l1273 7486                                      l1186 6B84  
                                    l1098 8440                                      l1362 1560  
                                    l1611 1F3E                                      l1195 6B76  
                                    l2227 9108                                      l1267 7438  
                                    l1363 124C                                      l1355 1722  
                                    l2164 9126                                      l2260 885C  
                                    l1284 272C                                      l1605 8794  
                                    l2261 886C                                      l1621 1838  
                                    l1277 7B78                                      l1551 91C8  
                                    l1391 5F26                                      l1295 204C  
                                    l1296 203A                                      l1384 16DA  
                                    l1289 2708                                      l1810 9180  
                                    l2186 5A58                                      l2283 831E  
                                    l1563 7230                                      l1651 1B50  
                                    l2276 830E                                      l1572 71DC  
                                    l1564 71A0                                      l1580 70EE  
                                    l1813 9158                                      l1717 2DF2  
                                    l1581 705E                                      l1397 8BD4  
                                    l1910 91B8                                      l1903 9140  
                                    l1816 906A                                      l1680 4774  
                                    l1648 1AD2                                      l2480 8062  
                                    l1913 900C                                      l1921 8214  
                                    l1745 2D00                                      l1762 3D8A  
                                    l1754 3908                                      l1738 2C26  
                                    l1594 916E                                      l1907 7A98  
                                    l1915 901C                                      l1771 3DF2  
                                    l1916 9020                                      l2740 8636  
                                    l1773 3E08                                      l1925 8278  
                                    l1589 709A                                      l1597 91C4  
                                    l2493 81D2                                      l1678 4B76  
                                    l1873 8AC6                                      l2747 863E  
                                    l2932 8A04                                      l2926 8B22  
                                    l1978 8FAE                                      l1994 7780  
                                    l1986 771A                                      l1995 77A4  
                                    l2939 8DAA                                      l2990 8F48  
                                    l2983 8D1E                                      l2977 6138  
                                    l2987 8F30                                      l9907 8F14  
                                    l9909 8F24                                      STR_1 FFCC  
                                    STR_2 FFCC                                      STR_3 FFFB  
                                    STR_4 FFFB                                      STR_5 FFF0  
                                    STR_6 FFF0                                      STR_7 FFE6  
                                    STR_8 FFE7                                      STR_9 FFDB  
                                    _LATA 3FBA                                      _LATB 3FBB  
                                    _LATC 3FBC                                      _PMD0 39C0  
                                    _PMD1 39C1                                      _PMD2 39C2  
                                    _PMD3 39C3                                      _PMD4 39C4  
                                    _PMD5 39C5                                      _PMD6 39C6  
                                    _PMD7 39C7                                      _PIR5 39A5  
                                    i2l92 62CE                                      i2l84 615A  
                                    i2l86 6156                                      i2l95 62E2  
                                    i2l87 6190                                      i2l88 6332  
                                    i2l97 62F6                                      i2l89 622E  
                                    i2l98 6332                                      i2l99 630A  
                                    _WPUA 3A41                                      _WPUB 3A51  
                                    _WPUC 3A61                                      _WPUE 3A81  
                                    _Fsid 01E0              __end_of_build_board_stat_msg 76A2  
                             ?_RED_LED_ON 0001                                      abs@a 0066  
                           _i2c_read_reg8 893E         SD_SPI_MediaInitialize@CSDResponse 008D  
                                    _dbuf 0200                                      _main 5888  
                            find_volume@i 0135                                      _prec 01DC  
                                    fsr0h 3FEA                                      fsr1h 3FE2  
                                    indf0 3FEF                                      fsr2h 3FDA  
                                    fsr0l 3FE9                                      indf1 3FE7  
                                    indf2 3FDF                                      fsr1l 3FE1  
                                    fsr2l 3FD9                      ??_SPI1_ExchangeBlock 0064  
                             ld_dword@ptr 0060                             disk_ioctl@cmd 0060  
                           disk_read@buff 00A8                             disk_read@pdrv 00B0  
                                    prodh 3FF4                                      prodl 3FF3  
                          ??_get_ldnumber 0062                          ??_RED_LED_TOGGLE 0060  
                                    start 001A                 __end_of_SPI1_ExchangeByte 9022  
                            ?_follow_path 0133                              ___param_bank 0000  
                         create_name@path 006A                          create_chain@clst 00F6  
                                   ??_abs 0068                           ??_GREEN_LED_OFF 0001  
                       i2c_write_reg8@reg 0066                         i2c_write_reg8@val 0067  
                             _sync_window 6528                              ?_SDFAST_open 0001  
           __end_of_OSCILLATOR_Initialize 915A                                     l14001 89E2  
                                   l14003 89E8                                     l14011 6FD8  
                                   l14005 91B4                                     l14021 7060  
                                   l14013 6FFA                                     l14031 7096  
                                   l14023 706E                                     l14015 7016  
                                   l14007 6FAE                                     l14121 4928  
                                   l14201 71C0                                     l14033 709C  
                                   l14025 707E                                     l14017 7058  
                                   l14009 6FC0                                     l14131 49BC  
                                   l14123 4944                                     l14115 48EA  
                                   l14051 473C                                     l14043 4726  
                                   l14211 7212                                     l14035 70D0  
                                   l15011 437C                                     l15003 4330  
                                   l14133 4A28                                     l14125 494C  
                                   l14117 4900                                     l14109 48D6  
                                   l14061 47BC                                     l14053 4752  
                                   l14045 472A                                     l14205 71C8  
                                   l14213 7218                                     l14029 7086  
                                   l14037 70D6                                     l14221 887C  
                                   l14301 848C                                     l15013 43B6  
                                   l15021 443A                                     l15005 4348  
                                   l15101 7FE0                                     l14151 4A6A  
                                   l14135 4A3E                                     l14127 4966  
                                   l14119 4912                                     l14063 47C0  
                                   l14055 4762                                     l14215 722E  
                                   l14207 71D8                                     l14039 70EC  
                                   l14231 88D2                                     l14223 88B0  
                                   l14311 7D3A                                     l14303 849E  
                                   l15031 4518                                     l15023 44B4  
                                   l15015 4420                                     l15111 8016  
                                   l15103 7FF2                                     l14153 4A80  
                                   l14137 4A4E                                     l14129 49AA  
                                   l14081 4832                                     l14073 480C  
                                   l14065 47E6                                     l14057 478E  
                                   l14049 4730                                     l14209 71DE  
                                   l14241 8922                                     l14225 88BA  
                                   l14321 7DDA                                     l14313 7D6A  
                                   l16001 09BC                                     l14305 84A2  
                                   l14401 4EF8                                     l15041 4578  
                                   l15033 4534                                     l15025 44F6  
                                   l15009 434E                                     l15201 85AC  
                                   l15113 802C                                     l15105 7FFA  
                                   l15121 8042                                     l14171 4AF4  
                                   l14155 4A82                                     l14091 48B0  
                                   l14083 484A                                     l14075 481E  
                                   l14067 47F8                                     l14059 4792  
                                   l14235 88DA                                     l14219 8872  
                                   l14251 6528                                     l14323 7DDE  
                                   l14315 7D7A                                     l14331 8814  
                                   l16011 0A6C                                     l14307 84B0  
                                   l15211 5B02                                     l14411 3400  
                                   l15051 45E8                                     l15027 4512  
                                   l15203 85B0                                     l15123 8052  
                                   l15115 8034                                     l15107 8002  
                                   l15131 8128                                     l13701 8ADC  
                                   l14173 4B2A                                     l14165 4ACE  
                                   l14157 4AB8                                     l14149 4A5A  
                                   l14093 48BE                                     l14085 4854  
                                   l14069 4806                                     l14181 4B34  
                                   l14237 88E4                                     l14245 892C  
                                   l14229 88C4                                     l14261 663E  
                                   l14253 652E                                     l14317 7D8A  
                                   l14325 7E04                                     l14309 7D34  
                                   l14333 8822                                     l16021 0B10  
                                   l16101 76B0                                     l14341 8E70  
                                   l15213 5B1E                                     l15221 5CC4  
                                   l15205 5AC4                                     l14405 4F54  
                                   l14501 2E4A                                     l15061 4608  
                                   l15037 453A                                     l15301 67F6  
                                   l15125 805A                                     l15117 8036  
                                   l15109 8010                                     l15141 8158  
                                   l15133 8136                                     l14271 8E22  
                                   l13711 9000                                     l13703 8AEC  
                                   l14175 4B2E                                     l14167 4ADC  
                                   l14159 4AC6                                     l14087 488E  
                                   l14191 7158                                     l14183 70F0  
                                   l14247 893A                                     l14239 8918  
                                   l14263 665C                                     l14255 654A  
                                   l14319 7DD0                                     l14335 8832  
                                   l16031 0CBC                                     l16023 0BC0  
                                   l16007 09E0                                     l16111 76CC  
                                   l16103 76B6                                     l14343 8E82  
                                   l15223 5CF2                                     l15215 5C08  
                                   l15207 5AD4                                     l14431 3500  
                                   l14423 34C0                                     l14415 3436  
                                   l14407 33E0                                     l14511 2EE6  
                                   l14503 2E60                                     l14351 7CA8  
                                   l15055 45EE                                     l15047 4590  
                                   l15039 4564                                     l15231 6BC0  
                                   l15303 681C                                     l15119 803C  
                                   l15151 819E                                     l15143 816A  
                                   l15135 813E                                     l13721 7A90  
                                   l13713 9006                                     l13705 8AF0  
                                   l14169 4AF2                                     l14089 489E  
                                   l14193 719A                                     l14185 7102  
                                   l14257 65A4                                     l14265 66E6  
                                   l14337 883C                                     l14329 8802  
                                   l16041 0D5C                                     l16033 0CCC  
                                   l16017 0A8E                                     l16009 0A1E  
                                   l16121 76FC                                     l16113 76D0  
                                   l16105 76B8                                     l14281 8F4A  
                                   l14345 8E88                                     l15217 5C6A  
                                   l15209 5AE4                                     l14361 4B90  
                                   l14433 3538                                     l14425 34E4  
                                   l14417 3448                                     l14409 33E6  
                                   l14601 332A                                     l14505 2E8A  
                                   l15081 4722                                     l15049 45D0  
                                   l15241 6C20                                     l15233 6BD0  
                                   l15401 4112                                     l15321 3E4C  
                                   l15161 81CA                                     l15153 81A6  
                                   l15145 8172                                     l15137 8142  
                                   l15129 8122                                     l16201 8620  
                                   l13715 79B0                                     l13803 91AC  
                                   l13707 8B02                                     l13731 3924  
                                   l14099 48C4                                     l14187 711A  
                                   l14259 65B4                                     l14275 8064  
                                   l16051 0E9A                                     l16043 0D8C  
                                   l16035 0CDE                                     l16019 0AFE  
                                   l16131 7750                                     l16123 770C  
                                   l16115 76DC                                     l16107 76BA  
                                   l14283 8F5C                                     l14339 8E68  
                                   l14291 8442                                     l15219 5CB4  
                                   l14363 4BAC                                     l14451 3670  
                                   l14443 35D2                                     l14435 354A  
                                   l14427 34E8                                     l14419 34AC  
                                   l14603 3378                                     l14531 2FB2  
                                   l14515 2EFC                                     l14523 2F6A  
                                   l14507 2E9E                                     l14355 7CBC  
                                   l14347 7C58                                     l14611 6E72  
                                   l15075 467E                                     l15067 4628  
                                   l15251 6CB2                                     l15243 6C56  
                                   l15235 6BD8                                     l15227 6B86  
                                   l15403 4134                                     l15331 3EBA  
                                   l15323 3E5E                                     l15315 3E0A  
                                   l15307 686A                                     l15091 7FBA  
                                   l15155 81AC                                     l15147 817A  
                                   l15139 8150                                     l15171 7F04  
                                   l16211 8CE0                                     l16203 8628  
                                   l14269 8DEE                                     l13717 79C0  
                                   l13725 7A96                                     l13709 8B06  
                                   l13741 3A4C                                     l13733 3974  
                                   l14197 71A2                                     l14189 713C  
                                   l13821 277C                                     l13813 2738  
                                   l15501 6CF6                                     l14701 1870  
                                   l15181 8D2E                                     l14277 8110  
                                   l16053 0EB8                                     l16045 0DCA  
                                   l16037 0D08                                     l16029 0C76  
                                   l16109 76C0                                     l17101 72BE  
                                   l14285 8F62                                     l14293 8454  
                                   l16061 5D16                                     l14381 4D2C  
                                   l14373 4C84                                     l14365 4BD6  
                                   l14461 3752                                     l14453 3696  
                                   l14445 35F6                                     l14437 355A  
                                   l14429 34F6                                     l14605 33A2  
                                   l14541 3064                                     l14533 2FE6  
                                   l14525 2F8C                                     l14517 2F18  
                                   l14509 2ECA                                     l14349 7C66  
                                   l14621 6EEA                                     l15077 46C0  
                                   l15253 6CCC                                     l15245 6C8A  
                                   l15237 6C0C                                     l15229 6B9E  
                                   l15413 4178                                     l15405 4138  
                                   l15341 3F12                                     l15333 3ECC  
                                   l15325 3E66                                     l15317 3E22  
                                   l15309 6884                                     l15261 83B8  
                                   l16301 1F8C                                     l15093 7FBE  
                                   l15085 7F9E                                     l15149 8188  
                                   l15157 81B2                                     l15173 7F20  
                                   l15165 7ED8                                     l16213 8CF2  
                                   l16205 862A                                     l13719 7A8C  
                                   l13751 3B2C                                     l13743 3AA2  
                                   l13735 39AA                                     l14199 71B0  
                                   l13911 2B5E                                     l13903 2AD2  
                                   l13831 27FE                                     l13823 2780  
                                   l13815 2744                                     l13807 272E  
                                   l15511 6D80                                     l15503 6D22  
                                   l14711 18C8                                     l14703 1888  
                                   l15191 8D64                                     l15183 8D42  
                                   l16047 0E08                                     l16039 0D4C  
                                   l16151 77BE                                     l16143 77AA  
                                   l16135 776C                                     l16119 76F8  
                                   l16127 772E                                     l17111 72FA  
                                   l17103 72D0                                     l16231 7516  
                                   l16223 749C                                     l14287 8F68  
                                   l15271 8C2C                                     l14295 845A  
                                   l16063 5D26                                     l14391 4DB2  
                                   l14383 4D64                                     l14375 4CB4  
                                   l14367 4BFE                                     l14359 4B78  
                                   l14471 37EE                                     l14463 3768  
                                   l14455 3700                                     l14447 3604  
                                   l14439 35BE                                     l14607 33B2  
                                   l14551 30F0                                     l14543 307C  
                                   l14535 2FFE                                     l14519 2F2C  
                                   l14631 6F38                                     l14623 6EF8  
                                   l14615 6E78                                     l15079 46E6  
                                   l15255 6CDC                                     l15431 41F6  
                                   l15415 418A                                     l15407 4152  
                                   l15351 3F5E                                     l15343 3F24  
                                   l15335 3EE6                                     l15327 3E94  
                                   l15319 3E30                                     l15263 83D8  
                                   l16311 1FCE                                     l16303 1F94  
                                   l15095 7FCC                                     l15087 7FA4  
                                   l15159 81C2                                     l15175 7F52  
                                   l15167 7EEA                                     l16215 8D14  
                                   l16207 8630                                     l13761 3B8A  
                                   l13753 3B32                                     l13745 3AB6  
                                   l13737 39E0                                     l13729 390A  
                                   l13921 2C12                                     l13913 2B6E  
                                   l13905 2AE8                                     l13841 286E  
                                   l13833 2810                                     l13825 27B6  
                                   l13817 275A                                     l13809 2732  
                                   l15521 6DE0                                     l15505 6D4E  
                                   l14641 8744                                     l14801 1BC4  
                                   l14721 1926                                     l14705 18B0  
                                   l15185 8D4C                                     l16049 0E88  
                                   l16161 77F0                                     l16153 77C4  
                                   l16145 77B4                                     l16137 7770  
                                   l16129 7742                                     l17121 7330  
                                   l17113 72FE                                     l17105 72D6  
                                   l16233 7540                                     l16225 74BA  
                                   l16241 8FB0                                     l14289 8F7A  
                                   l15273 8C46                                     l14297 8468  
                                   l16081 5E10                                     l16073 5DBA  
                                   l16065 5D40                                     l14385 4D72  
                                   l14377 4CB8                                     l14369 4C10  
                                   l14473 38C0                                     l14465 37DA  
                                   l14449 3644                                     l14561 3160  
                                   l14553 311A                                     l14545 309C  
                                   l14537 3028                                     l14529 2FA2  
                                   l14633 6F82                                     l14625 6F00  
                                   l14617 6EA4                                     l14609 6E56  
                                   l15257 6CEE                                     l15249 6CAA  
                                   l15433 4208                                     l15425 41D2  
                                   l15417 418E                                     l15353 3F6E  
                                   l15345 3F34                                     l15337 3EF8  
                                   l15329 3EB6                                     l15281 672C  
                                   l15265 83F6                                     l16401 250A  
                                   l16321 201C                                     l16313 1FE4  
                                   l16305 1FAC                                     l15097 7FD4  
                                   l15089 7FB2                                     l15169 7EFA  
                                   l15601 601A                                     l16209 8CD4  
                                   l18001 5930                                     l13771 3C4A  
                                   l13763 3BC6                                     l13755 3B42  
                                   l13747 3AEA                                     l13739 3A16  
                                   l13931 2C5E                                     l13915 2B84  
                                   l13907 2AF2                                     l13843 2880  
                                   l13851 2894                                     l13827 27CC  
                                   l13835 2826                                     l13819 2774  
                                   l15523 6E14                                     l15515 6D86  
                                   l14643 8778                                     l14723 195E  
                                   l14707 18C2                                     l15179 8D24  
                                   l14483 91C6                                     l14491 91C2  
                                   l14651 86E0                                     l16163 7800  
                                   l16155 77D0                                     l16171 7832  
                                   l16147 77BA                                     l16139 7786  
                                   l17131 90E6                                     l17123 734A  
                                   l17115 730C                                     l17107 72DA  
                                   l16235 7542                                     l16227 74DE  
                                   l16219 7488                                     l15275 8C64  
                                   l14299 847A                                     l16091 5F04  
                                   l16083 5E38                                     l16067 5D5A  
                                   l16075 5DCC                                     l16059 5CFE  
                                   l14395 4E2C                                     l14387 4D82  
                                   l14459 3714                                     l14563 316C  
                                   l14555 312A                                     l14547 30B2  
                                   l14539 3038                                     l14627 6F0C  
                                   l14619 6ECA                                     l15195 854A  
                                   l15451 4294                                     l15443 424A  
                                   l15427 41E2                                     l15419 41A8  
                                   l15435 4210                                     l15371 3FD4  
                                   l15355 3F7A                                     l15339 3F00  
                                   l15363 3F9A                                     l15283 673C  
                                   l15267 8430                                     l16403 2526  
                                   l16411 255A                                     l16331 20B6  
                                   l16323 2032                                     l16315 1FF4  
                                   l16307 1FBC                                     l15099 7FD8  
                                   l15611 60A0                                     l15603 6050  
                                   l16251 8538                                     l16243 84C8  
                                   l18011 593C                                     l18003 5934  
                                   l13781 3DBE                                     l13773 3C5A  
                                   l13765 3BF8                                     l13757 3B54  
                                   l13749 3AF4                                     l13933 2C6C  
                                   l13917 2B94                                     l13909 2B26  
                                   l13861 28CE                                     l13853 28A2  
                                   l13845 288E                                     l13837 2836  
                                   l13829 27D8                                     l15533 6E52  
                                   l15517 6DA4                                     l15509 6D54  
                                   l14637 872C                                     l14821 1C68  
                                   l14813 1C04                                     l14741 19E4  
                                   l14733 198C                                     l14725 196C  
                                   l14709 18C6                                     l15189 8D56  
                                   l14653 86F4                                     l14661 8714  
                                   l14645 86B8                                     l15461 6A1A  
                                   l16181 7874                                     l16173 7846  
                                   l16149 77BC                                     l17125 734E  
                                   l17117 731E                                     l17109 72E8  
                                   l16253 759A                                     l16237 7564  
                                   l16229 74E4                                     l15541 7376  
                                   l16093 5F14                                     l16085 5E80  
                                   l16077 5DCC                                     l16069 5DB4  
                                   l14397 4E76                                     l14389 4DA2  
                                   l14477 38D6                                     l14581 3222  
                                   l14565 3196                                     l14573 31C4  
                                   l14549 30D6                                     l14557 313A  
                                   l14629 6F16                                     l15197 856E  
                                   l15701 78C2                                     l15453 429C  
                                   l15445 4268                                     l15437 4234  
                                   l15429 41F2                                     l15381 4060  
                                   l15373 3FE6                                     l15365 3FBC  
                                   l15357 3F82                                     l15349 3F3A  
                                   l15293 678C                                     l15277 66F2  
                                   l16421 25EA                                     l16413 256A  
                                   l16405 252A                                     l16341 213E  
                                   l16333 20C8                                     l16325 2048  
                                   l16317 2006                                     l16309 1FCA  
                                   l16501 1228                                     l15613 60B0  
                                   l15605 606C                                     l15621 60FE  
                                   l16245 84E0                                     l18021 59CC  
                                   l18013 593E                                     l18005 5936  
                                   l17071 910E                                     l13783 3DF4  
                                   l13775 3C70                                     l13767 3C08  
                                   l13759 3B86                                     l13791 81E6  
                                   l13919 2BA6                                     l13951 2C88  
                                   l13871 2980                                     l13863 2906  
                                   l13839 2848                                     l15527 6E1A  
                                   l15519 6DC2                                     l14639 873E  
                                   l14831 1C9C                                     l14823 1C6C  
                                   l14815 1C42                                     l14807 1BFC  
                                   l14751 1A46                                     l14743 19F8  
                                   l14735 19CA                                     l14727 1982  
                                   l14719 1900                                     l14671 1742  
                                   l14487 915A                                     l14663 8722  
                                   l14655 86F8                                     l14647 86C2  
                                   l15471 6A6E                                     l15463 6A3A  
                                   l16183 788A                                     l16175 7854  
                                   l16167 7822                                     l16159 77EC  
                                   l17135 90EC                                     l17127 90CE  
                                   l17119 7322                                     l15631 8EA2  
                                   l16271 761C                                     l16263 75D8  
                                   l16255 75AC                                     l16239 7594  
                                   l17143 8DAC                                     l15551 7448  
                                   l15543 7394                                     l16087 5EB6  
                                   l16079 5E00                                     l16095 5F24  
                                   l14479 3900                                     l14591 329C  
                                   l14583 3242                                     l14575 31F0  
                                   l14567 31A6                                     l14559 3150  
                                   l14495 2DF4                                     l15199 85A6  
                                   l15711 795E                                     l15703 78DC  
                                   l15447 4278                                     l15383 4072  
                                   l15375 3FFC                                     l15367 3FC0  
                                   l15359 3F94                                     l15295 67B4  
                                   l15287 6744                                     l15279 670A  
                                   l16431 271A                                     l16423 262E  
                                   l16415 2588                                     l16407 2546  
                                   l16343 2162                                     l16335 20EE  
                                   l16327 205C                                     l16319 2016  
                                   l16351 2204                                     l16511 12E2  
                                   l16503 1266                                     l15615 60C6  
                                   l15607 6080                                     l17151 7BAC  
                                   l16191 85E6                                     l16247 84FA  
                                   l18031 5AA4                                     l18023 5A16  
                                   l18015 5940                                     l18007 5938  
                                   l15561 828C                                     l13769 3C40  
                                   l13777 3C78                                     l13793 8224  
                                   l13961 2CBA                                     l13929 2C28  
                                   l13881 2A1A                                     l13873 2988  
                                   l13865 293A                                     l13857 28A8  
                                   l14841 1E9E                                     l14833 1D28  
                                   l14825 1C6E                                     l14817 1C46  
                                   l14761 1A62                                     l14753 1A4E  
                                   l14745 1A0C                                     l14681 179C  
                                   l14673 1786                                     l14657 870C  
                                   l14649 86D6                                     l15481 6AA2  
                                   l15465 6A4C                                     l15801 00AA  
                                   l16169 7830                                     l17137 90F2  
                                   l17129 90D4                                     l17081 725C  
                                   l17073 7232                                     l16281 768E  
                                   l16273 7630                                     l17145 8DDC  
                                   l15553 7454                                     l15545 73C8  
                                   l15537 735E                                     l16089 5ED8  
                                   l14593 32AC                                     l14497 2E0C  
                                   l14921 4FA8                                     l15713 7996  
                                   l15705 78EC                                     l15449 4288  
                                   l15393 40B2                                     l15385 4088  
                                   l15377 4000                                     l15297 67C4  
                                   l15289 6778                                     l15721 53AA  
                                   l15641 56A8                                     l15633 5646  
                                   l16433 272A                                     l16425 2636  
                                   l16417 25AC                                     l16409 254A  
                                   l16361 225A                                     l16353 2214  
                                   l16345 2194                                     l16337 2116  
                                   l16329 206A                                     l16505 12CC  
                                   l16513 12F4                                     l16441 0EEA  
                                   l15617 60E4                                     l15609 6090  
                                   l15625 6110                                     l17161 7C52  
                                   l17153 7BBA                                     l16193 85EE  
                                   l16249 8528                                     l18033 5AB8  
                                   l18025 5A2A                                     l18017 596A  
                                   l18009 593A                                     l15571 82CE  
                                   l15563 82A2                                     l13699 8AC8  
                                   l13779 3CAA                                     l13795 8256  
                                   l13787 81D4                                     l13963 2CF0  
                                   l13939 2C74                                     l13891 2AAE  
                                   l13883 2A50                                     l13875 29CA  
                                   l13867 294E                                     l13859 28BC  
                                   l14851 1EFE                                     l14843 1EB2  
                                   l14835 1DF2                                     l14827 1C7E  
                                   l14819 1C56                                     l14771 1ABA  
                                   l14763 1A6A                                     l14747 1A10  
                                   l14739 19E0                                     l14755 1A56  
                                   l14691 1802                                     l14683 179E  
                                   l14667 1724                                     l15491 6B30  
                                   l15483 6AAA                                     l15475 6A6E  
                                   l15467 6A54                                     l15459 6A14  
                                   l15811 010E                                     l15803 00C6  
                                   l16179 7870                                     l16099 76A6  
                                   l17139 9104                                     l17091 7288  
                                   l17083 726E                                     l17075 7238  
                                   l16275 763C                                     l16267 75EC  
                                   l16259 75C2                                     l17147 8DE8  
                                   l15555 7484                                     l15547 7404  
                                   l15539 7364                                     l14595 32C4  
                                   l14579 320C                                     l14499 2E24  
                                   l15707 7920                                     l15715 79A8  
                                   l14907 9182                                     l15387 409C  
                                   l15395 40C6                                     l15379 402E  
                                   l15299 67CC                                     l15731 544C  
                                   l15723 53CC                                     l15635 5646  
                                   l16427 2698                                     l16419 25BC  
                                   l16371 22C2                                     l16363 2268  
                                   l16355 2222                                     l16347 21A4  
                                   l16339 2128                                     l16291 1F5A  
                                   l16531 13D0                                     l16523 1360  
                                   l16515 1334                                     l16451 0F3A  
                                   l16443 0F04                                     l15619 60E8  
                                   l17155 7BCE                                     l16195 85F6  
                                   l16187 85CA                                     l18019 5994  
                                   l18027 5A2E                                     l17069 9170  
                                   l15573 82EC                                     l15565 82AA  
                                   l13789 81E0                                     l13797 825C  
                                   l13981 2D60                                     l13965 2D02  
                                   l13957 2C9A                                     l13893 2ABE  
                                   l13885 2A98                                     l13877 29DC  
                                   l13869 2964                                     l14845 1EB4  
                                   l14837 1E4E                                     l14829 1C86  
                                   l14773 1ACC                                     l14765 1A90  
                                   l14757 1A5C                                     l14749 1A36  
                                   l14693 1814                                     l14685 17D2  
                                   l14677 178C                                     l14669 1740  
                                   l15493 6B4A                                     l15485 6ACA  
                                   l15477 6A7E                                     l15469 6A6A  
                                   l15901 03DC                                     l15821 0128  
                                   l15805 00DE                                     l17093 728A  
                                   l17085 7280                                     l17077 724A  
                                   l16277 7666                                     l16269 7600  
                                   l14861 9070                                     l15549 7434  
                                   l14597 32F4                                     l14589 326A  
                                   l14933 4FF4                                     l14925 4FA8  
                                   l14917 4F90                                     l15709 7930  
                                   l14909 9182                                     l15397 40D6  
                                   l15741 54DA                                     l15733 546E  
                                   l15725 53EE                                     l15653 56C4  
                                   l15661 570A                                     l15645 56AE  
                                   l15637 565E                                     l16429 26FE  
                                   l16381 239C                                     l16373 233E  
                                   l16365 226A                                     l16357 2238  
                                   l16349 21C4                                     l16285 1F40  
                                   l16541 144C                                     l16533 13F4  
                                   l16525 1370                                     l16517 134C  
                                   l16461 0FC0                                     l16453 0F54  
                                   l16445 0F14                                     l16437 0ED2  
                                   l15581 5F28                                     l16701 8D7E  
                                   l17157 7BF4                                     l17149 7B7A  
                                   l16197 8604                                     l16189 85D4  
                                   l18029 5A5A                                     l16631 8A68  
                                   l16711 68A2                                     l15575 82FC  
                                   l15567 82B6                                     l15559 827A  
                                   l14871 8320                                     l13799 91A4  
                                   l13983 2D62                                     l13967 2D38  
                                   l13959 2CB0                                     l13887 2AA8  
                                   l13879 29E4                                     l14847 1EC4  
                                   l14855 1F04                                     l14839 1E88  
                                   l14791 1B8A                                     l14775 1AD0  
                                   l14767 1A98                                     l14759 1A5E  
                                   l14695 1826                                     l14687 17D4  
                                   l14679 1792                                     l15495 6B52  
                                   l15487 6AEA                                     l15479 6A90  
                                   l15911 044A                                     l15831 0166  
                                   l15823 013C                                     l15815 0114  
                                   l15807 00EC                                     l17095 7298  
                                   l17087 7284                                     l17079 724E  
                                   l16279 766A                                     l14599 3306  
                                   l14951 5118                                     l14943 5094  
                                   l14935 503C                                     l14927 4FC0  
                                   l15399 40F8                                     l15751 5528  
                                   l15743 54F4                                     l15727 5424  
                                   l15735 5484                                     l15719 5392  
                                   l15663 5736                                     l15655 56F4  
                                   l15639 567A                                     l16391 241C  
                                   l16383 23B0                                     l16375 2356  
                                   l16367 229A                                     l16359 2246  
                                   l16295 1F5A                                     l16287 1F54  
                                   l16535 1436                                     l16543 1470  
                                   l16527 1390                                     l16471 10BC  
                                   l16463 0FE4                                     l16447 0F34  
                                   l16439 0EDA                                     l15591 5F84  
                                   l15583 5F52                                     l16703 8D86  
                                   l17159 7C1E                                     l16199 860A  
                                   l16641 8AAA                                     l16633 8A78  
                                   l16721 68F0                                     l16713 68AA  
                                   l15577 82FE                                     l15569 82C4  
                                   l14881 8384                                     l14873 8330  
                                   l13985 2D98                                     l14849 1EC8  
                                   l14793 1B9A                                     l14785 1B52  
                                   l14777 1AD4                                     l14769 1AA8  
                                   l14697 183A                                     l14689 17DC  
                                   l15497 6B6A                                     l15489 6B0E  
                                   l15913 0470                                     l15841 019E  
                                   l15833 0178                                     l15825 0152  
                                   l15809 00FE                                     l17097 72AA  
                                   l17089 7286                                     l14865 907A  
                                   l14945 50AA                                     l14953 5150  
                                   l14937 5054                                     l14929 4FEE  
                                   l15761 556A                                     l15753 5538  
                                   l15737 54A4                                     l15729 542A  
                                   l15681 578E                                     l15673 576C  
                                   l15657 5704                                     l16393 244C  
                                   l16385 23C4                                     l16377 237C  
                                   l16369 22B2                                     l16297 1F5E  
                                   l16561 15B2                                     l16545 14A0  
                                   l16529 13A2                                     l16473 10E0  
                                   l16465 101E                                     l15593 5FA6  
                                   l15585 5F5E                                     l16705 8D9A  
                                   l16643 8AAC                                     l16635 8A84  
                                   l16651 9128                                     l16811 6358  
                                   l16731 69AA                                     l16723 6912  
                                   l16715 68C0                                     l15579 8308  
                                   l14883 839C                                     l14875 8330  
                                   l13987 2DA8                                     l13979 2D4A  
                                   l13995 2DB0                                     l14795 1BAC  
                                   l14787 1B5C                                     l14779 1B08  
                                   l14699 186E                                     l15931 0580  
                                   l15915 0496                                     l15907 040C  
                                   l15851 01DC                                     l15843 01BE  
                                   l15827 0160                                     l15819 011A  
                                   l17099 72B0                                     l14867 908A  
                                   l14971 5234                                     l14963 51EC  
                                   l14955 519C                                     l14939 5070  
                                   l14891 866A                                     l15763 557A  
                                   l15755 554A                                     l15747 5508  
                                   l15739 54B4                                     l15691 5822  
                                   l15683 57C0                                     l15675 5788  
                                   l15667 5752                                     l16395 2492  
                                   l16387 23EA                                     l16379 238E  
                                   l16299 1F7C                                     l16571 163E  
                                   l16563 1608                                     l16547 14D6  
                                   l16555 153A                                     l16491 11B0  
                                   l16483 1184                                     l16475 10F6  
                                   l16467 1088                                     l16459 0F5A  
                                   l15595 5FC8                                     l15587 5F6C  
                                   l16645 8AAE                                     l16637 8AA6  
                                   l16629 9048                                     l16653 913E  
                                   l16813 6368                                     l16805 6334  
                                   l16741 69D8                                     l16733 69CC  
                                   l16725 6938                                     l16717 68C4  
                                   l16709 689A                                     l14877 837C  
                                   l13997 89A4                                     l14797 1BBE  
                                   l14789 1B82                                     l15925 04F2  
                                   l15917 04B4                                     l15909 0434  
                                   l15861 0268                                     l15781 002E  
                                   l16661 8FA0                                     l14973 5280  
                                   l14965 5206                                     l14957 51C8  
                                   l14893 869A                                     l14885 8640  
                                   l15773 55C8                                     l15765 5590  
                                   l15757 5558                                     l15749 5518  
                                   l15693 5848                                     l16397 24B6  
                                   l16389 23FA                                     l16573 1658  
                                   l16557 1594                                     l16549 1524  
                                   l16565 161A                                     l16493 11CC  
                                   l16485 119A                                     l16581 1710  
                                   l16477 1128                                     l16469 109A  
                                   l15597 5FE4                                     l15589 5F70  
                             ?_SPI1_Close 0001                                     l16911 8A64  
                                   l16647 8AB0                                     l16639 8AA8  
                                   l16831 63E6                                     l16823 63A8  
                                   l16815 6376                                     l16807 6338  
                                   l16751 69E6                                     l16743 69DC  
                                   l16735 69CE                                     l16727 6960  
                                   l16719 68C8                                     l14879 8380  
                                   l13999 89B0                                     l14799 1BC2  
                                   l15951 06D2                                     l15927 0532  
                                   l15919 04D0                                     l15871 02DE  
                                   l15863 028E                                     l15855 01F6  
                                   l15839 018C                                     l15791 0076  
                                   l15783 0042                                     l16663 8FA6  
                                   l16655 8F84                                     l16671 8FE8  
                                   l16591 8B9E                                     l14991 42CC  
                                   l14983 530C                                     l14959 51E6  
                                   l14975 52C2                                     l14887 8644  
                                   l15775 5642                                     l15695 5884  
                                   l16399 24DE                                     l16583 1720  
                                   l16575 168E                                     l16567 1622  
                                   l16559 15AA                                     l16495 11DC  
                                   l16487 11AA                                     l16479 1168  
                                   l15599 6002                                     l16649 9142  
                                   l18361 6502                                     l16841 6426  
                                   l16833 63F6                                     l16825 63B8  
                                   l16817 6386                                     l16809 6348  
                                   l16761 69F2                                     l16753 69EA  
                                   l16745 69E0                                     l16737 69D0  
                                   l16729 6988                                     l15945 064E  
                                   l15937 05E0                                     l15929 0562  
                                   l15881 0358                                     l15873 02F0  
                                   l15865 02CC                                     l15857 0238  
                                   l15849 01D4                                     l15793 0088  
                                   l15785 0052                                     l16913 7A9A  
                                   l16665 8FAA                                     l16657 8F92  
                                   l16673 8FEC                                     l16593 8BB4  
                                   l14993 430C                                     l14985 538E  
                                   l14977 52E6                                     l14889 8648  
                                   l14897 918E                                     l15769 55AA  
                                   l15689 57D4                                     l16577 16B6  
                                   l16569 1636                                     l16907 8A06  
                                   l18355 64AE                                     l18363 6518  
                                   l16851 6472                                     l16843 6436  
                                   l16835 6404                                     l16827 63C8  
                                   l16819 6394                                     l16763 69F4  
                                   l16755 69EC                                     l16747 69E2  
                                   l16739 69D4                                     l15947 0676  
                                   l15939 0614                                     l15891 03C0  
                                   l15883 0380                                     l15875 02F6  
                                   l15859 0254                                     l15779 001E  
                                   l16931 7B1C                                     l16923 7ACC  
                                   l16915 7AA2                                     l16659 8F9C  
                                   l16683 896A                                     l16667 8FDA  
                                   l16595 8BC4                                     l16587 8B7E  
                                   l15699 78AA                                     l14899 918E  
                                   l16499 11E2                                     l16579 16FE  
                                   l16771 90B0                                     l16909 8A60  
                                   l18357 64CA                                     l18365 64BC  
                                   l16845 6446                                     l16829 63D8  
                                   l16765 69F6                                     l16757 69EE  
                                   l16749 69E4                                     l15981 083C  
                                   l15973 07FA                                     l15965 077C  
                                   l15957 06EA                                     l15949 068C  
                                   l15885 0384                                     l15877 0334  
                                   l15869 02D6                                     l15797 008E  
                                   l15789 0058                                     l16941 7B5E  
                                   l16933 7B2A                                     l16925 7AEA  
                                   l16917 7AB6                                     l16685 897C  
                                   l16677 8942                                     l16669 8FE4  
                                   l16693 91BA                                     l16589 8B8E  
                                   l14989 42B4                                     l16773 90B8  
                                   l18359 64E6                                     l18367 64D8  
                                   l16847 6454                                     l16839 6418  
                                   l16767 69F8                                     l16759 69F0  
                                   l15991 0874                                     l15983 0840  
                                   l15975 07FE                                     l15967 07DE  
                                   l15959 075A                                     l15895 03C6  
                                   l15887 0394                                     l15879 034C  
                                   l15799 00A6                                     l16943 7B76  
                                   l16935 7B48                                     l16927 7AFC  
                                   l16919 7AC6                                     l16679 8956  
                                   l16695 91BE                                     l14999 4330  
                                   l16775 90C8                                     l16791 8EDC  
                                   l18369 64F4                                     l16849 6464  
                                   l16857 6486                                     l16769 69FC  
                                   l15993 097C                                     l15985 085C  
                                   l15977 081C                                     l15897 03D6  
                                   l15889 03AE                                     l16937 7B58  
                                   l16929 7B0A                                     l16689 8990  
                                   l16697 8D68                                     l16777 90CA  
                                   l16793 8EEC                                     l15995 098E  
                                   l15979 0820                                     l16699 8D76  
                                   l17971 58AA                                     l17981 58BA  
                                   l17973 58AE                                     l17965 5888  
                                   l17991 591E                                     l17983 58BE  
                                   l17975 58B0                                     l17967 5890  
                                   l17993 5924                                     l17985 58DC  
                                   l17977 58B6                                     l17969 5896  
                                   l17995 5928                                     l17987 58F2  
                                   l17979 58B8                                     l17997 592A  
                                   l17989 5918                                     l17999 592C  
                                   _ADACT 3EFE                                     _ADCAP 3EF5  
                                   ?_main 0001                                     _ADCLK 3EFF  
                                   _ADCNT 3EEB                                     _ADPCH 3EF1  
                                   _ADREF 3EFD                           __end_of___awdiv 8064  
                                   STR_10 FFE6                                     STR_11 FFF6  
                                   STR_12 FFE7                           __end_of___awmod 81D4  
                                   _ADRPT 3EEC                           __end_of_dbc_2nd 918E  
        SPI1_Open@spi1UniqueConfiguration 0061                           __end_of_dbc_1st 919A  
                    __end_of_BLUE_LED_OFF 91E2                           __end_of___lldiv 8320  
                                   u20000 768E                                     u20001 768A  
                                   u20010 1F54                                     u20011 1F50  
                                   u20100 205C                                     u20020 1F8C  
                                   u20101 2058                                     u20021 1F88  
                                   u20110 206A                                     u20030 1FBC  
                                   u20111 2066                                     u20031 1FB8  
                                   u20200 22C2                                     u20120 213E  
                                   u20040 1FCA                                     u20201 22BE  
                                   u20121 213A                                     u20041 1FC6  
                                   u21010 9124                                     u20210 23FA  
                                   u20130 21A4                                     u20050 1FE4  
                                   u21011 911E                                     u20211 23F6  
                                   u20131 21A0                                     u20051 1FE0  
                                   u20300 262E                                     u20220 241C  
                                   u20140 2214                                     u20060 1FF4  
                         ___awdiv@divisor 0062                                     u20301 262A  
                                   u20221 2418                                     u20141 2210  
                                   u20061 1FF0                                     u20310 2656  
                                   u20150 2222                                     u20070 2006  
                                   u21030 7C1E                                     u20151 221E  
                                   u20071 2002                                     u21031 7C1A  
                                   u20320 26FE                                     u20240 2526  
                                   u20160 2238                                     u20080 2032  
                                   u20400 109A                                     u10480 8F24  
                                   u21025 9126                                     u20321 26FA  
                                   u20241 2522                                     u20161 2234  
                                   u20081 202E                                     u20401 1096  
                                   u10481 8F20                                     u20330 271A  
                                   u20250 2546                                     u20170 2246  
                                   u20090 2048                                     u20410 10BC  
                                   u20331 2716                                     u20315 264C  
                                   u20251 2542                                     u20235 2472  
                                   u20171 2242                                     u20091 2044  
                                   u20411 10B8                                     u20260 256A  
                                   u20180 225A                                     u20420 10F6  
                                   u20340 0F14                                     u20261 2566  
                                   u20181 2256                                     u20421 10F2  
                                   u20341 0F10                                     u20270 2588  
                                   u20190 2268                                     u20510 13A2  
                                   u20430 1180                                     u20350 0F34  
                                   u20271 2584                                     u20191 2264  
                                   u20511 139E                                     u20431 117C  
                                   u20351 0F30                                     u20280 25BC  
                                   u20600 1710                                     u20520 13D0  
                                   u20440 119A                                     u20360 0F54  
                                   u20281 25B8                                     u20601 170C  
                                   u20521 13CC                                     u20505 137C  
                                   u20441 1196                                     u20361 0F50  
                                   u20610 8B9E                                     u20290 25EA  
                                   u20530 1436                                     u20450 11CC  
                                   u20370 0FC0                                     u20611 8B9A  
                                   u20291 25E6                                     u20531 1432  
                                   u20451 11C8                                     u20371 0FBC  
                                   u20620 8BC4                                     u20460 1228  
                                   u20380 101E                                     _LATA2 1FDD2  
                                   u20621 8BC0                                     u20461 1224  
                                   u20381 101A                                     _LATA3 1FDD3  
                                   u20550 14A0                                     u20470 1266  
                                   u20390 1052                                     _LATA4 1FDD4  
                                   u20551 149C                                     u20471 1262  
                                   _LATB3 1FDDB                                     u16000 2D00  
                                   u20720 7AC6                                     u20560 14D6  
                                   u20480 12CC                                     _LATC2 1FDE2  
                                   u16001 2CFC                                     u20721 7AC2  
                                   u20561 14D2                                     u20545 1456  
                                   u20481 12C8                                     u20730 7AFC  
                                   u20570 1524                                     u20490 134C  
                                   u20731 7AF8                                     u20571 1520  
                                   u20491 1348                                     u20395 1048  
                                   u20740 7B1C                                     u20660 8966  
                                   u20580 15AA                                     _LATC6 1FDE6  
                                   u20741 7B18                                     u20661 8962  
                                   u20581 15A6                                     u16030 89E2  
                                   u16110 70EC                                     u20750 7B58  
                                   u20670 898C                                     u20590 168E  
                                   u16111 70E8                                     u20751 7B54  
                                   u20671 8988                                     u20591 168A  
                                   u20680 68C0                                     u16040 8A04  
                                   u17000 3306                                     u20681 68BC  
                                   u16041 8A00                                     u16121 4748  
                                   u17001 3302                                     u20690 6A12  
                                   u16210 489E                                     u16130 4762  
                                   u16018 2D22                                     u17010 3378  
                             i2c_read@len 0061                                     u20691 6A0E  
                                   u16211 489A                                     u16131 475E  
                                   u16019 2D38                                     u17011 3374  
                                   u15500 3B54                                     u16220 48B0  
                                   u16028 2D82                                     u16108 70BE  
                                   u17100 86D6                                     u17020 33B2  
                                   u15501 3B50                                     u16037 89D0  
                                   u16221 48AC                                     u16029 2D98  
                                   u16109 70D0                                     u17101 86D2  
                                   u17021 33AE                                     u15510 3B86  
                                   u16230 4900                                     u16150 478E  
                                   u16070 7058                                     u17110 86F4  
                                   u17030 6E72                                     u15511 3B82  
                                   u16231 48FC                                     u16151 478A  
                                   u16071 7054                                     u16055 6FE2  
                                   u17111 86F0                                     u17031 6E6E  
                                   u15408 3944                                     u16208 4874  
                                   u16400 8918                                     u16080 707E  
                                   u17120 870C                                     u17040 6F38  
                                   u18000 8150                                     u15409 3974  
                                   u16209 488A                                     u16161 47AE  
                                   u16145 4764                                     u16401 8914  
                                   u16081 707A                                     u17121 8708  
                                   u17041 6F34                                     u18001 814C  
                                   u15370 8B22                                     u15530 3BF8  
                                   u15418 3994                                     u16250 49BC  
                                   u16090 7096                                     u16410 654A  
                                   u17050 6F82                                     u18010 816A  
                                   u21850 596A                                     u15371 8B1E  
                                   u15531 3BF4                                     u15419 39AA  
                                   u16251 49B8                                     u16171 47DC  
                                   u16091 7092                                     u16411 6546  
                                   u17211 18A6                                     u17051 6F7E  
                                   u18011 8166                                     u21851 5966  
                                   u15380 901C                                     u15460 3AB6  
                                   u15428 39CA                                     u16308 4AA2  
                                   u16180 47F8                                     u16340 719A  
                                   u15700 2774                                     u16068 7036  
                                   u16420 65A4                                     u17300 1A0C  
                                   u17220 18C2                                     u17140 1786  
                                   u16500 8EA0                                     u17060 6FAA  
                                   u18100 856E                                     u18020 8188  
                                   u21860 5994                                     u15381 9018  
                                   u15461 3AB2                                     u15429 39E0  
                                   u16309 4AB8                                     u16181 47F4  
                                   u16341 7196                                     u16325 7124  
                                   u15701 2770                                     u16069 7048  
                                   u16421 65A0                                     u17301 1A08  
                                   u17221 18BE                                     u17141 1782  
                                   u16501 8E9C                                     u17061 6FA4  
                                   u18101 856A                                     u18021 8184  
                                   u21861 5990                                     u15390 79C0  
                                   u15630 3DF2                                     u15550 3C5A  
                                   u15438 3A00                                     u16318 4B14  
                                   u16190 484A                                     u16350 71C0  
                                   u15710 27A0                                     u16430 663E  
                                   u16510 7CA8                                     u17070 6FAC  
                                   u18110 85A4                                     u18030 819E  
                                   u21870 5A16                                     u15391 79BC  
                                   u15631 3DEE                                     u15551 3C56  
                                   u15439 3A16                                     u16319 4B2A  
                                   u16191 4846                                     u16351 71BC  
                                   u16431 663A                                     u17311 1A2C  
                                   u16511 7CA4                                     u18031 819A  
                                   u21871 5A12                                     u15608 3D3A  
                                   u15560 3C70                                     u15528 3BAA  
                                   u15448 3A36                                     u16280 4A3E  
                                   u16248 4996                                     u16360 71D8  
                                   u15800 28CE                                     u15720 27CC  
                                   u16440 665C                                     u17320 1A46  
                                   u17208 185A                                     u16600 4E28  
                                   u16520 4BAC                                     u18200 6C8A  
                                   u18120 85C8                                     u19000 5822  
                                   u18040 81C2                                     u21880 5A58  
                                   u15641 3DFE                                     u15609 3D4E  
                                   u15561 3C6C                                     u15529 3BBE  
                                   u15449 3A4C                                     u16281 4A3A  
                                   u16249 49AA                                     u16361 71D4  
                                   u15801 28CA                                     u15721 27C8  
                                   u16441 6658                                     u17401 1B78  
                                   u17321 1A42                                     u17241 191C  
                                   u17209 186E                                     u17161 17F8  
                                   u16601 4E24                                     u16521 4BA8  
                                   u18201 6C86                                     u18121 85C4  
                                   u19001 581E                                     u18041 81BE  
                                   u21881 5A54                                     u15618 3D72  
                                   u15570 3CAA                                     u15490 3B42  
                                   u15458 3A6C                                     u15650 8210  
                                   u16290 4A6A                                     u16338 7178  
                                   u16450 7D6A                                     u17090 8794  
                                   u17410 1B9A                                     u17250 195E  
                                   u17170 1814                                     u17138 1762  
                                   u18130 5AE4                                     u16610 4EC2  
                                   u16530 4BD6                                     u18210 6CA6  
                                   u19010 5884                                     u18050 7EEA  
                                   u21890 5AA4                                     u15619 3D86  
                                   u15571 3CA6                                     u15491 3B3E  
                                   u15459 3AA2                                     u16291 4A66  
                                   u16339 718A                                     u15731 27F4  
                                   u15715 2796                                     u16451 7D66  
                                   u17091 8790                                     u17411 1B96  
                                   u17331 1A86                                     u17251 195A  
                                   u17171 1810                                     u17139 1776  
                                   u18131 5AE0                                     u16531 4BD2  
                                   u18211 6CA2                                     u19011 5880  
                                   u18051 7EE6                                     u21891 5AA0  
                                   u15628 3DAA                                     u15548 3C28  
                                   u15660 8224                                     u16268 49DC  
                                   u16380 722E                                     u15740 2810  
                                   u16460 7D8A                                     u17420 1BAC  
                                   u17340 1AA8                                     u17260 196C  
                                   u17180 1826                                     u18140 5B02  
                                   u16620 4EF4                                     u16700 3604  
                                   u18220 6CDC                                     u19020 78EC  
                                   u18300 6866                                     u19100 5538  
                                   u18060 7EFA                                     u15629 3DBE  
                                   u15549 3C3C                                     u15661 8220  
                                   u16269 49F2                                     u16381 722A  
                                   u15741 280C                                     u16461 7D86  
                                   u17421 1BA8                                     u17341 1AA4  
                                   u17261 1968                                     u17181 1822  
                                   u18141 5AFE                                     u16621 4EF0  
                                   u16701 3600                                     u18221 6CD8  
                                   u18117 8596                                     u19021 78E8  
                                   u18301 6862                                     u19101 5534  
                                   u18061 7EF6                                     u15478 3AD6  
                                   u15670 8256                                     u16278 4A12  
                                   u15750 2836                                     u16390 88B0  
                                   u16470 7DD0                                     u17510 1D9E  
                                   u17430 1BBE                                     u17350 1ABA  
                                   u17238 18EA                                     u17190 1838  
                                   u17158 17BE                                     u18150 5B1E  
                                   u16550 4C80                                     u16710 3664  
                                   u16630 3400                                     u18230 6CEE  
                                   u19030 7930                                     u18310 6894  
                                   u19110 554A                                     u18070 7F20  
                                   u15479 3AEA                                     u16279 4A28  
                                   u15751 2832                                     u16391 88AC  
                                   u16471 7DCC                                     u17431 1BBA  
                                   u17351 1AB6                                     u17271 19C0  
                                   u17239 18FC                                     u17191 1834  
                                   u17159 17D2                                     u18151 5B1A  
                                   u16615 4EB8                                     u16551 4C7C  
                                   u16631 33FC                                     u18231 6CEA  
                                   u19031 792C                                     u18311 6890  
                                   u19111 5546                                     u18071 7F1C  
                                   u17600 83AE                                     u15488 3B14  
                                   u15680 8278                                     u15920 2B6E  
                                   u15840 29DC                                     u17088 8764  
                                   u16480 8822                                     u17360 1ACC  
                                   u17280 19DC                                     u19200 00EC  
                                   u18160 5CF2                                     u16720 3710  
                                   u16640 342A                                     u16800 2EE6  
                                   u18400 3FE6                                     u18320 3E94  
                                   u18240 83F6                                     u19120 5558  
                                   u19040 53CC                                     u18080 7F52  
                                   u17601 83AA                                     u15489 3B28  
                                   u15681 8274                                     u15657 8202  
                                   u15921 2B6A                                     u15841 29D8  
                                   u17089 8778                                     u16481 881E  
                                   u17505 1CFC                                     u17361 1AC8  
                                   u17281 19D8                                     u19201 00E8  
                                   u18161 5CEE                                     u16545 4C48  
                                   u16721 370C                                     u16641 3426  
                                   u16801 2EE2                                     u18401 3FE2  
                                   u18321 3E90                                     u18241 83F2  
                                   u19121 5554                                     u19041 53C8  
                                   u18081 7F4E                                     u16378 7200  
                                   u15930 2B84                                     u15818 28EE  
                                   u16490 885C                                     u17290 19F8  
                                   u18090 8D42                                     u19210 00FE  
                                   u18250 8C64                                     u16570 4D28  
                                   u16730 37B4                                     u16810 2F18  
                                   u18170 6BD0                                     u17610 866A  
                                   u18410 3FF8                                     u18330 3ECC  
                                   u19130 5566                                     u19050 53EE  
                                   u16379 7212                                     u15931 2B80  
                                   u15819 2902                                     u15771 2864  
                                   u15691 2750                                     u16491 8858  
                                   u17515 1D94                                     u17291 19F4  
                                   u18091 8D3E                                     u19211 00FA  
                                   u18251 8C60                                     u16571 4D24  
                                   u16715 365A                                     u16811 2F14  
                                   u18171 6BCC                                     u17611 8666  
                                   u18411 3FF4                                     u18331 3EC8  
                                   u19131 5562                                     u19051 53EA  
                                   u15588 3CCA                                     u15940 2BA6  
                                   u15908 2B12                                     u15828 2926  
                                   u15780 2880                                     u17460 1C56  
                                   u19300 034C                                     u19220 010E  
                                   u16580 4D72                                     u16740 37EA  
                                   u16660 34BC                                     u16900 311A  
                                   u16820 2F56                                     u18180 6C1C  
                                   u17620 869A                                     u18500 4152  
                                   u18420 402E                                     u18340 3EE2  
                                   u18260 673C                                     u19140 5590  
                                   u19060 544C                                     u15589 3CDE  
                                   u15677 8244                                     u15941 2BA2  
                                   u15909 2B26                                     u15829 293A  
                                   u15781 287C                                     u15765 2838  
                                   u17525 1DC4                                     u17461 1C52  
                                   u19301 0348                                     u19221 010A  
                                   u16581 4D6E                                     u16565 4CF0  
                                   u16741 37E6                                     u16661 34B8  
                                   u16901 3116                                     u16821 2F52  
                                   u18181 6C18                                     u17621 8696  
                                   u18501 414E                                     u18421 402A  
                                   u18341 3EDE                                     u18261 6738  
                                   u19141 558C                                     u19061 5448  
                                   u15598 3D02                                     u15918 2B46  
                                   u15838 29B8                                     u15790 28BC  
                                   u17550 1EC4                                     u17534 1DE6  
                                   u17470 1C68                                     u17390 1B4C  
                                   u16750 916C                                     u19310 0394  
                                   u19230 0160                                     u16670 34F6  
                                   u16910 3150                                     u16830 2F8C  
                                   u17710 51E6                                     u17630 4FC0  
                                   u18190 6C56                                     u18510 4174  
                                   u18430 405C                                     u18350 3F12  
                                   u18270 6788                                     u19150 55A6  
                                   u19070 546E                                     u15599 3D16  
                                   u15919 2B5C                                     u15839 29CA  
                                   u15791 28B8                                     u17551 1EC0  
                                   u17535 1DE2                                     u17471 1C64  
                                   u17391 1B48                                     u16751 9166  
                                   u19311 0390                                     u19231 015C  
                                   u16735 37AA                                     u16671 34F2  
                                   u16655 3480                                     u16911 314C  
                                   u16831 2F88                                     u17711 51E2  
                                   u17631 4FBC                                     u18191 6C52  
                                   u18511 4170                                     u18431 4058  
                                   u18351 3F0E                                     u18271 6784  
                                   u19151 55A2                                     u19071 546A  
                                   u15880 2A98                                     u17544 1E26  
                                   u17480 1C7E                                     u17448 1BE6  
                                   u16760 916E                                     u18600 6A90  
                                   u19400 05DC                                     u19320 03AE  
                                   u19240 0178                                     u16920 3196  
                                   u16840 2FE6                                     u17800 43B6  
                                   u17720 5206                                     u17640 4FEE  
                                   u18520 41CE                                     u18440 4072  
                                   u18360 3F24                                     u18280 67C4  
                                   u19160 55C4                                     u19080 54A4  
                                   u15881 2A94                                     u17545 1E20  
                                   u17481 1C7A                                     u17449 1BF8  
                                   u18601 6A8C                                     u19401 05D8  
                                   u19321 03AA                                     u19241 0174  
                                   u16921 3192                                     u16841 2FE2  
                                   u17801 43B2                                     u17721 5202  
                                   u17705 5178                                     u17641 4FEA  
                                   u18521 41CA                                     u18441 406E  
                                   u18361 3F20                                     u18281 67C0  
                                   u19161 55C0                                     u19081 54A0  
                                   u15890 2AE8                                     u15858 2A04  
                                   u17490 1C9C                                     u17458 1C2C  
                                   u17378 1AF6                                     u18610 6AA2  
                                   u19410 064A                                     u19330 03C0  
                                   u19250 0188                                     u19170 0052  
                                   u16690 35CE                                     u16930 31C0  
                                   u16850 3028                                     u16770 2E24  
                                   u17810 43FC                                     u17730 5230  
                                   u17650 5054                                     u18530 41E2  
                                   u18450 4088                                     u18370 3F34  
                                   u18290 681C                                     u19090 5504  
                                   u15891 2AE4                                     u15859 2A1A  
                                   u17491 1C98                                     u17459 1C40  
                                   u17379 1B08                                     u18611 6A9E  
                                   u19411 0646                                     u19331 03BC  
                                   u19251 0184                                     u19171 004E  
                                   u16595 4D8E                                     u16691 35CA  
                                   u16931 31BC                                     u16851 3024  
                                   u16771 2E20                                     u17731 522C  
                                   u17651 5050                                     u18531 41DE  
                                   u18451 4084                                     u18371 3F30  
                                   u18291 6818                                     u19091 5500  
                         __end_of___lwdiv 8640                                     u17580 836C  
                                   u15980 2CB0                                     u15868 2A3A  
                                   u18700 6DE0                                     u17388 1B28  
                                   u18620 6ACA                                     u19500 0870  
                                   u19420 068C                                     u19340 03D6  
                                   u19260 01D0                                     u19180 0088  
                                   u16940 3208                                     u16860 307C  
                                   u16780 2E60                                     u17900 4604  
                                   u17820 4420                                     u17740 5280  
                                   u17660 5070                                     u18540 41F2  
                                   u18460 409C                                     u18380 3F6E  
                                   u15981 2CAC                                     u15869 2A50  
                                   u18701 6DDC                                     u17389 1B3C  
                                   u18621 6AC6                                     u19501 086C  
                                   u19421 0688                                     u19341 03D2  
                                   u19261 01CC                                     u19181 0084  
                                   u16685 3592                                     u16941 3204  
                                   u16861 3078                                     u16781 2E5C  
                                   u17901 4600                                     u17821 441C  
                                   u17741 527C                                     u17661 506C  
                                   u18541 41EE                                     u18461 4098  
                                   u18381 3F6A                                     u17590 839C  
                                   u15958 2BC6                                     u15878 2A70  
                                   u18710 6E14                                     u18630 6AEA  
                                   u19510 098E                                     u19430 06E6  
                                   u19350 0408                                     u19270 01F2  
                                   u19190 00C6                                     u16950 3222  
                                   u16870 3098                                     u16790 2E8A  
                                   u17910 4624                                     u17830 4480  
                                   u17750 5308                                     u17670 50AA  
                                   u18550 4246                                     u18470 40AE  
                                   u18390 3FD0                                     u17591 8398  
                                   u15959 2BDC                                     u15879 2A86  
                                   u18711 6E10                                     u18631 6AE6  
                                   u19511 098A                                     u19431 06E2  
                                   u19351 0404                                     u19271 01EE  
                                   u19191 00C2                                     u16951 321E  
                                   u16871 3094                                     u16791 2E86  
                                   u17911 4620                                     u17815 43F2  
                                   u17751 5304                                     u17671 50A6  
                                   u18551 4242                                     u18471 40AA  
                                   u18391 3FCC                                     u18800 82C4  
                                   u15968 2BFC                                     u18720 6E4E  
                                   u17568 1EEA                                     u18640 6B0E  
                                   u19600 0D08                                     u19520 09B8  
                                   u19360 044A                                     u19280 0254  
                                   u16960 323E                                     u16880 30B2  
                                   u17920 4654                                     u17840 44B4  
                                   u17760 532C                                     u17680 50F0  
                                   u18560 4268                                     u18480 40D6  
                                   u18801 82C0                                     u15969 2C12  
                                   u18721 6E4A                                     u17569 1EFE  
                                   u18641 6B0A                                     u19601 0D04  
                                   u19521 09B4                                     u19361 0446  
                                   u19281 0250                                     u16961 323A  
                                   u16881 30AE                                     u17921 4650  
                                   u17841 44B0                                     u18561 4264  
                                   u18481 40D2                                     u18810 82EC  
                                   u15978 2C48                                     u17578 1F26  
                                   u18650 6B4A                                     u19610 0D4C  
                                   u19530 09DC                                     u19450 0778  
                                   u19370 04D0                                     u19290 02F0  
                                   u18730 7376                                     u16970 3266  
                                   u16890 30F0                                     u17850 4512  
                                   u17770 4330                                     u17690 5114  
                                   u18570 4288                                     u18490 4112  
                                   u17930 7FB2                                     u18811 82E8  
                                   u17587 835E                                     u15979 2C5E  
                                   u17579 1F3A                                     u18651 6B46  
                                   u19611 0D48                                     u19531 09D8  
                                   u19451 0774                                     u19371 04CC  
                                   u19291 02EC                                     u18731 7372  
                                   u16971 3262                                     u16891 30EC  
                                   u17851 450E                                     u17835 4476  
                                   u17771 432C                                     u17691 5110  
                                   u18571 4284                                     u18491 410E  
                                   u17931 7FAE                                     u18660 6D4E  
                                   u18580 6A4C                                     u19620 0D8C  
                                   u19460 07F6                                     u19380 04EE  
                                   u19700 76F4                                     u18740 7394  
                                   u16980 32AC                                     u17860 4534  
                                   u17780 4348                                     u17940 7FCC  
                                   u18900 60B0                                     u18820 5F52  
                                   u18661 6D4A                                     u18581 6A48  
                                   u19621 0D88                                     u19461 07F2  
                                   u19445 0708                                     u19381 04EA  
                                   u19701 76F0                                     u18741 7390  
                                   u16981 32A8                                     u17861 4530  
                                   u17781 4344                                     u17765 5322  
                                   u17685 50E6                                     u17941 7FC8  
                                   u18901 60AC                                     u18821 5F4E  
                                   u15998 2CDA                                     u18670 6D80  
                                   u18590 6A7E                                     u19630 0DCA  
                                   u19550 0A8A                                     u19470 081C  
                                   u19390 0580                                     u19710 770C  
                                   u18750 73C8                                     u16990 32C4  
                                   u17870 4564                                     u17790 437C  
                                   u17950 7FF2                                     u18910 60FA  
                                   u18830 5FA6                                     u15999 2CEE  
                                   u18671 6D7C                                     u18591 6A7A  
                                   u19631 0DC6                                     u19551 0A86  
                                   u19471 0818                                     u19391 057C  
                                   u19711 7708                                     u18751 73C4  
                                   u16991 32C0                                     u17871 4560  
                                   u17791 4378                                     u17951 7FEE  
                                   u18911 60F6                                     u18831 5FA2  
                                   u18680 6DA4                                     u19640 0E08  
                                   u19560 0B10                                     u19480 083C  
                                   u19800 7800                                     u19720 771A  
                                   u18760 7404                                     u17880 4578  
                                   u18920 567A                                     u17960 8010  
                                   u18840 5FC8                                     u18681 6DA0  
                                   u19641 0E04                                     u19561 0B0C  
                                   u19545 0A46                                     u19481 0838  
                                   u19801 77FC                                     u19721 7716  
                                   u18761 7400                                     u17881 4574  
                                   u18921 5676                                     u17961 800C  
                                   u18841 5FC4                                     u18690 6DC2  
                                   u19570 0C3E                                     u19490 085C  
                                   u19810 780E                                     u19730 772A  
                                   u18770 7434                                     u19650 5D26  
                                   u17890 45E8                                     u18930 56A8  
                                   u17970 802C                                     u18850 6016  
                                   u18691 6DBE                                     u19491 0858  
                                   u19811 780A                                     u19731 7726  
                                   u18771 7430                                     u19651 5D22  
                                   u17891 45E4                                     u18931 56A4  
                                   u17971 8028                                     u18851 6010  
                                   u19580 0C72                                     u19820 781E  
                                   u19740 7742                                     u18780 7448  
                                   u19660 5D40                                     u18940 56C4  
                                   u17980 8052                                     u18860 6018  
                                   u19900 8620                                     u19581 0C6E  
                                   u19821 781A                                     u19741 773E  
                                   u18781 7444                                     u19661 5D3C  
                                   u18941 56C0                                     u17981 804E  
                                   u19901 861C                                     u18790 82A2  
                                   u19590 0CDE                                     u19830 7846  
                                   u19750 7768                                     u19670 5D5A  
                                   u18950 5704                                     u17990 8136  
                                   u18870 6080                                     u19910 8D14  
                                   u18791 829E                                     u19591 0CDA  
                                   u19575 0C34                                     u19831 7842  
                                   u19751 7764                                     u19671 5D56  
                                   u18951 5700                                     u17991 8132  
                                   u18871 607C                                     u19911 8D10  
                                   u19840 786C                                     u19760 7780  
                                   u19920 7498                                     u19680 5DB4  
                                   u18960 574E                                     u18880 6090  
                                   u19841 7868                                     u19761 777C  
                                   u19921 7494                                     u19681 5DB0  
                                   u18961 574A                                     u18881 608C  
                                   u19850 7884                                     u19770 77A2  
                                   u19930 74BA                                     u19690 5E10  
                                   u18970 5768                                     u18890 60A0  
                                   u19851 7880                                     u19771 779C  
                                   u19931 74B6                                     u19691 5E0C  
                                   u18971 5764                                     u18891 609C  
                                   u19860 78A6                                     u19780 77A4  
                                   u19940 74DA                                     u18980 5788  
                                   i2l101 631E                                     u19861 78A0  
                                   u19941 74D6                                     u18981 5784  
                                   u19870 78A8                                     u19790 77E8  
                                   u18990 57D0                                     u19791 77E4  
                                   u18991 57CC                                     u19960 75AC  
                                   u19880 85E6                                     u19961 75A8  
                                   u19881 85E2                                     u19970 75BE  
                                   u19890 8604                                     u19971 75BA  
                                   u19955 7530                                     u19891 8600  
                                   u19980 75D4                                     i2l125 9046  
                                   u19981 75D0                                     u19990 75E8  
                                   u19991 75E4                                     i2l420 90AE  
                                   i2l416 8E66                                     i2l363 8CD2  
                         ___awdiv@counter 0064                                     _OSCEN 39DD  
                            vfpfcnvrt@fmt 006B                                     _TRISA 3FC2  
                                   _TRISB 3FC3                                     _TRISC 3FC4  
                         __end_of_f_close 8BD6                                     _FatFs 0284  
                         __end_of_chk_chr 86B4             SD_SPI_SectorRead@sector_count 0093  
                                   _ExCvt FEC5                       ___lmul@multiplicand 0064  
                         __end_of_f_mount 7B7A                                i2memcpy@d1 0001  
                              i2memcpy@s1 0003                           __end_of_dir_sdi 5392  
                   _SD_SPI_AsyncReadTasks 4726                           __end_of_f_write 1724  
                         __end_of_get_fat 4F90                              ?_RED_LED_OFF 0001  
                ??_SD_SPI_AsyncWriteTasks 0083                           __end_of_ld_word 8E2C  
                                   _flags 0048                           __end_of_mem_cmp 83B8  
                         __end_of_mem_cpy 85CA                           __end_of_mem_set 8EA2  
                                   _fputc 7ED8                             find_volume@br 0100  
                           find_volume@fs 0138                             find_volume@pt 011A  
                                   _width 01DA                                     _putch 91E2  
                          disk_ioctl@buff 0061                                     pclath 3FFA  
                                   pclatu 3FFB                            disk_read@count 00AE  
                                   tablat 3FF5                            disk_ioctl@pdrv 0063  
                          ?_i2c_read_reg8 0066                                     plusw0 3FEB  
                                   plusw1 3FE3                                     plusw2 3FDB  
                         __end_of_put_fat 3904                                     status 3FD8  
                         __end_of_st_word 8F80                           __end_of_sprintf 8DAC  
                         __end_of_sync_fs 5CFE                          __end_ofi2_memcpy 8B7E  
                           get_ldnumber@i 0064                             disk_write@res 00B4  
                             ?_SD_SendCmd 006B                       _get_board_unique_id 908E  
                         __initialization 8796                       disk_initialize@pdrv 00B4  
                           main@can_setup 01C8                       disk_initialize@stat 00B5  
                            __end_of_main 5AC4                          __end_of_i2c_init 8FB0  
                        __end_of_i2c_read 78AA                     i2c_write_reg16@F22833 01D7  
        can_generate_timing_params@timing 0064                                    ??_main 01C0  
                           __activetblptr 0003                       get_message_type@msg 0001  
                       srb_init@pool_size 006B                              ?_SDSLOW_open 0001  
                      i2c_write_reg8@data 0069                      ?_get_board_unique_id 0001  
                        ?_fxls_get_whoami 0001                   _SD_SPI_IsWriteProtected 91C2  
                                  _ADACCH 3EE9                                    _ADACCL 3EE8  
                                  _ADACCU 3EEA                                    _ADACQH 3EF4  
                                  _ADACQL 3EF3                                    _ADCON0 3EF8  
                                  _ADCON1 3EF9                                    _ADCON2 3EFA  
                                  _ADCON3 3EFB                                    _ADERRH 3EE3  
                                  _ADERRL 3EE2                                    ?_fputc 0060  
                                  _ADLTHH 3EDF                                    _ADLTHL 3EDE  
                                  _ADRESH 3EF0                                    _ADRESL 3EEF  
                                  _ADPREH 3EF7                                    _ADPREL 3EF6  
                           SD_SendCmd@cmd 007C                                    _ADSTAT 3EFC  
                                  _ADUTHH 3EE1                          ___awdiv@dividend 0060  
                                  _ADUTHL 3EE0                                    _ANSELA 3A40  
                                  ?_putch 0001                                    _ANSELB 3A50  
                                  _ANSELC 3A60                              i2c_read@data 0060  
                      SD_SPI_SectorRead@i 0099                                    _RC1PPS 3A11  
                                  _RC3PPS 3A13                                    _RC5PPS 3A15  
                                  _ODCONA 3A42                                    _ODCONB 3A52  
                                  _ODCONC 3A62                                    i2l2202 7E8E  
                                  i2l2140 91E0                                    i2l2215 8C1E  
                                  i2l2137 91DC                                    i2l2146 91D4  
                                  i2l2155 91CC                                    i2l2149 91D8  
                                  i2l2158 91D0                                    i2l2194 7ED6  
                                  i2l2926 8B7C                                    _INLVLA 3A44  
                                  _INLVLB 3A54                                    i2l6251 9022  
                                  _INLVLC 3A64                                    i2l5541 91DA  
                                  i2l6253 9036                                    _INLVLE 3A84  
                                  i2l5543 91DE                                    i2l5551 91CE  
                                  i2l5545 91D2                                    i2l5547 91D6  
                                  i2l5549 91CA                                    i2l9911 8E2C  
                                  i2l9913 8E3C                                    i2l9917 8E48  
                                  _OSCFRQ 39DF           SD_SPI_AsyncWriteTasks@data_byte 004B  
                                  _RXB0D0 3F86                                    _RXB1D0 37F6  
                           vfpfcnvrt@done 006F                                    _TXB0D0 37E6  
                        __end_of_can_init 6A14                                    _TRISA2 1FE12  
                                  _TRISA3 1FE13                                    _TRISC0 1FE20  
                                  _TRISA4 1FE14                                    _TRISC1 1FE21  
                                  _TRISB3 1FE1B                                    _TRISC2 1FE22  
                                  _TRISC6 1FE26                          __end_of_can_send 759A  
                    __end_of_dir_register 79AC                          __end_of_check_fs 6E56  
                 ?_SD_SPI_MediaInitialize 0001        build_board_stat_msg@error_data_len 006F  
                          can_init@timing 0060   can_generate_timing_params@can_frequency 0060  
                        __end_of_dir_find 689A                         __end_of_SPI1_Open 7A9A  
                        __end_of_dir_next 4726                              ?_move_window 00C8  
                    __end_of_create_chain 33E0                               i2memcpy@tmp 000B  
                            vfprintf@cfmt 007B                          __end_of_ld_clust 8442  
                        __end_of_ld_dword 8122                                    ___lmul 8802  
                               ??___awdiv 0064                                 ??___awmod 0064  
                               ??_dbc_2nd 0062                                 ??_dbc_1st 0062  
                               ??___lldiv 0068                                    _f_open 1F40  
                            ?_timer0_init 0001                                    _ioInfo 002D  
                               ??___lwdiv 0064                      __end_of_GREEN_LED_ON 91D6  
                                  _f_sync 5CFE                                    _memcpy 8AC8  
                                  _memset 89A4                                 ??_f_close 00DC  
                          find_volume@fmt 0137                                    _millis 8FB0  
                                  clear_0 87C0                                    clear_1 87D2  
                                  clear_2 87DE                                    clear_3 87EA  
                          find_volume@rfs 00DC                                 ??_chk_chr 0064  
                          find_volume@vol 0120                          ___awdiv@quotient 0066  
                 SD_SendCmd@address_bytes 0078                           ___awmod@divisor 0062  
                                  isa$std 0001                                 ??_f_mount 00EC  
                         ___awmod@counter 0064                                 ??_dir_sdi 00F3  
                               ??_f_write 011F                                 ??_get_fat 00D9  
                    _build_board_stat_msg 759A                              _can_send_rdy 0000  
                               ??_ld_word 0062      SD_SPI_DelayMilliseconds@milliseconds 0063  
                   ??_get_board_unique_id 0002                           _ADCC_Initialize 8A06  
                               ??_mem_cmp 0066                                 ??_mem_cpy 0066  
                                  fputc@c 0060                                 ??_mem_set 0066  
                          _PMD_Initialize 9048                          __end_of_validate 7488  
                            __pdataCOMRAM 0050                    ?_SD_SPI_AsyncReadTasks 0082  
                    __end_of_get_ldnumber 6B86                ?_SD_SPI_IsMediaInitialized 0001  
                            __mediumconst FEC4                           disk_read@sector 00AA  
                        __end_of_srb_init 854A                                    tblptrh 3FF7  
                                  tblptrl 3FF6                                    tblptru 3FF8  
                        __end_of_st_clust 8C80                            _i2c_write_reg8 8FD6  
                        __end_of_st_dword 84C8                                    putch@c 0001  
                        __end_of_vfprintf 8D20                                 ??_put_fat 00DD  
                               ??_st_word 0064                          __end_of_txb_init 8F14  
              __end_of_get_reset_board_id 8CD4                                 ??_sprintf 0085  
                         ??_i2c_read_reg8 0069                                 ??_sync_fs 00CA  
      SD_SPI_AsyncWriteTasks@WriteTimeout 003A                         _SYSTEM_Initialize 9170  
                            i2c_write@len 0061            __end_of_SD_SPI_MediaInitialize 1F40  
                              __accesstop 0060            build_board_stat_msg@error_data 006D  
                 __end_of__initialization 87FC            build_board_stat_msg@error_code 006C  
                          get_ldnumber@tc 0066                            disk_write@buff 00AB  
                          get_ldnumber@tp 006B                            get_ldnumber@tt 0067  
                          _SPI1_ReadBlock 0000                            disk_write@pdrv 00B3  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 0001  
                      fxls_get_whoami@res 006C                             __end_of_ExCvt FF45  
                          __pcstackCOMRAM 0001                    can_msg_handler@dest_id 000F  
                  _write_timestamp_3bytes 8EA2                       ??_SYSTEM_Initialize 0060  
                      _SD_SPI_SectorWrite 6FAE                     i2c_write_reg8@address 0068  
                            txb_init@pool 006F                             __end_of_fputc 7F9E  
                       ??_SPI1_Initialize 0060                             __end_of_putch 91E4  
                ?_timer0_handle_interrupt 0001                     ?_build_board_stat_msg 0068  
                  __end_of_PMD_Initialize 906C                            _sdmmc_cmdtable FF45  
                   SPI1_ExchangeByte@data 0060                       ?_SD_SPI_SectorWrite 0090  
                       __end_of_i2c_write 77A6                        _spi1_configuration FFBD  
           __end_of_SD_SPI_IsMediaPresent 91CA                 ??_SD_SPI_IsWriteProtected 0060  
                  __end_of_i2c_write_reg8 8FFC                                 ?i2_memcpy 0001  
                        _seen_can_message 0049         __end_of_SD_SPI_IsMediaInitialized 9170  
           SD_SPI_AsyncWriteTasks@command 004A                                _can_rcv_cb 0046  
                                 ??_fputc 0063                 __end_of_SYSTEM_Initialize 9182  
                                 ??_putch 0060                                __pbssBANK1 01CF  
                              __pbssBANK2 0200                __end_of_SET_ACCEL_I2C_ADDR 9128  
                               ?_i2c_init 0001                                 ?_i2c_read 0060  
                            ??_RED_LED_ON 0001                            _send_status_ok 7B7A  
                        _mediaInformation 0050                      ??_SD_SPI_SectorWrite 0098  
                            _BLUE_LED_OFF 91DE                            _SPI1_WriteByte 0000  
                                 IVTBASEH 3FD6                                   IVTBASEL 3FD5  
                                 IVTBASEU 3FD7                          _find_volume$3100 0114  
                        _find_volume$3099 0110                    get_board_unique_id@msg 0001  
                 _buf@can_tx_buffer$F1072 01E4                    _SD_SPI_AsyncWriteTasks 272E  
                                 ?___lmul 0060                                   _I2C1CLK 3D7B  
                                 _I2C1CNT 3D6C                                   _I2C1ERR 3D76  
                                 _I2C1PIR 3D79                                   _I2C1RXB 3D6A  
                                 _I2C1TXB 3D6B                   __end_of_ADCC_Initialize 8A68  
                                 ?_f_open 0141                    __end_of_sdmmc_cmdtable FF95  
                                 ?_f_sync 00D3                         ??_disk_initialize 00B4  
                                 _ADFLTRH 3EE7                                   _ADFLTRL 3EE6  
                                 ?_memcpy 0060                                   ?_memset 0060  
                       ??_BLUE_LED_TOGGLE 0060                              ?_sync_window 00B5  
                          ___lmul@product 0068                                   ?_millis 0060  
                                 _ADPREVH 3EEE                                   _ADPREVL 3EED  
                                 _ADSTPTH 3EE5                                   _ADSTPTL 3EE4  
                            ??_SPI1_Close 0060                           ?_PMD_Initialize 0001  
                                 _ANSELC0 1D300                                   _CLKRCLK 3CE6  
                                 _CLKRCON 3CE5                                 ?_can_init 0060  
                      __end_of_RED_LED_ON 91CE                                   i2l10381 8CA8  
                                 i2l10391 909E                                   i2l10383 8CBE  
                                 i2l10375 8C80                                   i2l11511 8B38  
                                 i2l10377 8C90                                   i2l11513 8B48  
                                 i2l11601 61F6                                   i2l10395 90A4  
                                 i2l10379 8C98                                   i2l11515 8B4C  
                                 i2l11603 6208                                   i2l10389 908E  
                                 i2l11517 8B5E                                   i2l11509 8B24  
                                 i2l11621 62C2                                   i2l11613 623C  
                                 i2l11605 6224                                   i2l11471 7E1C  
                                 i2l11463 7E08                                   i2l11519 8B62  
                                 i2l11623 62C6                                   i2l11615 627C  
                                 i2l11607 6228                                   i2l11481 7E68  
                                 i2l11465 7E0C                                   i2l11641 632C  
                                 i2l11633 6304                                   i2l11625 62DC  
                                 i2l11617 6294                                   i2l11483 7E7C  
                                 i2l11475 7E38                                   i2l11467 7E1C  
                                 i2l11619 62A6                                   i2l11477 7E48  
                                 i2l11469 7E1C                                   i2l11637 6318  
                                 i2l11629 62F0                                   i2l11479 7E58  
                                 i2l11487 7E94                                   i2l11591 616A  
                               ?_can_send 006B                                   i2l11593 6178  
                                 i2l13361 8BE2                                   i2l11595 6188  
                                 i2l11587 613A                                   i2l13371 8C1A  
                                 i2l13363 8BF4                                   i2l11597 61A0  
                                 i2l11589 6148                                   i2l13365 8BF8  
                                 i2l11599 61DE                                   i2l13367 8C08  
                                 i2l13369 8C16         SD_SPI_AsyncReadTasks@blockCounter 0044  
                                 i2l18371 7EB2                                   i2l18373 7EC0  
                         ?_i2c_write_reg8 0066                                 ?_check_fs 00D3  
                              _disk_ioctl 906C                                ??i2_memcpy 0007  
               ?_SD_SPI_DelayMilliseconds 0001                                   _OSCCON1 39D9  
                                 _OSCCON3 39DB                            follow_path@res 0140  
                              _disk_write 886E                                   _SPI1CLK 3D1C  
                                 _SPI1RXB 3D10                                   _SPI1TXB 3D11  
              SD_SPI_AsyncWriteTasks@info 0082                                   _OSCTUNE 39DE  
                                 _SLRCONA 3A43                                   _SLRCONB 3A53  
                                 _SLRCONC 3A63                            remove_chain@fs 010D  
                               ?_dir_find 012D                                 ?_dir_next 00FA  
         SD_SPI_SectorRead@sector_address 008D                       SD_SPI_SectorWrite@i 009C  
                               ?_ld_clust 0067                                 ?_ld_dword 0060  
                  __end_of_send_status_ok 7C58                                ??_i2c_init 0060  
                              ??_i2c_read 0062                             ?_remove_chain 00F4  
                                 _CurrVol 004D                         ??_send_status_err 0077  
                            ??_SD_SendCmd 0070                        __end_of_SPI1_Close 91BA  
                       __end_of_dir_clear 6FAE                         __end_of_dir_alloc 6CF6  
                                 __Hparam 0000                         __end_of_clst2sect 7D34  
                                 __Lparam 0000                                 ?_validate 0062  
         write_timestamp_3bytes@timestamp 0060                         __end_of_disk_read 893E  
                               ?_srb_init 0067                              _f_write$3415 012B  
                              f_close@res 00DE                                   ___awdiv 7F9E  
                               ?_st_clust 0064                                   ___awmod 8122  
                                 _dbc_2nd 9182                                   _dbc_1st 918E  
                               ?_st_dword 0060                                   ___lldiv 827A  
                              check_fs@fs 00D3                                   ___lwdiv 85CA  
                               ?_vfprintf 0077                    ??_build_board_stat_msg 0072  
                               ?_txb_init 006F                                   _f_close 8B7E  
                                 __pcinit 8796                                   _chk_chr 8640  
                                 __ramtop 1000                              _get_fat$2577 00E1  
                                 _f_mount 7A9A                           i2c_read@address 0063  
                   __end_of_GREEN_LED_OFF 91DA                                   __ptext0 5888  
                                 __ptext1 8EDC                                   __ptext2 84C8  
                                 __ptext3 85CA                                   __ptext4 90B0  
                                 __ptext5 7B7A                                   __ptext6 8D68  
                                 __ptext7 8CD4                                   __ptext8 5F28  
                                 __ptext9 7ED8                                   _dir_sdi 4F90  
                                 _f_write 0ED2                               validate@obj 0062  
                                 _get_fat 4B78                               validate@res 006C  
                             validate@rfs 0064                                chk_chr@chr 0062  
                            _dir_register 78AA                                chk_chr@str 0060  
                                 _ld_word 8DEE                                   _mem_cmp 8320  
                                 _mem_cpy 854A                                ??_can_init 0064  
                   _OSCILLATOR_Initialize 9142                                   _mem_set 8E68  
                              ??_can_send 006D                               _I2C1ERRbits 3D76  
                              ??_check_fs 00D9                          ___awmod@dividend 0060  
                         find_volume@mode 00DE                           find_volume@path 00DA  
                   SD_SPI_SectorRead@info 009B                           find_volume@nrsv 0122  
                         find_volume@stat 0128                  ??_PIN_MANAGER_Initialize 0060  
                             _I2C1PIRbits 3D79                              _create_chain 2DF4  
                      __end_of_SD_SendCmd 3E0A                                ??_dir_find 00FE  
              build_board_stat_msg@output 0070                                   _put_fat 33E0  
                              ??_dir_next 0117                         __end_of_fxls_init 735E  
                                 _st_word 8F4A                                   _sprintf 8D68  
                                 _tx_pool 0220                                ??_ld_clust 006B  
                         i2c_read@timeout 0064                                   _sync_fs 5AC4  
                              ??_ld_dword 0064                      end_of_initialization 87FC  
                         ?_send_status_ok 0001                              _GREEN_LED_ON 91D2  
                              f_open@clst 0162                                f_open@mode 0145  
                              f_open@path 0143                            ??_remove_chain 0100  
                                 memcpy@d 0067                                   memcpy@n 0064  
                                 memcpy@s 0069                                   fputc@fp 0062  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                         __end_of_spiMaster FFBD  
                         disk_status@pdrv 0060                                 i2u1133_40 8C90  
                               i2u1133_41 8C8C                                 i2u1134_40 8CBE  
                               i2u1134_41 8CBA                                 i2u1135_40 909E  
                               i2u1135_41 909A                                 i2u1312_40 7E34  
                               i2u1320_40 6148                                 i2u1312_41 7E30  
                               i2u1320_41 6144                           disk_status@stat 0061  
                               i2u1049_40 8E3C                                 i2u1313_40 7E7C  
                               i2u1321_40 6156                                 i2u1049_41 8E38  
                               i2u1313_41 7E78                                 i2u1321_41 6152  
                               i2u1314_40 7E8E                                 i2u1322_40 616A  
                               i2u1314_41 7E8A                                 i2u1322_41 6166  
                               i2u1330_45 6246                                 i2u1315_40 8B7C  
                               i2u1331_40 62A6                                 i2u1323_40 6178  
                               i2u1315_41 8B78                                 i2u1331_41 62A2  
                               i2u1323_41 6174                                 i2u1324_40 6188  
                               i2u1324_41 6184                                 i2u1333_40 62DC  
                               i2u1332_48 62B0                                 i2u1325_40 61A0  
                               i2u1333_41 62D8                                 i2u1332_49 62C2  
                               i2u1325_41 619C                                 i2u1334_40 62F0  
                               i2u1334_41 62EC                                 i2u1326_45 61AA  
                               i2u1335_40 6304                                 i2u1327_40 6208  
                               i2u1335_41 6300                                 i2u1327_41 6204  
                               i2u1336_40 6318                                 i2u1336_41 6314  
                               i2u1337_40 632C                                 i2u1329_40 623C  
                               i2u1328_48 6212                                 i2u1337_41 6328  
                               i2u1329_41 6238                                 i2u1328_49 6224  
                               i2u1534_40 8BF4                                 i2u1534_41 8BF0  
                               i2u1535_40 8C08                                 i2u1535_41 8C04  
                               i2u1536_40 8C16                                 i2u1536_41 8C12  
                           ??_BLUE_LED_ON 0001                           ___lldiv@divisor 0064  
                              f_mount@cfs 00EF                                f_mount@res 00EC  
                              f_mount@opt 00EB                                f_mount@vol 00F1  
                         ___lldiv@counter 006C                              _get_ldnumber 6A14  
                              ??_validate 0066                         __end_of_vfpfcnvrt 613A  
                               _SPI1TCNTL 3D12                                ??_srb_init 006F  
                                 postdec1 3FE5                                   postdec2 3FDD  
                                 postinc0 3FEE                                   postinc1 3FE6  
                                 postinc2 3FDE                          vfpfcnvrt@convarg 0072  
                              ??_st_clust 006C                            move_window@res 00D2  
                              ??_st_dword 0066                          ?_ADCC_Initialize 0001  
                              ??_vfprintf 007B                                 _SPI1_Open 79AC  
                              ??_txb_init 0077                                dir_clear@n 00D8  
                              dir_alloc@n 0136                          remove_chain@clst 00F6  
                              dir_find@dp 012D                                dir_find@fs 012F  
                 ??_SD_SPI_AsyncReadTasks 0083          SD_SPI_SectorWrite@sector_address 0090  
                              dir_sdi@csz 0100                                dir_sdi@ofs 00EF  
                        _get_message_type 8E2C                                dir_next@dp 00FA  
            SD_SPI_MediaInitialize@c_size 00A9                                dir_next@fs 0127  
                             ?_disk_ioctl 0060        SD_SPI_AsyncWriteTasks@blockCounter 0042  
                           i2c_write@data 0060                                f_write@btw 011B  
                              f_write@res 0131               ??_SD_SPI_IsMediaInitialized 0060  
                             ?_disk_write 00AB                                 _TRISCbits 3FC4  
                             srb_init@ctx 0067                         ??_can_msg_handler 000B  
                              get_fat@obj 00D3                                get_fat@val 00E5  
                         get_ldnumber@vol 0069                           disk_write@count 00B1  
                          _FatFs@ff$F2407 01E2                    SPI1_ExchangeBlock@data 0064  
                           ??_create_name 006C                                ld_clust@cl 006F  
                              ld_clust@fs 0067                           _SPI1_Initialize 9128  
                           ??_find_volume 00DF                   ?_write_timestamp_3bytes 0060  
                              ld_dword@rv 0069                             ??_disk_status 0060  
            __end_of_can_handle_interrupt 6334                        _get_reset_board_id 8C80  
             __end_of_get_board_unique_id 90B0                                ?_SPI1_Open 0001  
                     __end_of_BLUE_LED_ON 91DE                            __end_of___lmul 886E  
                             vfpfcnvrt@ap 006C                               st_clust@dir 0066  
                             vfpfcnvrt@cp 0070                               vfpfcnvrt@fp 006A  
                         can_send@message 006B                            __end_of_f_open 272E  
                           __pidataCOMRAM 919A                       ?_get_reset_board_id 0005  
                          __end_of_f_sync 5F28                                 i2memcpy@d 0007  
                               i2memcpy@n 0005                                 i2memcpy@s 0009  
                             _ECANCONbits 3F91                            __end_of_memcpy 8B24  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_memset 8A06  
                          __end_of_millis 8FD6                                ld_word@ptr 0060  
                     start_initialization 8796                               st_dword@val 0062  
                             st_dword@ptr 0060                   can_msg_handler@msg_type 000D  
                             __end_of_abs 8F4A                                 _i2c_write 76A2  
                              mem_cmp@cnt 0064                                mem_cmp@dst 0060  
                              ivt0x8_base 0008                                mem_cmp@src 0062  
                             _CANSTATbits 3F8E                        can_msg_handler@msg 000A  
                              mem_cpy@cnt 0064                               put_fat@clst 00D5  
                              mem_cpy@dst 0060                      ??_get_reset_board_id 0007  
                   __end_of_i2c_read_reg8 89A4                                mem_cpy@src 0062  
          __end_of_write_timestamp_3bytes 8EDC                           _disk_initialize 8D20  
                 ?_SD_SPI_AsyncWriteTasks 0082                                mem_set@cnt 0064  
                              mem_set@dst 0060                                mem_set@val 0062  
                         _BLUE_LED_TOGGLE 91BA                 _SD_SPI_IsMediaInitialized 915A  
                    i2c_write_reg8@F22827 01DE                             ??_follow_path 0137  
                    fxls_init@buf_config1 0070                       __end_of_create_name 42B4  
                             vfprintf@fmt 0078        __end_of_can_generate_timing_params 6528  
              _can_generate_timing_params 6334                          ??_PMD_Initialize 0060  
        __end_of_SD_SPI_DelayMilliseconds 8796                                  ??___lmul 0068  
                      _SET_ACCEL_I2C_ADDR 910A                                  ??_f_open 0146  
                                ??_f_sync 00D5                       __end_of_find_volume 0ED2  
                     __end_of_disk_status 8728                                  ??_memcpy 0066  
                        ??_i2c_write_reg8 0068                                  ??_memset 0066  
                           ??_SDFAST_open 0062                                  ??_millis 0064  
                      SD_SendCmd@response 007D                                memset@dest 0060  
                    __end_of_remove_chain 5888                       ?_SET_ACCEL_I2C_ADDR 0001  
                             __pbssBIGRAM 0284                             _SPI1_ReadByte 0000  
                             __pbssCOMRAM 002D            SD_SPI_AsyncWriteTasks@response 0087  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           ??_RED_LED_OFF 0001                     _SD_SPI_IsMediaPresent 91C6  
                       _SD_SPI_SectorRead 70F0                               _BRGCON1bits 3703  
                             _BRGCON2bits 3704                               _BRGCON3bits 3705  
                              ?_i2c_write 0060                           _send_status_err 8DAC  
                 __end_of_SPI1_Initialize 9142                     fxls_init@sens_config1 006F  
                   fxls_init@sens_config2 0074                     fxls_init@sens_config3 0073  
                   fxls_init@sens_config4 006E                              check_fs@sect 00D5  
                      ?_SD_SPI_SectorRead 008D                           _SPI1_WriteBlock 0000  
          __end_of_SD_SPI_AsyncWriteTasks 2DF4                         _fxls_get_prod_rev 90EC  
                    ??_SET_ACCEL_I2C_ADDR 0060                       ??_SD_SPI_SectorRead 0095  
                      ?_fxls_get_prod_rev 0001                               _BLUE_LED_ON 91DA  
           build_board_stat_msg@timestamp 0068           SD_SPI_DelayMilliseconds@timeout 0064  
                   get_reset_board_id@msg 0005                          ___lwdiv@dividend 0060  
                  _PIN_MANAGER_Initialize 8A68                         ??_fxls_get_whoami 006C  
                           __pmediumconst FEC4                                  ?___awdiv 0060  
                               __ptext100 8BD6                                 __ptext101 9022  
                               __ptext110 91D2                                 __ptext102 613A  
                               __ptext111 91D6                                 __ptext103 8B24  
                               __ptext112 91DA                                 __ptext104 7E08  
                               __ptext113 91DE                                 __ptext105 8C80  
                               __ptext106 8E2C                                 __ptext107 908E  
                               __ptext108 91CA                                 __ptext109 91CE  
                                ?___awmod 0060                                 _dir_clear 6E56  
                                ?_dbc_2nd 0060                                 _dir_alloc 6B86  
                                ?_dbc_1st 0060                                  ?___lldiv 0060  
                                _I2C1ADB1 3D6E                       ??_fxls_get_prod_rev 006C  
                                ?___lwdiv 0060                                 _clst2sect 7C58  
                             ??_SPI1_Open 0060                                  _I2C1CON0 3D73  
                                _I2C1CON1 3D74                                  _I2C1CON2 3D75  
                ?_SD_SPI_IsWriteProtected 0001                                  ?_f_close 00DA  
                          _RED_LED_TOGGLE 91BE                                 _disk_read 88D6  
                                ?_chk_chr 0060                             follow_path@dp 0133  
                           follow_path@fs 013D                             follow_path@ns 013F  
                           _validate$3131 006A                       __end_of_follow_path 5646  
                                ?_f_mount 00E7                                  ?_dir_sdi 00ED  
                                ?_f_write 0117                                  ?_get_fat 00D3  
                       _interrupt_handler 8BD6                             ??_SDSLOW_open 0062  
                                ?_ld_word 0060                                  ?_mem_cmp 0060  
                                ?_mem_cpy 0060                                  ?_mem_set 0060  
               __end_of_SD_SPI_SectorRead 7232                               _COMSTATbits 3F90  
                        ??_send_status_ok 0100                        ?_interrupt_handler 0001  
                                _CANRXPPS 3AED                       __end_of_SDFAST_open 91AC  
                ??_SD_SPI_MediaInitialize 0082                                 f_close@fp 00DA  
                               f_close@fs 00DC                      _can_handle_interrupt 613A  
                          i2c_init@clkdiv 0060                                  ?_put_fat 00D3  
                        ___lwdiv@quotient 0065                                  ?_st_word 0060  
                 __end_of_disk_initialize 8D68                                  ?_sprintf 007D  
                 __end_of_BLUE_LED_TOGGLE 91BE                                  ?_sync_fs 00C8  
               __end_of_fxls_get_prod_rev 910A                         find_volume@fasize 012D  
                  SET_ACCEL_I2C_ADDR@addr 0060  SD_SPI_AsyncWriteTasks@preEraseBlockCount 008C  
                     ??_interrupt_handler 002B                __end_of_SPI1_ExchangeBlock 827A  
                     __end_of_RED_LED_OFF 91D2                   SD_SPI_SectorRead@buffer 0091  
                               _fxls_init 7232                               _create_name 3E0A  
                                _LATAbits 3FBA                         find_volume@szbfat 0116  
                               f_open@bcs 0156                                 f_open@ofs 015E  
                               f_open@res 0168                         find_volume@sysect 011C  
                 SD_SPI_SectorRead@result 0097                                  _PIE3bits 3993  
                                _PIE5bits 3995                  __end_of_get_message_type 8E68  
                 SD_SPI_SectorRead@status 0098            SD_SPI_SectorWrite@sector_count 0096  
                            _SPI1CON0bits 3D14                      fxls_init@int_pin_sel 0072  
                             _find_volume 001E                               _disk_status 86B4  
                           ??_move_window 00CE                                 f_mount@fs 00E7  
                               f_mount@rp 00ED                           follow_path@path 0135  
                           _I2C1STAT1bits 3D78                                  _PIR1bits 39A1  
                                _PIR2bits 39A2                                  _SPI1BAUD 3D19  
                                _PIR3bits 39A3                                  _SPI1CON0 3D14  
                                _SPI1CON1 3D15                                  _SPI1CON2 3D16  
                                _PIR5bits 39A5                                  i2u563_40 9036  
                                i2u563_41 9032             SD_SPI_AsyncReadTasks@response 0087  
                               _spiMaster FF95                      i2c_read_reg8@address 0069  
                           move_window@fs 00C8                                  _RXB0SIDH 3F81  
                                _RXB0SIDL 3F82                                  _RXB1SIDH 37F1  
                                _RXB1SIDL 37F2                    __end_of_RED_LED_TOGGLE 91C2  
                           ??_timer0_init 0060                                ?_dir_clear 00C8  
                               dir_find@c 0131                                ?_dir_alloc 012D  
                         remove_chain@obj 00F4                           remove_chain@res 010C  
                                _TXB0SIDH 37E1                                  _TXB0SIDL 37E2  
                         remove_chain@nxt 0108                                ?_clst2sect 006C  
                                _RXM0SIDH 37B8                                  _RXM0SIDL 37B9  
                               f_sync@dir 00D6                                  _RXM1SIDH 37BC  
                                _RXM1SIDL 37BD                                 f_sync@res 00D5  
                               dir_sdi@dp 00ED                                 dir_sdi@fs 0108  
                         _can_msg_handler 7E08                                ?_disk_read 00A8  
                               _vfpfcnvrt 5F28                 __end_of_interrupt_handler 8C2C  
                               f_write@cc 0134                                 f_write@bw 011D  
                               f_write@fp 0117                                 f_write@fs 0140  
             SD_SPI_MediaInitialize@count 00A8               SD_SPI_MediaInitialize@index 00A6  
                               get_fat@bc 00E9                                 get_fat@fs 00EB  
                               get_fat@wc 00E3                  _SD_SPI_DelayMilliseconds 8728  
                              _ADCON0bits 3EF8                                _ADCON1bits 3EF9  
                              _ADCON2bits 3EFA                                _ADCON3bits 3EFB  
                 __end_of_send_status_err 8DEE             __end_of_SD_SPI_AsyncReadTasks 4B78  
                            ??_disk_ioctl 0063                      i2c_read_reg8@success 006A  
                  ?_SD_SPI_IsMediaPresent 0001                                  i2_memcpy 8B24  
                            ??_disk_write 00B3                     ?_can_handle_interrupt 0001  
                    srb_init@element_size 006D                   _timer0_handle_interrupt 9022  
                             ??_i2c_write 0062                                st_clust@cl 0068  
                              vfpfcnvrt@c 0076                                st_clust@fs 0064  
                        ?_SPI1_Initialize 0001                               _INTCON0bits 3FD2  
                       ___lmul@multiplier 0060                       __end_of_SDSLOW_open 91B4  
                               copy_data0 87AA                                _CANCONbits 3F8F  
                               ld_word@rv 0065                                  _i2c_init 8F80  
                                _i2c_read 77A6                                ?_fxls_init 0001  
                       SD_SendCmd@address 006B             send_status_err@board_stat_msg 0077  
                              put_fat@res 00F3                                put_fat@val 00D9  
                       move_window@sector 00CA              send_status_ok@board_stat_msg 01B5  
                         dir_next@stretch 00FC                                _ADSTATbits 3EFC  
                                __Hrparam 0000                                 memcpy@tmp 0066  
         __end_of_SD_SPI_IsWriteProtected 91C6                                vfprintf@ap 007A  
                                __Lrparam 0000                                vfprintf@fp 0077  
        can_handle_interrupt@rcvd_msg_753 0020                               _follow_path 5392  
                      __end_of_disk_ioctl 908E                           ?_RED_LED_TOGGLE 0001  
                      __end_of_disk_write 88D6                         SD_SendCmd@timeout 0076  
                 ??_OSCILLATOR_Initialize 0060                                st_word@val 0062  
                              st_word@ptr 0060                                _CIOCONbits 3700  
                              ?_vfpfcnvrt 006A                       __end_of_move_window 7E08  
                             _SDFAST_open 91A4              ??_can_generate_timing_params 0066  
                               millis@res 0064                         txb_init@pool_size 0071  
                     __end_of_timer0_init 90CE                                  dbc_2nd@c 0062  
                                _can_init 689A                                  _can_send 7488  
                              sprintf@fmt 007F                                  dbc_1st@c 0062  
             _SD_SPI_MediaInitialize$6530 00A1                                  _check_fs 6CF6  
                              _T0CON0bits 3FB8                     SD_SendCmd@longTimeout 0072  
                              _T0CON1bits 3FB9                        send_status_ok@time 01B1  
                      send_status_ok@text 0191                              _I2C1CON0bits 3D73  
                                __pivt0x8 0008                           ___lwdiv@divisor 0062  
                         dir_register@res 013D                               _RED_LED_OFF 91CE  
                           dir_clear@ibuf 00D0                             dir_clear@clst 00CA  
                         ___lwdiv@counter 0064                             dir_clear@sect 00D2  
                                __ptext10 91E2                                  __ptext11 8F14  
                                __ptext20 3E0A                                  __ptext12 8122  
                                __ptext21 9182                                  __ptext13 7F9E  
                                __ptext30 7C58                                  __ptext22 918E  
                                __ptext14 0ED2                                  __ptext31 2DF4  
                                __ptext23 8640                                  __ptext15 1F40  
                                __ptext40 906C                                  __ptext32 33E0  
                                __ptext24 78AA                                  __ptext16 5646  
                                __ptext41 8C2C                                  __ptext33 4B78  
                                __ptext25 854A                                  __ptext17 5392  
                                __ptext50 7232                                  __ptext42 8F4A  
                                __ptext34 8B7E                                  __ptext26 6B86  
                                __ptext18 83B8                                  __ptext51 8FD6  
                                __ptext43 91BA                                  __ptext35 5CFE  
                                __ptext27 4F90                                  __ptext19 66F2  
                                __ptext60 8064                                  __ptext52 90CE  
                                __ptext44 8DAC                                  __ptext36 735E  
                                __ptext28 42B4                                  __ptext61 6A14  
                                __ptext53 90EC                                  __ptext45 8FB0  
                                __ptext37 5AC4                                  __ptext29 6E56  
                                __ptext70 6CF6                                  __ptext62 86B4  
                                __ptext54 893E                                  __ptext46 7488  
                                __ptext38 8442                                  __ptext71 7D34  
                                __ptext63 91C2                                  __ptext55 76A2  
                                __ptext47 759A                                  __ptext39 8E68  
                                __ptext80 89A4                                  __ptext72 6528  
                                __ptext64 91C6                                  __ptext56 77A6  
                                __ptext48 8EA2                                  __ptext81 81D4  
                                __ptext73 886E                                  __ptext65 915A  
                                __ptext57 8F80                                  __ptext49 91BE  
                                __ptext90 827A                                  __ptext82 3904  
                                __ptext74 6FAE                                  __ptext66 8D20  
                                __ptext58 7A9A                                  __ptext91 689A  
                                __ptext83 8AC8                                  __ptext75 272E  
                                __ptext67 1724                                  __ptext59 001E  
                                __ptext92 6334                                  __ptext84 8FFC  
                                __ptext76 88D6                                  __ptext68 8802  
                                _dir_find 66F2                                  __ptext93 9170  
                                __ptext85 91A4                                  __ptext77 70F0  
                                __ptext69 8728                                  __ptext94 9128  
                                __ptext86 91AC                                  __ptext78 91B4  
                                __ptext95 9048                                  __ptext87 79AC  
                                __ptext79 4726                                  __ptext96 8A68  
                                __ptext88 8320                                  __ptext97 9142  
                                __ptext89 8DEE                                  __ptext98 910A  
                                __ptext99 8A06                                  _dir_next 42B4  
                           dir_alloc@nent 012F                          ?_disk_initialize 0001  
                                _ld_clust 83B8                          ?_BLUE_LED_TOGGLE 0001  
                                _ld_dword 8064                            sync_window@res 00C7  
                              sync_fs@res 00D2                              _remove_chain 5646  
                           ?_BLUE_LED_OFF 0001                          find_volume@bsect 0131  
                        find_volume@nclst 0129   SD_SPI_AsyncReadTasks@longTimeoutCounter 01CF  
                        find_volume@tsect 0124                                  f_open@dj 0169  
                                f_open@cl 015A                                  f_open@fp 0141  
                                f_open@fs 0166                                  f_open@dw 014E  
                                f_open@sc 0152                   __end_of_can_msg_handler 7ED8  
                                _validate 735E                                  isa$xinst 0000  
                                _srb_init 84C8                  can_init@receive_callback 0062  
                                f_sync@fp 00D3                                  f_sync@fs 00D8  
             ?_can_generate_timing_params 0060                         fxls_init@sys_mode 0075  
                             ??_dir_clear 00CE                               ??_dir_alloc 0131  
                                _st_clust 8C2C                                  _st_dword 8442  
                             ??_clst2sect 0072                                  _vfprintf 8CD4  
                           ??_sync_window 00B7                                  _txb_init 8EDC  
                             ??_disk_read 00B0               SPI1_ExchangeBlock@blockSize 0062  
                          _millis_counter 003E                               _RXB0DLCbits 3F85  
                        ?_send_status_err 0001                               _RXB1DLCbits 37F5  
                           _GREEN_LED_OFF 91D6                               _RXB0CONbits 3F80  
               ??_timer0_handle_interrupt 0001                               _SDSLOW_open 91AC  
                             _RXB1CONbits 37F0                                  mem_cmp@d 0068  
                                mem_cmp@r 006C                                  mem_cmp@s 006A  
                  ??_can_handle_interrupt 0011                                 put_fat@bc 00F1  
                                mem_cpy@d 0066                                 put_fat@fs 00D3  
                                mem_cpy@s 0068                                  mem_set@d 0066  
                                memcpy@d1 0060                                  memcpy@s1 0062  
                    txb_init@can_tx_ready 0075                             clst2sect@clst 006E  
                                intlevel2 0000                                 sprintf@ap 0085  
                         _fxls_get_whoami 90CE                            dir_register@dp 0139  
                          dir_register@fs 013B              can_handle_interrupt@rcvd_msg 0015  
                             ??_fxls_init 006C                                _RED_LED_ON 91CA  
                          ??_BLUE_LED_OFF 0001                              dir_clear@szb 00D6  
                        ___lldiv@dividend 0060                   ?_PIN_MANAGER_Initialize 0001  
                            dir_alloc@res 0138                               _TXB0DLCbits 37E5  
                           sync_window@fs 00B5      SD_SPI_AsyncReadTasks@SingleBlockRead 004C  
                             f_mount@path 00E9                               _TXB0CONbits 37E0  
                               sync_fs@fs 00C8                              ?_BLUE_LED_ON 0001  
                             _move_window 7D34                    _SD_SPI_MediaInitialize 1724  
                              _SPI1SDIPPS 3AE1                                _SPI1SCKPPS 3AE0  
                      i2c_read_reg8@value 0067                       txb_init@can_send_fp 0073  
                             _timer0_init 90B0                             _overflow_flag 004E  
                             ??_vfpfcnvrt 006D                                  put_fat@p 00EF  
                              _SPI1_Close 91B4                            ?_GREEN_LED_OFF 0001  
       SD_SPI_MediaInitialize@c_size_mult 00A5                             ?_dir_register 0139  
         SD_SPI_MediaInitialize@block_len 00A7                                  sprintf@f 0086  
                                sprintf@s 007D                               dir_clear@fs 00C8  
                         fxls_init@int_en 0071                               dir_alloc@dp 012D  
                             dir_alloc@fs 0134                          ___lldiv@quotient 0068  
                     __end_of_sync_window 66F2                               dir_find@res 0132  
                       remove_chain@pclst 00FA                          i2c_write@address 0063  
                           ?_create_chain 00F4                         i2c_read_reg8@data 006B  
                            dir_next@clst 0129                          _create_name$2961 006E  
                        _create_name$2966 0070                             ?_GREEN_LED_ON 0001  
                             clst2sect@fs 006C                               dir_sdi@clst 0104  
              __end_of_SD_SPI_SectorWrite 70F0            __end_of_PIN_MANAGER_Initialize 8AC8  
                       ??_ADCC_Initialize 0060                          i2c_read_reg8@reg 0066  
                            ?_create_name 0068                               dir_next@ofs 0123  
                            f_write@csect 0132                          i2c_write@timeout 0064  
         __end_of_timer0_handle_interrupt 9048                              f_write@wbuff 012F  
                            _put_fat$2606 00EB                              _put_fat$2607 00ED  
                    fxls_get_prod_rev@res 006C                               f_write@buff 0119  
                             f_write@clst 013A                                _SD_SendCmd 3904  
                             f_write@sect 0136                              ?_find_volume 00DA  
                             f_write@wcnt 013E                             ?_get_ldnumber 0060  
                SD_SPI_SectorWrite@buffer 0094                         ?_get_message_type 0001  
                            ?_disk_status 0001                __end_of_spi1_configuration FFCC  
              ??_SD_SPI_DelayMilliseconds 0061                          ?_can_msg_handler 000A  
                  SD_SPI_SectorWrite@info 009E  
