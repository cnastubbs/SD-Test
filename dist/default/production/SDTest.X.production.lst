

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 28 14:46:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   126   000000                     
   127                           ; Generated 12/10/2023 GMT
   128                           ; 
   129                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution. Publication is not required when
   143                           ;        this file is used in an embedded application.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F26K83 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161   000000                     
   162 ;; Function _can_send_rdy is unused but had its address taken
   163   000000                     
   164 ;; Function _SPI1_WriteBlock is unused but had its address taken
   165   000000                     
   166 ;; Function _SPI1_ReadBlock is unused but had its address taken
   167   000000                     
   168 ;; Function _SPI1_WriteByte is unused but had its address taken
   169   000000                     
   170 ;; Function _SPI1_ReadByte is unused but had its address taken
   171   000000                     
   172                           	psect	idataCOMRAM
   173   008CE0                     __pidataCOMRAM:
   174                           	callstack 0
   175                           
   176                           ;initializer for _mediaInformation
   177   008CE0  00                 	db	0
   178   008CE1  0200               	dw	512
   179   008CE3  00                 	db	0
   180   008CE4  0000               	dw	0
   181   008CE6  0000               	dw	0
   182   008CE8  00                 	db	0
   183                           
   184                           	psect	mediumconst
   185   00FEC8                     __pmediumconst:
   186                           	callstack 0
   187   00FEC8  00                 	db	0
   188   00FEC9                     _ExCvt:
   189                           	callstack 0
   190   00FEC9  80                 	db	128
   191   00FECA  9A                 	db	154
   192   00FECB  45                 	db	69
   193   00FECC  41                 	db	65
   194   00FECD  8E                 	db	142
   195   00FECE  41                 	db	65
   196   00FECF  8F                 	db	143
   197   00FED0  80                 	db	128
   198   00FED1  45                 	db	69
   199   00FED2  45                 	db	69
   200   00FED3  45                 	db	69
   201   00FED4  49                 	db	73
   202   00FED5  49                 	db	73
   203   00FED6  49                 	db	73
   204   00FED7  8E                 	db	142
   205   00FED8  8F                 	db	143
   206   00FED9  90                 	db	144
   207   00FEDA  92                 	db	146
   208   00FEDB  92                 	db	146
   209   00FEDC  4F                 	db	79
   210   00FEDD  99                 	db	153
   211   00FEDE  4F                 	db	79
   212   00FEDF  55                 	db	85
   213   00FEE0  55                 	db	85
   214   00FEE1  59                 	db	89
   215   00FEE2  99                 	db	153
   216   00FEE3  9A                 	db	154
   217   00FEE4  9B                 	db	155
   218   00FEE5  9C                 	db	156
   219   00FEE6  9D                 	db	157
   220   00FEE7  9E                 	db	158
   221   00FEE8  9F                 	db	159
   222   00FEE9  41                 	db	65
   223   00FEEA  49                 	db	73
   224   00FEEB  4F                 	db	79
   225   00FEEC  55                 	db	85
   226   00FEED  A5                 	db	165
   227   00FEEE  A5                 	db	165
   228   00FEEF  A6                 	db	166
   229   00FEF0  A7                 	db	167
   230   00FEF1  A8                 	db	168
   231   00FEF2  A9                 	db	169
   232   00FEF3  AA                 	db	170
   233   00FEF4  AB                 	db	171
   234   00FEF5  AC                 	db	172
   235   00FEF6  AD                 	db	173
   236   00FEF7  AE                 	db	174
   237   00FEF8  AF                 	db	175
   238   00FEF9  B0                 	db	176
   239   00FEFA  B1                 	db	177
   240   00FEFB  B2                 	db	178
   241   00FEFC  B3                 	db	179
   242   00FEFD  B4                 	db	180
   243   00FEFE  B5                 	db	181
   244   00FEFF  B6                 	db	182
   245   00FF00  B7                 	db	183
   246   00FF01  B8                 	db	184
   247   00FF02  B9                 	db	185
   248   00FF03  BA                 	db	186
   249   00FF04  BB                 	db	187
   250   00FF05  BC                 	db	188
   251   00FF06  BD                 	db	189
   252   00FF07  BE                 	db	190
   253   00FF08  BF                 	db	191
   254   00FF09  C0                 	db	192
   255   00FF0A  C1                 	db	193
   256   00FF0B  C2                 	db	194
   257   00FF0C  C3                 	db	195
   258   00FF0D  C4                 	db	196
   259   00FF0E  C5                 	db	197
   260   00FF0F  C6                 	db	198
   261   00FF10  C7                 	db	199
   262   00FF11  C8                 	db	200
   263   00FF12  C9                 	db	201
   264   00FF13  CA                 	db	202
   265   00FF14  CB                 	db	203
   266   00FF15  CC                 	db	204
   267   00FF16  CD                 	db	205
   268   00FF17  CE                 	db	206
   269   00FF18  CF                 	db	207
   270   00FF19  D0                 	db	208
   271   00FF1A  D1                 	db	209
   272   00FF1B  D2                 	db	210
   273   00FF1C  D3                 	db	211
   274   00FF1D  D4                 	db	212
   275   00FF1E  D5                 	db	213
   276   00FF1F  D6                 	db	214
   277   00FF20  D7                 	db	215
   278   00FF21  D8                 	db	216
   279   00FF22  D9                 	db	217
   280   00FF23  DA                 	db	218
   281   00FF24  DB                 	db	219
   282   00FF25  DC                 	db	220
   283   00FF26  DD                 	db	221
   284   00FF27  DE                 	db	222
   285   00FF28  DF                 	db	223
   286   00FF29  E0                 	db	224
   287   00FF2A  E1                 	db	225
   288   00FF2B  E2                 	db	226
   289   00FF2C  E3                 	db	227
   290   00FF2D  E4                 	db	228
   291   00FF2E  E5                 	db	229
   292   00FF2F  E6                 	db	230
   293   00FF30  E7                 	db	231
   294   00FF31  E8                 	db	232
   295   00FF32  E9                 	db	233
   296   00FF33  EA                 	db	234
   297   00FF34  EB                 	db	235
   298   00FF35  EC                 	db	236
   299   00FF36  ED                 	db	237
   300   00FF37  EE                 	db	238
   301   00FF38  EF                 	db	239
   302   00FF39  F0                 	db	240
   303   00FF3A  F1                 	db	241
   304   00FF3B  F2                 	db	242
   305   00FF3C  F3                 	db	243
   306   00FF3D  F4                 	db	244
   307   00FF3E  F5                 	db	245
   308   00FF3F  F6                 	db	246
   309   00FF40  F7                 	db	247
   310   00FF41  F8                 	db	248
   311   00FF42  F9                 	db	249
   312   00FF43  FA                 	db	250
   313   00FF44  FB                 	db	251
   314   00FF45  FC                 	db	252
   315   00FF46  FD                 	db	253
   316   00FF47  FE                 	db	254
   317   00FF48  FF                 	db	255
   318   00FF49                     __end_of_ExCvt:
   319                           	callstack 0
   320   00FF49                     _sdmmc_cmdtable:
   321                           	callstack 0
   322   00FF49  00                 	db	0
   323   00FF4A  95                 	db	149
   324   00FF4B  00                 	db	0
   325   00FF4C  00                 	db	0
   326   00FF4D  01                 	db	1
   327   00FF4E  F9                 	db	249
   328   00FF4F  00                 	db	0
   329   00FF50  00                 	db	0
   330   00FF51  08                 	db	8
   331   00FF52  87                 	db	135
   332   00FF53  04                 	db	4
   333   00FF54  00                 	db	0
   334   00FF55  09                 	db	9
   335   00FF56  AF                 	db	175
   336   00FF57  00                 	db	0
   337   00FF58  01                 	db	1
   338   00FF59  0A                 	db	10
   339   00FF5A  1B                 	db	27
   340   00FF5B  00                 	db	0
   341   00FF5C  01                 	db	1
   342   00FF5D  0C                 	db	12
   343   00FF5E  C3                 	db	195
   344   00FF5F  01                 	db	1
   345   00FF60  00                 	db	0
   346   00FF61  0D                 	db	13
   347   00FF62  AF                 	db	175
   348   00FF63  02                 	db	2
   349   00FF64  00                 	db	0
   350   00FF65  10                 	db	16
   351   00FF66  FF                 	db	255
   352   00FF67  00                 	db	0
   353   00FF68  00                 	db	0
   354   00FF69  11                 	db	17
   355   00FF6A  FF                 	db	255
   356   00FF6B  00                 	db	0
   357   00FF6C  01                 	db	1
   358   00FF6D  12                 	db	18
   359   00FF6E  FF                 	db	255
   360   00FF6F  00                 	db	0
   361   00FF70  01                 	db	1
   362   00FF71  18                 	db	24
   363   00FF72  FF                 	db	255
   364   00FF73  00                 	db	0
   365   00FF74  01                 	db	1
   366   00FF75  19                 	db	25
   367   00FF76  FF                 	db	255
   368   00FF77  00                 	db	0
   369   00FF78  01                 	db	1
   370   00FF79  20                 	db	32
   371   00FF7A  FF                 	db	255
   372   00FF7B  00                 	db	0
   373   00FF7C  00                 	db	0
   374   00FF7D  21                 	db	33
   375   00FF7E  FF                 	db	255
   376   00FF7F  00                 	db	0
   377   00FF80  00                 	db	0
   378   00FF81  26                 	db	38
   379   00FF82  DF                 	db	223
   380   00FF83  01                 	db	1
   381   00FF84  00                 	db	0
   382   00FF85  37                 	db	55
   383   00FF86  73                 	db	115
   384   00FF87  00                 	db	0
   385   00FF88  00                 	db	0
   386   00FF89  3A                 	db	58
   387   00FF8A  25                 	db	37
   388   00FF8B  04                 	db	4
   389   00FF8C  00                 	db	0
   390   00FF8D  3B                 	db	59
   391   00FF8E  25                 	db	37
   392   00FF8F  00                 	db	0
   393   00FF90  00                 	db	0
   394   00FF91  29                 	db	41
   395   00FF92  FF                 	db	255
   396   00FF93  04                 	db	4
   397   00FF94  00                 	db	0
   398   00FF95  17                 	db	23
   399   00FF96  FF                 	db	255
   400   00FF97  00                 	db	0
   401   00FF98  00                 	db	0
   402   00FF99                     __end_of_sdmmc_cmdtable:
   403                           	callstack 0
   404   00FF99                     _spiMaster:
   405                           	callstack 0
   406   00FF99  FA                 	db	low _SPI1_Close
   407   00FF9A  8C                 	db	high _SPI1_Close
   408   00FF9B  EA                 	db	low _SDFAST_open
   409   00FF9C  8C                 	db	high _SDFAST_open
   410   00FF9D  42                 	db	low _SPI1_ExchangeByte
   411   00FF9E  8B                 	db	high _SPI1_ExchangeByte
   412   00FF9F  E0                 	db	low _SPI1_ExchangeBlock
   413   00FFA0  7D                 	db	high _SPI1_ExchangeBlock
   414   00FFA1  00                 	db	0
   415   00FFA2  00                 	db	0
   416   00FFA3  00                 	db	0
   417   00FFA4  00                 	db	0
   418   00FFA5  00                 	db	0
   419   00FFA6  00                 	db	0
   420   00FFA7  00                 	db	0
   421   00FFA8  00                 	db	0
   422   00FFA9  00                 	db	0
   423   00FFAA  00                 	db	0
   424   00FFAB  00                 	db	0
   425   00FFAC  00                 	db	0
   426   00FFAD  FA                 	db	low _SPI1_Close
   427   00FFAE  8C                 	db	high _SPI1_Close
   428   00FFAF  F2                 	db	low _SDSLOW_open
   429   00FFB0  8C                 	db	high _SDSLOW_open
   430   00FFB1  42                 	db	low _SPI1_ExchangeByte
   431   00FFB2  8B                 	db	high _SPI1_ExchangeByte
   432   00FFB3  E0                 	db	low _SPI1_ExchangeBlock
   433   00FFB4  7D                 	db	high _SPI1_ExchangeBlock
   434   00FFB5  00                 	db	0
   435   00FFB6  00                 	db	0
   436   00FFB7  00                 	db	0
   437   00FFB8  00                 	db	0
   438   00FFB9  00                 	db	0
   439   00FFBA  00                 	db	0
   440   00FFBB  00                 	db	0
   441   00FFBC  00                 	db	0
   442   00FFBD  00                 	db	0
   443   00FFBE  00                 	db	0
   444   00FFBF  00                 	db	0
   445   00FFC0  00                 	db	0
   446   00FFC1                     __end_of_spiMaster:
   447                           	callstack 0
   448   00FFC1                     _spi1_configuration:
   449                           	callstack 0
   450   00FFC1  02                 	db	2
   451   00FFC2  20                 	db	32
   452   00FFC3  00                 	db	0
   453   00FFC4  01                 	db	1
   454   00FFC5  00                 	db	0
   455   00FFC6  02                 	db	2
   456   00FFC7  20                 	db	32
   457   00FFC8  00                 	db	0
   458   00FFC9  0E                 	db	14
   459   00FFCA  00                 	db	0
   460   00FFCB  02                 	db	2
   461   00FFCC  40                 	db	64
   462   00FFCD  00                 	db	0
   463   00FFCE  00                 	db	0
   464   00FFCF  00                 	db	0
   465   00FFD0                     __end_of_spi1_configuration:
   466                           	callstack 0
   467   000000                     _OSCTUNE	set	14814
   468   000000                     _OSCFRQ	set	14815
   469   000000                     _ADERRL	set	16098
   470   000000                     _ADERRH	set	16099
   471   000000                     _ADPREVL	set	16109
   472   000000                     _ADPREVH	set	16110
   473   000000                     _ADFLTRL	set	16102
   474   000000                     _ADFLTRH	set	16103
   475   000000                     _ADACCL	set	16104
   476   000000                     _ADACCH	set	16105
   477   000000                     _ADCNT	set	16107
   478   000000                     _ADRESL	set	16111
   479   000000                     _ADRESH	set	16112
   480   000000                     _ADCON0	set	16120
   481   000000                     _ADCON1	set	16121
   482   000000                     _ADPREH	set	16119
   483   000000                     _ADPREL	set	16118
   484   000000                     _ADCAP	set	16117
   485   000000                     _ADACQH	set	16116
   486   000000                     _ADPCH	set	16113
   487   000000                     _ADRPT	set	16108
   488   000000                     _ADACCU	set	16106
   489   000000                     _ADSTPTH	set	16101
   490   000000                     _ADSTPTL	set	16100
   491   000000                     _ADUTHH	set	16097
   492   000000                     _ADUTHL	set	16096
   493   000000                     _ADLTHH	set	16095
   494   000000                     _COMSTATbits	set	16272
   495   000000                     _ECANCONbits	set	16273
   496   000000                     _PIR5	set	14757
   497   000000                     _ANSELC0	set	119552
   498   000000                     _I2C1CON0bits	set	15731
   499   000000                     _I2C1ERRbits	set	15734
   500   000000                     _I2C1PIRbits	set	15737
   501   000000                     _SPI1CON0bits	set	15636
   502   000000                     _ADCON1bits	set	16121
   503   000000                     _ADSTATbits	set	16124
   504   000000                     _ADCON2bits	set	16122
   505   000000                     _ADCON3bits	set	16123
   506   000000                     _ADCON0bits	set	16120
   507   000000                     _TRISCbits	set	16324
   508   000000                     _LATA	set	16314
   509   000000                     _TRISC2	set	130594
   510   000000                     _TRISA4	set	130580
   511   000000                     _TRISA3	set	130579
   512   000000                     _TRISA2	set	130578
   513   000000                     _LATB3	set	130523
   514   000000                     _TRISB3	set	130587
   515   000000                     _LATC6	set	130534
   516   000000                     _TRISC6	set	130598
   517   000000                     _TRISC0	set	130592
   518   000000                     _TRISC1	set	130593
   519   000000                     _LATC2	set	130530
   520   000000                     _LATA4	set	130516
   521   000000                     _LATA3	set	130515
   522   000000                     _LATA2	set	130514
   523   000000                     _BRGCON1bits	set	14083
   524   000000                     _CIOCONbits	set	14080
   525   000000                     _CANSTATbits	set	16270
   526   000000                     _CANCONbits	set	16271
   527   000000                     _T0CON0bits	set	16312
   528   000000                     _INTCON0bits	set	16338
   529   000000                     _RXM0SIDH	set	14264
   530   000000                     _BRGCON3bits	set	14085
   531   000000                     _BRGCON2bits	set	14084
   532   000000                     _RXM1SIDH	set	14268
   533   000000                     _RXM0SIDL	set	14265
   534   000000                     _TXB0CONbits	set	14304
   535   000000                     _PIE5bits	set	14741
   536   000000                     _RXB0CONbits	set	16256
   537   000000                     _RXM1SIDL	set	14269
   538   000000                     _RXB0DLCbits	set	16261
   539   000000                     _RXB0SIDL	set	16258
   540   000000                     _RXB0SIDH	set	16257
   541   000000                     _PIR1bits	set	14753
   542   000000                     _PIR5bits	set	14757
   543   000000                     _TXB0DLCbits	set	14309
   544   000000                     _TXB0SIDL	set	14306
   545   000000                     _TXB0SIDH	set	14305
   546   000000                     _RXB1CONbits	set	14320
   547   000000                     _RXB1SIDH	set	14321
   548   000000                     _TXB0D0	set	14310
   549   000000                     _PMD0	set	14784
   550   000000                     _OSCCON1	set	14809
   551   000000                     _ADLTHL	set	16094
   552   000000                     _RXB0D0	set	16262
   553   000000                     _RXB1DLCbits	set	14325
   554   000000                     _RXB1SIDL	set	14322
   555   000000                     _PIE3bits	set	14739
   556   000000                     _RXB1D0	set	14326
   557   000000                     _TRISA	set	16322
   558   000000                     _LATC	set	16316
   559   000000                     _LATB	set	16315
   560   000000                     _LATAbits	set	16314
   561   000000                     _T0CON1bits	set	16313
   562   000000                     _ADACQL	set	16115
   563   000000                     _ADCLK	set	16127
   564   000000                     _ADACT	set	16126
   565   000000                     _ADREF	set	16125
   566   000000                     _ADSTAT	set	16124
   567   000000                     _ADCON3	set	16123
   568   000000                     _ADCON2	set	16122
   569   000000                     _PIR3bits	set	14755
   570   000000                     _PIR2bits	set	14754
   571   000000                     _OSCCON3	set	14811
   572   000000                     _OSCEN	set	14813
   573   000000                     _RC1PPS	set	14865
   574   000000                     _RC3PPS	set	14867
   575   000000                     _ANSELA	set	14912
   576   000000                     _ANSELB	set	14928
   577   000000                     _ANSELC	set	14944
   578   000000                     _PMD7	set	14791
   579   000000                     _PMD6	set	14790
   580   000000                     _PMD5	set	14789
   581   000000                     _PMD4	set	14788
   582   000000                     _PMD3	set	14787
   583   000000                     _PMD2	set	14786
   584   000000                     _PMD1	set	14785
   585   000000                     _TRISC	set	16324
   586   000000                     _TRISB	set	16323
   587   000000                     _INLVLC	set	14948
   588   000000                     _SLRCONC	set	14947
   589   000000                     _ODCONC	set	14946
   590   000000                     _WPUC	set	14945
   591   000000                     _WPUE	set	14977
   592   000000                     _INLVLB	set	14932
   593   000000                     _SLRCONB	set	14931
   594   000000                     _ODCONB	set	14930
   595   000000                     _WPUB	set	14929
   596   000000                     _INLVLA	set	14916
   597   000000                     _SLRCONA	set	14915
   598   000000                     _ODCONA	set	14914
   599   000000                     _WPUA	set	14913
   600   000000                     _INLVLE	set	14980
   601   000000                     _SPI1SCKPPS	set	15072
   602   000000                     _CANRXPPS	set	15085
   603   000000                     _CLKRCON	set	15589
   604   000000                     _SPI1RXB	set	15632
   605   000000                     _SPI1TXB	set	15633
   606   000000                     _SPI1TCNTL	set	15634
   607   000000                     _SPI1CON0	set	15636
   608   000000                     _SPI1SDIPPS	set	15073
   609   000000                     _RC5PPS	set	14869
   610   000000                     _SPI1BAUD	set	15641
   611   000000                     _SPI1CLK	set	15644
   612   000000                     _SPI1CON2	set	15638
   613   000000                     _SPI1CON1	set	15637
   614   000000                     _I2C1RXB	set	15722
   615   000000                     _I2C1TXB	set	15723
   616   000000                     _I2C1CNT	set	15724
   617   000000                     _I2C1ADB1	set	15726
   618   000000                     _I2C1CON0	set	15731
   619   000000                     _I2C1STAT1bits	set	15736
   620   000000                     _I2C1ERR	set	15734
   621   000000                     _I2C1PIR	set	15737
   622   000000                     _I2C1CLK	set	15739
   623   000000                     _I2C1CON2	set	15733
   624   000000                     _I2C1CON1	set	15732
   625   000000                     _CLKRCLK	set	15590
   626   00FFD0                     STR_1:
   627   00FFD0  22                 	db	34
   628   00FFD1  2A                 	db	42
   629   00FFD2  2B                 	db	43
   630   00FFD3  2C                 	db	44
   631   00FFD4  3A                 	db	58	;':'
   632   00FFD5  3B                 	db	59	;';'
   633   00FFD6  3C                 	db	60	;'<'
   634   00FFD7  3D                 	db	61	;'='
   635   00FFD8  3E                 	db	62	;'>'
   636   00FFD9  3F                 	db	63	;'?'
   637   00FFDA  5B                 	db	91	;'['
   638   00FFDB  5D                 	db	93	;']'
   639   00FFDC  7C                 	db	124
   640   00FFDD  7F                 	db	127
   641   00FFDE  00                 	db	0
   642   00FFDF                     STR_9:
   643   00FFDF  42                 	db	66	;'B'
   644   00FFE0  45                 	db	69	;'E'
   645   00FFE1  47                 	db	71	;'G'
   646   00FFE2  49                 	db	73	;'I'
   647   00FFE3  4E                 	db	78	;'N'
   648   00FFE4  20                 	db	32
   649   00FFE5  4C                 	db	76	;'L'
   650   00FFE6  4F                 	db	79	;'O'
   651   00FFE7  47                 	db	71	;'G'
   652   00FFE8  0D                 	db	13
   653   00FFE9  0A                 	db	10
   654   00FFEA  00                 	db	0
   655   00FFEB                     STR_8:
   656   00FFEB  44                 	db	68	;'D'
   657   00FFEC  61                 	db	97	;'a'
   658   00FFED  74                 	db	116	;'t'
   659   00FFEE  61                 	db	97	;'a'
   660   00FFEF  2E                 	db	46
   661   00FFF0  74                 	db	116	;'t'
   662   00FFF1  78                 	db	120	;'x'
   663   00FFF2  74                 	db	116	;'t'
   664   00FFF3  00                 	db	0
   665   00FFF4                     STR_5:
   666   00FFF4  46                 	db	70	;'F'
   667   00FFF5  41                 	db	65	;'A'
   668   00FFF6  54                 	db	84	;'T'
   669   00FFF7  33                 	db	51	;'3'
   670   00FFF8  32                 	db	50	;'2'
   671   00FFF9  00                 	db	0
   672   00FFFA                     STR_3:
   673   00FFFA  46                 	db	70	;'F'
   674   00FFFB  41                 	db	65	;'A'
   675   00FFFC  54                 	db	84	;'T'
   676   00FFFD  00                 	db	0
   677   00FFFE  00                 	db	0	; dummy byte at the end
   678   000000                     
   679                           ; #config settings
   680                           
   681                           	psect	cinit
   682   0083A2                     __pcinit:
   683                           	callstack 0
   684   0083A2                     start_initialization:
   685                           	callstack 0
   686   0083A2                     __initialization:
   687                           	callstack 0
   688                           
   689                           ; Initialize objects allocated to COMRAM (9 bytes)
   690                           ; load TBLPTR registers with __pidataCOMRAM
   691   0083A2  0EE0               	movlw	low __pidataCOMRAM
   692   0083A4  6EF6               	movwf	tblptrl,c
   693   0083A6  0E8C               	movlw	high __pidataCOMRAM
   694   0083A8  6EF7               	movwf	tblptrh,c
   695   0083AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   696   0083AC  6EF8               	movwf	tblptru,c
   697   0083AE  EE00  F04F         	lfsr	0,__pdataCOMRAM
   698   0083B2  EE10 F009          	lfsr	1,9
   699   0083B6                     copy_data0:
   700   0083B6  0009               	tblrd		*+
   701   0083B8  006F FFD7 FFEE     	movff	tablat,postinc0
   702   0083BE  50E5               	movf	postdec1,w,c
   703   0083C0  50E1               	movf	fsr1l,w,c
   704   0083C2  E1F9               	bnz	copy_data0
   705                           
   706                           ; Clear objects allocated to BIGRAM (1109 bytes)
   707   0083C4  EE00  F264         	lfsr	0,__pbssBIGRAM
   708   0083C8  EE11 F055          	lfsr	1,1109
   709   0083CC                     clear_0:
   710   0083CC  6AEE               	clrf	postinc0,c
   711   0083CE  50E5               	movf	postdec1,w,c
   712   0083D0  50E1               	movf	fsr1l,w,c
   713   0083D2  E1FC               	bnz	clear_0
   714   0083D4  50E2               	movf	fsr1h,w,c
   715   0083D6  E1FA               	bnz	clear_0
   716                           
   717                           ; Clear objects allocated to BANK2 (100 bytes)
   718   0083D8  EE00  F200         	lfsr	0,__pbssBANK2
   719   0083DC  0E64               	movlw	100
   720   0083DE                     clear_1:
   721   0083DE  6AEE               	clrf	postinc0,c
   722   0083E0  06E8               	decf	wreg,f,c
   723   0083E2  E1FD               	bnz	clear_1
   724                           
   725                           ; Clear objects allocated to BANK1 (39 bytes)
   726   0083E4  EE00  F1B3         	lfsr	0,__pbssBANK1
   727   0083E8  0E27               	movlw	39
   728   0083EA                     clear_2:
   729   0083EA  6AEE               	clrf	postinc0,c
   730   0083EC  06E8               	decf	wreg,f,c
   731   0083EE  E1FD               	bnz	clear_2
   732                           
   733                           ; Clear objects allocated to COMRAM (34 bytes)
   734   0083F0  EE00  F02D         	lfsr	0,__pbssCOMRAM
   735   0083F4  0E22               	movlw	34
   736   0083F6                     clear_3:
   737   0083F6  6AEE               	clrf	postinc0,c
   738   0083F8  06E8               	decf	wreg,f,c
   739   0083FA  E1FD               	bnz	clear_3
   740                           
   741                           ;
   742                           ; Setup IVTBASE
   743                           ;
   744   0083FC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   745   0083FE  6ED5               	movwf	213,c
   746   008400  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   747   008402  6ED6               	movwf	214,c
   748   008404  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   749   008406  6ED7               	movwf	215,c
   750   008408                     end_of_initialization:
   751                           	callstack 0
   752   008408                     __end_of__initialization:
   753                           	callstack 0
   754   008408  0100               	movlb	0
   755   00840A  EF44  F02C         	goto	_main	;jump to C main() function
   756                           
   757                           	psect	bssCOMRAM
   758   00002D                     __pbssCOMRAM:
   759                           	callstack 0
   760   00002D                     _ioInfo:
   761                           	callstack 0
   762   00002D                     	ds	13
   763   00003A                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   764                           	callstack 0
   765   00003A                     	ds	4
   766   00003E                     _millis_counter:
   767                           	callstack 0
   768   00003E                     	ds	4
   769   000042                     SD_SPI_AsyncWriteTasks@blockCounter:
   770                           	callstack 0
   771   000042                     	ds	2
   772   000044                     SD_SPI_AsyncReadTasks@blockCounter:
   773                           	callstack 0
   774   000044                     	ds	2
   775   000046                     _can_rcv_cb:
   776                           	callstack 0
   777   000046                     	ds	2
   778   000048                     _seen_can_message:
   779                           	callstack 0
   780   000048                     	ds	1
   781   000049                     SD_SPI_AsyncWriteTasks@command:
   782                           	callstack 0
   783   000049                     	ds	1
   784   00004A                     SD_SPI_AsyncWriteTasks@data_byte:
   785                           	callstack 0
   786   00004A                     	ds	1
   787   00004B                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   788                           	callstack 0
   789   00004B                     	ds	1
   790   00004C                     _CurrVol:
   791                           	callstack 0
   792   00004C                     	ds	1
   793   00004D                     _overflow_flag:
   794                           	callstack 0
   795   00004D                     	ds	1
   796   00004E                     timer0_handle_interrupt@internal_count:
   797                           	callstack 0
   798   00004E                     	ds	1
   799                           
   800                           	psect	dataCOMRAM
   801   00004F                     __pdataCOMRAM:
   802                           	callstack 0
   803   00004F                     _mediaInformation:
   804                           	callstack 0
   805   00004F                     	ds	9
   806                           
   807                           	psect	bssBANK1
   808   0001B3                     __pbssBANK1:
   809                           	callstack 0
   810   0001B3                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   811                           	callstack 0
   812   0001B3                     	ds	4
   813   0001B7                     _ctx:
   814                           	callstack 0
   815   0001B7                     	ds	4
   816   0001BB                     	ds	3
   817   0001BE                     	ds	2
   818   0001C0                     _Fsid:
   819                           	callstack 0
   820   0001C0                     	ds	2
   821   0001C2                     _FatFs@ff$F2407:
   822                           	callstack 0
   823   0001C2                     	ds	2
   824   0001C4                     _buf@can_tx_buffer$F1072:
   825                           	callstack 0
   826   0001C4                     	ds	10
   827   0001CE                     _buf:
   828                           	callstack 0
   829   0001CE                     	ds	10
   830   0001D8                     _bw:
   831                           	callstack 0
   832   0001D8                     	ds	2
   833                           
   834                           	psect	bssBANK2
   835   000200                     __pbssBANK2:
   836                           	callstack 0
   837   000200                     _tx_pool:
   838                           	callstack 0
   839   000200                     	ds	100
   840                           
   841                           	psect	bssBIGRAM
   842   000264                     __pbssBIGRAM:
   843                           	callstack 0
   844   000264                     _FatFs:
   845                           	callstack 0
   846   000264                     	ds	563
   847   000497                     _Fil:
   848                           	callstack 0
   849   000497                     	ds	546
   850                           
   851                           	psect	cstackBANK1
   852   000100                     __pcstackBANK1:
   853                           	callstack 0
   854   000100                     ??_remove_chain:
   855   000100                     ??_create_chain:
   856   000100                     dir_sdi@csz:
   857                           	callstack 0
   858   000100                     find_volume@br:
   859                           	callstack 0
   860                           
   861                           ; 16 bytes @ 0x0
   862   000100                     	ds	4
   863   000104                     dir_sdi@clst:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x4
   867   000104                     	ds	4
   868   000108                     create_chain@res:
   869                           	callstack 0
   870   000108                     dir_sdi@fs:
   871                           	callstack 0
   872   000108                     remove_chain@nxt:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x8
   876   000108                     	ds	1
   877   000109                     create_chain@scl:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x9
   881   000109                     	ds	3
   882   00010C                     remove_chain@res:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0xC
   886   00010C                     	ds	1
   887   00010D                     remove_chain@fs:
   888                           	callstack 0
   889   00010D                     create_chain@ncl:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0xD
   893   00010D                     	ds	3
   894   000110                     _find_volume$3099:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x10
   898   000110                     	ds	1
   899   000111                     create_chain@fs:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903   000111                     	ds	2
   904   000113                     create_chain@cs:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x13
   908   000113                     	ds	1
   909   000114                     _find_volume$3100:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913   000114                     	ds	2
   914   000116                     find_volume@szbfat:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x16
   918   000116                     	ds	1
   919   000117                     ??_dir_next:
   920   000117                     f_write@fp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x17
   924   000117                     	ds	2
   925   000119                     f_write@buff:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x19
   929   000119                     	ds	1
   930   00011A                     find_volume@pt:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x1A
   934   00011A                     	ds	1
   935   00011B                     f_write@btw:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x1B
   939   00011B                     	ds	1
   940   00011C                     find_volume@sysect:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x1C
   944   00011C                     	ds	1
   945   00011D                     f_write@bw:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x1D
   949   00011D                     	ds	2
   950   00011F                     ??_f_write:
   951                           
   952                           ; 1 bytes @ 0x1F
   953   00011F                     	ds	1
   954   000120                     find_volume@vol:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x20
   958   000120                     	ds	2
   959   000122                     find_volume@nrsv:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x22
   963   000122                     	ds	1
   964   000123                     dir_next@ofs:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x23
   968   000123                     	ds	1
   969   000124                     find_volume@tsect:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x24
   973   000124                     	ds	3
   974   000127                     dir_next@fs:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x27
   978   000127                     	ds	1
   979   000128                     find_volume@stat:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x28
   983   000128                     	ds	1
   984   000129                     dir_next@clst:
   985                           	callstack 0
   986   000129                     find_volume@nclst:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x29
   990   000129                     	ds	2
   991   00012B                     _f_write$3415:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x2B
   995   00012B                     	ds	2
   996   00012D                     dir_alloc@dp:
   997                           	callstack 0
   998   00012D                     dir_find@dp:
   999                           	callstack 0
  1000   00012D                     find_volume@fasize:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x2D
  1004   00012D                     	ds	2
  1005   00012F                     dir_alloc@nent:
  1006                           	callstack 0
  1007   00012F                     dir_find@fs:
  1008                           	callstack 0
  1009   00012F                     f_write@wbuff:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x2F
  1013   00012F                     	ds	2
  1014   000131                     ??_dir_alloc:
  1015   000131                     dir_find@c:
  1016                           	callstack 0
  1017   000131                     f_write@res:
  1018                           	callstack 0
  1019   000131                     find_volume@bsect:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x31
  1023   000131                     	ds	1
  1024   000132                     dir_find@res:
  1025                           	callstack 0
  1026   000132                     f_write@csect:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x32
  1030   000132                     	ds	1
  1031   000133                     follow_path@dp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x33
  1035   000133                     	ds	1
  1036   000134                     dir_alloc@fs:
  1037                           	callstack 0
  1038   000134                     f_write@cc:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x34
  1042   000134                     	ds	1
  1043   000135                     follow_path@path:
  1044                           	callstack 0
  1045   000135                     find_volume@i:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x35
  1049   000135                     	ds	1
  1050   000136                     dir_alloc@n:
  1051                           	callstack 0
  1052   000136                     f_write@sect:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x36
  1056   000136                     	ds	1
  1057   000137                     ??_follow_path:
  1058   000137                     find_volume@fmt:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x37
  1062   000137                     	ds	1
  1063   000138                     dir_alloc@res:
  1064                           	callstack 0
  1065   000138                     find_volume@fs:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x38
  1069   000138                     	ds	1
  1070   000139                     dir_register@dp:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x39
  1074   000139                     	ds	1
  1075   00013A                     f_write@clst:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x3A
  1079   00013A                     	ds	1
  1080   00013B                     dir_register@fs:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x3B
  1084   00013B                     	ds	2
  1085   00013D                     dir_register@res:
  1086                           	callstack 0
  1087   00013D                     follow_path@fs:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x3D
  1091   00013D                     	ds	1
  1092   00013E                     f_write@wcnt:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x3E
  1096   00013E                     	ds	1
  1097   00013F                     follow_path@ns:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x3F
  1101   00013F                     	ds	1
  1102   000140                     follow_path@res:
  1103                           	callstack 0
  1104   000140                     f_write@fs:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x40
  1108   000140                     	ds	1
  1109   000141                     f_open@fp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x41
  1113   000141                     	ds	2
  1114   000143                     f_open@path:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x43
  1118   000143                     	ds	2
  1119   000145                     f_open@mode:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x45
  1123   000145                     	ds	1
  1124   000146                     ??_f_open:
  1125                           
  1126                           ; 1 bytes @ 0x46
  1127   000146                     	ds	8
  1128   00014E                     f_open@dw:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x4E
  1132   00014E                     	ds	4
  1133   000152                     f_open@sc:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x52
  1137   000152                     	ds	4
  1138   000156                     f_open@bcs:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x56
  1142   000156                     	ds	4
  1143   00015A                     f_open@cl:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x5A
  1147   00015A                     	ds	4
  1148   00015E                     f_open@ofs:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x5E
  1152   00015E                     	ds	4
  1153   000162                     f_open@clst:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x62
  1157   000162                     	ds	4
  1158   000166                     f_open@fs:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x66
  1162   000166                     	ds	2
  1163   000168                     f_open@res:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x68
  1167   000168                     	ds	1
  1168   000169                     f_open@dj:
  1169                           	callstack 0
  1170                           
  1171                           ; 40 bytes @ 0x69
  1172   000169                     	ds	40
  1173   000191                     send_status_ok@buf:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x91
  1177   000191                     	ds	4
  1178   000195                     send_status_ok@time:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x95
  1182   000195                     	ds	4
  1183   000199                     send_status_ok@board_stat_msg:
  1184                           	callstack 0
  1185                           
  1186                           ; 11 bytes @ 0x99
  1187   000199                     	ds	11
  1188   0001A4                     ??_main:
  1189                           
  1190                           ; 1 bytes @ 0xA4
  1191   0001A4                     	ds	4
  1192   0001A8                     main@last_status_millis:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0xA8
  1196   0001A8                     	ds	4
  1197   0001AC                     main@can_setup:
  1198                           	callstack 0
  1199                           
  1200                           ; 7 bytes @ 0xAC
  1201   0001AC                     	ds	7
  1202                           
  1203                           	psect	cstackBANK0
  1204   000060                     __pcstackBANK0:
  1205                           	callstack 0
  1206   000060                     ??_SPI1_Open:
  1207   000060                     ?_ld_word:
  1208                           	callstack 0
  1209   000060                     ?_mem_cmp:
  1210                           	callstack 0
  1211   000060                     ?_chk_chr:
  1212                           	callstack 0
  1213   000060                     ?_dbc_1st:
  1214                           	callstack 0
  1215   000060                     ?_dbc_2nd:
  1216                           	callstack 0
  1217   000060                     ?_get_ldnumber:
  1218                           	callstack 0
  1219   000060                     ?___lwdiv:
  1220                           	callstack 0
  1221   000060                     ?_millis:
  1222                           	callstack 0
  1223   000060                     ?_ld_dword:
  1224                           	callstack 0
  1225   000060                     ?___lmul:
  1226                           	callstack 0
  1227   000060                     ?___lldiv:
  1228                           	callstack 0
  1229   000060                     disk_status@pdrv:
  1230                           	callstack 0
  1231   000060                     disk_ioctl@cmd:
  1232                           	callstack 0
  1233   000060                     SPI1_ExchangeByte@data:
  1234                           	callstack 0
  1235   000060                     i2c_init@clkdiv:
  1236                           	callstack 0
  1237   000060                     i2c_write@data:
  1238                           	callstack 0
  1239   000060                     i2c_read@data:
  1240                           	callstack 0
  1241   000060                     SET_ACCEL_I2C_ADDR@addr:
  1242                           	callstack 0
  1243   000060                     can_init@timing:
  1244                           	callstack 0
  1245   000060                     ld_word@ptr:
  1246                           	callstack 0
  1247   000060                     ld_dword@ptr:
  1248                           	callstack 0
  1249   000060                     st_word@ptr:
  1250                           	callstack 0
  1251   000060                     st_dword@ptr:
  1252                           	callstack 0
  1253   000060                     mem_cpy@dst:
  1254                           	callstack 0
  1255   000060                     mem_set@dst:
  1256                           	callstack 0
  1257   000060                     mem_cmp@dst:
  1258                           	callstack 0
  1259   000060                     chk_chr@str:
  1260                           	callstack 0
  1261   000060                     get_ldnumber@path:
  1262                           	callstack 0
  1263   000060                     SPI1_ExchangeBlock@block:
  1264                           	callstack 0
  1265   000060                     ___lwdiv@dividend:
  1266                           	callstack 0
  1267   000060                     memcpy@d1:
  1268                           	callstack 0
  1269   000060                     memset@dest:
  1270                           	callstack 0
  1271   000060                     can_generate_timing_params@can_frequency:
  1272                           	callstack 0
  1273   000060                     write_timestamp_3bytes@timestamp:
  1274                           	callstack 0
  1275   000060                     ___lmul@multiplier:
  1276                           	callstack 0
  1277   000060                     ___lldiv@dividend:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x0
  1281   000060                     	ds	1
  1282   000061                     ??_SD_SPI_DelayMilliseconds:
  1283   000061                     disk_status@stat:
  1284                           	callstack 0
  1285   000061                     SPI1_Open@spi1UniqueConfiguration:
  1286                           	callstack 0
  1287   000061                     i2c_write@len:
  1288                           	callstack 0
  1289   000061                     i2c_read@len:
  1290                           	callstack 0
  1291   000061                     disk_ioctl@buff:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x1
  1295   000061                     	ds	1
  1296   000062                     ??_ld_word:
  1297   000062                     ??_get_ldnumber:
  1298   000062                     ??_i2c_write:
  1299   000062                     ??_i2c_read:
  1300   000062                     dbc_1st@c:
  1301                           	callstack 0
  1302   000062                     dbc_2nd@c:
  1303                           	callstack 0
  1304   000062                     can_init@receive_callback:
  1305                           	callstack 0
  1306   000062                     st_word@val:
  1307                           	callstack 0
  1308   000062                     mem_cpy@src:
  1309                           	callstack 0
  1310   000062                     mem_set@val:
  1311                           	callstack 0
  1312   000062                     mem_cmp@src:
  1313                           	callstack 0
  1314   000062                     chk_chr@chr:
  1315                           	callstack 0
  1316   000062                     validate@obj:
  1317                           	callstack 0
  1318   000062                     SPI1_ExchangeBlock@blockSize:
  1319                           	callstack 0
  1320   000062                     ___lwdiv@divisor:
  1321                           	callstack 0
  1322   000062                     memcpy@s1:
  1323                           	callstack 0
  1324   000062                     memset@c:
  1325                           	callstack 0
  1326   000062                     st_dword@val:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x2
  1330   000062                     	ds	1
  1331   000063                     disk_ioctl@pdrv:
  1332                           	callstack 0
  1333   000063                     SD_SPI_DelayMilliseconds@milliseconds:
  1334                           	callstack 0
  1335   000063                     i2c_write@address:
  1336                           	callstack 0
  1337   000063                     i2c_read@address:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x3
  1341   000063                     	ds	1
  1342   000064                     ??_can_init:
  1343   000064                     ??_ld_dword:
  1344   000064                     ??_chk_chr:
  1345   000064                     ___lwdiv@counter:
  1346                           	callstack 0
  1347   000064                     can_generate_timing_params@timing:
  1348                           	callstack 0
  1349   000064                     write_timestamp_3bytes@output:
  1350                           	callstack 0
  1351   000064                     mem_cpy@cnt:
  1352                           	callstack 0
  1353   000064                     mem_set@cnt:
  1354                           	callstack 0
  1355   000064                     mem_cmp@cnt:
  1356                           	callstack 0
  1357   000064                     st_clust@fs:
  1358                           	callstack 0
  1359   000064                     get_ldnumber@i:
  1360                           	callstack 0
  1361   000064                     validate@rfs:
  1362                           	callstack 0
  1363   000064                     SD_SPI_DelayMilliseconds@timeout:
  1364                           	callstack 0
  1365   000064                     SPI1_ExchangeBlock@data:
  1366                           	callstack 0
  1367   000064                     i2c_write@timeout:
  1368                           	callstack 0
  1369   000064                     i2c_read@timeout:
  1370                           	callstack 0
  1371   000064                     memcpy@n:
  1372                           	callstack 0
  1373   000064                     memset@n:
  1374                           	callstack 0
  1375   000064                     millis@res:
  1376                           	callstack 0
  1377   000064                     ___lmul@multiplicand:
  1378                           	callstack 0
  1379   000064                     ___lldiv@divisor:
  1380                           	callstack 0
  1381                           
  1382                           ; 4 bytes @ 0x4
  1383   000064                     	ds	1
  1384   000065                     ld_word@rv:
  1385                           	callstack 0
  1386   000065                     ___lwdiv@quotient:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x5
  1390   000065                     	ds	1
  1391   000066                     ??_can_generate_timing_params:
  1392   000066                     ??_mem_cmp:
  1393   000066                     ??_validate:
  1394   000066                     get_ldnumber@tc:
  1395                           	callstack 0
  1396   000066                     i2c_write_reg8@reg:
  1397                           	callstack 0
  1398   000066                     i2c_read_reg8@reg:
  1399                           	callstack 0
  1400   000066                     memcpy@tmp:
  1401                           	callstack 0
  1402   000066                     mem_cpy@d:
  1403                           	callstack 0
  1404   000066                     mem_set@d:
  1405                           	callstack 0
  1406   000066                     st_clust@dir:
  1407                           	callstack 0
  1408   000066                     memset@p:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412   000066                     	ds	1
  1413   000067                     ?_ld_clust:
  1414                           	callstack 0
  1415   000067                     i2c_write_reg8@val:
  1416                           	callstack 0
  1417   000067                     srb_init@ctx:
  1418                           	callstack 0
  1419   000067                     ld_clust@fs:
  1420                           	callstack 0
  1421   000067                     get_ldnumber@tt:
  1422                           	callstack 0
  1423   000067                     i2c_read_reg8@value:
  1424                           	callstack 0
  1425   000067                     memcpy@d:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x7
  1429   000067                     	ds	1
  1430   000068                     i2c_write_reg8@address:
  1431                           	callstack 0
  1432   000068                     mem_cpy@s:
  1433                           	callstack 0
  1434   000068                     mem_cmp@d:
  1435                           	callstack 0
  1436   000068                     create_name@dp:
  1437                           	callstack 0
  1438   000068                     build_board_stat_msg@timestamp:
  1439                           	callstack 0
  1440   000068                     st_clust@cl:
  1441                           	callstack 0
  1442   000068                     ___lmul@product:
  1443                           	callstack 0
  1444   000068                     ___lldiv@quotient:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x8
  1448   000068                     	ds	1
  1449   000069                     i2c_read_reg8@address:
  1450                           	callstack 0
  1451   000069                     srb_init@pool:
  1452                           	callstack 0
  1453   000069                     ld_clust@dir:
  1454                           	callstack 0
  1455   000069                     get_ldnumber@vol:
  1456                           	callstack 0
  1457   000069                     i2c_write_reg8@data:
  1458                           	callstack 0
  1459   000069                     memcpy@s:
  1460                           	callstack 0
  1461   000069                     ld_dword@rv:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x9
  1465   000069                     	ds	1
  1466   00006A                     i2c_read_reg8@success:
  1467                           	callstack 0
  1468   00006A                     mem_cmp@s:
  1469                           	callstack 0
  1470   00006A                     create_name@path:
  1471                           	callstack 0
  1472   00006A                     _validate$3131:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0xA
  1476   00006A                     	ds	1
  1477   00006B                     ??_ld_clust:
  1478   00006B                     ?_SD_SendCmd:
  1479                           	callstack 0
  1480   00006B                     i2c_read_reg8@data:
  1481                           	callstack 0
  1482   00006B                     can_send@message:
  1483                           	callstack 0
  1484   00006B                     srb_init@pool_size:
  1485                           	callstack 0
  1486   00006B                     get_ldnumber@tp:
  1487                           	callstack 0
  1488   00006B                     SD_SendCmd@address:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0xB
  1492   00006B                     	ds	1
  1493   00006C                     ??_fxls_init:
  1494   00006C                     ??_create_name:
  1495   00006C                     ?_clst2sect:
  1496                           	callstack 0
  1497   00006C                     build_board_stat_msg@error_code:
  1498                           	callstack 0
  1499   00006C                     validate@res:
  1500                           	callstack 0
  1501   00006C                     fxls_get_prod_rev@res:
  1502                           	callstack 0
  1503   00006C                     fxls_get_whoami@res:
  1504                           	callstack 0
  1505   00006C                     ___lldiv@counter:
  1506                           	callstack 0
  1507   00006C                     mem_cmp@r:
  1508                           	callstack 0
  1509   00006C                     clst2sect@fs:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0xC
  1513   00006C                     	ds	1
  1514   00006D                     ??_can_send:
  1515   00006D                     srb_init@element_size:
  1516                           	callstack 0
  1517   00006D                     build_board_stat_msg@error_data:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0xD
  1521   00006D                     	ds	1
  1522   00006E                     fxls_init@sens_config4:
  1523                           	callstack 0
  1524   00006E                     _create_name$2961:
  1525                           	callstack 0
  1526   00006E                     clst2sect@clst:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0xE
  1530   00006E                     	ds	1
  1531   00006F                     build_board_stat_msg@error_data_len:
  1532                           	callstack 0
  1533   00006F                     fxls_init@sens_config1:
  1534                           	callstack 0
  1535   00006F                     txb_init@pool:
  1536                           	callstack 0
  1537   00006F                     ld_clust@cl:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0xF
  1541   00006F                     	ds	1
  1542   000070                     ??_SD_SendCmd:
  1543   000070                     fxls_init@buf_config1:
  1544                           	callstack 0
  1545   000070                     build_board_stat_msg@output:
  1546                           	callstack 0
  1547   000070                     _create_name$2966:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x10
  1551   000070                     	ds	1
  1552   000071                     fxls_init@int_en:
  1553                           	callstack 0
  1554   000071                     txb_init@pool_size:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x11
  1558   000071                     	ds	1
  1559   000072                     ??_build_board_stat_msg:
  1560   000072                     ??_clst2sect:
  1561   000072                     create_name@d:
  1562                           	callstack 0
  1563   000072                     fxls_init@int_pin_sel:
  1564                           	callstack 0
  1565   000072                     SD_SendCmd@longTimeout:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x12
  1569   000072                     	ds	1
  1570   000073                     fxls_init@sens_config3:
  1571                           	callstack 0
  1572   000073                     txb_init@can_send_fp:
  1573                           	callstack 0
  1574   000073                     create_name@ni:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x13
  1578   000073                     	ds	1
  1579   000074                     fxls_init@sens_config2:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x14
  1583   000074                     	ds	1
  1584   000075                     fxls_init@sys_mode:
  1585                           	callstack 0
  1586   000075                     txb_init@can_tx_ready:
  1587                           	callstack 0
  1588   000075                     build_board_stat_msg@i:
  1589                           	callstack 0
  1590   000075                     create_name@p:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x15
  1594   000075                     	ds	1
  1595   000076                     SD_SendCmd@timeout:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x16
  1599   000076                     	ds	1
  1600   000077                     create_name@i:
  1601                           	callstack 0
  1602   000077                     send_status_err@board_stat_msg:
  1603                           	callstack 0
  1604                           
  1605                           ; 11 bytes @ 0x17
  1606   000077                     	ds	1
  1607   000078                     SD_SendCmd@address_bytes:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x18
  1611   000078                     	ds	1
  1612   000079                     create_name@sfn:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x19
  1616   000079                     	ds	2
  1617   00007B                     create_name@si:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x1B
  1621   00007B                     	ds	1
  1622   00007C                     SD_SendCmd@cmd:
  1623                           	callstack 0
  1624                           
  1625                           ; 1 bytes @ 0x1C
  1626   00007C                     	ds	1
  1627   00007D                     create_name@c:
  1628                           	callstack 0
  1629   00007D                     SD_SendCmd@response:
  1630                           	callstack 0
  1631                           
  1632                           ; 5 bytes @ 0x1D
  1633   00007D                     	ds	5
  1634   000082                     ??_SD_SPI_MediaInitialize:
  1635   000082                     SD_SPI_AsyncReadTasks@info:
  1636                           	callstack 0
  1637   000082                     SD_SPI_AsyncWriteTasks@info:
  1638                           	callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x22
  1641   000082                     	ds	1
  1642   000083                     ??_SD_SPI_AsyncReadTasks:
  1643   000083                     ??_SD_SPI_AsyncWriteTasks:
  1644                           
  1645                           ; 1 bytes @ 0x23
  1646   000083                     	ds	4
  1647   000087                     SD_SPI_AsyncReadTasks@response:
  1648                           	callstack 0
  1649   000087                     SD_SPI_AsyncWriteTasks@response:
  1650                           	callstack 0
  1651                           
  1652                           ; 5 bytes @ 0x27
  1653   000087                     	ds	5
  1654   00008C                     SD_SPI_AsyncReadTasks@bData:
  1655                           	callstack 0
  1656   00008C                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1657                           	callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x2C
  1660   00008C                     	ds	1
  1661   00008D                     SD_SPI_SectorRead@sector_address:
  1662                           	callstack 0
  1663   00008D                     SD_SPI_MediaInitialize@CSDResponse:
  1664                           	callstack 0
  1665                           
  1666                           ; 20 bytes @ 0x2D
  1667   00008D                     	ds	3
  1668   000090                     SD_SPI_SectorWrite@sector_address:
  1669                           	callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x30
  1672   000090                     	ds	1
  1673   000091                     SD_SPI_SectorRead@buffer:
  1674                           	callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x31
  1677   000091                     	ds	2
  1678   000093                     SD_SPI_SectorRead@sector_count:
  1679                           	callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x33
  1682   000093                     	ds	1
  1683   000094                     SD_SPI_SectorWrite@buffer:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x34
  1687   000094                     	ds	1
  1688   000095                     ??_SD_SPI_SectorRead:
  1689                           
  1690                           ; 1 bytes @ 0x35
  1691   000095                     	ds	1
  1692   000096                     SD_SPI_SectorWrite@sector_count:
  1693                           	callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x36
  1696   000096                     	ds	1
  1697   000097                     SD_SPI_SectorRead@result:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x37
  1701   000097                     	ds	1
  1702   000098                     ??_SD_SPI_SectorWrite:
  1703   000098                     SD_SPI_SectorRead@status:
  1704                           	callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x38
  1707   000098                     	ds	1
  1708   000099                     SD_SPI_SectorRead@i:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x39
  1712   000099                     	ds	1
  1713   00009A                     SD_SPI_SectorWrite@result:
  1714                           	callstack 0
  1715                           
  1716                           ; 1 bytes @ 0x3A
  1717   00009A                     	ds	1
  1718   00009B                     SD_SPI_SectorWrite@status:
  1719                           	callstack 0
  1720   00009B                     SD_SPI_SectorRead@info:
  1721                           	callstack 0
  1722                           
  1723                           ; 13 bytes @ 0x3B
  1724   00009B                     	ds	1
  1725   00009C                     SD_SPI_SectorWrite@i:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x3C
  1729   00009C                     	ds	2
  1730   00009E                     SD_SPI_SectorWrite@info:
  1731                           	callstack 0
  1732                           
  1733                           ; 13 bytes @ 0x3E
  1734   00009E                     	ds	3
  1735   0000A1                     _SD_SPI_MediaInitialize$6394:
  1736                           	callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x41
  1739   0000A1                     	ds	4
  1740   0000A5                     SD_SPI_MediaInitialize@c_size_mult:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x45
  1744   0000A5                     	ds	1
  1745   0000A6                     SD_SPI_MediaInitialize@index:
  1746                           	callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x46
  1749   0000A6                     	ds	1
  1750   0000A7                     SD_SPI_MediaInitialize@block_len:
  1751                           	callstack 0
  1752                           
  1753                           ; 1 bytes @ 0x47
  1754   0000A7                     	ds	1
  1755   0000A8                     SD_SPI_MediaInitialize@count:
  1756                           	callstack 0
  1757   0000A8                     disk_read@buff:
  1758                           	callstack 0
  1759                           
  1760                           ; 2 bytes @ 0x48
  1761   0000A8                     	ds	1
  1762   0000A9                     SD_SPI_MediaInitialize@c_size:
  1763                           	callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x49
  1766   0000A9                     	ds	1
  1767   0000AA                     disk_read@sector:
  1768                           	callstack 0
  1769                           
  1770                           ; 4 bytes @ 0x4A
  1771   0000AA                     	ds	1
  1772   0000AB                     disk_write@buff:
  1773                           	callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x4B
  1776   0000AB                     	ds	2
  1777   0000AD                     disk_write@sector:
  1778                           	callstack 0
  1779   0000AD                     SD_SPI_MediaInitialize@response:
  1780                           	callstack 0
  1781                           
  1782                           ; 5 bytes @ 0x4D
  1783   0000AD                     	ds	1
  1784   0000AE                     disk_read@count:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x4E
  1788   0000AE                     	ds	2
  1789   0000B0                     disk_read@pdrv:
  1790                           	callstack 0
  1791                           
  1792                           ; 1 bytes @ 0x50
  1793   0000B0                     	ds	1
  1794   0000B1                     disk_read@res:
  1795                           	callstack 0
  1796   0000B1                     disk_write@count:
  1797                           	callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x51
  1800   0000B1                     	ds	1
  1801   0000B2                     SD_SPI_MediaInitialize@timeout:
  1802                           	callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x52
  1805   0000B2                     	ds	1
  1806   0000B3                     disk_write@pdrv:
  1807                           	callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x53
  1810   0000B3                     	ds	1
  1811   0000B4                     disk_initialize@pdrv:
  1812                           	callstack 0
  1813   0000B4                     disk_write@res:
  1814                           	callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x54
  1817   0000B4                     	ds	1
  1818   0000B5                     disk_initialize@stat:
  1819                           	callstack 0
  1820   0000B5                     sync_window@fs:
  1821                           	callstack 0
  1822                           
  1823                           ; 2 bytes @ 0x55
  1824   0000B5                     	ds	2
  1825   0000B7                     ??_sync_window:
  1826                           
  1827                           ; 1 bytes @ 0x57
  1828   0000B7                     	ds	16
  1829   0000C7                     sync_window@res:
  1830                           	callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x67
  1833   0000C7                     	ds	1
  1834   0000C8                     move_window@fs:
  1835                           	callstack 0
  1836   0000C8                     sync_fs@fs:
  1837                           	callstack 0
  1838   0000C8                     dir_clear@fs:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x68
  1842   0000C8                     	ds	2
  1843   0000CA                     ??_sync_fs:
  1844   0000CA                     move_window@sector:
  1845                           	callstack 0
  1846   0000CA                     dir_clear@clst:
  1847                           	callstack 0
  1848                           
  1849                           ; 4 bytes @ 0x6A
  1850   0000CA                     	ds	4
  1851   0000CE                     
  1852                           ; 1 bytes @ 0x6E
  1853   0000CE                     	ds	2
  1854   0000D0                     dir_clear@ibuf:
  1855                           	callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x70
  1858   0000D0                     	ds	2
  1859   0000D2                     move_window@res:
  1860                           	callstack 0
  1861   0000D2                     sync_fs@res:
  1862                           	callstack 0
  1863   0000D2                     dir_clear@sect:
  1864                           	callstack 0
  1865                           
  1866                           ; 4 bytes @ 0x72
  1867   0000D2                     	ds	1
  1868   0000D3                     ?_get_fat:
  1869                           	callstack 0
  1870   0000D3                     get_fat@obj:
  1871                           	callstack 0
  1872   0000D3                     put_fat@fs:
  1873                           	callstack 0
  1874   0000D3                     check_fs@fs:
  1875                           	callstack 0
  1876   0000D3                     f_sync@fp:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x73
  1880   0000D3                     	ds	2
  1881   0000D5                     f_sync@res:
  1882                           	callstack 0
  1883   0000D5                     get_fat@clst:
  1884                           	callstack 0
  1885   0000D5                     put_fat@clst:
  1886                           	callstack 0
  1887   0000D5                     check_fs@sect:
  1888                           	callstack 0
  1889                           
  1890                           ; 4 bytes @ 0x75
  1891   0000D5                     	ds	1
  1892   0000D6                     dir_clear@szb:
  1893                           	callstack 0
  1894   0000D6                     f_sync@dir:
  1895                           	callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x76
  1898   0000D6                     	ds	2
  1899   0000D8                     dir_clear@n:
  1900                           	callstack 0
  1901   0000D8                     f_sync@fs:
  1902                           	callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x78
  1905   0000D8                     	ds	1
  1906   0000D9                     ??_get_fat:
  1907   0000D9                     put_fat@val:
  1908                           	callstack 0
  1909                           
  1910                           ; 4 bytes @ 0x79
  1911   0000D9                     	ds	1
  1912   0000DA                     find_volume@path:
  1913                           	callstack 0
  1914   0000DA                     f_close@fp:
  1915                           	callstack 0
  1916                           
  1917                           ; 2 bytes @ 0x7A
  1918   0000DA                     	ds	2
  1919   0000DC                     find_volume@rfs:
  1920                           	callstack 0
  1921   0000DC                     f_close@fs:
  1922                           	callstack 0
  1923                           
  1924                           ; 2 bytes @ 0x7C
  1925   0000DC                     	ds	1
  1926   0000DD                     ??_put_fat:
  1927                           
  1928                           ; 1 bytes @ 0x7D
  1929   0000DD                     	ds	1
  1930   0000DE                     find_volume@mode:
  1931                           	callstack 0
  1932   0000DE                     f_close@res:
  1933                           	callstack 0
  1934                           
  1935                           ; 1 bytes @ 0x7E
  1936   0000DE                     	ds	1
  1937   0000DF                     ??_find_volume:
  1938                           
  1939                           ; 1 bytes @ 0x7F
  1940   0000DF                     	ds	2
  1941   0000E1                     _get_fat$2577:
  1942                           	callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x81
  1945   0000E1                     	ds	2
  1946   0000E3                     get_fat@wc:
  1947                           	callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x83
  1950   0000E3                     	ds	2
  1951   0000E5                     get_fat@val:
  1952                           	callstack 0
  1953                           
  1954                           ; 4 bytes @ 0x85
  1955   0000E5                     	ds	2
  1956   0000E7                     f_mount@fs:
  1957                           	callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x87
  1960   0000E7                     	ds	2
  1961   0000E9                     get_fat@bc:
  1962                           	callstack 0
  1963   0000E9                     f_mount@path:
  1964                           	callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x89
  1967   0000E9                     	ds	2
  1968   0000EB                     f_mount@opt:
  1969                           	callstack 0
  1970   0000EB                     get_fat@fs:
  1971                           	callstack 0
  1972   0000EB                     _put_fat$2606:
  1973                           	callstack 0
  1974                           
  1975                           ; 2 bytes @ 0x8B
  1976   0000EB                     	ds	1
  1977   0000EC                     f_mount@res:
  1978                           	callstack 0
  1979                           
  1980                           ; 1 bytes @ 0x8C
  1981   0000EC                     	ds	1
  1982   0000ED                     _put_fat$2607:
  1983                           	callstack 0
  1984   0000ED                     dir_sdi@dp:
  1985                           	callstack 0
  1986   0000ED                     f_mount@rp:
  1987                           	callstack 0
  1988                           
  1989                           ; 2 bytes @ 0x8D
  1990   0000ED                     	ds	2
  1991   0000EF                     put_fat@p:
  1992                           	callstack 0
  1993   0000EF                     f_mount@cfs:
  1994                           	callstack 0
  1995   0000EF                     dir_sdi@ofs:
  1996                           	callstack 0
  1997                           
  1998                           ; 4 bytes @ 0x8F
  1999   0000EF                     	ds	2
  2000   0000F1                     put_fat@bc:
  2001                           	callstack 0
  2002   0000F1                     f_mount@vol:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x91
  2006   0000F1                     	ds	2
  2007   0000F3                     ??_dir_sdi:
  2008   0000F3                     put_fat@res:
  2009                           	callstack 0
  2010                           
  2011                           ; 1 bytes @ 0x93
  2012   0000F3                     	ds	1
  2013   0000F4                     ?_create_chain:
  2014                           	callstack 0
  2015   0000F4                     remove_chain@obj:
  2016                           	callstack 0
  2017   0000F4                     create_chain@obj:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x94
  2021   0000F4                     	ds	2
  2022   0000F6                     remove_chain@clst:
  2023                           	callstack 0
  2024   0000F6                     create_chain@clst:
  2025                           	callstack 0
  2026                           
  2027                           ; 4 bytes @ 0x96
  2028   0000F6                     	ds	4
  2029   0000FA                     dir_next@dp:
  2030                           	callstack 0
  2031   0000FA                     remove_chain@pclst:
  2032                           	callstack 0
  2033                           
  2034                           ; 4 bytes @ 0x9A
  2035   0000FA                     	ds	2
  2036   0000FC                     dir_next@stretch:
  2037                           	callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x9C
  2040   0000FC                     	ds	2
  2041   0000FE                     ??_dir_find:
  2042   0000FE                     
  2043                           ; 1 bytes @ 0x9E
  2044   0000FE                     	ds	2
  2045   000100                     
  2046                           ; 1 bytes @ 0xA0
  2047                           
  2048                           	psect	cstackCOMRAM
  2049   000001                     __pcstackCOMRAM:
  2050                           	callstack 0
  2051   000001                     ?_get_message_type:
  2052                           	callstack 0
  2053   000001                     get_message_type@msg:
  2054                           	callstack 0
  2055   000001                     get_board_unique_id@msg:
  2056                           	callstack 0
  2057   000001                     i2memcpy@d1:
  2058                           	callstack 0
  2059                           
  2060                           ; 2 bytes @ 0x0
  2061   000001                     	ds	1
  2062   000002                     
  2063                           ; 1 bytes @ 0x1
  2064   000002                     	ds	1
  2065   000003                     ??_get_message_type:
  2066   000003                     i2memcpy@s1:
  2067                           	callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x2
  2070   000003                     	ds	2
  2071   000005                     ?_get_reset_board_id:
  2072                           	callstack 0
  2073   000005                     get_reset_board_id@msg:
  2074                           	callstack 0
  2075   000005                     i2memcpy@n:
  2076                           	callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x4
  2079   000005                     	ds	2
  2080   000007                     ??_get_reset_board_id:
  2081   000007                     i2memcpy@d:
  2082                           	callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x6
  2085   000007                     	ds	1
  2086   000008                     get_reset_board_id@msg_type:
  2087                           	callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x7
  2090   000008                     	ds	1
  2091   000009                     i2memcpy@s:
  2092                           	callstack 0
  2093                           
  2094                           ; 2 bytes @ 0x8
  2095   000009                     	ds	1
  2096   00000A                     can_msg_handler@msg:
  2097                           	callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x9
  2100   00000A                     	ds	1
  2101   00000B                     ??_can_msg_handler:
  2102   00000B                     i2memcpy@tmp:
  2103                           	callstack 0
  2104                           
  2105                           ; 1 bytes @ 0xA
  2106   00000B                     	ds	2
  2107   00000D                     can_msg_handler@msg_type:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0xC
  2111   00000D                     	ds	2
  2112   00000F                     can_msg_handler@dest_id:
  2113                           	callstack 0
  2114                           
  2115                           ; 2 bytes @ 0xE
  2116   00000F                     	ds	2
  2117   000011                     ??_can_handle_interrupt:
  2118                           
  2119                           ; 1 bytes @ 0x10
  2120   000011                     	ds	4
  2121   000015                     can_handle_interrupt@rcvd_msg:
  2122                           	callstack 0
  2123                           
  2124                           ; 11 bytes @ 0x14
  2125   000015                     	ds	11
  2126   000020                     can_handle_interrupt@rcvd_msg_753:
  2127                           	callstack 0
  2128                           
  2129                           ; 11 bytes @ 0x1F
  2130   000020                     	ds	11
  2131   00002B                     ??_interrupt_handler:
  2132                           
  2133                           ; 1 bytes @ 0x2A
  2134   00002B                     	ds	2
  2135                           
  2136 ;;
  2137 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2138 ;;
  2139 ;; *************** function _main *****************
  2140 ;; Defined at:
  2141 ;;		line 33 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  msg            11    0        struct .
  2146 ;;  can_setup       7  172[BANK1 ] struct .
  2147 ;;  last_status_    4  168[BANK1 ] unsigned long 
  2148 ;;  last_message    4    0        unsigned long 
  2149 ;;  prod_rev        1    0        unsigned char 
  2150 ;;  whoami          1    0        unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:       15 bytes
  2165 ;; Hardware stack levels required when called: 19
  2166 ;; This function calls:
  2167 ;;		_ADCC_Initialize
  2168 ;;		_SET_ACCEL_I2C_ADDR
  2169 ;;		_SYSTEM_Initialize
  2170 ;;		_can_generate_timing_params
  2171 ;;		_can_init
  2172 ;;		_f_close
  2173 ;;		_f_mount
  2174 ;;		_f_open
  2175 ;;		_f_write
  2176 ;;		_fxls_get_prod_rev
  2177 ;;		_fxls_get_whoami
  2178 ;;		_fxls_init
  2179 ;;		_i2c_init
  2180 ;;		_millis
  2181 ;;		_send_status_err
  2182 ;;		_send_status_ok
  2183 ;;		_timer0_init
  2184 ;;		_txb_init
  2185 ;; This function is called by:
  2186 ;;		Startup code after reset
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text0
  2191   005888                     __ptext0:
  2192                           	callstack 0
  2193   005888                     _main:
  2194                           	callstack 12
  2195   005888                     
  2196                           ;main.c: 35:     SYSTEM_Initialize();
  2197   005888  EC5B  F046         	call	_SYSTEM_Initialize	;wreg free
  2198                           
  2199                           ;main.c: 36:     ADCC_Initialize();
  2200   00588C  EC09  F043         	call	_ADCC_Initialize	;wreg free
  2201   005890                     
  2202                           ;main.c: 39:     INTCON0bits.GIE = 1;
  2203   005890  8ED2               	bsf	210,7,c	;volatile
  2204                           
  2205                           ;main.c: 42:     timer0_init();
  2206   005892  ECFB  F045         	call	_timer0_init	;wreg free
  2207   005896                     
  2208                           ;main.c: 43:     uint32_t last_status_millis = millis();
  2209   005896  EC7B  F045         	call	_millis	;wreg free
  2210   00589A  C060  F1A8         	movff	?_millis,main@last_status_millis
  2211   00589E  C061  F1A9         	movff	?_millis+1,main@last_status_millis+1
  2212   0058A2  C062  F1AA         	movff	?_millis+2,main@last_status_millis+2
  2213   0058A6  C063  F1AB         	movff	?_millis+3,main@last_status_millis+3
  2214   0058AA  EC7B  F045         	call	_millis	;wreg free
  2215   0058AE                     
  2216                           ;main.c: 47:     TRISC1 = 0;
  2217   0058AE  92C4               	bcf	16324,1,c	;volatile
  2218   0058B0                     
  2219                           ;main.c: 48:     RC1PPS = 0x33;
  2220   0058B0  0E33               	movlw	51
  2221   0058B2  013A               	movlb	58	; () banked
  2222   0058B4  6F11               	movwf	17,b	;volatile
  2223   0058B6                     
  2224                           ; BSR set to: 58
  2225                           ;main.c: 51:     TRISC0 = 1;
  2226   0058B6  80C4               	bsf	16324,0,c	;volatile
  2227   0058B8                     
  2228                           ; BSR set to: 58
  2229                           ;main.c: 52:     ANSELC0 = 0;
  2230   0058B8  9160               	bcf	96,0,b	;volatile
  2231   0058BA                     
  2232                           ; BSR set to: 58
  2233                           ;main.c: 53:     CANRXPPS = 0b00010000;
  2234   0058BA  0E10               	movlw	16
  2235   0058BC  6FED               	movwf	237,b	;volatile
  2236   0058BE                     
  2237                           ; BSR set to: 58
  2238                           ;main.c: 56:     can_timing_t can_setup;;main.c: 57:     can_generate_timing_params(1200
      +                          0000, &can_setup);
  2239   0058BE  0E00               	movlw	0
  2240   0058C0  0100               	movlb	0	; () banked
  2241   0058C2  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
  2242   0058C4  0E1B               	movlw	27
  2243   0058C6  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
  2244   0058C8  0EB7               	movlw	183
  2245   0058CA  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
  2246   0058CC  0E00               	movlw	0
  2247   0058CE  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
  2248   0058D0  0EAC               	movlw	low main@can_setup
  2249   0058D2  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
  2250   0058D4  0E01               	movlw	high main@can_setup
  2251   0058D6  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
  2252   0058D8  EC91  F030         	call	_can_generate_timing_params	;wreg free
  2253   0058DC                     
  2254                           ;main.c: 58:     can_init(&can_setup, can_msg_handler);
  2255   0058DC  0EAC               	movlw	low main@can_setup
  2256   0058DE  0100               	movlb	0	; () banked
  2257   0058E0  6F60               	movwf	can_init@timing& (0+255),b
  2258   0058E2  0E01               	movlw	high main@can_setup
  2259   0058E4  6F61               	movwf	(can_init@timing+1)& (0+255),b
  2260   0058E6  0E52               	movlw	low _can_msg_handler
  2261   0058E8  6F62               	movwf	can_init@receive_callback& (0+255),b
  2262   0058EA  0E7C               	movlw	high _can_msg_handler
  2263   0058EC  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
  2264   0058EE  EC44  F033         	call	_can_init	;wreg free
  2265   0058F2                     
  2266                           ;main.c: 60:     txb_init(tx_pool, sizeof (tx_pool), can_send, can_send_rdy);
  2267   0058F2  0E00               	movlw	low _tx_pool
  2268   0058F4  0100               	movlb	0	; () banked
  2269   0058F6  6F6F               	movwf	txb_init@pool& (0+255),b
  2270   0058F8  0E02               	movlw	high _tx_pool
  2271   0058FA  6F70               	movwf	(txb_init@pool+1)& (0+255),b
  2272   0058FC  0E00               	movlw	0
  2273   0058FE  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
  2274   005900  0E64               	movlw	100
  2275   005902  6F71               	movwf	txb_init@pool_size& (0+255),b
  2276   005904  0EB0               	movlw	low _can_send
  2277   005906  6F73               	movwf	txb_init@can_send_fp& (0+255),b
  2278   005908  0E73               	movlw	high _can_send
  2279   00590A  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
  2280   00590C  0E00               	movlw	0
  2281   00590E  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
  2282   005910  0E00               	movlw	0
  2283   005912  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
  2284   005914  EC2C  F045         	call	_txb_init	;wreg free
  2285   005918                     
  2286                           ;main.c: 62:     can_msg_t msg;;main.c: 65:     SET_ACCEL_I2C_ADDR(0x18);
  2287   005918  0E18               	movlw	24
  2288   00591A  EC28  F046         	call	_SET_ACCEL_I2C_ADDR
  2289   00591E                     
  2290                           ;main.c: 66:     i2c_init(0b000);
  2291   00591E  0E00               	movlw	0
  2292   005920  EC63  F045         	call	_i2c_init
  2293   005924                     
  2294                           ;main.c: 67:     fxls_init();
  2295   005924  ECAD  F038         	call	_fxls_init	;wreg free
  2296   005928                     
  2297                           ;main.c: 70:     TRISC6 = 0;
  2298   005928  9CC4               	bcf	16324,6,c	;volatile
  2299   00592A                     
  2300                           ;main.c: 71:     LATC6 = 1;
  2301   00592A  8CBC               	bsf	16316,6,c	;volatile
  2302   00592C  EC0A  F046         	call	_fxls_get_whoami	;wreg free
  2303   005930  EC19  F046         	call	_fxls_get_prod_rev	;wreg free
  2304   005934                     
  2305                           ;main.c: 77:     TRISB3 = 0;
  2306   005934  96C3               	bcf	16323,3,c	;volatile
  2307   005936                     
  2308                           ;main.c: 78:     LATB3 = 0;
  2309   005936  96BB               	bcf	16315,3,c	;volatile
  2310   005938                     
  2311                           ;main.c: 80:     TRISA2 = 0;
  2312   005938  94C2               	bcf	16322,2,c	;volatile
  2313   00593A                     
  2314                           ;main.c: 81:     TRISA3 = 0;
  2315   00593A  96C2               	bcf	16322,3,c	;volatile
  2316   00593C                     
  2317                           ;main.c: 82:     TRISA4 = 0;
  2318   00593C  98C2               	bcf	16322,4,c	;volatile
  2319   00593E                     
  2320                           ;main.c: 83:     TRISC2 = 0;
  2321   00593E  94C4               	bcf	16324,2,c	;volatile
  2322   005940                     
  2323                           ;main.c: 85:     if (f_mount(&FatFs, "", 1) == FR_OK) {
  2324   005940  0E64               	movlw	low _FatFs
  2325   005942  0100               	movlb	0	; () banked
  2326   005944  6FE7               	movwf	f_mount@fs& (0+255),b
  2327   005946  0E02               	movlw	high _FatFs
  2328   005948  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2329   00594A  0EEA               	movlw	low (STR_9+11)
  2330   00594C  6FE9               	movwf	f_mount@path& (0+255),b
  2331   00594E  0EFF               	movlw	high (STR_9+11)
  2332   005950  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2333   005952  0E01               	movlw	1
  2334   005954  6FEB               	movwf	f_mount@opt& (0+255),b
  2335   005956  ECE1  F03C         	call	_f_mount	;wreg free
  2336   00595A  0900               	iorlw	0
  2337   00595C  A4D8               	btfss	status,2,c
  2338   00595E  EFB3  F02C         	goto	u21021
  2339   005962  EFB5  F02C         	goto	u21020
  2340   005966                     u21021:
  2341   005966  EF17  F02D         	goto	l17456
  2342   00596A                     u21020:
  2343   00596A                     
  2344                           ;main.c: 86:         if (f_open(&Fil, "Data.txt", 0x04 | 0x01 | 0x02) == FR_OK) {
  2345   00596A  0E97               	movlw	low _Fil
  2346   00596C  0101               	movlb	1	; () banked
  2347   00596E  6F41               	movwf	f_open@fp& (0+255),b
  2348   005970  0E04               	movlw	high _Fil
  2349   005972  6F42               	movwf	(f_open@fp+1)& (0+255),b
  2350   005974  0EEB               	movlw	low STR_8
  2351   005976  6F43               	movwf	f_open@path& (0+255),b
  2352   005978  0EFF               	movlw	high STR_8
  2353   00597A  6F44               	movwf	(f_open@path+1)& (0+255),b
  2354   00597C  0E07               	movlw	7
  2355   00597E  6F45               	movwf	f_open@mode& (0+255),b
  2356   005980  ECA0  F00F         	call	_f_open	;wreg free
  2357   005984  0900               	iorlw	0
  2358   005986  A4D8               	btfss	status,2,c
  2359   005988  EFC8  F02C         	goto	u21031
  2360   00598C  EFCA  F02C         	goto	u21030
  2361   005990                     u21031:
  2362   005990  EF2C  F02D         	goto	l2184
  2363   005994                     u21030:
  2364   005994                     
  2365                           ;main.c: 87:             f_write(&Fil, "BEGIN LOG\r\n", 10, &bw);
  2366   005994  0E97               	movlw	low _Fil
  2367   005996  0101               	movlb	1	; () banked
  2368   005998  6F17               	movwf	f_write@fp& (0+255),b
  2369   00599A  0E04               	movlw	high _Fil
  2370   00599C  6F18               	movwf	(f_write@fp+1)& (0+255),b
  2371   00599E  0EDF               	movlw	low STR_9
  2372   0059A0  6F19               	movwf	f_write@buff& (0+255),b
  2373   0059A2  0EFF               	movlw	high STR_9
  2374   0059A4  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  2375   0059A6  0E00               	movlw	0
  2376   0059A8  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  2377   0059AA  0E0A               	movlw	10
  2378   0059AC  6F1B               	movwf	f_write@btw& (0+255),b
  2379   0059AE  0ED8               	movlw	low _bw
  2380   0059B0  6F1D               	movwf	f_write@bw& (0+255),b
  2381   0059B2  0E01               	movlw	high _bw
  2382   0059B4  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  2383   0059B6  EC69  F007         	call	_f_write	;wreg free
  2384                           
  2385                           ;main.c: 88:             f_close(&Fil);
  2386   0059BA  0E97               	movlw	low _Fil
  2387   0059BC  0100               	movlb	0	; () banked
  2388   0059BE  6FDA               	movwf	f_close@fp& (0+255),b
  2389   0059C0  0E04               	movlw	high _Fil
  2390   0059C2  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  2391   0059C4  ECC5  F043         	call	_f_close	;wreg free
  2392   0059C8  EF2C  F02D         	goto	l2184
  2393   0059CC                     l17450:
  2394                           
  2395                           ;main.c: 92:             if (millis() - last_status_millis > 500) {
  2396   0059CC  EC7B  F045         	call	_millis	;wreg free
  2397   0059D0  0101               	movlb	1	; () banked
  2398   0059D2  51A8               	movf	main@last_status_millis& (0+255),w,b
  2399   0059D4  0100               	movlb	0	; () banked
  2400   0059D6  5D60               	subwf	?_millis& (0+255),w,b
  2401   0059D8  0101               	movlb	1	; () banked
  2402   0059DA  6FA4               	movwf	??_main& (0+255),b
  2403   0059DC  51A9               	movf	(main@last_status_millis+1)& (0+255),w,b
  2404   0059DE  0100               	movlb	0	; () banked
  2405   0059E0  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2406   0059E2  0101               	movlb	1	; () banked
  2407   0059E4  6FA5               	movwf	(??_main+1)& (0+255),b
  2408   0059E6  51AA               	movf	(main@last_status_millis+2)& (0+255),w,b
  2409   0059E8  0100               	movlb	0	; () banked
  2410   0059EA  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2411   0059EC  0101               	movlb	1	; () banked
  2412   0059EE  6FA6               	movwf	(??_main+2)& (0+255),b
  2413   0059F0  51AB               	movf	(main@last_status_millis+3)& (0+255),w,b
  2414   0059F2  0100               	movlb	0	; () banked
  2415   0059F4  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2416   0059F6  0101               	movlb	1	; () banked
  2417   0059F8  6FA7               	movwf	(??_main+3)& (0+255),b
  2418   0059FA  51A7               	movf	(??_main+3)& (0+255),w,b
  2419   0059FC  11A6               	iorwf	(??_main+2)& (0+255),w,b
  2420   0059FE  E10B               	bnz	u21040
  2421   005A00  0EF5               	movlw	245
  2422   005A02  5DA4               	subwf	??_main& (0+255),w,b
  2423   005A04  0E01               	movlw	1
  2424   005A06  59A5               	subwfb	(??_main+1)& (0+255),w,b
  2425   005A08  A0D8               	btfss	status,0,c
  2426   005A0A  EF09  F02D         	goto	u21041
  2427   005A0E  EF0B  F02D         	goto	u21040
  2428   005A12                     u21041:
  2429   005A12  EF17  F02D         	goto	l17456
  2430   005A16                     u21040:
  2431   005A16                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 93:                 last_status_millis = millis();
  2434   005A16  EC7B  F045         	call	_millis	;wreg free
  2435   005A1A  C060  F1A8         	movff	?_millis,main@last_status_millis
  2436   005A1E  C061  F1A9         	movff	?_millis+1,main@last_status_millis+1
  2437   005A22  C062  F1AA         	movff	?_millis+2,main@last_status_millis+2
  2438   005A26  C063  F1AB         	movff	?_millis+3,main@last_status_millis+3
  2439   005A2A                     
  2440                           ;main.c: 94:                 send_status_err();
  2441   005A2A  EC94  F044         	call	_send_status_err	;wreg free
  2442   005A2E                     l17456:
  2443                           
  2444                           ;main.c: 91:         while (f_mount(&FatFs, "", 1) != FR_OK) {
  2445   005A2E  0E64               	movlw	low _FatFs
  2446   005A30  0100               	movlb	0	; () banked
  2447   005A32  6FE7               	movwf	f_mount@fs& (0+255),b
  2448   005A34  0E02               	movlw	high _FatFs
  2449   005A36  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2450   005A38  0EEA               	movlw	low (STR_9+11)
  2451   005A3A  6FE9               	movwf	f_mount@path& (0+255),b
  2452   005A3C  0EFF               	movlw	high (STR_9+11)
  2453   005A3E  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2454   005A40  0E01               	movlw	1
  2455   005A42  6FEB               	movwf	f_mount@opt& (0+255),b
  2456   005A44  ECE1  F03C         	call	_f_mount	;wreg free
  2457   005A48  0900               	iorlw	0
  2458   005A4A  A4D8               	btfss	status,2,c
  2459   005A4C  EF2A  F02D         	goto	u21051
  2460   005A50  EF2C  F02D         	goto	u21050
  2461   005A54                     u21051:
  2462   005A54  EFE6  F02C         	goto	l17450
  2463   005A58                     u21050:
  2464   005A58                     l2184:
  2465   005A58  0004               	clrwdt		;# 
  2466   005A5A                     
  2467                           ;main.c: 105:         if (millis() - last_status_millis > 500) {
  2468   005A5A  EC7B  F045         	call	_millis	;wreg free
  2469   005A5E  0101               	movlb	1	; () banked
  2470   005A60  51A8               	movf	main@last_status_millis& (0+255),w,b
  2471   005A62  0100               	movlb	0	; () banked
  2472   005A64  5D60               	subwf	?_millis& (0+255),w,b
  2473   005A66  0101               	movlb	1	; () banked
  2474   005A68  6FA4               	movwf	??_main& (0+255),b
  2475   005A6A  51A9               	movf	(main@last_status_millis+1)& (0+255),w,b
  2476   005A6C  0100               	movlb	0	; () banked
  2477   005A6E  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2478   005A70  0101               	movlb	1	; () banked
  2479   005A72  6FA5               	movwf	(??_main+1)& (0+255),b
  2480   005A74  51AA               	movf	(main@last_status_millis+2)& (0+255),w,b
  2481   005A76  0100               	movlb	0	; () banked
  2482   005A78  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2483   005A7A  0101               	movlb	1	; () banked
  2484   005A7C  6FA6               	movwf	(??_main+2)& (0+255),b
  2485   005A7E  51AB               	movf	(main@last_status_millis+3)& (0+255),w,b
  2486   005A80  0100               	movlb	0	; () banked
  2487   005A82  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2488   005A84  0101               	movlb	1	; () banked
  2489   005A86  6FA7               	movwf	(??_main+3)& (0+255),b
  2490   005A88  51A7               	movf	(??_main+3)& (0+255),w,b
  2491   005A8A  11A6               	iorwf	(??_main+2)& (0+255),w,b
  2492   005A8C  E10B               	bnz	u21060
  2493   005A8E  0EF5               	movlw	245
  2494   005A90  5DA4               	subwf	??_main& (0+255),w,b
  2495   005A92  0E01               	movlw	1
  2496   005A94  59A5               	subwfb	(??_main+1)& (0+255),w,b
  2497   005A96  A0D8               	btfss	status,0,c
  2498   005A98  EF50  F02D         	goto	u21061
  2499   005A9C  EF52  F02D         	goto	u21060
  2500   005AA0                     u21061:
  2501   005AA0  EF2C  F02D         	goto	l2184
  2502   005AA4                     u21060:
  2503   005AA4                     
  2504                           ; BSR set to: 1
  2505                           ;main.c: 106:             last_status_millis = millis();
  2506   005AA4  EC7B  F045         	call	_millis	;wreg free
  2507   005AA8  C060  F1A8         	movff	?_millis,main@last_status_millis
  2508   005AAC  C061  F1A9         	movff	?_millis+1,main@last_status_millis+1
  2509   005AB0  C062  F1AA         	movff	?_millis+2,main@last_status_millis+2
  2510   005AB4  C063  F1AB         	movff	?_millis+3,main@last_status_millis+3
  2511   005AB8                     
  2512                           ;main.c: 107:             send_status_ok();
  2513   005AB8  EC10  F038         	call	_send_status_ok	;wreg free
  2514   005ABC  EF2C  F02D         	goto	l2184
  2515   005AC0  EF0D  F000         	goto	start
  2516   005AC4                     __end_of_main:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _txb_init *****************
  2520 ;; Defined at:
  2521 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  pool            2   15[BANK0 ] PTR void 
  2524 ;;		 -> tx_pool(100), 
  2525 ;;  pool_size       2   17[BANK0 ] unsigned int 
  2526 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  2527 ;;		 -> can_send(1), 
  2528 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()_Bool 
  2529 ;;		 -> can_send_rdy(1), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;Total ram usage:        8 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 7
  2548 ;; This function calls:
  2549 ;;		_srb_init
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text1
  2556   008A58                     __ptext1:
  2557                           	callstack 0
  2558   008A58                     _txb_init:
  2559                           	callstack 23
  2560   008A58                     
  2561                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  2562   008A58  C073  F1B7         	movff	txb_init@can_send_fp,_ctx
  2563   008A5C  C074  F1B8         	movff	txb_init@can_send_fp+1,_ctx+1
  2564                           
  2565                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  2566   008A60  C075  F1B9         	movff	txb_init@can_tx_ready,_ctx+2
  2567   008A64  C076  F1BA         	movff	txb_init@can_tx_ready+1,_ctx+3
  2568   008A68                     
  2569                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  2570   008A68  0EC4               	movlw	low _buf@can_tx_buffer$F1072
  2571   008A6A  0100               	movlb	0	; () banked
  2572   008A6C  6F67               	movwf	srb_init@ctx& (0+255),b
  2573   008A6E  0E01               	movlw	high _buf@can_tx_buffer$F1072
  2574   008A70  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  2575   008A72  C06F  F069         	movff	txb_init@pool,srb_init@pool
  2576   008A76  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  2577   008A7A  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  2578   008A7E  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  2579   008A82  0E00               	movlw	0
  2580   008A84  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  2581   008A86  0E0B               	movlw	11
  2582   008A88  6F6D               	movwf	srb_init@element_size& (0+255),b
  2583   008A8A  EC6A  F040         	call	_srb_init	;wreg free
  2584   008A8E  0012               	return		;funcret
  2585   008A90                     __end_of_txb_init:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _srb_init *****************
  2589 ;; Defined at:
  2590 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  ctx             2    7[BANK0 ] PTR struct .
  2593 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  2594 ;;  pool            2    9[BANK0 ] PTR void 
  2595 ;;		 -> tx_pool(100), 
  2596 ;;  pool_size       2   11[BANK0 ] unsigned int 
  2597 ;;  element_size    2   13[BANK0 ] unsigned int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2609 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;Total ram usage:        8 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 6
  2616 ;; This function calls:
  2617 ;;		___lwdiv
  2618 ;; This function is called by:
  2619 ;;		_txb_init
  2620 ;;		_rcvb_init
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text2
  2625   0080D4                     __ptext2:
  2626                           	callstack 0
  2627   0080D4                     _srb_init:
  2628                           	callstack 23
  2629   0080D4                     
  2630                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  2631   0080D4  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  2632   0080DA  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  2633   0080E0  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  2634   0080E6  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  2635   0080EC                     
  2636                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  2637   0080EC  0100               	movlb	0	; () banked
  2638   0080EE  EE20 F002          	lfsr	2,2
  2639   0080F2  5167               	movf	srb_init@ctx& (0+255),w,b
  2640   0080F4  26D9               	addwf	fsr2l,f,c
  2641   0080F6  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2642   0080F8  22DA               	addwfc	fsr2h,f,c
  2643   0080FA  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  2644   008100  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  2645   008106                     
  2646                           ; BSR set to: 0
  2647                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  2648   008106  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  2649   00810A  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  2650   00810E  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  2651   008112  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  2652   008116  ECEB  F040         	call	___lwdiv	;wreg free
  2653   00811A  0100               	movlb	0	; () banked
  2654   00811C  EE20 F004          	lfsr	2,4
  2655   008120  5167               	movf	srb_init@ctx& (0+255),w,b
  2656   008122  26D9               	addwf	fsr2l,f,c
  2657   008124  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2658   008126  22DA               	addwfc	fsr2h,f,c
  2659   008128  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  2660   00812E  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  2661   008134                     
  2662                           ; BSR set to: 0
  2663                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  2664   008134  EE20 F006          	lfsr	2,6
  2665   008138  5167               	movf	srb_init@ctx& (0+255),w,b
  2666   00813A  26D9               	addwf	fsr2l,f,c
  2667   00813C  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2668   00813E  22DA               	addwfc	fsr2h,f,c
  2669   008140  6ADE               	clrf	postinc2,c
  2670   008142  6ADD               	clrf	postdec2,c
  2671   008144                     
  2672                           ; BSR set to: 0
  2673                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  2674   008144  EE20 F008          	lfsr	2,8
  2675   008148  5167               	movf	srb_init@ctx& (0+255),w,b
  2676   00814A  26D9               	addwf	fsr2l,f,c
  2677   00814C  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  2678   00814E  22DA               	addwfc	fsr2h,f,c
  2679   008150  6ADE               	clrf	postinc2,c
  2680   008152  6ADD               	clrf	postdec2,c
  2681   008154                     
  2682                           ; BSR set to: 0
  2683   008154  0012               	return		;funcret
  2684   008156                     __end_of_srb_init:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function ___lwdiv *****************
  2688 ;; Defined at:
  2689 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  dividend        2    0[BANK0 ] unsigned int 
  2692 ;;  divisor         2    2[BANK0 ] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  quotient        2    5[BANK0 ] unsigned int 
  2695 ;;  counter         1    4[BANK0 ] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    0[BANK0 ] unsigned int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        7 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 5
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_srb_init
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text3
  2720   0081D6                     __ptext3:
  2721                           	callstack 0
  2722   0081D6                     ___lwdiv:
  2723                           	callstack 23
  2724   0081D6  0E00               	movlw	0
  2725   0081D8  0100               	movlb	0	; () banked
  2726   0081DA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2727   0081DC  0E00               	movlw	0
  2728   0081DE  6F65               	movwf	___lwdiv@quotient& (0+255),b
  2729   0081E0                     
  2730                           ; BSR set to: 0
  2731   0081E0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2732   0081E2  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2733   0081E4  B4D8               	btfsc	status,2,c
  2734   0081E6  EFF7  F040         	goto	u19061
  2735   0081EA  EFF9  F040         	goto	u19060
  2736   0081EE                     u19061:
  2737   0081EE  EF21  F041         	goto	l2738
  2738   0081F2                     u19060:
  2739   0081F2                     
  2740                           ; BSR set to: 0
  2741   0081F2  0E01               	movlw	1
  2742   0081F4  6F64               	movwf	___lwdiv@counter& (0+255),b
  2743   0081F6  EF01  F041         	goto	l15640
  2744   0081FA                     l15638:
  2745                           
  2746                           ; BSR set to: 0
  2747   0081FA  90D8               	bcf	status,0,c
  2748   0081FC  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  2749   0081FE  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2750   008200  2B64               	incf	___lwdiv@counter& (0+255),f,b
  2751   008202                     l15640:
  2752                           
  2753                           ; BSR set to: 0
  2754   008202  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2755   008204  EF06  F041         	goto	u19071
  2756   008208  EF08  F041         	goto	u19070
  2757   00820C                     u19071:
  2758   00820C  EFFD  F040         	goto	l15638
  2759   008210                     u19070:
  2760   008210                     l15642:
  2761                           
  2762                           ; BSR set to: 0
  2763   008210  90D8               	bcf	status,0,c
  2764   008212  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  2765   008214  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2766   008216                     
  2767                           ; BSR set to: 0
  2768   008216  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2769   008218  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  2770   00821A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2771   00821C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2772   00821E  A0D8               	btfss	status,0,c
  2773   008220  EF14  F041         	goto	u19081
  2774   008224  EF16  F041         	goto	u19080
  2775   008228                     u19081:
  2776   008228  EF1B  F041         	goto	l15650
  2777   00822C                     u19080:
  2778   00822C                     
  2779                           ; BSR set to: 0
  2780   00822C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2781   00822E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  2782   008230  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2783   008232  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2784   008234                     
  2785                           ; BSR set to: 0
  2786   008234  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  2787   008236                     l15650:
  2788                           
  2789                           ; BSR set to: 0
  2790   008236  90D8               	bcf	status,0,c
  2791   008238  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2792   00823A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  2793   00823C                     
  2794                           ; BSR set to: 0
  2795   00823C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  2796   00823E  EF08  F041         	goto	l15642
  2797   008242                     l2738:
  2798                           
  2799                           ; BSR set to: 0
  2800   008242  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  2801   008246  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2802   00824A                     
  2803                           ; BSR set to: 0
  2804   00824A  0012               	return		;funcret
  2805   00824C                     __end_of___lwdiv:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function _timer0_init *****************
  2809 ;; Defined at:
  2810 ;;		line 33 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 5
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text4
  2839   008BF6                     __ptext4:
  2840                           	callstack 0
  2841   008BF6                     _timer0_init:
  2842                           	callstack 25
  2843   008BF6                     
  2844                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 34:     PIE3bits.TMR0IE = 1;
  2845   008BF6  0139               	movlb	57	; () banked
  2846   008BF8  8F93               	bsf	147,7,b	;volatile
  2847                           
  2848                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 36:     T0CON0bits.EN = 0;
  2849   008BFA  9EB8               	bcf	184,7,c	;volatile
  2850                           
  2851                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 37:     T0CON0bits.MD16 = 0;
  2852   008BFC  98B8               	bcf	184,4,c	;volatile
  2853   008BFE                     
  2854                           ; BSR set to: 57
  2855                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 39:     T0CON0bits.OUTPS = 0;
  2856   008BFE  0EF0               	movlw	-16
  2857   008C00  16B8               	andwf	184,f,c	;volatile
  2858                           
  2859                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 40:     T0CON1bits.CKPS = 0;
  2860   008C02  0EF0               	movlw	-16
  2861   008C04  16B9               	andwf	185,f,c	;volatile
  2862                           
  2863                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 42:     T0CON1bits.CS = 0x5;
  2864   008C06  50B9               	movf	185,w,c	;volatile
  2865   008C08  0B1F               	andlw	-225
  2866   008C0A  09A0               	iorlw	160
  2867   008C0C  6EB9               	movwf	185,c	;volatile
  2868   008C0E                     
  2869                           ; BSR set to: 57
  2870                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 43:     T0CON1bits.ASYNC = 0;
  2871   008C0E  98B9               	bcf	185,4,c	;volatile
  2872   008C10                     
  2873                           ; BSR set to: 57
  2874                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 46:     T0CON0bits.EN = 1;
  2875   008C10  8EB8               	bsf	184,7,c	;volatile
  2876   008C12                     
  2877                           ; BSR set to: 57
  2878   008C12  0012               	return		;funcret
  2879   008C14                     __end_of_timer0_init:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _send_status_ok *****************
  2883 ;; Defined at:
  2884 ;;		line 213 in file "main.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  board_stat_m   11  153[BANK1 ] struct .
  2889 ;;  buf             4  145[BANK1 ] unsigned char [4]
  2890 ;;  time            4  149[BANK1 ] unsigned long 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;Total ram usage:       19 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 18
  2907 ;; This function calls:
  2908 ;;		_BLUE_LED_TOGGLE
  2909 ;;		_build_board_stat_msg
  2910 ;;		_can_send
  2911 ;;		_f_close
  2912 ;;		_f_open
  2913 ;;		_f_write
  2914 ;;		_millis
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text5
  2921   007020                     __ptext5:
  2922                           	callstack 0
  2923   007020                     _send_status_ok:
  2924                           	callstack 12
  2925   007020                     
  2926                           ;main.c: 214:     can_msg_t board_stat_msg;;main.c: 215:     build_board_stat_msg(millis
      +                          (), E_NOMINAL, ((void*)0), 0, &board_stat_msg);
  2927   007020  EC7B  F045         	call	_millis	;wreg free
  2928   007024  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
  2929   007028  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  2930   00702C  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  2931   007030  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  2932   007034  0E00               	movlw	0
  2933   007036  0100               	movlb	0	; () banked
  2934   007038  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
  2935   00703A  0E00               	movlw	0
  2936   00703C  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
  2937   00703E  0E00               	movlw	0
  2938   007040  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  2939   007042  0E00               	movlw	0
  2940   007044  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  2941   007046  0E99               	movlw	low send_status_ok@board_stat_msg
  2942   007048  6F70               	movwf	build_board_stat_msg@output& (0+255),b
  2943   00704A  0E01               	movlw	high send_status_ok@board_stat_msg
  2944   00704C  6F71               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  2945   00704E  EC61  F03A         	call	_build_board_stat_msg	;wreg free
  2946   007052                     
  2947                           ;main.c: 216:     can_send(&board_stat_msg);
  2948   007052  0E99               	movlw	low send_status_ok@board_stat_msg
  2949   007054  0100               	movlb	0	; () banked
  2950   007056  6F6B               	movwf	can_send@message& (0+255),b
  2951   007058  0E01               	movlw	high send_status_ok@board_stat_msg
  2952   00705A  6F6C               	movwf	(can_send@message+1)& (0+255),b
  2953   00705C  ECD8  F039         	call	_can_send	;wreg free
  2954   007060                     
  2955                           ;main.c: 218:     uint32_t time = millis();
  2956   007060  EC7B  F045         	call	_millis	;wreg free
  2957   007064  C060  F195         	movff	?_millis,send_status_ok@time
  2958   007068  C061  F196         	movff	?_millis+1,send_status_ok@time+1
  2959   00706C  C062  F197         	movff	?_millis+2,send_status_ok@time+2
  2960   007070  C063  F198         	movff	?_millis+3,send_status_ok@time+3
  2961   007074                     
  2962                           ;main.c: 219:     unsigned char buf[4];;main.c: 222:     buf[0] = time >> 24;
  2963   007074  C198  F191         	movff	send_status_ok@time+3,send_status_ok@buf
  2964   007078                     
  2965                           ;main.c: 223:     buf[1] = time >> 16;
  2966   007078  C197  F192         	movff	send_status_ok@time+2,send_status_ok@buf+1
  2967   00707C                     
  2968                           ;main.c: 224:     buf[2] = time >> 8;
  2969   00707C  C196  F193         	movff	send_status_ok@time+1,send_status_ok@buf+2
  2970   007080                     
  2971                           ;main.c: 225:     buf[3] = time;
  2972   007080  C195  F194         	movff	send_status_ok@time,send_status_ok@buf+3
  2973   007084                     
  2974                           ;main.c: 227:     if (f_open(&Fil, "Data.txt", 0x30 | 0x01 | 0x02) == FR_OK) {
  2975   007084  0E97               	movlw	low _Fil
  2976   007086  0101               	movlb	1	; () banked
  2977   007088  6F41               	movwf	f_open@fp& (0+255),b
  2978   00708A  0E04               	movlw	high _Fil
  2979   00708C  6F42               	movwf	(f_open@fp+1)& (0+255),b
  2980   00708E  0EEB               	movlw	low STR_8
  2981   007090  6F43               	movwf	f_open@path& (0+255),b
  2982   007092  0EFF               	movlw	high STR_8
  2983   007094  6F44               	movwf	(f_open@path+1)& (0+255),b
  2984   007096  0E33               	movlw	51
  2985   007098  6F45               	movwf	f_open@mode& (0+255),b
  2986   00709A  ECA0  F00F         	call	_f_open	;wreg free
  2987   00709E  0900               	iorlw	0
  2988   0070A0  A4D8               	btfss	status,2,c
  2989   0070A2  EF55  F038         	goto	u20201
  2990   0070A6  EF57  F038         	goto	u20200
  2991   0070AA                     u20201:
  2992   0070AA  EFA3  F038         	goto	l2204
  2993   0070AE                     u20200:
  2994   0070AE                     
  2995                           ;main.c: 229:         f_write(&Fil, &buf[0], 8, &bw);
  2996   0070AE  0E97               	movlw	low _Fil
  2997   0070B0  0101               	movlb	1	; () banked
  2998   0070B2  6F17               	movwf	f_write@fp& (0+255),b
  2999   0070B4  0E04               	movlw	high _Fil
  3000   0070B6  6F18               	movwf	(f_write@fp+1)& (0+255),b
  3001   0070B8  0E91               	movlw	low send_status_ok@buf
  3002   0070BA  6F19               	movwf	f_write@buff& (0+255),b
  3003   0070BC  0E01               	movlw	high send_status_ok@buf
  3004   0070BE  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  3005   0070C0  0E00               	movlw	0
  3006   0070C2  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3007   0070C4  0E08               	movlw	8
  3008   0070C6  6F1B               	movwf	f_write@btw& (0+255),b
  3009   0070C8  0ED8               	movlw	low _bw
  3010   0070CA  6F1D               	movwf	f_write@bw& (0+255),b
  3011   0070CC  0E01               	movlw	high _bw
  3012   0070CE  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  3013   0070D0  EC69  F007         	call	_f_write	;wreg free
  3014                           
  3015                           ;main.c: 230:         f_write(&Fil, &buf[1], 8, &bw);
  3016   0070D4  0E97               	movlw	low _Fil
  3017   0070D6  0101               	movlb	1	; () banked
  3018   0070D8  6F17               	movwf	f_write@fp& (0+255),b
  3019   0070DA  0E04               	movlw	high _Fil
  3020   0070DC  6F18               	movwf	(f_write@fp+1)& (0+255),b
  3021   0070DE  0E92               	movlw	low (send_status_ok@buf+1)
  3022   0070E0  6F19               	movwf	f_write@buff& (0+255),b
  3023   0070E2  0E01               	movlw	high (send_status_ok@buf+1)
  3024   0070E4  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  3025   0070E6  0E00               	movlw	0
  3026   0070E8  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3027   0070EA  0E08               	movlw	8
  3028   0070EC  6F1B               	movwf	f_write@btw& (0+255),b
  3029   0070EE  0ED8               	movlw	low _bw
  3030   0070F0  6F1D               	movwf	f_write@bw& (0+255),b
  3031   0070F2  0E01               	movlw	high _bw
  3032   0070F4  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  3033   0070F6  EC69  F007         	call	_f_write	;wreg free
  3034                           
  3035                           ;main.c: 231:         f_write(&Fil, &buf[2], 8, &bw);
  3036   0070FA  0E97               	movlw	low _Fil
  3037   0070FC  0101               	movlb	1	; () banked
  3038   0070FE  6F17               	movwf	f_write@fp& (0+255),b
  3039   007100  0E04               	movlw	high _Fil
  3040   007102  6F18               	movwf	(f_write@fp+1)& (0+255),b
  3041   007104  0E93               	movlw	low (send_status_ok@buf+2)
  3042   007106  6F19               	movwf	f_write@buff& (0+255),b
  3043   007108  0E01               	movlw	high (send_status_ok@buf+2)
  3044   00710A  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  3045   00710C  0E00               	movlw	0
  3046   00710E  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3047   007110  0E08               	movlw	8
  3048   007112  6F1B               	movwf	f_write@btw& (0+255),b
  3049   007114  0ED8               	movlw	low _bw
  3050   007116  6F1D               	movwf	f_write@bw& (0+255),b
  3051   007118  0E01               	movlw	high _bw
  3052   00711A  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  3053   00711C  EC69  F007         	call	_f_write	;wreg free
  3054                           
  3055                           ;main.c: 232:         f_write(&Fil, &buf[3], 8, &bw);
  3056   007120  0E97               	movlw	low _Fil
  3057   007122  0101               	movlb	1	; () banked
  3058   007124  6F17               	movwf	f_write@fp& (0+255),b
  3059   007126  0E04               	movlw	high _Fil
  3060   007128  6F18               	movwf	(f_write@fp+1)& (0+255),b
  3061   00712A  0E94               	movlw	low (send_status_ok@buf+3)
  3062   00712C  6F19               	movwf	f_write@buff& (0+255),b
  3063   00712E  0E01               	movlw	high (send_status_ok@buf+3)
  3064   007130  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  3065   007132  0E00               	movlw	0
  3066   007134  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3067   007136  0E08               	movlw	8
  3068   007138  6F1B               	movwf	f_write@btw& (0+255),b
  3069   00713A  0ED8               	movlw	low _bw
  3070   00713C  6F1D               	movwf	f_write@bw& (0+255),b
  3071   00713E  0E01               	movlw	high _bw
  3072   007140  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  3073   007142  EC69  F007         	call	_f_write	;wreg free
  3074   007146                     l2204:
  3075                           
  3076                           ;main.c: 234:     f_close(&Fil);
  3077   007146  0E97               	movlw	low _Fil
  3078   007148  0100               	movlb	0	; () banked
  3079   00714A  6FDA               	movwf	f_close@fp& (0+255),b
  3080   00714C  0E04               	movlw	high _Fil
  3081   00714E  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  3082   007150  ECC5  F043         	call	_f_close	;wreg free
  3083   007154                     
  3084                           ;main.c: 236:     BLUE_LED_TOGGLE();
  3085   007154  EC80  F046         	call	_BLUE_LED_TOGGLE	;wreg free
  3086   007158  0012               	return		;funcret
  3087   00715A                     __end_of_send_status_ok:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _f_write *****************
  3091 ;; Defined at:
  3092 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  fp              2   23[BANK1 ] PTR struct .
  3095 ;;		 -> Fil(546), pb$fp(3), 
  3096 ;;  buff            2   25[BANK1 ] PTR const void 
  3097 ;;		 -> pb$buf(64), send_status_ok@buf(4), STR_9(12), f_printf@pb(70), 
  3098 ;;		 -> f_puts@pb(70), f_putc@pb(70), 
  3099 ;;  btw             2   27[BANK1 ] unsigned int 
  3100 ;;  bw              2   29[BANK1 ] PTR unsigned int 
  3101 ;;		 -> bw(2), putc_flush@nw(2), putc_bfd@n(2), 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  clst            4   58[BANK1 ] unsigned long 
  3104 ;;  sect            4   54[BANK1 ] unsigned long 
  3105 ;;  fs              2   64[BANK1 ] PTR struct .
  3106 ;;		 -> FatFs(563), NULL(0), 
  3107 ;;  wcnt            2   62[BANK1 ] unsigned int 
  3108 ;;  cc              2   52[BANK1 ] unsigned int 
  3109 ;;  csect           2   50[BANK1 ] unsigned int 
  3110 ;;  wbuff           2   47[BANK1 ] PTR const unsigned char 
  3111 ;;		 -> pb$buf(64), send_status_ok@buf(4), STR_9(12), f_printf@pb(70), 
  3112 ;;		 -> f_puts@pb(70), f_putc@pb(70), 
  3113 ;;  res             1   49[BANK1 ] enum E68
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      enum E68
  3116 ;; Registers used:
  3117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:       43 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 14
  3130 ;; This function calls:
  3131 ;;		_clst2sect
  3132 ;;		_create_chain
  3133 ;;		_disk_read
  3134 ;;		_disk_write
  3135 ;;		_mem_cpy
  3136 ;;		_validate
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;;		_send_status_ok
  3140 ;;		_putc_bfd
  3141 ;;		_putc_flush
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text6
  3146   000ED2                     __ptext6:
  3147                           	callstack 0
  3148   000ED2                     _f_write:
  3149                           	callstack 15
  3150   000ED2                     
  3151                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  3152   000ED2  C119  F12F         	movff	f_write@buff,f_write@wbuff
  3153   000ED6  C11A  F130         	movff	f_write@buff+1,f_write@wbuff+1
  3154   000EDA                     
  3155                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  3156   000EDA  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  3157   000EE0  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  3158   000EE6  6ADE               	clrf	postinc2,c
  3159   000EE8  6ADD               	clrf	postdec2,c
  3160   000EEA                     
  3161                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  3162   000EEA  C117  F062         	movff	f_write@fp,validate@obj
  3163   000EEE  C118  F063         	movff	f_write@fp+1,validate@obj+1
  3164   000EF2  0E40               	movlw	low f_write@fs
  3165   000EF4  0100               	movlb	0	; () banked
  3166   000EF6  6F64               	movwf	validate@rfs& (0+255),b
  3167   000EF8  0E01               	movlw	high f_write@fs
  3168   000EFA  6F65               	movwf	(validate@rfs+1)& (0+255),b
  3169   000EFC  EC43  F039         	call	_validate	;wreg free
  3170   000F00  0101               	movlb	1	; () banked
  3171   000F02  6F31               	movwf	f_write@res& (0+255),b
  3172   000F04                     
  3173                           ; BSR set to: 1
  3174                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  3175   000F04  5131               	movf	f_write@res& (0+255),w,b
  3176   000F06  A4D8               	btfss	status,2,c
  3177   000F08  EF88  F007         	goto	u19511
  3178   000F0C  EF8A  F007         	goto	u19510
  3179   000F10                     u19511:
  3180   000F10  EF9A  F007         	goto	l15882
  3181   000F14                     u19510:
  3182   000F14                     
  3183                           ; BSR set to: 1
  3184   000F14  EE20 F00F          	lfsr	2,15
  3185   000F18  5117               	movf	f_write@fp& (0+255),w,b
  3186   000F1A  26D9               	addwf	fsr2l,f,c
  3187   000F1C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3188   000F1E  22DA               	addwfc	fsr2h,f,c
  3189   000F20  50DF               	movf	indf2,w,c
  3190   000F22  6F31               	movwf	f_write@res& (0+255),b
  3191   000F24  5131               	movf	f_write@res& (0+255),w,b
  3192   000F26  B4D8               	btfsc	status,2,c
  3193   000F28  EF98  F007         	goto	u19521
  3194   000F2C  EF9A  F007         	goto	u19520
  3195   000F30                     u19521:
  3196   000F30  EF9D  F007         	goto	l15886
  3197   000F34                     u19520:
  3198   000F34                     l15882:
  3199                           
  3200                           ; BSR set to: 1
  3201   000F34  5131               	movf	f_write@res& (0+255),w,b
  3202   000F36  EF91  F00B         	goto	l1355
  3203   000F3A                     l15886:
  3204                           
  3205                           ; BSR set to: 1
  3206                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  3207   000F3A  EE20 F00E          	lfsr	2,14
  3208   000F3E  5117               	movf	f_write@fp& (0+255),w,b
  3209   000F40  26D9               	addwf	fsr2l,f,c
  3210   000F42  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3211   000F44  22DA               	addwfc	fsr2h,f,c
  3212   000F46  B2DF               	btfsc	indf2,1,c
  3213   000F48  EFA8  F007         	goto	u19531
  3214   000F4C  EFAA  F007         	goto	u19530
  3215   000F50                     u19531:
  3216   000F50  EFAD  F007         	goto	l15894
  3217   000F54                     u19530:
  3218   000F54                     
  3219                           ; BSR set to: 1
  3220   000F54  0E07               	movlw	7
  3221   000F56  EF91  F00B         	goto	l1355
  3222   000F5A                     l15894:
  3223                           
  3224                           ; BSR set to: 1
  3225   000F5A  EE20 F010          	lfsr	2,16
  3226   000F5E  5117               	movf	f_write@fp& (0+255),w,b
  3227   000F60  26D9               	addwf	fsr2l,f,c
  3228   000F62  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3229   000F64  22DA               	addwfc	fsr2h,f,c
  3230   000F66  EE10 F010          	lfsr	1,16
  3231   000F6A  5117               	movf	f_write@fp& (0+255),w,b
  3232   000F6C  26E1               	addwf	fsr1l,f,c
  3233   000F6E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3234   000F70  22E2               	addwfc	fsr1h,f,c
  3235   000F72  006F FF98  F123    	movff	postinc1,??_f_write+4
  3236   000F78  006F FF98  F124    	movff	postinc1,??_f_write+5
  3237   000F7E  006F FF98  F125    	movff	postinc1,??_f_write+6
  3238   000F84  006F FF98  F126    	movff	postinc1,??_f_write+7
  3239   000F8A  511B               	movf	f_write@btw& (0+255),w,b
  3240   000F8C  2523               	addwf	(??_f_write+4)& (0+255),w,b
  3241   000F8E  6F27               	movwf	(??_f_write+8)& (0+255),b
  3242   000F90  511C               	movf	(f_write@btw+1)& (0+255),w,b
  3243   000F92  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  3244   000F94  6F28               	movwf	(??_f_write+9)& (0+255),b
  3245   000F96  0E00               	movlw	0
  3246   000F98  2125               	addwfc	(??_f_write+6)& (0+255),w,b
  3247   000F9A  6F29               	movwf	(??_f_write+10)& (0+255),b
  3248   000F9C  0E00               	movlw	0
  3249   000F9E  2126               	addwfc	(??_f_write+7)& (0+255),w,b
  3250   000FA0  6F2A               	movwf	(??_f_write+11)& (0+255),b
  3251   000FA2  50DE               	movf	postinc2,w,c
  3252   000FA4  5D27               	subwf	(??_f_write+8)& (0+255),w,b
  3253   000FA6  50DE               	movf	postinc2,w,c
  3254   000FA8  5928               	subwfb	(??_f_write+9)& (0+255),w,b
  3255   000FAA  50DE               	movf	postinc2,w,c
  3256   000FAC  5929               	subwfb	(??_f_write+10)& (0+255),w,b
  3257   000FAE  50DE               	movf	postinc2,w,c
  3258   000FB0  592A               	subwfb	(??_f_write+11)& (0+255),w,b
  3259   000FB2  B0D8               	btfsc	status,0,c
  3260   000FB4  EFDE  F007         	goto	u19541
  3261   000FB8  EFE0  F007         	goto	u19540
  3262   000FBC                     u19541:
  3263   000FBC  EF7F  F00B         	goto	l16014
  3264   000FC0                     u19540:
  3265   000FC0                     
  3266                           ; BSR set to: 1
  3267                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  3268   000FC0  EE20 F010          	lfsr	2,16
  3269   000FC4  5117               	movf	f_write@fp& (0+255),w,b
  3270   000FC6  26D9               	addwf	fsr2l,f,c
  3271   000FC8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3272   000FCA  22DA               	addwfc	fsr2h,f,c
  3273   000FCC  006F FF78  F11F    	movff	postinc2,??_f_write
  3274   000FD2  006F FF74  F120    	movff	postdec2,??_f_write+1
  3275   000FD8  1D1F               	comf	??_f_write& (0+255),w,b
  3276   000FDA  6F1B               	movwf	f_write@btw& (0+255),b
  3277   000FDC  1D20               	comf	(??_f_write+1)& (0+255),w,b
  3278   000FDE  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  3279   000FE0  EF7F  F00B         	goto	l16014
  3280   000FE4                     l15898:
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  3284   000FE4  EE20 F010          	lfsr	2,16
  3285   000FE8  5117               	movf	f_write@fp& (0+255),w,b
  3286   000FEA  26D9               	addwf	fsr2l,f,c
  3287   000FEC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3288   000FEE  22DA               	addwfc	fsr2h,f,c
  3289   000FF0  0EFF               	movlw	255
  3290   000FF2  14DE               	andwf	postinc2,w,c
  3291   000FF4  6F1F               	movwf	??_f_write& (0+255),b
  3292   000FF6  0E01               	movlw	1
  3293   000FF8  14DE               	andwf	postinc2,w,c
  3294   000FFA  6F20               	movwf	(??_f_write+1)& (0+255),b
  3295   000FFC  0E00               	movlw	0
  3296   000FFE  14DE               	andwf	postinc2,w,c
  3297   001000  6F21               	movwf	(??_f_write+2)& (0+255),b
  3298   001002  0E00               	movlw	0
  3299   001004  14DE               	andwf	postinc2,w,c
  3300   001006  6F22               	movwf	(??_f_write+3)& (0+255),b
  3301   001008  511F               	movf	??_f_write& (0+255),w,b
  3302   00100A  1120               	iorwf	(??_f_write+1)& (0+255),w,b
  3303   00100C  1121               	iorwf	(??_f_write+2)& (0+255),w,b
  3304   00100E  1122               	iorwf	(??_f_write+3)& (0+255),w,b
  3305   001010  A4D8               	btfss	status,2,c
  3306   001012  EF0D  F008         	goto	u19551
  3307   001016  EF0F  F008         	goto	u19550
  3308   00101A                     u19551:
  3309   00101A  EFB0  F00A         	goto	l1362
  3310   00101E                     u19550:
  3311   00101E                     
  3312                           ; BSR set to: 1
  3313                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  3314   00101E  EE20 F010          	lfsr	2,16
  3315   001022  5117               	movf	f_write@fp& (0+255),w,b
  3316   001024  26D9               	addwf	fsr2l,f,c
  3317   001026  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3318   001028  22DA               	addwfc	fsr2h,f,c
  3319   00102A  006F FF78  F11F    	movff	postinc2,??_f_write
  3320   001030  006F FF78  F120    	movff	postinc2,??_f_write+1
  3321   001036  006F FF78  F121    	movff	postinc2,??_f_write+2
  3322   00103C  006F FF78  F122    	movff	postinc2,??_f_write+3
  3323   001042  0E0A               	movlw	10
  3324   001044  EF29  F008         	goto	u19560
  3325   001048                     u19565:
  3326   001048  90D8               	bcf	status,0,c
  3327   00104A  3322               	rrcf	(??_f_write+3)& (0+255),f,b
  3328   00104C  3321               	rrcf	(??_f_write+2)& (0+255),f,b
  3329   00104E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  3330   001050  331F               	rrcf	??_f_write& (0+255),f,b
  3331   001052                     u19560:
  3332   001052  2EE8               	decfsz	wreg,f,c
  3333   001054  EF24  F008         	goto	u19565
  3334   001058  EE20 F009          	lfsr	2,9
  3335   00105C  5140               	movf	f_write@fs& (0+255),w,b
  3336   00105E  26D9               	addwf	fsr2l,f,c
  3337   001060  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3338   001062  22DA               	addwfc	fsr2h,f,c
  3339   001064  006F FF78  F123    	movff	postinc2,??_f_write+4
  3340   00106A  006F FF74  F124    	movff	postdec2,??_f_write+5
  3341   001070  0EFF               	movlw	255
  3342   001072  2523               	addwf	(??_f_write+4)& (0+255),w,b
  3343   001074  6F25               	movwf	(??_f_write+6)& (0+255),b
  3344   001076  0EFF               	movlw	255
  3345   001078  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  3346   00107A  6F26               	movwf	(??_f_write+7)& (0+255),b
  3347   00107C  511F               	movf	??_f_write& (0+255),w,b
  3348   00107E  1525               	andwf	(??_f_write+6)& (0+255),w,b
  3349   001080  6F32               	movwf	f_write@csect& (0+255),b
  3350   001082  5120               	movf	(??_f_write+1)& (0+255),w,b
  3351   001084  1526               	andwf	(??_f_write+7)& (0+255),w,b
  3352   001086  6F33               	movwf	(f_write@csect+1)& (0+255),b
  3353   001088                     
  3354                           ; BSR set to: 1
  3355                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  3356   001088  5132               	movf	f_write@csect& (0+255),w,b
  3357   00108A  1133               	iorwf	(f_write@csect+1)& (0+255),w,b
  3358   00108C  A4D8               	btfss	status,2,c
  3359   00108E  EF4B  F008         	goto	u19571
  3360   001092  EF4D  F008         	goto	u19570
  3361   001096                     u19571:
  3362   001096  EF26  F009         	goto	l1363
  3363   00109A                     u19570:
  3364   00109A                     
  3365                           ; BSR set to: 1
  3366                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  3367   00109A  EE20 F010          	lfsr	2,16
  3368   00109E  5117               	movf	f_write@fp& (0+255),w,b
  3369   0010A0  26D9               	addwf	fsr2l,f,c
  3370   0010A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3371   0010A4  22DA               	addwfc	fsr2h,f,c
  3372   0010A6  50DE               	movf	postinc2,w,c
  3373   0010A8  10DE               	iorwf	postinc2,w,c
  3374   0010AA  10DE               	iorwf	postinc2,w,c
  3375   0010AC  10DE               	iorwf	postinc2,w,c
  3376   0010AE  A4D8               	btfss	status,2,c
  3377   0010B0  EF5C  F008         	goto	u19581
  3378   0010B4  EF5E  F008         	goto	u19580
  3379   0010B8                     u19581:
  3380   0010B8  EF94  F008         	goto	l15912
  3381   0010BC                     u19580:
  3382   0010BC                     
  3383                           ; BSR set to: 1
  3384                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  3385   0010BC  EE20 F006          	lfsr	2,6
  3386   0010C0  5117               	movf	f_write@fp& (0+255),w,b
  3387   0010C2  26D9               	addwf	fsr2l,f,c
  3388   0010C4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3389   0010C6  22DA               	addwfc	fsr2h,f,c
  3390   0010C8  006F FF78  F13A    	movff	postinc2,f_write@clst
  3391   0010CE  006F FF78  F13B    	movff	postinc2,f_write@clst+1
  3392   0010D4  006F FF78  F13C    	movff	postinc2,f_write@clst+2
  3393   0010DA  006F FF78  F13D    	movff	postinc2,f_write@clst+3
  3394   0010E0                     
  3395                           ; BSR set to: 1
  3396                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  3397   0010E0  513A               	movf	f_write@clst& (0+255),w,b
  3398   0010E2  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  3399   0010E4  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  3400   0010E6  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  3401   0010E8  A4D8               	btfss	status,2,c
  3402   0010EA  EF79  F008         	goto	u19591
  3403   0010EE  EF7B  F008         	goto	u19590
  3404   0010F2                     u19591:
  3405   0010F2  EFB4  F008         	goto	l15914
  3406   0010F6                     u19590:
  3407   0010F6                     
  3408                           ; BSR set to: 1
  3409                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  3410   0010F6  C117  F0F4         	movff	f_write@fp,create_chain@obj
  3411   0010FA  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  3412   0010FE  0E00               	movlw	0
  3413   001100  0100               	movlb	0	; () banked
  3414   001102  6FF6               	movwf	create_chain@clst& (0+255),b
  3415   001104  0E00               	movlw	0
  3416   001106  6FF7               	movwf	(create_chain@clst+1)& (0+255),b
  3417   001108  0E00               	movlw	0
  3418   00110A  6FF8               	movwf	(create_chain@clst+2)& (0+255),b
  3419   00110C  0E00               	movlw	0
  3420   00110E  6FF9               	movwf	(create_chain@clst+3)& (0+255),b
  3421   001110  ECFA  F016         	call	_create_chain	;wreg free
  3422   001114  C0F4  F13A         	movff	?_create_chain,f_write@clst
  3423   001118  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  3424   00111C  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  3425   001120  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  3426   001124  EFB4  F008         	goto	l15914
  3427   001128                     l15912:
  3428                           
  3429                           ; BSR set to: 1
  3430                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  3431   001128  C117  F0F4         	movff	f_write@fp,create_chain@obj
  3432   00112C  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  3433   001130  EE20 F014          	lfsr	2,20
  3434   001134  5117               	movf	f_write@fp& (0+255),w,b
  3435   001136  26D9               	addwf	fsr2l,f,c
  3436   001138  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3437   00113A  22DA               	addwfc	fsr2h,f,c
  3438   00113C  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  3439   001142  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  3440   001148  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  3441   00114E  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  3442   001154  ECFA  F016         	call	_create_chain	;wreg free
  3443   001158  C0F4  F13A         	movff	?_create_chain,f_write@clst
  3444   00115C  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  3445   001160  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  3446   001164  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  3447   001168                     l15914:
  3448                           
  3449                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  3450   001168  0101               	movlb	1	; () banked
  3451   00116A  513A               	movf	f_write@clst& (0+255),w,b
  3452   00116C  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  3453   00116E  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  3454   001170  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  3455   001172  A4D8               	btfss	status,2,c
  3456   001174  EFBE  F008         	goto	u19601
  3457   001178  EFC0  F008         	goto	u19600
  3458   00117C                     u19601:
  3459   00117C  EFC2  F008         	goto	l15918
  3460   001180                     u19600:
  3461   001180  EF88  F00B         	goto	l16016
  3462   001184                     l15918:
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  3466   001184  053A               	decf	f_write@clst& (0+255),w,b
  3467   001186  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  3468   001188  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  3469   00118A  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  3470   00118C  A4D8               	btfss	status,2,c
  3471   00118E  EFCB  F008         	goto	u19611
  3472   001192  EFCD  F008         	goto	u19610
  3473   001196                     u19611:
  3474   001196  EFD8  F008         	goto	l15926
  3475   00119A                     u19610:
  3476   00119A                     
  3477                           ; BSR set to: 1
  3478   00119A  EE20 F00F          	lfsr	2,15
  3479   00119E  5117               	movf	f_write@fp& (0+255),w,b
  3480   0011A0  26D9               	addwf	fsr2l,f,c
  3481   0011A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3482   0011A4  22DA               	addwfc	fsr2h,f,c
  3483   0011A6  0E02               	movlw	2
  3484   0011A8  6EDF               	movwf	indf2,c
  3485   0011AA                     l15922:
  3486                           
  3487                           ; BSR set to: 1
  3488   0011AA  0E02               	movlw	2
  3489   0011AC  EF91  F00B         	goto	l1355
  3490   0011B0                     l15926:
  3491                           
  3492                           ; BSR set to: 1
  3493                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  3494   0011B0  293A               	incf	f_write@clst& (0+255),w,b
  3495   0011B2  E10A               	bnz	u19621
  3496   0011B4  293B               	incf	(f_write@clst+1)& (0+255),w,b
  3497   0011B6  E108               	bnz	u19621
  3498   0011B8  293C               	incf	(f_write@clst+2)& (0+255),w,b
  3499   0011BA  E106               	bnz	u19621
  3500   0011BC  293D               	incf	(f_write@clst+3)& (0+255),w,b
  3501   0011BE  A4D8               	btfss	status,2,c
  3502   0011C0  EFE4  F008         	goto	u19621
  3503   0011C4  EFE6  F008         	goto	u19620
  3504   0011C8                     u19621:
  3505   0011C8  EFF1  F008         	goto	l15934
  3506   0011CC                     u19620:
  3507   0011CC                     
  3508                           ; BSR set to: 1
  3509   0011CC  EE20 F00F          	lfsr	2,15
  3510   0011D0  5117               	movf	f_write@fp& (0+255),w,b
  3511   0011D2  26D9               	addwf	fsr2l,f,c
  3512   0011D4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3513   0011D6  22DA               	addwfc	fsr2h,f,c
  3514   0011D8  0E01               	movlw	1
  3515   0011DA  6EDF               	movwf	indf2,c
  3516   0011DC                     l15930:
  3517                           
  3518                           ; BSR set to: 1
  3519   0011DC  0E01               	movlw	1
  3520   0011DE  EF91  F00B         	goto	l1355
  3521   0011E2                     l15934:
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  3525   0011E2  EE20 F014          	lfsr	2,20
  3526   0011E6  5117               	movf	f_write@fp& (0+255),w,b
  3527   0011E8  26D9               	addwf	fsr2l,f,c
  3528   0011EA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3529   0011EC  22DA               	addwfc	fsr2h,f,c
  3530   0011EE  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  3531   0011F4  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  3532   0011FA  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  3533   001200  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  3534                           
  3535                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  3536   001206  EE20 F006          	lfsr	2,6
  3537   00120A  5117               	movf	f_write@fp& (0+255),w,b
  3538   00120C  26D9               	addwf	fsr2l,f,c
  3539   00120E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3540   001210  22DA               	addwfc	fsr2h,f,c
  3541   001212  50DE               	movf	postinc2,w,c
  3542   001214  10DE               	iorwf	postinc2,w,c
  3543   001216  10DE               	iorwf	postinc2,w,c
  3544   001218  10DE               	iorwf	postinc2,w,c
  3545   00121A  A4D8               	btfss	status,2,c
  3546   00121C  EF12  F009         	goto	u19631
  3547   001220  EF14  F009         	goto	u19630
  3548   001224                     u19631:
  3549   001224  EF26  F009         	goto	l1363
  3550   001228                     u19630:
  3551   001228                     
  3552                           ; BSR set to: 1
  3553   001228  EE20 F006          	lfsr	2,6
  3554   00122C  5117               	movf	f_write@fp& (0+255),w,b
  3555   00122E  26D9               	addwf	fsr2l,f,c
  3556   001230  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3557   001232  22DA               	addwfc	fsr2h,f,c
  3558   001234  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  3559   00123A  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  3560   001240  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  3561   001246  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  3562   00124C                     l1363:
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  3566   00124C  EE20 F00E          	lfsr	2,14
  3567   001250  5117               	movf	f_write@fp& (0+255),w,b
  3568   001252  26D9               	addwf	fsr2l,f,c
  3569   001254  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3570   001256  22DA               	addwfc	fsr2h,f,c
  3571   001258  AEDF               	btfss	indf2,7,c
  3572   00125A  EF31  F009         	goto	u19641
  3573   00125E  EF33  F009         	goto	u19640
  3574   001262                     u19641:
  3575   001262  EF7A  F009         	goto	l15948
  3576   001266                     u19640:
  3577   001266                     
  3578                           ; BSR set to: 1
  3579                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3580   001266  0E22               	movlw	34
  3581   001268  2517               	addwf	f_write@fp& (0+255),w,b
  3582   00126A  0100               	movlb	0	; () banked
  3583   00126C  6FAB               	movwf	disk_write@buff& (0+255),b
  3584   00126E  0E00               	movlw	0
  3585   001270  0101               	movlb	1	; () banked
  3586   001272  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  3587   001274  0100               	movlb	0	; () banked
  3588   001276  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
  3589   001278  0101               	movlb	1	; () banked
  3590   00127A  EE20 F018          	lfsr	2,24
  3591   00127E  5117               	movf	f_write@fp& (0+255),w,b
  3592   001280  26D9               	addwf	fsr2l,f,c
  3593   001282  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3594   001284  22DA               	addwfc	fsr2h,f,c
  3595   001286  006F FF78  F0AD    	movff	postinc2,disk_write@sector
  3596   00128C  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
  3597   001292  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
  3598   001298  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
  3599   00129E  0E00               	movlw	0
  3600   0012A0  0100               	movlb	0	; () banked
  3601   0012A2  6FB2               	movwf	(disk_write@count+1)& (0+255),b
  3602   0012A4  0E01               	movlw	1
  3603   0012A6  6FB1               	movwf	disk_write@count& (0+255),b
  3604   0012A8  0101               	movlb	1	; () banked
  3605   0012AA  EE20 F001          	lfsr	2,1
  3606   0012AE  5140               	movf	f_write@fs& (0+255),w,b
  3607   0012B0  26D9               	addwf	fsr2l,f,c
  3608   0012B2  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3609   0012B4  22DA               	addwfc	fsr2h,f,c
  3610   0012B6  50DF               	movf	indf2,w,c
  3611   0012B8  EC3D  F042         	call	_disk_write
  3612   0012BC  0900               	iorlw	0
  3613   0012BE  B4D8               	btfsc	status,2,c
  3614   0012C0  EF64  F009         	goto	u19651
  3615   0012C4  EF66  F009         	goto	u19650
  3616   0012C8                     u19651:
  3617   0012C8  EF71  F009         	goto	l15946
  3618   0012CC                     u19650:
  3619   0012CC  0101               	movlb	1	; () banked
  3620   0012CE  EE20 F00F          	lfsr	2,15
  3621   0012D2  5117               	movf	f_write@fp& (0+255),w,b
  3622   0012D4  26D9               	addwf	fsr2l,f,c
  3623   0012D6  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3624   0012D8  22DA               	addwfc	fsr2h,f,c
  3625   0012DA  0E01               	movlw	1
  3626   0012DC  6EDF               	movwf	indf2,c
  3627   0012DE  EFEE  F008         	goto	l15930
  3628   0012E2                     l15946:
  3629                           
  3630                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  3631   0012E2  0101               	movlb	1	; () banked
  3632   0012E4  EE20 F00E          	lfsr	2,14
  3633   0012E8  5117               	movf	f_write@fp& (0+255),w,b
  3634   0012EA  26D9               	addwf	fsr2l,f,c
  3635   0012EC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3636   0012EE  22DA               	addwfc	fsr2h,f,c
  3637   0012F0  0E7F               	movlw	127
  3638   0012F2  16DF               	andwf	indf2,f,c
  3639   0012F4                     l15948:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  3643   0012F4  C140  F06C         	movff	f_write@fs,clst2sect@fs
  3644   0012F8  C141  F06D         	movff	f_write@fs+1,clst2sect@fs+1
  3645   0012FC  EE20 F014          	lfsr	2,20
  3646   001300  5117               	movf	f_write@fp& (0+255),w,b
  3647   001302  26D9               	addwf	fsr2l,f,c
  3648   001304  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3649   001306  22DA               	addwfc	fsr2h,f,c
  3650   001308  006F FF78  F06E    	movff	postinc2,clst2sect@clst
  3651   00130E  006F FF78  F06F    	movff	postinc2,clst2sect@clst+1
  3652   001314  006F FF78  F070    	movff	postinc2,clst2sect@clst+2
  3653   00131A  006F FF78  F071    	movff	postinc2,clst2sect@clst+3
  3654   001320  EC51  F03D         	call	_clst2sect	;wreg free
  3655   001324  C06C  F136         	movff	?_clst2sect,f_write@sect
  3656   001328  C06D  F137         	movff	?_clst2sect+1,f_write@sect+1
  3657   00132C  C06E  F138         	movff	?_clst2sect+2,f_write@sect+2
  3658   001330  C06F  F139         	movff	?_clst2sect+3,f_write@sect+3
  3659   001334                     
  3660                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  3661   001334  0101               	movlb	1	; () banked
  3662   001336  5136               	movf	f_write@sect& (0+255),w,b
  3663   001338  1137               	iorwf	(f_write@sect+1)& (0+255),w,b
  3664   00133A  1138               	iorwf	(f_write@sect+2)& (0+255),w,b
  3665   00133C  1139               	iorwf	(f_write@sect+3)& (0+255),w,b
  3666   00133E  A4D8               	btfss	status,2,c
  3667   001340  EFA4  F009         	goto	u19661
  3668   001344  EFA6  F009         	goto	u19660
  3669   001348                     u19661:
  3670   001348  EFB0  F009         	goto	l15958
  3671   00134C                     u19660:
  3672   00134C                     
  3673                           ; BSR set to: 1
  3674   00134C  EE20 F00F          	lfsr	2,15
  3675   001350  5117               	movf	f_write@fp& (0+255),w,b
  3676   001352  26D9               	addwf	fsr2l,f,c
  3677   001354  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3678   001356  22DA               	addwfc	fsr2h,f,c
  3679   001358  0E02               	movlw	2
  3680   00135A  6EDF               	movwf	indf2,c
  3681   00135C  EFD5  F008         	goto	l15922
  3682   001360                     l15958:
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  3686   001360  5132               	movf	f_write@csect& (0+255),w,b
  3687   001362  2736               	addwf	f_write@sect& (0+255),f,b
  3688   001364  5133               	movf	(f_write@csect+1)& (0+255),w,b
  3689   001366  2337               	addwfc	(f_write@sect+1)& (0+255),f,b
  3690   001368  0E00               	movlw	0
  3691   00136A  2338               	addwfc	(f_write@sect+2)& (0+255),f,b
  3692   00136C  0E00               	movlw	0
  3693   00136E  2339               	addwfc	(f_write@sect+3)& (0+255),f,b
  3694   001370                     
  3695                           ; BSR set to: 1
  3696                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  3697   001370  C11B  F11F         	movff	f_write@btw,??_f_write
  3698   001374  C11C  F120         	movff	f_write@btw+1,??_f_write+1
  3699   001378  0E09               	movlw	9
  3700   00137A  6F21               	movwf	(??_f_write+2)& (0+255),b
  3701   00137C                     u19675:
  3702   00137C  90D8               	bcf	status,0,c
  3703   00137E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  3704   001380  331F               	rrcf	??_f_write& (0+255),f,b
  3705   001382  2F21               	decfsz	(??_f_write+2)& (0+255),f,b
  3706   001384  EFBE  F009         	goto	u19675
  3707   001388  C11F  F134         	movff	??_f_write,f_write@cc
  3708   00138C  C120  F135         	movff	??_f_write+1,f_write@cc+1
  3709   001390                     
  3710                           ; BSR set to: 1
  3711                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  3712   001390  5134               	movf	f_write@cc& (0+255),w,b
  3713   001392  1135               	iorwf	(f_write@cc+1)& (0+255),w,b
  3714   001394  B4D8               	btfsc	status,2,c
  3715   001396  EFCF  F009         	goto	u19681
  3716   00139A  EFD1  F009         	goto	u19680
  3717   00139E                     u19681:
  3718   00139E  EF38  F00A         	goto	l15978
  3719   0013A2                     u19680:
  3720   0013A2                     
  3721                           ; BSR set to: 1
  3722                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  3723   0013A2  5134               	movf	f_write@cc& (0+255),w,b
  3724   0013A4  2532               	addwf	f_write@csect& (0+255),w,b
  3725   0013A6  6F1F               	movwf	??_f_write& (0+255),b
  3726   0013A8  5135               	movf	(f_write@cc+1)& (0+255),w,b
  3727   0013AA  2133               	addwfc	(f_write@csect+1)& (0+255),w,b
  3728   0013AC  6F20               	movwf	(??_f_write+1)& (0+255),b
  3729   0013AE  EE20 F009          	lfsr	2,9
  3730   0013B2  5140               	movf	f_write@fs& (0+255),w,b
  3731   0013B4  26D9               	addwf	fsr2l,f,c
  3732   0013B6  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3733   0013B8  22DA               	addwfc	fsr2h,f,c
  3734   0013BA  511F               	movf	??_f_write& (0+255),w,b
  3735   0013BC  5CDE               	subwf	postinc2,w,c
  3736   0013BE  5120               	movf	(??_f_write+1)& (0+255),w,b
  3737   0013C0  58DE               	subwfb	postinc2,w,c
  3738   0013C2  B0D8               	btfsc	status,0,c
  3739   0013C4  EFE6  F009         	goto	u19691
  3740   0013C8  EFE8  F009         	goto	u19690
  3741   0013CC                     u19691:
  3742   0013CC  EFFA  F009         	goto	l15968
  3743   0013D0                     u19690:
  3744   0013D0                     
  3745                           ; BSR set to: 1
  3746                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  3747   0013D0  EE20 F009          	lfsr	2,9
  3748   0013D4  5140               	movf	f_write@fs& (0+255),w,b
  3749   0013D6  26D9               	addwf	fsr2l,f,c
  3750   0013D8  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3751   0013DA  22DA               	addwfc	fsr2h,f,c
  3752   0013DC  006F FF78  F11F    	movff	postinc2,??_f_write
  3753   0013E2  006F FF74  F120    	movff	postdec2,??_f_write+1
  3754   0013E8  5132               	movf	f_write@csect& (0+255),w,b
  3755   0013EA  5D1F               	subwf	??_f_write& (0+255),w,b
  3756   0013EC  6F34               	movwf	f_write@cc& (0+255),b
  3757   0013EE  5133               	movf	(f_write@csect+1)& (0+255),w,b
  3758   0013F0  5920               	subwfb	(??_f_write+1)& (0+255),w,b
  3759   0013F2  6F35               	movwf	(f_write@cc+1)& (0+255),b
  3760   0013F4                     l15968:
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3764   0013F4  C12F  F0AB         	movff	f_write@wbuff,disk_write@buff
  3765   0013F8  C130  F0AC         	movff	f_write@wbuff+1,disk_write@buff+1
  3766   0013FC  C136  F0AD         	movff	f_write@sect,disk_write@sector
  3767   001400  C137  F0AE         	movff	f_write@sect+1,disk_write@sector+1
  3768   001404  C138  F0AF         	movff	f_write@sect+2,disk_write@sector+2
  3769   001408  C139  F0B0         	movff	f_write@sect+3,disk_write@sector+3
  3770   00140C  C134  F0B1         	movff	f_write@cc,disk_write@count
  3771   001410  C135  F0B2         	movff	f_write@cc+1,disk_write@count+1
  3772   001414  EE20 F001          	lfsr	2,1
  3773   001418  5140               	movf	f_write@fs& (0+255),w,b
  3774   00141A  26D9               	addwf	fsr2l,f,c
  3775   00141C  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3776   00141E  22DA               	addwfc	fsr2h,f,c
  3777   001420  50DF               	movf	indf2,w,c
  3778   001422  EC3D  F042         	call	_disk_write
  3779   001426  0900               	iorlw	0
  3780   001428  B4D8               	btfsc	status,2,c
  3781   00142A  EF19  F00A         	goto	u19701
  3782   00142E  EF1B  F00A         	goto	u19700
  3783   001432                     u19701:
  3784   001432  EF26  F00A         	goto	l15976
  3785   001436                     u19700:
  3786   001436  0101               	movlb	1	; () banked
  3787   001438  EE20 F00F          	lfsr	2,15
  3788   00143C  5117               	movf	f_write@fp& (0+255),w,b
  3789   00143E  26D9               	addwf	fsr2l,f,c
  3790   001440  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3791   001442  22DA               	addwfc	fsr2h,f,c
  3792   001444  0E01               	movlw	1
  3793   001446  6EDF               	movwf	indf2,c
  3794   001448  EFEE  F008         	goto	l15930
  3795   00144C                     l15976:
  3796                           
  3797                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  3798   00144C  C134  F11F         	movff	f_write@cc,??_f_write
  3799   001450  C135  F120         	movff	f_write@cc+1,??_f_write+1
  3800   001454  0E09               	movlw	9
  3801   001456                     u19715:
  3802   001456  90D8               	bcf	status,0,c
  3803   001458  0101               	movlb	1	; () banked
  3804   00145A  371F               	rlcf	??_f_write& (0+255),f,b
  3805   00145C  3720               	rlcf	(??_f_write+1)& (0+255),f,b
  3806   00145E  2EE8               	decfsz	wreg,f,c
  3807   001460  EF2B  F00A         	goto	u19715
  3808   001464  C11F  F13E         	movff	??_f_write,f_write@wcnt
  3809   001468  C120  F13F         	movff	??_f_write+1,f_write@wcnt+1
  3810                           
  3811                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  3812   00146C  EF0D  F00B         	goto	l16000
  3813   001470                     l15978:
  3814                           
  3815                           ; BSR set to: 1
  3816                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  3817   001470  EE20 F018          	lfsr	2,24
  3818   001474  5117               	movf	f_write@fp& (0+255),w,b
  3819   001476  26D9               	addwf	fsr2l,f,c
  3820   001478  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3821   00147A  22DA               	addwfc	fsr2h,f,c
  3822   00147C  5136               	movf	f_write@sect& (0+255),w,b
  3823   00147E  18DE               	xorwf	postinc2,w,c
  3824   001480  E10F               	bnz	u19720
  3825   001482  5137               	movf	(f_write@sect+1)& (0+255),w,b
  3826   001484  18DE               	xorwf	postinc2,w,c
  3827   001486  E10C               	bnz	u19720
  3828   001488  5138               	movf	(f_write@sect+2)& (0+255),w,b
  3829   00148A  18DE               	xorwf	postinc2,w,c
  3830   00148C  E109               	bnz	u19720
  3831   00148E  5139               	movf	(f_write@sect+3)& (0+255),w,b
  3832   001490  18DE               	xorwf	postinc2,w,c
  3833   001492  B4D8               	btfsc	status,2,c
  3834   001494  EF4E  F00A         	goto	u19721
  3835   001498  EF50  F00A         	goto	u19720
  3836   00149C                     u19721:
  3837   00149C  EF9D  F00A         	goto	l15990
  3838   0014A0                     u19720:
  3839   0014A0                     
  3840                           ; BSR set to: 1
  3841   0014A0  EE20 F00A          	lfsr	2,10
  3842   0014A4  5117               	movf	f_write@fp& (0+255),w,b
  3843   0014A6  26D9               	addwf	fsr2l,f,c
  3844   0014A8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3845   0014AA  22DA               	addwfc	fsr2h,f,c
  3846   0014AC  EE10 F010          	lfsr	1,16
  3847   0014B0  5117               	movf	f_write@fp& (0+255),w,b
  3848   0014B2  26E1               	addwf	fsr1l,f,c
  3849   0014B4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3850   0014B6  22E2               	addwfc	fsr1h,f,c
  3851   0014B8  50DE               	movf	postinc2,w,c
  3852   0014BA  5CE6               	subwf	postinc1,w,c
  3853   0014BC  50DE               	movf	postinc2,w,c
  3854   0014BE  58E6               	subwfb	postinc1,w,c
  3855   0014C0  50DE               	movf	postinc2,w,c
  3856   0014C2  58E6               	subwfb	postinc1,w,c
  3857   0014C4  50DE               	movf	postinc2,w,c
  3858   0014C6  58E6               	subwfb	postinc1,w,c
  3859   0014C8  B0D8               	btfsc	status,0,c
  3860   0014CA  EF69  F00A         	goto	u19731
  3861   0014CE  EF6B  F00A         	goto	u19730
  3862   0014D2                     u19731:
  3863   0014D2  EF9D  F00A         	goto	l15990
  3864   0014D6                     u19730:
  3865   0014D6                     
  3866                           ; BSR set to: 1
  3867   0014D6  0E22               	movlw	34
  3868   0014D8  2517               	addwf	f_write@fp& (0+255),w,b
  3869   0014DA  0100               	movlb	0	; () banked
  3870   0014DC  6FA8               	movwf	disk_read@buff& (0+255),b
  3871   0014DE  0E00               	movlw	0
  3872   0014E0  0101               	movlb	1	; () banked
  3873   0014E2  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  3874   0014E4  0100               	movlb	0	; () banked
  3875   0014E6  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  3876   0014E8  C136  F0AA         	movff	f_write@sect,disk_read@sector
  3877   0014EC  C137  F0AB         	movff	f_write@sect+1,disk_read@sector+1
  3878   0014F0  C138  F0AC         	movff	f_write@sect+2,disk_read@sector+2
  3879   0014F4  C139  F0AD         	movff	f_write@sect+3,disk_read@sector+3
  3880   0014F8  0E00               	movlw	0
  3881   0014FA  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  3882   0014FC  0E01               	movlw	1
  3883   0014FE  6FAE               	movwf	disk_read@count& (0+255),b
  3884   001500  0101               	movlb	1	; () banked
  3885   001502  EE20 F001          	lfsr	2,1
  3886   001506  5140               	movf	f_write@fs& (0+255),w,b
  3887   001508  26D9               	addwf	fsr2l,f,c
  3888   00150A  5141               	movf	(f_write@fs+1)& (0+255),w,b
  3889   00150C  22DA               	addwfc	fsr2h,f,c
  3890   00150E  50DF               	movf	indf2,w,c
  3891   001510  EC71  F042         	call	_disk_read
  3892   001514  0900               	iorlw	0
  3893   001516  B4D8               	btfsc	status,2,c
  3894   001518  EF90  F00A         	goto	u19741
  3895   00151C  EF92  F00A         	goto	u19740
  3896   001520                     u19741:
  3897   001520  EF9D  F00A         	goto	l15990
  3898   001524                     u19740:
  3899   001524                     
  3900                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  3901   001524  0101               	movlb	1	; () banked
  3902   001526  EE20 F00F          	lfsr	2,15
  3903   00152A  5117               	movf	f_write@fp& (0+255),w,b
  3904   00152C  26D9               	addwf	fsr2l,f,c
  3905   00152E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3906   001530  22DA               	addwfc	fsr2h,f,c
  3907   001532  0E01               	movlw	1
  3908   001534  6EDF               	movwf	indf2,c
  3909   001536  EFEE  F008         	goto	l15930
  3910   00153A                     l15990:
  3911                           
  3912                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  3913   00153A  0101               	movlb	1	; () banked
  3914   00153C  EE20 F018          	lfsr	2,24
  3915   001540  5117               	movf	f_write@fp& (0+255),w,b
  3916   001542  26D9               	addwf	fsr2l,f,c
  3917   001544  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3918   001546  22DA               	addwfc	fsr2h,f,c
  3919   001548  0060  F4DB  FFDE   	movff	f_write@sect,postinc2
  3920   00154E  0060  F4DF  FFDE   	movff	f_write@sect+1,postinc2
  3921   001554  0060  F4E3  FFDE   	movff	f_write@sect+2,postinc2
  3922   00155A  0060  F4E7  FFDE   	movff	f_write@sect+3,postinc2
  3923   001560                     l1362:
  3924                           
  3925                           ; BSR set to: 1
  3926                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  3927   001560  EE20 F010          	lfsr	2,16
  3928   001564  5117               	movf	f_write@fp& (0+255),w,b
  3929   001566  26D9               	addwf	fsr2l,f,c
  3930   001568  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3931   00156A  22DA               	addwfc	fsr2h,f,c
  3932   00156C  006F FF78  F11F    	movff	postinc2,??_f_write
  3933   001572  006F FF74  F120    	movff	postdec2,??_f_write+1
  3934   001578  0EFF               	movlw	255
  3935   00157A  151F               	andwf	??_f_write& (0+255),w,b
  3936   00157C  6F21               	movwf	(??_f_write+2)& (0+255),b
  3937   00157E  0E01               	movlw	1
  3938   001580  1520               	andwf	(??_f_write+1)& (0+255),w,b
  3939   001582  6F22               	movwf	(??_f_write+3)& (0+255),b
  3940   001584  5121               	movf	(??_f_write+2)& (0+255),w,b
  3941   001586  0800               	sublw	0
  3942   001588  6F3E               	movwf	f_write@wcnt& (0+255),b
  3943   00158A  5122               	movf	(??_f_write+3)& (0+255),w,b
  3944   00158C  A0D8               	btfss	status,0,c
  3945   00158E  2AE8               	incf	wreg,f,c
  3946   001590  0802               	sublw	2
  3947   001592  6F3F               	movwf	(f_write@wcnt+1)& (0+255),b
  3948   001594                     
  3949                           ; BSR set to: 1
  3950                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  3951   001594  513E               	movf	f_write@wcnt& (0+255),w,b
  3952   001596  5D1B               	subwf	f_write@btw& (0+255),w,b
  3953   001598  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  3954   00159A  591C               	subwfb	(f_write@btw+1)& (0+255),w,b
  3955   00159C  B0D8               	btfsc	status,0,c
  3956   00159E  EFD3  F00A         	goto	u19751
  3957   0015A2  EFD5  F00A         	goto	u19750
  3958   0015A6                     u19751:
  3959   0015A6  EFD9  F00A         	goto	l15996
  3960   0015AA                     u19750:
  3961   0015AA                     
  3962                           ; BSR set to: 1
  3963   0015AA  C11B  F13E         	movff	f_write@btw,f_write@wcnt
  3964   0015AE  C11C  F13F         	movff	f_write@btw+1,f_write@wcnt+1
  3965   0015B2                     l15996:
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  3969   0015B2  EE20 F010          	lfsr	2,16
  3970   0015B6  5117               	movf	f_write@fp& (0+255),w,b
  3971   0015B8  26D9               	addwf	fsr2l,f,c
  3972   0015BA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  3973   0015BC  22DA               	addwfc	fsr2h,f,c
  3974   0015BE  006F FF78  F11F    	movff	postinc2,??_f_write
  3975   0015C4  006F FF74  F120    	movff	postdec2,??_f_write+1
  3976   0015CA  0EFF               	movlw	255
  3977   0015CC  151F               	andwf	??_f_write& (0+255),w,b
  3978   0015CE  6F21               	movwf	(??_f_write+2)& (0+255),b
  3979   0015D0  0E01               	movlw	1
  3980   0015D2  1520               	andwf	(??_f_write+1)& (0+255),w,b
  3981   0015D4  6F22               	movwf	(??_f_write+3)& (0+255),b
  3982   0015D6  5121               	movf	(??_f_write+2)& (0+255),w,b
  3983   0015D8  2517               	addwf	f_write@fp& (0+255),w,b
  3984   0015DA  6F23               	movwf	(??_f_write+4)& (0+255),b
  3985   0015DC  5122               	movf	(??_f_write+3)& (0+255),w,b
  3986   0015DE  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  3987   0015E0  6F24               	movwf	(??_f_write+5)& (0+255),b
  3988   0015E2  0E22               	movlw	34
  3989   0015E4  2523               	addwf	(??_f_write+4)& (0+255),w,b
  3990   0015E6  0100               	movlb	0	; () banked
  3991   0015E8  6F60               	movwf	mem_cpy@dst& (0+255),b
  3992   0015EA  0E00               	movlw	0
  3993   0015EC  0101               	movlb	1	; () banked
  3994   0015EE  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  3995   0015F0  0100               	movlb	0	; () banked
  3996   0015F2  6F61               	movwf	(mem_cpy@dst+1)& (0+255),b
  3997   0015F4  C12F  F062         	movff	f_write@wbuff,mem_cpy@src
  3998   0015F8  C130  F063         	movff	f_write@wbuff+1,mem_cpy@src+1
  3999   0015FC  C13E  F064         	movff	f_write@wcnt,mem_cpy@cnt
  4000   001600  C13F  F065         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  4001   001604  ECAB  F040         	call	_mem_cpy	;wreg free
  4002   001608                     
  4003                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  4004   001608  0101               	movlb	1	; () banked
  4005   00160A  EE20 F00E          	lfsr	2,14
  4006   00160E  5117               	movf	f_write@fp& (0+255),w,b
  4007   001610  26D9               	addwf	fsr2l,f,c
  4008   001612  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4009   001614  22DA               	addwfc	fsr2h,f,c
  4010   001616  0E00               	movlw	0
  4011   001618  8EDB               	bsf	plusw2,7,c
  4012   00161A                     l16000:
  4013                           
  4014                           ; BSR set to: 1
  4015   00161A  513E               	movf	f_write@wcnt& (0+255),w,b
  4016   00161C  5F1B               	subwf	f_write@btw& (0+255),f,b
  4017   00161E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  4018   001620  5B1C               	subwfb	(f_write@btw+1)& (0+255),f,b
  4019   001622                     
  4020                           ; BSR set to: 1
  4021   001622  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  4022   001628  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  4023   00162E  513E               	movf	f_write@wcnt& (0+255),w,b
  4024   001630  26DE               	addwf	postinc2,f,c
  4025   001632  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  4026   001634  22DD               	addwfc	postdec2,f,c
  4027   001636                     
  4028                           ; BSR set to: 1
  4029   001636  513E               	movf	f_write@wcnt& (0+255),w,b
  4030   001638  272F               	addwf	f_write@wbuff& (0+255),f,b
  4031   00163A  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  4032   00163C  2330               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  4033   00163E                     
  4034                           ; BSR set to: 1
  4035   00163E  EE20 F010          	lfsr	2,16
  4036   001642  5117               	movf	f_write@fp& (0+255),w,b
  4037   001644  26D9               	addwf	fsr2l,f,c
  4038   001646  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4039   001648  22DA               	addwfc	fsr2h,f,c
  4040   00164A  513E               	movf	f_write@wcnt& (0+255),w,b
  4041   00164C  26DE               	addwf	postinc2,f,c
  4042   00164E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  4043   001650  22DE               	addwfc	postinc2,f,c
  4044   001652  0E00               	movlw	0
  4045   001654  22DE               	addwfc	postinc2,f,c
  4046   001656  22DE               	addwfc	postinc2,f,c
  4047   001658                     
  4048                           ; BSR set to: 1
  4049   001658  EE20 F010          	lfsr	2,16
  4050   00165C  5117               	movf	f_write@fp& (0+255),w,b
  4051   00165E  26D9               	addwf	fsr2l,f,c
  4052   001660  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4053   001662  22DA               	addwfc	fsr2h,f,c
  4054   001664  EE10 F00A          	lfsr	1,10
  4055   001668  5117               	movf	f_write@fp& (0+255),w,b
  4056   00166A  26E1               	addwf	fsr1l,f,c
  4057   00166C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4058   00166E  22E2               	addwfc	fsr1h,f,c
  4059   001670  50DE               	movf	postinc2,w,c
  4060   001672  5CE6               	subwf	postinc1,w,c
  4061   001674  50DE               	movf	postinc2,w,c
  4062   001676  58E6               	subwfb	postinc1,w,c
  4063   001678  50DE               	movf	postinc2,w,c
  4064   00167A  58E6               	subwfb	postinc1,w,c
  4065   00167C  50DE               	movf	postinc2,w,c
  4066   00167E  58E6               	subwfb	postinc1,w,c
  4067   001680  A0D8               	btfss	status,0,c
  4068   001682  EF45  F00B         	goto	u19761
  4069   001686  EF47  F00B         	goto	u19760
  4070   00168A                     u19761:
  4071   00168A  EF5B  F00B         	goto	l16012
  4072   00168E                     u19760:
  4073   00168E                     
  4074                           ; BSR set to: 1
  4075   00168E  EE20 F00A          	lfsr	2,10
  4076   001692  5117               	movf	f_write@fp& (0+255),w,b
  4077   001694  26D9               	addwf	fsr2l,f,c
  4078   001696  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4079   001698  22DA               	addwfc	fsr2h,f,c
  4080   00169A  006F FF78  F12B    	movff	postinc2,_f_write$3415
  4081   0016A0  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  4082   0016A6  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  4083   0016AC  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  4084   0016B2  EF6D  F00B         	goto	l1384
  4085   0016B6                     l16012:
  4086                           
  4087                           ; BSR set to: 1
  4088   0016B6  EE20 F010          	lfsr	2,16
  4089   0016BA  5117               	movf	f_write@fp& (0+255),w,b
  4090   0016BC  26D9               	addwf	fsr2l,f,c
  4091   0016BE  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4092   0016C0  22DA               	addwfc	fsr2h,f,c
  4093   0016C2  006F FF78  F12B    	movff	postinc2,_f_write$3415
  4094   0016C8  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  4095   0016CE  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  4096   0016D4  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  4097   0016DA                     l1384:
  4098                           
  4099                           ; BSR set to: 1
  4100   0016DA  EE20 F00A          	lfsr	2,10
  4101   0016DE  5117               	movf	f_write@fp& (0+255),w,b
  4102   0016E0  26D9               	addwf	fsr2l,f,c
  4103   0016E2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4104   0016E4  22DA               	addwfc	fsr2h,f,c
  4105   0016E6  0060  F4AF  FFDE   	movff	_f_write$3415,postinc2
  4106   0016EC  0060  F4B3  FFDE   	movff	_f_write$3415+1,postinc2
  4107   0016F2  0060  F4B7  FFDE   	movff	_f_write$3415+2,postinc2
  4108   0016F8  0060  F4BB  FFDE   	movff	_f_write$3415+3,postinc2
  4109   0016FE                     l16014:
  4110                           
  4111                           ; BSR set to: 1
  4112   0016FE  511B               	movf	f_write@btw& (0+255),w,b
  4113   001700  111C               	iorwf	(f_write@btw+1)& (0+255),w,b
  4114   001702  A4D8               	btfss	status,2,c
  4115   001704  EF86  F00B         	goto	u19771
  4116   001708  EF88  F00B         	goto	u19770
  4117   00170C                     u19771:
  4118   00170C  EFF2  F007         	goto	l15898
  4119   001710                     u19770:
  4120   001710                     l16016:
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  4124   001710  EE20 F00E          	lfsr	2,14
  4125   001714  5117               	movf	f_write@fp& (0+255),w,b
  4126   001716  26D9               	addwf	fsr2l,f,c
  4127   001718  5118               	movf	(f_write@fp+1)& (0+255),w,b
  4128   00171A  22DA               	addwfc	fsr2h,f,c
  4129   00171C  0E00               	movlw	0
  4130   00171E  8CDB               	bsf	plusw2,6,c
  4131   001720                     
  4132                           ; BSR set to: 1
  4133                           ;mcc_generated_files/fatfs/ff.c: 3921:  return FR_OK;
  4134   001720  0E00               	movlw	0
  4135   001722                     l1355:
  4136                           
  4137                           ; BSR set to: 1
  4138   001722  0012               	return		;funcret
  4139   001724                     __end_of_f_write:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _f_open *****************
  4143 ;; Defined at:
  4144 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  fp              2   65[BANK1 ] PTR struct .
  4147 ;;		 -> Fil(546), 
  4148 ;;  path            2   67[BANK1 ] PTR const unsigned char 
  4149 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
  4150 ;;  mode            1   69[BANK1 ] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  dj             40  105[BANK1 ] struct .
  4153 ;;  clst            4   98[BANK1 ] unsigned long 
  4154 ;;  ofs             4   94[BANK1 ] unsigned long 
  4155 ;;  cl              4   90[BANK1 ] unsigned long 
  4156 ;;  bcs             4   86[BANK1 ] unsigned long 
  4157 ;;  sc              4   82[BANK1 ] unsigned long 
  4158 ;;  dw              4   78[BANK1 ] unsigned long 
  4159 ;;  fs              2  102[BANK1 ] PTR struct .
  4160 ;;		 -> FatFs(563), NULL(0), 
  4161 ;;  res             1  104[BANK1 ] enum E68
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      enum E68
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4171 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;Total ram usage:       80 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 17
  4178 ;; This function calls:
  4179 ;;		_clst2sect
  4180 ;;		_dir_register
  4181 ;;		_disk_read
  4182 ;;		_find_volume
  4183 ;;		_follow_path
  4184 ;;		_get_fat
  4185 ;;		_ld_clust
  4186 ;;		_ld_dword
  4187 ;;		_mem_set
  4188 ;;		_move_window
  4189 ;;		_remove_chain
  4190 ;;		_st_clust
  4191 ;;		_st_dword
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;;		_send_status_ok
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text7
  4199   001F40                     __ptext7:
  4200                           	callstack 0
  4201   001F40                     _f_open:
  4202                           	callstack 12
  4203   001F40                     
  4204                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  4205   001F40  0101               	movlb	1	; () banked
  4206   001F42  5141               	movf	f_open@fp& (0+255),w,b
  4207   001F44  1142               	iorwf	(f_open@fp+1)& (0+255),w,b
  4208   001F46  A4D8               	btfss	status,2,c
  4209   001F48  EFA8  F00F         	goto	u19181
  4210   001F4C  EFAA  F00F         	goto	u19180
  4211   001F50                     u19181:
  4212   001F50  EFAD  F00F         	goto	l15726
  4213   001F54                     u19180:
  4214   001F54                     
  4215                           ; BSR set to: 1
  4216   001F54  0E09               	movlw	9
  4217   001F56  EF96  F013         	goto	l1284
  4218   001F5A                     l15726:
  4219   001F5A                     
  4220                           ; BSR set to: 1
  4221   001F5A  0E3F               	movlw	63
  4222   001F5C  1745               	andwf	f_open@mode& (0+255),f,b
  4223   001F5E                     
  4224                           ; BSR set to: 1
  4225                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  4226   001F5E  0E43               	movlw	low f_open@path
  4227   001F60  0100               	movlb	0	; () banked
  4228   001F62  6FDA               	movwf	find_volume@path& (0+255),b
  4229   001F64  0E01               	movlw	high f_open@path
  4230   001F66  6FDB               	movwf	(find_volume@path+1)& (0+255),b
  4231   001F68  0E66               	movlw	low f_open@fs
  4232   001F6A  6FDC               	movwf	find_volume@rfs& (0+255),b
  4233   001F6C  0E01               	movlw	high f_open@fs
  4234   001F6E  6FDD               	movwf	(find_volume@rfs+1)& (0+255),b
  4235   001F70  C145  F0DE         	movff	f_open@mode,find_volume@mode
  4236   001F74  EC0F  F000         	call	_find_volume	;wreg free
  4237   001F78  0101               	movlb	1	; () banked
  4238   001F7A  6F68               	movwf	f_open@res& (0+255),b
  4239   001F7C                     
  4240                           ; BSR set to: 1
  4241                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  4242   001F7C  5168               	movf	f_open@res& (0+255),w,b
  4243   001F7E  A4D8               	btfss	status,2,c
  4244   001F80  EFC4  F00F         	goto	u19191
  4245   001F84  EFC6  F00F         	goto	u19190
  4246   001F88                     u19191:
  4247   001F88  EF84  F013         	goto	l1289
  4248   001F8C                     u19190:
  4249   001F8C                     
  4250                           ; BSR set to: 1
  4251                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  4252   001F8C  C166  F169         	movff	f_open@fs,f_open@dj
  4253   001F90  C167  F16A         	movff	f_open@fs+1,f_open@dj+1
  4254   001F94                     
  4255                           ; BSR set to: 1
  4256                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  4257   001F94  0E69               	movlw	low f_open@dj
  4258   001F96  6F33               	movwf	follow_path@dp& (0+255),b
  4259   001F98  0E01               	movlw	high f_open@dj
  4260   001F9A  6F34               	movwf	(follow_path@dp+1)& (0+255),b
  4261   001F9C  C143  F135         	movff	f_open@path,follow_path@path
  4262   001FA0  C144  F136         	movff	f_open@path+1,follow_path@path+1
  4263   001FA4  ECC9  F029         	call	_follow_path	;wreg free
  4264   001FA8  0101               	movlb	1	; () banked
  4265   001FAA  6F68               	movwf	f_open@res& (0+255),b
  4266   001FAC                     
  4267                           ; BSR set to: 1
  4268                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  4269   001FAC  5168               	movf	f_open@res& (0+255),w,b
  4270   001FAE  A4D8               	btfss	status,2,c
  4271   001FB0  EFDC  F00F         	goto	u19201
  4272   001FB4  EFDE  F00F         	goto	u19200
  4273   001FB8                     u19201:
  4274   001FB8  EFE7  F00F         	goto	l15746
  4275   001FBC                     u19200:
  4276   001FBC                     
  4277                           ; BSR set to: 1
  4278                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  4279   001FBC  AF90               	btfss	(f_open@dj+39)& (0+255),7,b
  4280   001FBE  EFE3  F00F         	goto	u19211
  4281   001FC2  EFE5  F00F         	goto	u19210
  4282   001FC6                     u19211:
  4283   001FC6  EFE7  F00F         	goto	l15746
  4284   001FCA                     u19210:
  4285   001FCA                     
  4286                           ; BSR set to: 1
  4287                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  4288   001FCA  0E06               	movlw	6
  4289   001FCC  6F68               	movwf	f_open@res& (0+255),b
  4290   001FCE                     l15746:
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  4294   001FCE  C145  F146         	movff	f_open@mode,??_f_open
  4295   001FD2  0E1C               	movlw	28
  4296   001FD4  1746               	andwf	??_f_open& (0+255),f,b
  4297   001FD6  B4D8               	btfsc	status,2,c
  4298   001FD8  EFF0  F00F         	goto	u19221
  4299   001FDC  EFF2  F00F         	goto	u19220
  4300   001FE0                     u19221:
  4301   001FE0  EF02  F011         	goto	l15786
  4302   001FE4                     u19220:
  4303   001FE4                     
  4304                           ; BSR set to: 1
  4305                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  4306   001FE4  5168               	movf	f_open@res& (0+255),w,b
  4307   001FE6  B4D8               	btfsc	status,2,c
  4308   001FE8  EFF8  F00F         	goto	u19231
  4309   001FEC  EFFA  F00F         	goto	u19230
  4310   001FF0                     u19231:
  4311   001FF0  EF0E  F010         	goto	l15756
  4312   001FF4                     u19230:
  4313   001FF4                     
  4314                           ; BSR set to: 1
  4315                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  4316   001FF4  0E04               	movlw	4
  4317   001FF6  1968               	xorwf	f_open@res& (0+255),w,b
  4318   001FF8  A4D8               	btfss	status,2,c
  4319   001FFA  EF01  F010         	goto	u19241
  4320   001FFE  EF03  F010         	goto	u19240
  4321   002002                     u19241:
  4322   002002  EF0B  F010         	goto	l15754
  4323   002006                     u19240:
  4324   002006                     
  4325                           ; BSR set to: 1
  4326                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  4327   002006  0E69               	movlw	low f_open@dj
  4328   002008  6F39               	movwf	dir_register@dp& (0+255),b
  4329   00200A  0E01               	movlw	high f_open@dj
  4330   00200C  6F3A               	movwf	(dir_register@dp+1)& (0+255),b
  4331   00200E  ECE9  F03B         	call	_dir_register	;wreg free
  4332   002012  0101               	movlb	1	; () banked
  4333   002014  6F68               	movwf	f_open@res& (0+255),b
  4334   002016                     l15754:
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  4338   002016  8745               	bsf	f_open@mode& (0+255),3,b
  4339                           
  4340                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  4341   002018  EF26  F010         	goto	l1295
  4342   00201C                     l15756:
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  4346   00201C  C16D  F146         	movff	f_open@dj+4,??_f_open
  4347   002020  0E11               	movlw	17
  4348   002022  1746               	andwf	??_f_open& (0+255),f,b
  4349   002024  B4D8               	btfsc	status,2,c
  4350   002026  EF17  F010         	goto	u19251
  4351   00202A  EF19  F010         	goto	u19250
  4352   00202E                     u19251:
  4353   00202E  EF1D  F010         	goto	l1296
  4354   002032                     u19250:
  4355   002032                     
  4356                           ; BSR set to: 1
  4357                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  4358   002032  0E07               	movlw	7
  4359   002034  6F68               	movwf	f_open@res& (0+255),b
  4360                           
  4361                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  4362   002036  EF26  F010         	goto	l1295
  4363   00203A                     l1296:
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  4367   00203A  A545               	btfss	f_open@mode& (0+255),2,b
  4368   00203C  EF22  F010         	goto	u19261
  4369   002040  EF24  F010         	goto	u19260
  4370   002044                     u19261:
  4371   002044  EF26  F010         	goto	l1295
  4372   002048                     u19260:
  4373   002048                     
  4374                           ; BSR set to: 1
  4375   002048  0E08               	movlw	8
  4376   00204A  6F68               	movwf	f_open@res& (0+255),b
  4377   00204C                     l1295:
  4378                           
  4379                           ; BSR set to: 1
  4380                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  4381   00204C  5168               	movf	f_open@res& (0+255),w,b
  4382   00204E  A4D8               	btfss	status,2,c
  4383   002050  EF2C  F010         	goto	u19271
  4384   002054  EF2E  F010         	goto	u19270
  4385   002058                     u19271:
  4386   002058  EF25  F011         	goto	l1302
  4387   00205C                     u19270:
  4388   00205C                     
  4389                           ; BSR set to: 1
  4390   00205C  A745               	btfss	f_open@mode& (0+255),3,b
  4391   00205E  EF33  F010         	goto	u19281
  4392   002062  EF35  F010         	goto	u19280
  4393   002066                     u19281:
  4394   002066  EF25  F011         	goto	l1302
  4395   00206A                     u19280:
  4396   00206A                     
  4397                           ; BSR set to: 1
  4398                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  4399   00206A  C166  F067         	movff	f_open@fs,ld_clust@fs
  4400   00206E  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  4401   002072  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  4402   002076  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  4403   00207A  ECE2  F03F         	call	_ld_clust	;wreg free
  4404   00207E  C067  F15A         	movff	?_ld_clust,f_open@cl
  4405   002082  C068  F15B         	movff	?_ld_clust+1,f_open@cl+1
  4406   002086  C069  F15C         	movff	?_ld_clust+2,f_open@cl+2
  4407   00208A  C06A  F15D         	movff	?_ld_clust+3,f_open@cl+3
  4408                           
  4409                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2024 - 1980) 
      +                          << 25 | (DWORD)7 << 21 | (DWORD)23 << 16));
  4410   00208E  0E0E               	movlw	14
  4411   002090  0101               	movlb	1	; () banked
  4412   002092  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  4413   002094  0100               	movlb	0	; () banked
  4414   002096  6F60               	movwf	st_dword@ptr& (0+255),b
  4415   002098  0E00               	movlw	0
  4416   00209A  0101               	movlb	1	; () banked
  4417   00209C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  4418   00209E  0100               	movlb	0	; () banked
  4419   0020A0  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  4420   0020A2  0E00               	movlw	0
  4421   0020A4  6F62               	movwf	st_dword@val& (0+255),b
  4422   0020A6  0E00               	movlw	0
  4423   0020A8  6F63               	movwf	(st_dword@val+1)& (0+255),b
  4424   0020AA  0EF7               	movlw	247
  4425   0020AC  6F64               	movwf	(st_dword@val+2)& (0+255),b
  4426   0020AE  0E58               	movlw	88
  4427   0020B0  6F65               	movwf	(st_dword@val+3)& (0+255),b
  4428   0020B2  EC27  F040         	call	_st_dword	;wreg free
  4429   0020B6                     
  4430                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  4431   0020B6  0101               	movlb	1	; () banked
  4432   0020B8  EE20 F00B          	lfsr	2,11
  4433   0020BC  5183               	movf	(f_open@dj+26)& (0+255),w,b
  4434   0020BE  26D9               	addwf	fsr2l,f,c
  4435   0020C0  5184               	movf	(f_open@dj+27)& (0+255),w,b
  4436   0020C2  22DA               	addwfc	fsr2h,f,c
  4437   0020C4  0E20               	movlw	32
  4438   0020C6  6EDF               	movwf	indf2,c
  4439   0020C8                     
  4440                           ; BSR set to: 1
  4441                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  4442   0020C8  C166  F064         	movff	f_open@fs,st_clust@fs
  4443   0020CC  C167  F065         	movff	f_open@fs+1,st_clust@fs+1
  4444   0020D0  C183  F066         	movff	f_open@dj+26,st_clust@dir
  4445   0020D4  C184  F067         	movff	f_open@dj+27,st_clust@dir+1
  4446   0020D8  0E00               	movlw	0
  4447   0020DA  0100               	movlb	0	; () banked
  4448   0020DC  6F68               	movwf	st_clust@cl& (0+255),b
  4449   0020DE  0E00               	movlw	0
  4450   0020E0  6F69               	movwf	(st_clust@cl+1)& (0+255),b
  4451   0020E2  0E00               	movlw	0
  4452   0020E4  6F6A               	movwf	(st_clust@cl+2)& (0+255),b
  4453   0020E6  0E00               	movlw	0
  4454   0020E8  6F6B               	movwf	(st_clust@cl+3)& (0+255),b
  4455   0020EA  EC1C  F044         	call	_st_clust	;wreg free
  4456   0020EE                     
  4457                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  4458   0020EE  0E1C               	movlw	28
  4459   0020F0  0101               	movlb	1	; () banked
  4460   0020F2  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  4461   0020F4  0100               	movlb	0	; () banked
  4462   0020F6  6F60               	movwf	st_dword@ptr& (0+255),b
  4463   0020F8  0E00               	movlw	0
  4464   0020FA  0101               	movlb	1	; () banked
  4465   0020FC  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  4466   0020FE  0100               	movlb	0	; () banked
  4467   002100  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  4468   002102  0E00               	movlw	0
  4469   002104  6F62               	movwf	st_dword@val& (0+255),b
  4470   002106  0E00               	movlw	0
  4471   002108  6F63               	movwf	(st_dword@val+1)& (0+255),b
  4472   00210A  0E00               	movlw	0
  4473   00210C  6F64               	movwf	(st_dword@val+2)& (0+255),b
  4474   00210E  0E00               	movlw	0
  4475   002110  6F65               	movwf	(st_dword@val+3)& (0+255),b
  4476   002112  EC27  F040         	call	_st_dword	;wreg free
  4477   002116                     
  4478                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  4479   002116  0101               	movlb	1	; () banked
  4480   002118  EE20 F003          	lfsr	2,3
  4481   00211C  5166               	movf	f_open@fs& (0+255),w,b
  4482   00211E  26D9               	addwf	fsr2l,f,c
  4483   002120  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4484   002122  22DA               	addwfc	fsr2h,f,c
  4485   002124  0E01               	movlw	1
  4486   002126  6EDF               	movwf	indf2,c
  4487   002128                     
  4488                           ; BSR set to: 1
  4489                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  4490   002128  515A               	movf	f_open@cl& (0+255),w,b
  4491   00212A  115B               	iorwf	(f_open@cl+1)& (0+255),w,b
  4492   00212C  115C               	iorwf	(f_open@cl+2)& (0+255),w,b
  4493   00212E  115D               	iorwf	(f_open@cl+3)& (0+255),w,b
  4494   002130  B4D8               	btfsc	status,2,c
  4495   002132  EF9D  F010         	goto	u19291
  4496   002136  EF9F  F010         	goto	u19290
  4497   00213A                     u19291:
  4498   00213A  EF25  F011         	goto	l1302
  4499   00213E                     u19290:
  4500   00213E                     
  4501                           ; BSR set to: 1
  4502                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  4503   00213E  EE20 F02F          	lfsr	2,47
  4504   002142  5166               	movf	f_open@fs& (0+255),w,b
  4505   002144  26D9               	addwf	fsr2l,f,c
  4506   002146  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4507   002148  22DA               	addwfc	fsr2h,f,c
  4508   00214A  006F FF78  F14E    	movff	postinc2,f_open@dw
  4509   002150  006F FF78  F14F    	movff	postinc2,f_open@dw+1
  4510   002156  006F FF78  F150    	movff	postinc2,f_open@dw+2
  4511   00215C  006F FF78  F151    	movff	postinc2,f_open@dw+3
  4512   002162                     
  4513                           ; BSR set to: 1
  4514                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  4515   002162  0E69               	movlw	low f_open@dj
  4516   002164  0100               	movlb	0	; () banked
  4517   002166  6FF4               	movwf	remove_chain@obj& (0+255),b
  4518   002168  0E01               	movlw	high f_open@dj
  4519   00216A  6FF5               	movwf	(remove_chain@obj+1)& (0+255),b
  4520   00216C  C15A  F0F6         	movff	f_open@cl,remove_chain@clst
  4521   002170  C15B  F0F7         	movff	f_open@cl+1,remove_chain@clst+1
  4522   002174  C15C  F0F8         	movff	f_open@cl+2,remove_chain@clst+2
  4523   002178  C15D  F0F9         	movff	f_open@cl+3,remove_chain@clst+3
  4524   00217C  0E00               	movlw	0
  4525   00217E  6FFA               	movwf	remove_chain@pclst& (0+255),b
  4526   002180  0E00               	movlw	0
  4527   002182  6FFB               	movwf	(remove_chain@pclst+1)& (0+255),b
  4528   002184  0E00               	movlw	0
  4529   002186  6FFC               	movwf	(remove_chain@pclst+2)& (0+255),b
  4530   002188  0E00               	movlw	0
  4531   00218A  6FFD               	movwf	(remove_chain@pclst+3)& (0+255),b
  4532   00218C  EC23  F02B         	call	_remove_chain	;wreg free
  4533   002190  0101               	movlb	1	; () banked
  4534   002192  6F68               	movwf	f_open@res& (0+255),b
  4535   002194                     
  4536                           ; BSR set to: 1
  4537                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  4538   002194  5168               	movf	f_open@res& (0+255),w,b
  4539   002196  A4D8               	btfss	status,2,c
  4540   002198  EFD0  F010         	goto	u19301
  4541   00219C  EFD2  F010         	goto	u19300
  4542   0021A0                     u19301:
  4543   0021A0  EF25  F011         	goto	l1302
  4544   0021A4                     u19300:
  4545   0021A4                     
  4546                           ; BSR set to: 1
  4547                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  4548   0021A4  C166  F0C8         	movff	f_open@fs,move_window@fs
  4549   0021A8  C167  F0C9         	movff	f_open@fs+1,move_window@fs+1
  4550   0021AC  C14E  F0CA         	movff	f_open@dw,move_window@sector
  4551   0021B0  C14F  F0CB         	movff	f_open@dw+1,move_window@sector+1
  4552   0021B4  C150  F0CC         	movff	f_open@dw+2,move_window@sector+2
  4553   0021B8  C151  F0CD         	movff	f_open@dw+3,move_window@sector+3
  4554   0021BC  ECBF  F03D         	call	_move_window	;wreg free
  4555   0021C0  0101               	movlb	1	; () banked
  4556   0021C2  6F68               	movwf	f_open@res& (0+255),b
  4557   0021C4                     
  4558                           ; BSR set to: 1
  4559                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  4560   0021C4  0EFF               	movlw	255
  4561   0021C6  255A               	addwf	f_open@cl& (0+255),w,b
  4562   0021C8  6F46               	movwf	??_f_open& (0+255),b
  4563   0021CA  0EFF               	movlw	255
  4564   0021CC  215B               	addwfc	(f_open@cl+1)& (0+255),w,b
  4565   0021CE  6F47               	movwf	(??_f_open+1)& (0+255),b
  4566   0021D0  0EFF               	movlw	255
  4567   0021D2  215C               	addwfc	(f_open@cl+2)& (0+255),w,b
  4568   0021D4  6F48               	movwf	(??_f_open+2)& (0+255),b
  4569   0021D6  0EFF               	movlw	255
  4570   0021D8  215D               	addwfc	(f_open@cl+3)& (0+255),w,b
  4571   0021DA  6F49               	movwf	(??_f_open+3)& (0+255),b
  4572   0021DC  EE20 F00B          	lfsr	2,11
  4573   0021E0  5166               	movf	f_open@fs& (0+255),w,b
  4574   0021E2  26D9               	addwf	fsr2l,f,c
  4575   0021E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4576   0021E6  22DA               	addwfc	fsr2h,f,c
  4577   0021E8  0060  F51B  FFDE   	movff	??_f_open,postinc2
  4578   0021EE  0060  F51F  FFDE   	movff	??_f_open+1,postinc2
  4579   0021F4  0060  F523  FFDE   	movff	??_f_open+2,postinc2
  4580   0021FA  0060  F527  FFDE   	movff	??_f_open+3,postinc2
  4581   002200  EF25  F011         	goto	l1302
  4582   002204                     l15786:
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  4586   002204  5168               	movf	f_open@res& (0+255),w,b
  4587   002206  A4D8               	btfss	status,2,c
  4588   002208  EF08  F011         	goto	u19311
  4589   00220C  EF0A  F011         	goto	u19310
  4590   002210                     u19311:
  4591   002210  EF25  F011         	goto	l1302
  4592   002214                     u19310:
  4593   002214                     
  4594                           ; BSR set to: 1
  4595                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  4596   002214  A96D               	btfss	(f_open@dj+4)& (0+255),4,b
  4597   002216  EF0F  F011         	goto	u19321
  4598   00221A  EF11  F011         	goto	u19320
  4599   00221E                     u19321:
  4600   00221E  EF15  F011         	goto	l1304
  4601   002222                     u19320:
  4602   002222                     
  4603                           ; BSR set to: 1
  4604                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  4605   002222  0E04               	movlw	4
  4606   002224  6F68               	movwf	f_open@res& (0+255),b
  4607                           
  4608                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  4609   002226  EF25  F011         	goto	l1302
  4610   00222A                     l1304:
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  4614   00222A  A345               	btfss	f_open@mode& (0+255),1,b
  4615   00222C  EF1A  F011         	goto	u19331
  4616   002230  EF1C  F011         	goto	u19330
  4617   002234                     u19331:
  4618   002234  EF25  F011         	goto	l1302
  4619   002238                     u19330:
  4620   002238                     
  4621                           ; BSR set to: 1
  4622   002238  A16D               	btfss	(f_open@dj+4)& (0+255),0,b
  4623   00223A  EF21  F011         	goto	u19341
  4624   00223E  EF23  F011         	goto	u19340
  4625   002242                     u19341:
  4626   002242  EF25  F011         	goto	l1302
  4627   002246                     u19340:
  4628   002246                     
  4629                           ; BSR set to: 1
  4630                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  4631   002246  0E07               	movlw	7
  4632   002248  6F68               	movwf	f_open@res& (0+255),b
  4633   00224A                     l1302:
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  4637   00224A  5168               	movf	f_open@res& (0+255),w,b
  4638   00224C  A4D8               	btfss	status,2,c
  4639   00224E  EF2B  F011         	goto	u19351
  4640   002252  EF2D  F011         	goto	u19350
  4641   002256                     u19351:
  4642   002256  EF59  F011         	goto	l15804
  4643   00225A                     u19350:
  4644   00225A                     
  4645                           ; BSR set to: 1
  4646                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  4647   00225A  A745               	btfss	f_open@mode& (0+255),3,b
  4648   00225C  EF32  F011         	goto	u19361
  4649   002260  EF34  F011         	goto	u19360
  4650   002264                     u19361:
  4651   002264  EF35  F011         	goto	l15800
  4652   002268                     u19360:
  4653   002268                     
  4654                           ; BSR set to: 1
  4655   002268  8D45               	bsf	f_open@mode& (0+255),6,b
  4656   00226A                     l15800:
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  4660   00226A  EE20 F02F          	lfsr	2,47
  4661   00226E  5166               	movf	f_open@fs& (0+255),w,b
  4662   002270  26D9               	addwf	fsr2l,f,c
  4663   002272  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4664   002274  22DA               	addwfc	fsr2h,f,c
  4665   002276  EE10 F01C          	lfsr	1,28
  4666   00227A  5141               	movf	f_open@fp& (0+255),w,b
  4667   00227C  26E1               	addwf	fsr1l,f,c
  4668   00227E  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4669   002280  22E2               	addwfc	fsr1h,f,c
  4670   002282  006F FF7B FFE6     	movff	postinc2,postinc1
  4671   002288  006F FF7B FFE6     	movff	postinc2,postinc1
  4672   00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  4673   002294  006F FF7B FFE6     	movff	postinc2,postinc1
  4674   00229A                     
  4675                           ; BSR set to: 1
  4676                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  4677   00229A  EE20 F020          	lfsr	2,32
  4678   00229E  5141               	movf	f_open@fp& (0+255),w,b
  4679   0022A0  26D9               	addwf	fsr2l,f,c
  4680   0022A2  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4681   0022A4  22DA               	addwfc	fsr2h,f,c
  4682   0022A6  0060  F60F  FFDE   	movff	f_open@dj+26,postinc2
  4683   0022AC  0060  F613  FFDD   	movff	f_open@dj+27,postdec2
  4684   0022B2                     l15804:
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  4688   0022B2  5168               	movf	f_open@res& (0+255),w,b
  4689   0022B4  A4D8               	btfss	status,2,c
  4690   0022B6  EF5F  F011         	goto	u19371
  4691   0022BA  EF61  F011         	goto	u19370
  4692   0022BE                     u19371:
  4693   0022BE  EF84  F013         	goto	l1289
  4694   0022C2                     u19370:
  4695   0022C2                     
  4696                           ; BSR set to: 1
  4697                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  4698   0022C2  C166  F067         	movff	f_open@fs,ld_clust@fs
  4699   0022C6  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  4700   0022CA  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  4701   0022CE  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  4702   0022D2  ECE2  F03F         	call	_ld_clust	;wreg free
  4703   0022D6  0101               	movlb	1	; () banked
  4704   0022D8  EE20 F006          	lfsr	2,6
  4705   0022DC  5141               	movf	f_open@fp& (0+255),w,b
  4706   0022DE  26D9               	addwf	fsr2l,f,c
  4707   0022E0  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4708   0022E2  22DA               	addwfc	fsr2h,f,c
  4709   0022E4  0100               	movlb	0	; () banked
  4710   0022E6  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  4711   0022EC  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  4712   0022F2  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  4713   0022F8  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  4714                           
  4715                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  4716   0022FE  0E1C               	movlw	28
  4717   002300  0101               	movlb	1	; () banked
  4718   002302  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  4719   002304  0100               	movlb	0	; () banked
  4720   002306  6F60               	movwf	ld_dword@ptr& (0+255),b
  4721   002308  0E00               	movlw	0
  4722   00230A  0101               	movlb	1	; () banked
  4723   00230C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  4724   00230E  0100               	movlb	0	; () banked
  4725   002310  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
  4726   002312  EC91  F03E         	call	_ld_dword	;wreg free
  4727   002316  0101               	movlb	1	; () banked
  4728   002318  EE20 F00A          	lfsr	2,10
  4729   00231C  5141               	movf	f_open@fp& (0+255),w,b
  4730   00231E  26D9               	addwf	fsr2l,f,c
  4731   002320  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4732   002322  22DA               	addwfc	fsr2h,f,c
  4733   002324  0100               	movlb	0	; () banked
  4734   002326  0060  F183  FFDE   	movff	?_ld_dword,postinc2
  4735   00232C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
  4736   002332  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
  4737   002338  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
  4738   00233E                     
  4739                           ; BSR set to: 0
  4740                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  4741   00233E  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  4742   002344  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  4743   00234A  0060  F59B  FFDE   	movff	f_open@fs,postinc2
  4744   002350  0060  F59F  FFDD   	movff	f_open@fs+1,postdec2
  4745   002356                     
  4746                           ; BSR set to: 0
  4747                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  4748   002356  0101               	movlb	1	; () banked
  4749   002358  EE20 F005          	lfsr	2,5
  4750   00235C  5166               	movf	f_open@fs& (0+255),w,b
  4751   00235E  26D9               	addwf	fsr2l,f,c
  4752   002360  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4753   002362  22DA               	addwfc	fsr2h,f,c
  4754   002364  EE10 F002          	lfsr	1,2
  4755   002368  5141               	movf	f_open@fp& (0+255),w,b
  4756   00236A  26E1               	addwf	fsr1l,f,c
  4757   00236C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4758   00236E  22E2               	addwfc	fsr1h,f,c
  4759   002370  006F FF7B FFE6     	movff	postinc2,postinc1
  4760   002376  006F FF77 FFE5     	movff	postdec2,postdec1
  4761   00237C                     
  4762                           ; BSR set to: 1
  4763                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  4764   00237C  EE20 F00E          	lfsr	2,14
  4765   002380  5141               	movf	f_open@fp& (0+255),w,b
  4766   002382  26D9               	addwf	fsr2l,f,c
  4767   002384  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4768   002386  22DA               	addwfc	fsr2h,f,c
  4769   002388  0060  F517  FFDF   	movff	f_open@mode,indf2
  4770   00238E                     
  4771                           ; BSR set to: 1
  4772                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  4773   00238E  EE20 F00F          	lfsr	2,15
  4774   002392  5141               	movf	f_open@fp& (0+255),w,b
  4775   002394  26D9               	addwf	fsr2l,f,c
  4776   002396  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4777   002398  22DA               	addwfc	fsr2h,f,c
  4778   00239A  6ADF               	clrf	indf2,c
  4779   00239C                     
  4780                           ; BSR set to: 1
  4781                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  4782   00239C  EE20 F018          	lfsr	2,24
  4783   0023A0  5141               	movf	f_open@fp& (0+255),w,b
  4784   0023A2  26D9               	addwf	fsr2l,f,c
  4785   0023A4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4786   0023A6  22DA               	addwfc	fsr2h,f,c
  4787   0023A8  6ADE               	clrf	postinc2,c
  4788   0023AA  6ADE               	clrf	postinc2,c
  4789   0023AC  6ADE               	clrf	postinc2,c
  4790   0023AE  6ADD               	clrf	postdec2,c
  4791   0023B0                     
  4792                           ; BSR set to: 1
  4793                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  4794   0023B0  EE20 F010          	lfsr	2,16
  4795   0023B4  5141               	movf	f_open@fp& (0+255),w,b
  4796   0023B6  26D9               	addwf	fsr2l,f,c
  4797   0023B8  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4798   0023BA  22DA               	addwfc	fsr2h,f,c
  4799   0023BC  6ADE               	clrf	postinc2,c
  4800   0023BE  6ADE               	clrf	postinc2,c
  4801   0023C0  6ADE               	clrf	postinc2,c
  4802   0023C2  6ADD               	clrf	postdec2,c
  4803   0023C4                     
  4804                           ; BSR set to: 1
  4805                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  4806   0023C4  0E22               	movlw	34
  4807   0023C6  2541               	addwf	f_open@fp& (0+255),w,b
  4808   0023C8  0100               	movlb	0	; () banked
  4809   0023CA  6F60               	movwf	mem_set@dst& (0+255),b
  4810   0023CC  0E00               	movlw	0
  4811   0023CE  0101               	movlb	1	; () banked
  4812   0023D0  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  4813   0023D2  0100               	movlb	0	; () banked
  4814   0023D4  6F61               	movwf	(mem_set@dst+1)& (0+255),b
  4815   0023D6  0E00               	movlw	0
  4816   0023D8  6F63               	movwf	(mem_set@val+1)& (0+255),b
  4817   0023DA  0E00               	movlw	0
  4818   0023DC  6F62               	movwf	mem_set@val& (0+255),b
  4819   0023DE  0E02               	movlw	2
  4820   0023E0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  4821   0023E2  0E00               	movlw	0
  4822   0023E4  6F64               	movwf	mem_set@cnt& (0+255),b
  4823   0023E6  ECF2  F044         	call	_mem_set	;wreg free
  4824   0023EA                     
  4825                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  4826   0023EA  0101               	movlb	1	; () banked
  4827   0023EC  AB45               	btfss	f_open@mode& (0+255),5,b
  4828   0023EE  EFFB  F011         	goto	u19381
  4829   0023F2  EFFD  F011         	goto	u19380
  4830   0023F6                     u19381:
  4831   0023F6  EF84  F013         	goto	l1289
  4832   0023FA                     u19380:
  4833   0023FA                     
  4834                           ; BSR set to: 1
  4835   0023FA  EE20 F00A          	lfsr	2,10
  4836   0023FE  5141               	movf	f_open@fp& (0+255),w,b
  4837   002400  26D9               	addwf	fsr2l,f,c
  4838   002402  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4839   002404  22DA               	addwfc	fsr2h,f,c
  4840   002406  50DE               	movf	postinc2,w,c
  4841   002408  10DE               	iorwf	postinc2,w,c
  4842   00240A  10DE               	iorwf	postinc2,w,c
  4843   00240C  10DE               	iorwf	postinc2,w,c
  4844   00240E  B4D8               	btfsc	status,2,c
  4845   002410  EF0C  F012         	goto	u19391
  4846   002414  EF0E  F012         	goto	u19390
  4847   002418                     u19391:
  4848   002418  EF84  F013         	goto	l1289
  4849   00241C                     u19390:
  4850   00241C                     
  4851                           ; BSR set to: 1
  4852                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  4853   00241C  EE20 F00A          	lfsr	2,10
  4854   002420  5141               	movf	f_open@fp& (0+255),w,b
  4855   002422  26D9               	addwf	fsr2l,f,c
  4856   002424  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4857   002426  22DA               	addwfc	fsr2h,f,c
  4858   002428  EE10 F010          	lfsr	1,16
  4859   00242C  5141               	movf	f_open@fp& (0+255),w,b
  4860   00242E  26E1               	addwf	fsr1l,f,c
  4861   002430  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4862   002432  22E2               	addwfc	fsr1h,f,c
  4863   002434  006F FF7B FFE6     	movff	postinc2,postinc1
  4864   00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  4865   002440  006F FF7B FFE6     	movff	postinc2,postinc1
  4866   002446  006F FF7B FFE6     	movff	postinc2,postinc1
  4867   00244C                     
  4868                           ; BSR set to: 1
  4869                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  4870   00244C  EE20 F009          	lfsr	2,9
  4871   002450  5166               	movf	f_open@fs& (0+255),w,b
  4872   002452  26D9               	addwf	fsr2l,f,c
  4873   002454  5167               	movf	(f_open@fs+1)& (0+255),w,b
  4874   002456  22DA               	addwfc	fsr2h,f,c
  4875   002458  006F FF78  F146    	movff	postinc2,??_f_open
  4876   00245E  006F FF74  F147    	movff	postdec2,??_f_open+1
  4877   002464  5146               	movf	??_f_open& (0+255),w,b
  4878   002466  6F48               	movwf	(??_f_open+2)& (0+255),b
  4879   002468  5147               	movf	(??_f_open+1)& (0+255),w,b
  4880   00246A  6F49               	movwf	(??_f_open+3)& (0+255),b
  4881   00246C  6B4A               	clrf	(??_f_open+4)& (0+255),b
  4882   00246E  6B4B               	clrf	(??_f_open+5)& (0+255),b
  4883   002470  0E09               	movlw	9
  4884   002472                     u19405:
  4885   002472  90D8               	bcf	status,0,c
  4886   002474  3748               	rlcf	(??_f_open+2)& (0+255),f,b
  4887   002476  3749               	rlcf	(??_f_open+3)& (0+255),f,b
  4888   002478  374A               	rlcf	(??_f_open+4)& (0+255),f,b
  4889   00247A  374B               	rlcf	(??_f_open+5)& (0+255),f,b
  4890   00247C  2EE8               	decfsz	wreg,f,c
  4891   00247E  EF39  F012         	goto	u19405
  4892   002482  C148  F156         	movff	??_f_open+2,f_open@bcs
  4893   002486  C149  F157         	movff	??_f_open+3,f_open@bcs+1
  4894   00248A  C14A  F158         	movff	??_f_open+4,f_open@bcs+2
  4895   00248E  C14B  F159         	movff	??_f_open+5,f_open@bcs+3
  4896   002492                     
  4897                           ; BSR set to: 1
  4898                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  4899   002492  EE20 F006          	lfsr	2,6
  4900   002496  5141               	movf	f_open@fp& (0+255),w,b
  4901   002498  26D9               	addwf	fsr2l,f,c
  4902   00249A  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4903   00249C  22DA               	addwfc	fsr2h,f,c
  4904   00249E  006F FF78  F162    	movff	postinc2,f_open@clst
  4905   0024A4  006F FF78  F163    	movff	postinc2,f_open@clst+1
  4906   0024AA  006F FF78  F164    	movff	postinc2,f_open@clst+2
  4907   0024B0  006F FF78  F165    	movff	postinc2,f_open@clst+3
  4908   0024B6                     
  4909                           ; BSR set to: 1
  4910                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  4911   0024B6  EE20 F00A          	lfsr	2,10
  4912   0024BA  5141               	movf	f_open@fp& (0+255),w,b
  4913   0024BC  26D9               	addwf	fsr2l,f,c
  4914   0024BE  5142               	movf	(f_open@fp+1)& (0+255),w,b
  4915   0024C0  22DA               	addwfc	fsr2h,f,c
  4916   0024C2  006F FF78  F15E    	movff	postinc2,f_open@ofs
  4917   0024C8  006F FF78  F15F    	movff	postinc2,f_open@ofs+1
  4918   0024CE  006F FF78  F160    	movff	postinc2,f_open@ofs+2
  4919   0024D4  006F FF78  F161    	movff	postinc2,f_open@ofs+3
  4920   0024DA  EFAD  F012         	goto	l15846
  4921   0024DE                     l15834:
  4922                           
  4923                           ; BSR set to: 1
  4924                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  4925   0024DE  C141  F0D3         	movff	f_open@fp,get_fat@obj
  4926   0024E2  C142  F0D4         	movff	f_open@fp+1,get_fat@obj+1
  4927   0024E6  C162  F0D5         	movff	f_open@clst,get_fat@clst
  4928   0024EA  C163  F0D6         	movff	f_open@clst+1,get_fat@clst+1
  4929   0024EE  C164  F0D7         	movff	f_open@clst+2,get_fat@clst+2
  4930   0024F2  C165  F0D8         	movff	f_open@clst+3,get_fat@clst+3
  4931   0024F6  ECBC  F025         	call	_get_fat	;wreg free
  4932   0024FA  C0D3  F162         	movff	?_get_fat,f_open@clst
  4933   0024FE  C0D4  F163         	movff	?_get_fat+1,f_open@clst+1
  4934   002502  C0D5  F164         	movff	?_get_fat+2,f_open@clst+2
  4935   002506  C0D6  F165         	movff	?_get_fat+3,f_open@clst+3
  4936   00250A                     
  4937                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  4938   00250A  0101               	movlb	1	; () banked
  4939   00250C  5165               	movf	(f_open@clst+3)& (0+255),w,b
  4940   00250E  1164               	iorwf	(f_open@clst+2)& (0+255),w,b
  4941   002510  1163               	iorwf	(f_open@clst+1)& (0+255),w,b
  4942   002512  E107               	bnz	u19411
  4943   002514  0E02               	movlw	2
  4944   002516  5D62               	subwf	f_open@clst& (0+255),w,b
  4945   002518  B0D8               	btfsc	status,0,c
  4946   00251A  EF91  F012         	goto	u19411
  4947   00251E  EF93  F012         	goto	u19410
  4948   002522                     u19411:
  4949   002522  EF95  F012         	goto	l15840
  4950   002526                     u19410:
  4951   002526                     
  4952                           ; BSR set to: 1
  4953   002526  0E02               	movlw	2
  4954   002528  6F68               	movwf	f_open@res& (0+255),b
  4955   00252A                     l15840:
  4956                           
  4957                           ; BSR set to: 1
  4958                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  4959   00252A  2962               	incf	f_open@clst& (0+255),w,b
  4960   00252C  E10A               	bnz	u19421
  4961   00252E  2963               	incf	(f_open@clst+1)& (0+255),w,b
  4962   002530  E108               	bnz	u19421
  4963   002532  2964               	incf	(f_open@clst+2)& (0+255),w,b
  4964   002534  E106               	bnz	u19421
  4965   002536  2965               	incf	(f_open@clst+3)& (0+255),w,b
  4966   002538  A4D8               	btfss	status,2,c
  4967   00253A  EFA1  F012         	goto	u19421
  4968   00253E  EFA3  F012         	goto	u19420
  4969   002542                     u19421:
  4970   002542  EFA5  F012         	goto	l15844
  4971   002546                     u19420:
  4972   002546                     
  4973                           ; BSR set to: 1
  4974   002546  0E01               	movlw	1
  4975   002548  6F68               	movwf	f_open@res& (0+255),b
  4976   00254A                     l15844:
  4977                           
  4978                           ; BSR set to: 1
  4979                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  4980   00254A  5156               	movf	f_open@bcs& (0+255),w,b
  4981   00254C  5F5E               	subwf	f_open@ofs& (0+255),f,b
  4982   00254E  5157               	movf	(f_open@bcs+1)& (0+255),w,b
  4983   002550  5B5F               	subwfb	(f_open@ofs+1)& (0+255),f,b
  4984   002552  5158               	movf	(f_open@bcs+2)& (0+255),w,b
  4985   002554  5B60               	subwfb	(f_open@ofs+2)& (0+255),f,b
  4986   002556  5159               	movf	(f_open@bcs+3)& (0+255),w,b
  4987   002558  5B61               	subwfb	(f_open@ofs+3)& (0+255),f,b
  4988   00255A                     l15846:
  4989                           
  4990                           ; BSR set to: 1
  4991   00255A  5168               	movf	f_open@res& (0+255),w,b
  4992   00255C  A4D8               	btfss	status,2,c
  4993   00255E  EFB3  F012         	goto	u19431
  4994   002562  EFB5  F012         	goto	u19430
  4995   002566                     u19431:
  4996   002566  EFC4  F012         	goto	l15850
  4997   00256A                     u19430:
  4998   00256A                     
  4999                           ; BSR set to: 1
  5000   00256A  515E               	movf	f_open@ofs& (0+255),w,b
  5001   00256C  5D56               	subwf	f_open@bcs& (0+255),w,b
  5002   00256E  515F               	movf	(f_open@ofs+1)& (0+255),w,b
  5003   002570  5957               	subwfb	(f_open@bcs+1)& (0+255),w,b
  5004   002572  5160               	movf	(f_open@ofs+2)& (0+255),w,b
  5005   002574  5958               	subwfb	(f_open@bcs+2)& (0+255),w,b
  5006   002576  5161               	movf	(f_open@ofs+3)& (0+255),w,b
  5007   002578  5959               	subwfb	(f_open@bcs+3)& (0+255),w,b
  5008   00257A  A0D8               	btfss	status,0,c
  5009   00257C  EFC2  F012         	goto	u19441
  5010   002580  EFC4  F012         	goto	u19440
  5011   002584                     u19441:
  5012   002584  EF6F  F012         	goto	l15834
  5013   002588                     u19440:
  5014   002588                     l15850:
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  5018   002588  EE20 F014          	lfsr	2,20
  5019   00258C  5141               	movf	f_open@fp& (0+255),w,b
  5020   00258E  26D9               	addwf	fsr2l,f,c
  5021   002590  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5022   002592  22DA               	addwfc	fsr2h,f,c
  5023   002594  0060  F58B  FFDE   	movff	f_open@clst,postinc2
  5024   00259A  0060  F58F  FFDE   	movff	f_open@clst+1,postinc2
  5025   0025A0  0060  F593  FFDE   	movff	f_open@clst+2,postinc2
  5026   0025A6  0060  F597  FFDE   	movff	f_open@clst+3,postinc2
  5027   0025AC                     
  5028                           ; BSR set to: 1
  5029                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  5030   0025AC  5168               	movf	f_open@res& (0+255),w,b
  5031   0025AE  A4D8               	btfss	status,2,c
  5032   0025B0  EFDC  F012         	goto	u19451
  5033   0025B4  EFDE  F012         	goto	u19450
  5034   0025B8                     u19451:
  5035   0025B8  EF84  F013         	goto	l1289
  5036   0025BC                     u19450:
  5037   0025BC                     
  5038                           ; BSR set to: 1
  5039   0025BC  0EFF               	movlw	255
  5040   0025BE  155E               	andwf	f_open@ofs& (0+255),w,b
  5041   0025C0  6F46               	movwf	??_f_open& (0+255),b
  5042   0025C2  0E01               	movlw	1
  5043   0025C4  155F               	andwf	(f_open@ofs+1)& (0+255),w,b
  5044   0025C6  6F47               	movwf	(??_f_open+1)& (0+255),b
  5045   0025C8  0E00               	movlw	0
  5046   0025CA  1560               	andwf	(f_open@ofs+2)& (0+255),w,b
  5047   0025CC  6F48               	movwf	(??_f_open+2)& (0+255),b
  5048   0025CE  0E00               	movlw	0
  5049   0025D0  1561               	andwf	(f_open@ofs+3)& (0+255),w,b
  5050   0025D2  6F49               	movwf	(??_f_open+3)& (0+255),b
  5051   0025D4  5146               	movf	??_f_open& (0+255),w,b
  5052   0025D6  1147               	iorwf	(??_f_open+1)& (0+255),w,b
  5053   0025D8  1148               	iorwf	(??_f_open+2)& (0+255),w,b
  5054   0025DA  1149               	iorwf	(??_f_open+3)& (0+255),w,b
  5055   0025DC  B4D8               	btfsc	status,2,c
  5056   0025DE  EFF3  F012         	goto	u19461
  5057   0025E2  EFF5  F012         	goto	u19460
  5058   0025E6                     u19461:
  5059   0025E6  EF84  F013         	goto	l1289
  5060   0025EA                     u19460:
  5061   0025EA                     
  5062                           ; BSR set to: 1
  5063                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  5064   0025EA  C166  F06C         	movff	f_open@fs,clst2sect@fs
  5065   0025EE  C167  F06D         	movff	f_open@fs+1,clst2sect@fs+1
  5066   0025F2  C162  F06E         	movff	f_open@clst,clst2sect@clst
  5067   0025F6  C163  F06F         	movff	f_open@clst+1,clst2sect@clst+1
  5068   0025FA  C164  F070         	movff	f_open@clst+2,clst2sect@clst+2
  5069   0025FE  C165  F071         	movff	f_open@clst+3,clst2sect@clst+3
  5070   002602  EC51  F03D         	call	_clst2sect	;wreg free
  5071   002606  C06C  F152         	movff	?_clst2sect,f_open@sc
  5072   00260A  C06D  F153         	movff	?_clst2sect+1,f_open@sc+1
  5073   00260E  C06E  F154         	movff	?_clst2sect+2,f_open@sc+2
  5074   002612  C06F  F155         	movff	?_clst2sect+3,f_open@sc+3
  5075   002616  0101               	movlb	1	; () banked
  5076   002618  5152               	movf	f_open@sc& (0+255),w,b
  5077   00261A  1153               	iorwf	(f_open@sc+1)& (0+255),w,b
  5078   00261C  1154               	iorwf	(f_open@sc+2)& (0+255),w,b
  5079   00261E  1155               	iorwf	(f_open@sc+3)& (0+255),w,b
  5080   002620  A4D8               	btfss	status,2,c
  5081   002622  EF15  F013         	goto	u19471
  5082   002626  EF17  F013         	goto	u19470
  5083   00262A                     u19471:
  5084   00262A  EF1B  F013         	goto	l15860
  5085   00262E                     u19470:
  5086   00262E                     
  5087                           ; BSR set to: 1
  5088                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  5089   00262E  0E02               	movlw	2
  5090   002630  6F68               	movwf	f_open@res& (0+255),b
  5091                           
  5092                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  5093   002632  EF84  F013         	goto	l1289
  5094   002636                     l15860:
  5095                           
  5096                           ; BSR set to: 1
  5097                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  5098   002636  C15E  F146         	movff	f_open@ofs,??_f_open
  5099   00263A  C15F  F147         	movff	f_open@ofs+1,??_f_open+1
  5100   00263E  C160  F148         	movff	f_open@ofs+2,??_f_open+2
  5101   002642  C161  F149         	movff	f_open@ofs+3,??_f_open+3
  5102   002646  0E0A               	movlw	10
  5103   002648  EF2B  F013         	goto	u19480
  5104   00264C                     u19485:
  5105   00264C  90D8               	bcf	status,0,c
  5106   00264E  3349               	rrcf	(??_f_open+3)& (0+255),f,b
  5107   002650  3348               	rrcf	(??_f_open+2)& (0+255),f,b
  5108   002652  3347               	rrcf	(??_f_open+1)& (0+255),f,b
  5109   002654  3346               	rrcf	??_f_open& (0+255),f,b
  5110   002656                     u19480:
  5111   002656  2EE8               	decfsz	wreg,f,c
  5112   002658  EF26  F013         	goto	u19485
  5113   00265C  5152               	movf	f_open@sc& (0+255),w,b
  5114   00265E  2546               	addwf	??_f_open& (0+255),w,b
  5115   002660  6F4A               	movwf	(??_f_open+4)& (0+255),b
  5116   002662  5153               	movf	(f_open@sc+1)& (0+255),w,b
  5117   002664  2147               	addwfc	(??_f_open+1)& (0+255),w,b
  5118   002666  6F4B               	movwf	(??_f_open+5)& (0+255),b
  5119   002668  5154               	movf	(f_open@sc+2)& (0+255),w,b
  5120   00266A  2148               	addwfc	(??_f_open+2)& (0+255),w,b
  5121   00266C  6F4C               	movwf	(??_f_open+6)& (0+255),b
  5122   00266E  5155               	movf	(f_open@sc+3)& (0+255),w,b
  5123   002670  2149               	addwfc	(??_f_open+3)& (0+255),w,b
  5124   002672  6F4D               	movwf	(??_f_open+7)& (0+255),b
  5125   002674  EE20 F018          	lfsr	2,24
  5126   002678  5141               	movf	f_open@fp& (0+255),w,b
  5127   00267A  26D9               	addwf	fsr2l,f,c
  5128   00267C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5129   00267E  22DA               	addwfc	fsr2h,f,c
  5130   002680  0060  F52B  FFDE   	movff	??_f_open+4,postinc2
  5131   002686  0060  F52F  FFDE   	movff	??_f_open+5,postinc2
  5132   00268C  0060  F533  FFDE   	movff	??_f_open+6,postinc2
  5133   002692  0060  F537  FFDE   	movff	??_f_open+7,postinc2
  5134   002698                     
  5135                           ; BSR set to: 1
  5136                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  5137   002698  0E22               	movlw	34
  5138   00269A  2541               	addwf	f_open@fp& (0+255),w,b
  5139   00269C  0100               	movlb	0	; () banked
  5140   00269E  6FA8               	movwf	disk_read@buff& (0+255),b
  5141   0026A0  0E00               	movlw	0
  5142   0026A2  0101               	movlb	1	; () banked
  5143   0026A4  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  5144   0026A6  0100               	movlb	0	; () banked
  5145   0026A8  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  5146   0026AA  0101               	movlb	1	; () banked
  5147   0026AC  EE20 F018          	lfsr	2,24
  5148   0026B0  5141               	movf	f_open@fp& (0+255),w,b
  5149   0026B2  26D9               	addwf	fsr2l,f,c
  5150   0026B4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  5151   0026B6  22DA               	addwfc	fsr2h,f,c
  5152   0026B8  006F FF78  F0AA    	movff	postinc2,disk_read@sector
  5153   0026BE  006F FF78  F0AB    	movff	postinc2,disk_read@sector+1
  5154   0026C4  006F FF78  F0AC    	movff	postinc2,disk_read@sector+2
  5155   0026CA  006F FF78  F0AD    	movff	postinc2,disk_read@sector+3
  5156   0026D0  0E00               	movlw	0
  5157   0026D2  0100               	movlb	0	; () banked
  5158   0026D4  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  5159   0026D6  0E01               	movlw	1
  5160   0026D8  6FAE               	movwf	disk_read@count& (0+255),b
  5161   0026DA  0101               	movlb	1	; () banked
  5162   0026DC  EE20 F001          	lfsr	2,1
  5163   0026E0  5166               	movf	f_open@fs& (0+255),w,b
  5164   0026E2  26D9               	addwf	fsr2l,f,c
  5165   0026E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  5166   0026E6  22DA               	addwfc	fsr2h,f,c
  5167   0026E8  50DF               	movf	indf2,w,c
  5168   0026EA  EC71  F042         	call	_disk_read
  5169   0026EE  0900               	iorlw	0
  5170   0026F0  B4D8               	btfsc	status,2,c
  5171   0026F2  EF7D  F013         	goto	u19491
  5172   0026F6  EF7F  F013         	goto	u19490
  5173   0026FA                     u19491:
  5174   0026FA  EF84  F013         	goto	l1310
  5175   0026FE                     u19490:
  5176   0026FE  0E01               	movlw	1
  5177   002700  0101               	movlb	1	; () banked
  5178   002702  6F68               	movwf	f_open@res& (0+255),b
  5179   002704  EF84  F013         	goto	l1289
  5180   002708                     l1310:
  5181   002708                     l1289:
  5182                           
  5183                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  5184   002708  0101               	movlb	1	; () banked
  5185   00270A  5168               	movf	f_open@res& (0+255),w,b
  5186   00270C  B4D8               	btfsc	status,2,c
  5187   00270E  EF8B  F013         	goto	u19501
  5188   002712  EF8D  F013         	goto	u19500
  5189   002716                     u19501:
  5190   002716  EF95  F013         	goto	l15868
  5191   00271A                     u19500:
  5192   00271A                     
  5193                           ; BSR set to: 1
  5194   00271A  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  5195   002720  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  5196   002726  6ADE               	clrf	postinc2,c
  5197   002728  6ADD               	clrf	postdec2,c
  5198   00272A                     l15868:
  5199                           
  5200                           ; BSR set to: 1
  5201                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  5202   00272A  5168               	movf	f_open@res& (0+255),w,b
  5203   00272C                     l1284:
  5204                           
  5205                           ; BSR set to: 1
  5206   00272C  0012               	return		;funcret
  5207   00272E                     __end_of_f_open:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _remove_chain *****************
  5211 ;; Defined at:
  5212 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  obj             2  148[BANK0 ] PTR struct .
  5215 ;;		 -> f_open@dj(40), 
  5216 ;;  clst            4  150[BANK0 ] unsigned long 
  5217 ;;  pclst           4  154[BANK0 ] unsigned long 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  nxt             4    8[BANK1 ] unsigned long 
  5220 ;;  fs              2   13[BANK1 ] PTR struct .
  5221 ;;		 -> FatFs(563), NULL(0), 
  5222 ;;  res             1   12[BANK1 ] enum E68
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      enum E68
  5225 ;; Registers used:
  5226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         0      10      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:       25 bytes
  5237 ;; Hardware stack levels used: 1
  5238 ;; Hardware stack levels required when called: 13
  5239 ;; This function calls:
  5240 ;;		_get_fat
  5241 ;;		_put_fat
  5242 ;; This function is called by:
  5243 ;;		_f_open
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text8
  5248   005646                     __ptext8:
  5249                           	callstack 0
  5250   005646                     _remove_chain:
  5251                           	callstack 15
  5252   005646                     
  5253                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  5254   005646  0060  F3D3  FFD9   	movff	remove_chain@obj,fsr2l
  5255   00564C  0060  F3D7  FFDA   	movff	remove_chain@obj+1,fsr2h
  5256   005652  006F FF78  F10D    	movff	postinc2,remove_chain@fs
  5257   005658  006F FF74  F10E    	movff	postdec2,remove_chain@fs+1
  5258   00565E                     
  5259                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  5260   00565E  0100               	movlb	0	; () banked
  5261   005660  51F9               	movf	(remove_chain@clst+3)& (0+255),w,b
  5262   005662  11F8               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  5263   005664  11F7               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  5264   005666  E109               	bnz	u18100
  5265   005668  0E02               	movlw	2
  5266   00566A  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  5267   00566C  A0D8               	btfss	status,0,c
  5268   00566E  EF3B  F02B         	goto	u18101
  5269   005672  EF3D  F02B         	goto	u18100
  5270   005676                     u18101:
  5271   005676  EF54  F02B         	goto	l15086
  5272   00567A                     u18100:
  5273   00567A                     
  5274                           ; BSR set to: 0
  5275   00567A  0101               	movlb	1	; () banked
  5276   00567C  EE20 F017          	lfsr	2,23
  5277   005680  510D               	movf	remove_chain@fs& (0+255),w,b
  5278   005682  26D9               	addwf	fsr2l,f,c
  5279   005684  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5280   005686  22DA               	addwfc	fsr2h,f,c
  5281   005688  50DE               	movf	postinc2,w,c
  5282   00568A  0100               	movlb	0	; () banked
  5283   00568C  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  5284   00568E  50DE               	movf	postinc2,w,c
  5285   005690  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  5286   005692  50DE               	movf	postinc2,w,c
  5287   005694  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  5288   005696  50DE               	movf	postinc2,w,c
  5289   005698  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  5290   00569A  A0D8               	btfss	status,0,c
  5291   00569C  EF52  F02B         	goto	u18111
  5292   0056A0  EF54  F02B         	goto	u18110
  5293   0056A4                     u18111:
  5294   0056A4  EF57  F02B         	goto	l15090
  5295   0056A8                     u18110:
  5296   0056A8                     l15086:
  5297   0056A8  0E02               	movlw	2
  5298   0056AA  EF43  F02C         	goto	l970
  5299   0056AE                     l15090:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  5303   0056AE  51FA               	movf	remove_chain@pclst& (0+255),w,b
  5304   0056B0  11FB               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  5305   0056B2  11FC               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  5306   0056B4  11FD               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  5307   0056B6  B4D8               	btfsc	status,2,c
  5308   0056B8  EF60  F02B         	goto	u18121
  5309   0056BC  EF62  F02B         	goto	u18120
  5310   0056C0                     u18121:
  5311   0056C0  EF85  F02B         	goto	l15106
  5312   0056C4                     u18120:
  5313   0056C4                     
  5314                           ; BSR set to: 0
  5315                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  5316   0056C4  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  5317   0056C8  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  5318   0056CC  C0FA  F0D5         	movff	remove_chain@pclst,put_fat@clst
  5319   0056D0  C0FB  F0D6         	movff	remove_chain@pclst+1,put_fat@clst+1
  5320   0056D4  C0FC  F0D7         	movff	remove_chain@pclst+2,put_fat@clst+2
  5321   0056D8  C0FD  F0D8         	movff	remove_chain@pclst+3,put_fat@clst+3
  5322   0056DC  0EFF               	movlw	255
  5323   0056DE  6FD9               	movwf	put_fat@val& (0+255),b
  5324   0056E0  0EFF               	movlw	255
  5325   0056E2  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  5326   0056E4  0EFF               	movlw	255
  5327   0056E6  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  5328   0056E8  0EFF               	movlw	255
  5329   0056EA  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  5330   0056EC  ECF0  F019         	call	_put_fat	;wreg free
  5331   0056F0  0101               	movlb	1	; () banked
  5332   0056F2  6F0C               	movwf	remove_chain@res& (0+255),b
  5333   0056F4                     
  5334                           ; BSR set to: 1
  5335                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  5336   0056F4  510C               	movf	remove_chain@res& (0+255),w,b
  5337   0056F6  B4D8               	btfsc	status,2,c
  5338   0056F8  EF80  F02B         	goto	u18131
  5339   0056FC  EF82  F02B         	goto	u18130
  5340   005700                     u18131:
  5341   005700  EF85  F02B         	goto	l15106
  5342   005704                     u18130:
  5343   005704                     l15102:
  5344                           
  5345                           ; BSR set to: 1
  5346   005704  510C               	movf	remove_chain@res& (0+255),w,b
  5347   005706  EF43  F02C         	goto	l970
  5348   00570A                     l15106:
  5349                           
  5350                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  5351   00570A  C0F4  F0D3         	movff	remove_chain@obj,get_fat@obj
  5352   00570E  C0F5  F0D4         	movff	remove_chain@obj+1,get_fat@obj+1
  5353   005712  C0F6  F0D5         	movff	remove_chain@clst,get_fat@clst
  5354   005716  C0F7  F0D6         	movff	remove_chain@clst+1,get_fat@clst+1
  5355   00571A  C0F8  F0D7         	movff	remove_chain@clst+2,get_fat@clst+2
  5356   00571E  C0F9  F0D8         	movff	remove_chain@clst+3,get_fat@clst+3
  5357   005722  ECBC  F025         	call	_get_fat	;wreg free
  5358   005726  C0D3  F108         	movff	?_get_fat,remove_chain@nxt
  5359   00572A  C0D4  F109         	movff	?_get_fat+1,remove_chain@nxt+1
  5360   00572E  C0D5  F10A         	movff	?_get_fat+2,remove_chain@nxt+2
  5361   005732  C0D6  F10B         	movff	?_get_fat+3,remove_chain@nxt+3
  5362   005736                     
  5363                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  5364   005736  0101               	movlb	1	; () banked
  5365   005738  5108               	movf	remove_chain@nxt& (0+255),w,b
  5366   00573A  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5367   00573C  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5368   00573E  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  5369   005740  A4D8               	btfss	status,2,c
  5370   005742  EFA5  F02B         	goto	u18141
  5371   005746  EFA7  F02B         	goto	u18140
  5372   00574A                     u18141:
  5373   00574A  EFA9  F02B         	goto	l15112
  5374   00574E                     u18140:
  5375   00574E  EF42  F02C         	goto	l15140
  5376   005752                     l15112:
  5377                           
  5378                           ; BSR set to: 1
  5379                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  5380   005752  0508               	decf	remove_chain@nxt& (0+255),w,b
  5381   005754  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5382   005756  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5383   005758  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  5384   00575A  A4D8               	btfss	status,2,c
  5385   00575C  EFB2  F02B         	goto	u18151
  5386   005760  EFB4  F02B         	goto	u18150
  5387   005764                     u18151:
  5388   005764  EFB6  F02B         	goto	l15118
  5389   005768                     u18150:
  5390   005768  EF54  F02B         	goto	l15086
  5391   00576C                     l15118:
  5392                           
  5393                           ; BSR set to: 1
  5394                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  5395   00576C  2908               	incf	remove_chain@nxt& (0+255),w,b
  5396   00576E  E10A               	bnz	u18161
  5397   005770  2909               	incf	(remove_chain@nxt+1)& (0+255),w,b
  5398   005772  E108               	bnz	u18161
  5399   005774  290A               	incf	(remove_chain@nxt+2)& (0+255),w,b
  5400   005776  E106               	bnz	u18161
  5401   005778  290B               	incf	(remove_chain@nxt+3)& (0+255),w,b
  5402   00577A  A4D8               	btfss	status,2,c
  5403   00577C  EFC2  F02B         	goto	u18161
  5404   005780  EFC4  F02B         	goto	u18160
  5405   005784                     u18161:
  5406   005784  EFC7  F02B         	goto	l15126
  5407   005788                     u18160:
  5408   005788                     
  5409                           ; BSR set to: 1
  5410   005788  0E01               	movlw	1
  5411   00578A  EF43  F02C         	goto	l970
  5412   00578E                     l15126:
  5413                           
  5414                           ; BSR set to: 1
  5415                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  5416   00578E  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  5417   005792  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  5418   005796  C0F6  F0D5         	movff	remove_chain@clst,put_fat@clst
  5419   00579A  C0F7  F0D6         	movff	remove_chain@clst+1,put_fat@clst+1
  5420   00579E  C0F8  F0D7         	movff	remove_chain@clst+2,put_fat@clst+2
  5421   0057A2  C0F9  F0D8         	movff	remove_chain@clst+3,put_fat@clst+3
  5422   0057A6  0E00               	movlw	0
  5423   0057A8  0100               	movlb	0	; () banked
  5424   0057AA  6FD9               	movwf	put_fat@val& (0+255),b
  5425   0057AC  0E00               	movlw	0
  5426   0057AE  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  5427   0057B0  0E00               	movlw	0
  5428   0057B2  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  5429   0057B4  0E00               	movlw	0
  5430   0057B6  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  5431   0057B8  ECF0  F019         	call	_put_fat	;wreg free
  5432   0057BC  0101               	movlb	1	; () banked
  5433   0057BE  6F0C               	movwf	remove_chain@res& (0+255),b
  5434   0057C0                     
  5435                           ; BSR set to: 1
  5436                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  5437   0057C0  510C               	movf	remove_chain@res& (0+255),w,b
  5438   0057C2  B4D8               	btfsc	status,2,c
  5439   0057C4  EFE6  F02B         	goto	u18171
  5440   0057C8  EFE8  F02B         	goto	u18170
  5441   0057CC                     u18171:
  5442   0057CC  EFEA  F02B         	goto	l15134
  5443   0057D0                     u18170:
  5444   0057D0  EF82  F02B         	goto	l15102
  5445   0057D4                     l15134:
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  5449   0057D4  EE20 F017          	lfsr	2,23
  5450   0057D8  510D               	movf	remove_chain@fs& (0+255),w,b
  5451   0057DA  26D9               	addwf	fsr2l,f,c
  5452   0057DC  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5453   0057DE  22DA               	addwfc	fsr2h,f,c
  5454   0057E0  0EFE               	movlw	254
  5455   0057E2  24DE               	addwf	postinc2,w,c
  5456   0057E4  6F00               	movwf	??_remove_chain& (0+255),b
  5457   0057E6  0EFF               	movlw	255
  5458   0057E8  20DE               	addwfc	postinc2,w,c
  5459   0057EA  6F01               	movwf	(??_remove_chain+1)& (0+255),b
  5460   0057EC  0EFF               	movlw	255
  5461   0057EE  20DE               	addwfc	postinc2,w,c
  5462   0057F0  6F02               	movwf	(??_remove_chain+2)& (0+255),b
  5463   0057F2  0EFF               	movlw	255
  5464   0057F4  20DE               	addwfc	postinc2,w,c
  5465   0057F6  6F03               	movwf	(??_remove_chain+3)& (0+255),b
  5466   0057F8  EE20 F00F          	lfsr	2,15
  5467   0057FC  510D               	movf	remove_chain@fs& (0+255),w,b
  5468   0057FE  26D9               	addwf	fsr2l,f,c
  5469   005800  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5470   005802  22DA               	addwfc	fsr2h,f,c
  5471   005804  5100               	movf	??_remove_chain& (0+255),w,b
  5472   005806  5CDE               	subwf	postinc2,w,c
  5473   005808  5101               	movf	(??_remove_chain+1)& (0+255),w,b
  5474   00580A  58DE               	subwfb	postinc2,w,c
  5475   00580C  5102               	movf	(??_remove_chain+2)& (0+255),w,b
  5476   00580E  58DE               	subwfb	postinc2,w,c
  5477   005810  5103               	movf	(??_remove_chain+3)& (0+255),w,b
  5478   005812  58DE               	subwfb	postinc2,w,c
  5479   005814  B0D8               	btfsc	status,0,c
  5480   005816  EF0F  F02C         	goto	u18181
  5481   00581A  EF11  F02C         	goto	u18180
  5482   00581E                     u18181:
  5483   00581E  EF24  F02C         	goto	l15138
  5484   005822                     u18180:
  5485   005822                     
  5486                           ; BSR set to: 1
  5487                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  5488   005822  EE20 F00F          	lfsr	2,15
  5489   005826  510D               	movf	remove_chain@fs& (0+255),w,b
  5490   005828  26D9               	addwf	fsr2l,f,c
  5491   00582A  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5492   00582C  22DA               	addwfc	fsr2h,f,c
  5493   00582E  2ADE               	incf	postinc2,f,c
  5494   005830  0E00               	movlw	0
  5495   005832  22DE               	addwfc	postinc2,f,c
  5496   005834  22DE               	addwfc	postinc2,f,c
  5497   005836  22DE               	addwfc	postinc2,f,c
  5498                           
  5499                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  5500   005838  EE20 F004          	lfsr	2,4
  5501   00583C  510D               	movf	remove_chain@fs& (0+255),w,b
  5502   00583E  26D9               	addwf	fsr2l,f,c
  5503   005840  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5504   005842  22DA               	addwfc	fsr2h,f,c
  5505   005844  0E00               	movlw	0
  5506   005846  80DB               	bsf	plusw2,0,c
  5507   005848                     l15138:
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  5511   005848  C108  F0F6         	movff	remove_chain@nxt,remove_chain@clst
  5512   00584C  C109  F0F7         	movff	remove_chain@nxt+1,remove_chain@clst+1
  5513   005850  C10A  F0F8         	movff	remove_chain@nxt+2,remove_chain@clst+2
  5514   005854  C10B  F0F9         	movff	remove_chain@nxt+3,remove_chain@clst+3
  5515                           
  5516                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  5517   005858  EE20 F017          	lfsr	2,23
  5518   00585C  510D               	movf	remove_chain@fs& (0+255),w,b
  5519   00585E  26D9               	addwf	fsr2l,f,c
  5520   005860  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  5521   005862  22DA               	addwfc	fsr2h,f,c
  5522   005864  50DE               	movf	postinc2,w,c
  5523   005866  0100               	movlb	0	; () banked
  5524   005868  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  5525   00586A  50DE               	movf	postinc2,w,c
  5526   00586C  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  5527   00586E  50DE               	movf	postinc2,w,c
  5528   005870  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  5529   005872  50DE               	movf	postinc2,w,c
  5530   005874  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  5531   005876  A0D8               	btfss	status,0,c
  5532   005878  EF40  F02C         	goto	u18191
  5533   00587C  EF42  F02C         	goto	u18190
  5534   005880                     u18191:
  5535   005880  EF85  F02B         	goto	l15106
  5536   005884                     u18190:
  5537   005884                     l15140:
  5538                           
  5539                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  5540   005884  0E00               	movlw	0
  5541   005886                     l970:
  5542   005886  0012               	return		;funcret
  5543   005888                     __end_of_remove_chain:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _follow_path *****************
  5547 ;; Defined at:
  5548 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  dp              2   51[BANK1 ] PTR struct .
  5551 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  5552 ;;  path            2   53[BANK1 ] PTR const unsigned char 
  5553 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  fs              2   61[BANK1 ] PTR struct .
  5556 ;;		 -> FatFs(563), NULL(0), 
  5557 ;;  res             1   64[BANK1 ] enum E68
  5558 ;;  ns              1   63[BANK1 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      enum E68
  5561 ;; Registers used:
  5562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5568 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;Total ram usage:       14 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; Hardware stack levels required when called: 16
  5575 ;; This function calls:
  5576 ;;		_create_name
  5577 ;;		_dir_find
  5578 ;;		_dir_sdi
  5579 ;;		_ld_clust
  5580 ;; This function is called by:
  5581 ;;		_f_open
  5582 ;;		_f_chdir
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text9
  5587   005392                     __ptext9:
  5588                           	callstack 0
  5589   005392                     _follow_path:
  5590                           	callstack 12
  5591   005392                     
  5592                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  5593   005392  0060  F4CF  FFD9   	movff	follow_path@dp,fsr2l
  5594   005398  0060  F4D3  FFDA   	movff	follow_path@dp+1,fsr2h
  5595   00539E  006F FF78  F13D    	movff	postinc2,follow_path@fs
  5596   0053A4  006F FF74  F13E    	movff	postdec2,follow_path@fs+1
  5597   0053AA                     
  5598                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  5599   0053AA  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  5600   0053B0  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  5601   0053B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5602   0053B6  6AF8               	clrf	tblptru,c
  5603   0053B8                     	endif
  5604   0053B8                     	if	0	;tblptru may be non-zero
  5605   0053B8                     	endif
  5606   0053B8  0008               	tblrd		*
  5607   0053BA  50F5               	movf	tablat,w,c
  5608   0053BC  0A2F               	xorlw	47
  5609   0053BE  B4D8               	btfsc	status,2,c
  5610   0053C0  EFE4  F029         	goto	u18221
  5611   0053C4  EFE6  F029         	goto	u18220
  5612   0053C8                     u18221:
  5613   0053C8  EF15  F02A         	goto	l15174
  5614   0053CC                     u18220:
  5615   0053CC  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  5616   0053D2  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  5617   0053D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5618   0053D8  6AF8               	clrf	tblptru,c
  5619   0053DA                     	endif
  5620   0053DA                     	if	0	;tblptru may be non-zero
  5621   0053DA                     	endif
  5622   0053DA  0008               	tblrd		*
  5623   0053DC  50F5               	movf	tablat,w,c
  5624   0053DE  0A5C               	xorlw	92
  5625   0053E0  B4D8               	btfsc	status,2,c
  5626   0053E2  EFF5  F029         	goto	u18231
  5627   0053E6  EFF7  F029         	goto	u18230
  5628   0053EA                     u18231:
  5629   0053EA  EF15  F02A         	goto	l15174
  5630   0053EE                     u18230:
  5631   0053EE                     
  5632                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  5633   0053EE  0101               	movlb	1	; () banked
  5634   0053F0  EE20 F013          	lfsr	2,19
  5635   0053F4  513D               	movf	follow_path@fs& (0+255),w,b
  5636   0053F6  26D9               	addwf	fsr2l,f,c
  5637   0053F8  513E               	movf	(follow_path@fs+1)& (0+255),w,b
  5638   0053FA  22DA               	addwfc	fsr2h,f,c
  5639   0053FC  EE10 F006          	lfsr	1,6
  5640   005400  5133               	movf	follow_path@dp& (0+255),w,b
  5641   005402  26E1               	addwf	fsr1l,f,c
  5642   005404  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5643   005406  22E2               	addwfc	fsr1h,f,c
  5644   005408  006F FF7B FFE6     	movff	postinc2,postinc1
  5645   00540E  006F FF7B FFE6     	movff	postinc2,postinc1
  5646   005414  006F FF7B FFE6     	movff	postinc2,postinc1
  5647   00541A  006F FF7B FFE6     	movff	postinc2,postinc1
  5648                           
  5649                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  5650   005420  EF42  F02A         	goto	l15180
  5651   005424                     l15172:
  5652   005424  0101               	movlb	1	; () banked
  5653   005426  4B35               	infsnz	follow_path@path& (0+255),f,b
  5654   005428  2B36               	incf	(follow_path@path+1)& (0+255),f,b
  5655   00542A                     l15174:
  5656   00542A  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  5657   005430  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  5658   005436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5659   005436  6AF8               	clrf	tblptru,c
  5660   005438                     	endif
  5661   005438                     	if	0	;tblptru may be non-zero
  5662   005438                     	endif
  5663   005438  0008               	tblrd		*
  5664   00543A  50F5               	movf	tablat,w,c
  5665   00543C  0A2F               	xorlw	47
  5666   00543E  B4D8               	btfsc	status,2,c
  5667   005440  EF24  F02A         	goto	u18241
  5668   005444  EF26  F02A         	goto	u18240
  5669   005448                     u18241:
  5670   005448  EF12  F02A         	goto	l15172
  5671   00544C                     u18240:
  5672   00544C  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  5673   005452  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  5674   005458                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5675   005458  6AF8               	clrf	tblptru,c
  5676   00545A                     	endif
  5677   00545A                     	if	0	;tblptru may be non-zero
  5678   00545A                     	endif
  5679   00545A  0008               	tblrd		*
  5680   00545C  50F5               	movf	tablat,w,c
  5681   00545E  0A5C               	xorlw	92
  5682   005460  B4D8               	btfsc	status,2,c
  5683   005462  EF35  F02A         	goto	u18251
  5684   005466  EF37  F02A         	goto	u18250
  5685   00546A                     u18251:
  5686   00546A  EF12  F02A         	goto	l15172
  5687   00546E                     u18250:
  5688   00546E                     
  5689                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  5690   00546E  0101               	movlb	1	; () banked
  5691   005470  EE20 F006          	lfsr	2,6
  5692   005474  5133               	movf	follow_path@dp& (0+255),w,b
  5693   005476  26D9               	addwf	fsr2l,f,c
  5694   005478  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5695   00547A  22DA               	addwfc	fsr2h,f,c
  5696   00547C  6ADE               	clrf	postinc2,c
  5697   00547E  6ADE               	clrf	postinc2,c
  5698   005480  6ADE               	clrf	postinc2,c
  5699   005482  6ADD               	clrf	postdec2,c
  5700   005484                     l15180:
  5701                           
  5702                           ; BSR set to: 1
  5703                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  5704   005484  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  5705   00548A  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  5706   005490                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5707   005490  6AF8               	clrf	tblptru,c
  5708   005492                     	endif
  5709   005492                     	if	0	;tblptru may be non-zero
  5710   005492                     	endif
  5711   005492  0E20               	movlw	32
  5712   005494  0008               	tblrd		*
  5713   005496  60F5               	cpfslt	tablat,c
  5714   005498  EF50  F02A         	goto	u18261
  5715   00549C  EF52  F02A         	goto	u18260
  5716   0054A0                     u18261:
  5717   0054A0  EF6D  F02A         	goto	l15186
  5718   0054A4                     u18260:
  5719   0054A4                     
  5720                           ; BSR set to: 1
  5721                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  5722   0054A4  EE20 F027          	lfsr	2,39
  5723   0054A8  5133               	movf	follow_path@dp& (0+255),w,b
  5724   0054AA  26D9               	addwf	fsr2l,f,c
  5725   0054AC  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5726   0054AE  22DA               	addwfc	fsr2h,f,c
  5727   0054B0  0E80               	movlw	128
  5728   0054B2  6EDF               	movwf	indf2,c
  5729   0054B4                     
  5730                           ; BSR set to: 1
  5731                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  5732   0054B4  C133  F0ED         	movff	follow_path@dp,dir_sdi@dp
  5733   0054B8  C134  F0EE         	movff	follow_path@dp+1,dir_sdi@dp+1
  5734   0054BC  0E00               	movlw	0
  5735   0054BE  0100               	movlb	0	; () banked
  5736   0054C0  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  5737   0054C2  0E00               	movlw	0
  5738   0054C4  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  5739   0054C6  0E00               	movlw	0
  5740   0054C8  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  5741   0054CA  0E00               	movlw	0
  5742   0054CC  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  5743   0054CE  ECC8  F027         	call	_dir_sdi	;wreg free
  5744   0054D2  0101               	movlb	1	; () banked
  5745   0054D4  6F40               	movwf	follow_path@res& (0+255),b
  5746                           
  5747                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  5748   0054D6  EF21  F02B         	goto	l15220
  5749   0054DA                     l15186:
  5750                           
  5751                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  5752   0054DA  C133  F068         	movff	follow_path@dp,create_name@dp
  5753   0054DE  C134  F069         	movff	follow_path@dp+1,create_name@dp+1
  5754   0054E2  0E35               	movlw	low follow_path@path
  5755   0054E4  0100               	movlb	0	; () banked
  5756   0054E6  6F6A               	movwf	create_name@path& (0+255),b
  5757   0054E8  0E01               	movlw	high follow_path@path
  5758   0054EA  6F6B               	movwf	(create_name@path+1)& (0+255),b
  5759   0054EC  EC05  F01F         	call	_create_name	;wreg free
  5760   0054F0  0101               	movlb	1	; () banked
  5761   0054F2  6F40               	movwf	follow_path@res& (0+255),b
  5762   0054F4                     
  5763                           ; BSR set to: 1
  5764                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  5765   0054F4  5140               	movf	follow_path@res& (0+255),w,b
  5766   0054F6  B4D8               	btfsc	status,2,c
  5767   0054F8  EF80  F02A         	goto	u18271
  5768   0054FC  EF82  F02A         	goto	u18270
  5769   005500                     u18271:
  5770   005500  EF84  F02A         	goto	l15192
  5771   005504                     u18270:
  5772   005504  EF21  F02B         	goto	l15220
  5773   005508                     l15192:
  5774                           
  5775                           ; BSR set to: 1
  5776                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  5777   005508  C133  F12D         	movff	follow_path@dp,dir_find@dp
  5778   00550C  C134  F12E         	movff	follow_path@dp+1,dir_find@dp+1
  5779   005510  EC70  F032         	call	_dir_find	;wreg free
  5780   005514  0101               	movlb	1	; () banked
  5781   005516  6F40               	movwf	follow_path@res& (0+255),b
  5782   005518                     
  5783                           ; BSR set to: 1
  5784                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  5785   005518  EE20 F027          	lfsr	2,39
  5786   00551C  5133               	movf	follow_path@dp& (0+255),w,b
  5787   00551E  26D9               	addwf	fsr2l,f,c
  5788   005520  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5789   005522  22DA               	addwfc	fsr2h,f,c
  5790   005524  50DF               	movf	indf2,w,c
  5791   005526  6F3F               	movwf	follow_path@ns& (0+255),b
  5792   005528                     
  5793                           ; BSR set to: 1
  5794                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  5795   005528  5140               	movf	follow_path@res& (0+255),w,b
  5796   00552A  B4D8               	btfsc	status,2,c
  5797   00552C  EF9A  F02A         	goto	u18281
  5798   005530  EF9C  F02A         	goto	u18280
  5799   005534                     u18281:
  5800   005534  EFCC  F02A         	goto	l1173
  5801   005538                     u18280:
  5802   005538                     
  5803                           ; BSR set to: 1
  5804                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  5805   005538  0E04               	movlw	4
  5806   00553A  1940               	xorwf	follow_path@res& (0+255),w,b
  5807   00553C  A4D8               	btfss	status,2,c
  5808   00553E  EFA3  F02A         	goto	u18291
  5809   005542  EFA5  F02A         	goto	u18290
  5810   005546                     u18291:
  5811   005546  EF21  F02B         	goto	l15220
  5812   00554A                     u18290:
  5813   00554A                     
  5814                           ; BSR set to: 1
  5815   00554A  AB3F               	btfss	follow_path@ns& (0+255),5,b
  5816   00554C  EFAA  F02A         	goto	u18301
  5817   005550  EFAC  F02A         	goto	u18300
  5818   005554                     u18301:
  5819   005554  EFC1  F02A         	goto	l1175
  5820   005558                     u18300:
  5821   005558                     
  5822                           ; BSR set to: 1
  5823                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  5824   005558  B53F               	btfsc	follow_path@ns& (0+255),2,b
  5825   00555A  EFB1  F02A         	goto	u18311
  5826   00555E  EFB3  F02A         	goto	u18310
  5827   005562                     u18311:
  5828   005562  EFB5  F02A         	goto	l15206
  5829   005566                     u18310:
  5830   005566  EF6D  F02A         	goto	l15186
  5831   00556A                     l15206:
  5832                           
  5833                           ; BSR set to: 1
  5834                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  5835   00556A  EE20 F027          	lfsr	2,39
  5836   00556E  5133               	movf	follow_path@dp& (0+255),w,b
  5837   005570  26D9               	addwf	fsr2l,f,c
  5838   005572  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5839   005574  22DA               	addwfc	fsr2h,f,c
  5840   005576  0E80               	movlw	128
  5841   005578  6EDF               	movwf	indf2,c
  5842   00557A                     
  5843                           ; BSR set to: 1
  5844                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  5845   00557A  0E00               	movlw	0
  5846   00557C  6F40               	movwf	follow_path@res& (0+255),b
  5847                           
  5848                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  5849   00557E  EF21  F02B         	goto	l15220
  5850   005582                     l1175:
  5851                           
  5852                           ; BSR set to: 1
  5853                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  5854   005582  B53F               	btfsc	follow_path@ns& (0+255),2,b
  5855   005584  EFC6  F02A         	goto	u18321
  5856   005588  EFC8  F02A         	goto	u18320
  5857   00558C                     u18321:
  5858   00558C  EF21  F02B         	goto	l15220
  5859   005590                     u18320:
  5860   005590                     l15210:
  5861                           
  5862                           ; BSR set to: 1
  5863   005590  0E05               	movlw	5
  5864   005592  6F40               	movwf	follow_path@res& (0+255),b
  5865   005594  EF21  F02B         	goto	l15220
  5866   005598                     l1173:
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  5870   005598  A53F               	btfss	follow_path@ns& (0+255),2,b
  5871   00559A  EFD1  F02A         	goto	u18331
  5872   00559E  EFD3  F02A         	goto	u18330
  5873   0055A2                     u18331:
  5874   0055A2  EFD5  F02A         	goto	l15214
  5875   0055A6                     u18330:
  5876   0055A6  EF21  F02B         	goto	l15220
  5877   0055AA                     l15214:
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  5881   0055AA  EE20 F004          	lfsr	2,4
  5882   0055AE  5133               	movf	follow_path@dp& (0+255),w,b
  5883   0055B0  26D9               	addwf	fsr2l,f,c
  5884   0055B2  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5885   0055B4  22DA               	addwfc	fsr2h,f,c
  5886   0055B6  B8DF               	btfsc	indf2,4,c
  5887   0055B8  EFE0  F02A         	goto	u18341
  5888   0055BC  EFE2  F02A         	goto	u18340
  5889   0055C0                     u18341:
  5890   0055C0  EFE4  F02A         	goto	l15218
  5891   0055C4                     u18340:
  5892   0055C4  EFC8  F02A         	goto	l15210
  5893   0055C8                     l15218:
  5894                           
  5895                           ; BSR set to: 1
  5896                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  5897   0055C8  C13D  F067         	movff	follow_path@fs,ld_clust@fs
  5898   0055CC  C13E  F068         	movff	follow_path@fs+1,ld_clust@fs+1
  5899   0055D0  EE20 F00E          	lfsr	2,14
  5900   0055D4  5133               	movf	follow_path@dp& (0+255),w,b
  5901   0055D6  26D9               	addwf	fsr2l,f,c
  5902   0055D8  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5903   0055DA  22DA               	addwfc	fsr2h,f,c
  5904   0055DC  006F FF78  F137    	movff	postinc2,??_follow_path
  5905   0055E2  006F FF74  F138    	movff	postdec2,??_follow_path+1
  5906   0055E8  0EFF               	movlw	255
  5907   0055EA  1537               	andwf	??_follow_path& (0+255),w,b
  5908   0055EC  6F39               	movwf	(??_follow_path+2)& (0+255),b
  5909   0055EE  0E01               	movlw	1
  5910   0055F0  1538               	andwf	(??_follow_path+1)& (0+255),w,b
  5911   0055F2  6F3A               	movwf	(??_follow_path+3)& (0+255),b
  5912   0055F4  5139               	movf	(??_follow_path+2)& (0+255),w,b
  5913   0055F6  253D               	addwf	follow_path@fs& (0+255),w,b
  5914   0055F8  6F3B               	movwf	(??_follow_path+4)& (0+255),b
  5915   0055FA  513A               	movf	(??_follow_path+3)& (0+255),w,b
  5916   0055FC  213E               	addwfc	(follow_path@fs+1)& (0+255),w,b
  5917   0055FE  6F3C               	movwf	(??_follow_path+5)& (0+255),b
  5918   005600  0E33               	movlw	51
  5919   005602  253B               	addwf	(??_follow_path+4)& (0+255),w,b
  5920   005604  0100               	movlb	0	; () banked
  5921   005606  6F69               	movwf	ld_clust@dir& (0+255),b
  5922   005608  0E00               	movlw	0
  5923   00560A  0101               	movlb	1	; () banked
  5924   00560C  213C               	addwfc	(??_follow_path+5)& (0+255),w,b
  5925   00560E  0100               	movlb	0	; () banked
  5926   005610  6F6A               	movwf	(ld_clust@dir+1)& (0+255),b
  5927   005612  ECE2  F03F         	call	_ld_clust	;wreg free
  5928   005616  0101               	movlb	1	; () banked
  5929   005618  EE20 F006          	lfsr	2,6
  5930   00561C  5133               	movf	follow_path@dp& (0+255),w,b
  5931   00561E  26D9               	addwf	fsr2l,f,c
  5932   005620  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  5933   005622  22DA               	addwfc	fsr2h,f,c
  5934   005624  0100               	movlb	0	; () banked
  5935   005626  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  5936   00562C  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  5937   005632  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  5938   005638  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  5939   00563E  EF6D  F02A         	goto	l15186
  5940   005642                     l15220:
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  5944   005642  5140               	movf	follow_path@res& (0+255),w,b
  5945   005644                     
  5946                           ; BSR set to: 1
  5947   005644  0012               	return		;funcret
  5948   005646                     __end_of_follow_path:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function _ld_clust *****************
  5952 ;; Defined at:
  5953 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  fs              2    7[BANK0 ] PTR struct .
  5956 ;;		 -> FatFs(563), NULL(0), 
  5957 ;;  dir             2    9[BANK0 ] PTR const unsigned char 
  5958 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  cl              4   15[BANK0 ] unsigned long 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  4    7[BANK0 ] unsigned long 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:       12 bytes
  5975 ;; Hardware stack levels used: 1
  5976 ;; Hardware stack levels required when called: 6
  5977 ;; This function calls:
  5978 ;;		_ld_word
  5979 ;; This function is called by:
  5980 ;;		_follow_path
  5981 ;;		_f_open
  5982 ;;		_f_chdir
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text10
  5987   007FC4                     __ptext10:
  5988                           	callstack 0
  5989   007FC4                     _ld_clust:
  5990                           	callstack 22
  5991   007FC4                     
  5992                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  5993   007FC4  0E1A               	movlw	26
  5994   007FC6  0100               	movlb	0	; () banked
  5995   007FC8  2569               	addwf	ld_clust@dir& (0+255),w,b
  5996   007FCA  6F60               	movwf	ld_word@ptr& (0+255),b
  5997   007FCC  0E00               	movlw	0
  5998   007FCE  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  5999   007FD0  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  6000   007FD2  ECB5  F044         	call	_ld_word	;wreg free
  6001   007FD6  0100               	movlb	0	; () banked
  6002   007FD8  C060  F06F         	movff	?_ld_word,ld_clust@cl
  6003   007FDC  C061  F070         	movff	?_ld_word+1,ld_clust@cl+1
  6004   007FE0  6B71               	clrf	(ld_clust@cl+2)& (0+255),b
  6005   007FE2  6B72               	clrf	(ld_clust@cl+3)& (0+255),b
  6006   007FE4                     
  6007                           ; BSR set to: 0
  6008                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  6009   007FE4  0060  F19F  FFD9   	movff	ld_clust@fs,fsr2l
  6010   007FEA  0060  F1A3  FFDA   	movff	ld_clust@fs+1,fsr2h
  6011   007FF0  0E03               	movlw	3
  6012   007FF2  18DE               	xorwf	postinc2,w,c
  6013   007FF4  A4D8               	btfss	status,2,c
  6014   007FF6  EFFF  F03F         	goto	u17521
  6015   007FFA  EF01  F040         	goto	u17520
  6016   007FFE                     u17521:
  6017   007FFE  EF1E  F040         	goto	l14762
  6018   008002                     u17520:
  6019   008002                     
  6020                           ; BSR set to: 0
  6021                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  6022   008002  0E14               	movlw	20
  6023   008004  2569               	addwf	ld_clust@dir& (0+255),w,b
  6024   008006  6F60               	movwf	ld_word@ptr& (0+255),b
  6025   008008  0E00               	movlw	0
  6026   00800A  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  6027   00800C  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  6028   00800E  ECB5  F044         	call	_ld_word	;wreg free
  6029   008012  0100               	movlb	0	; () banked
  6030   008014  5160               	movf	?_ld_word& (0+255),w,b
  6031   008016  6F6B               	movwf	??_ld_clust& (0+255),b
  6032   008018  5161               	movf	(?_ld_word+1)& (0+255),w,b
  6033   00801A  6F6C               	movwf	(??_ld_clust+1)& (0+255),b
  6034   00801C  6B6D               	clrf	(??_ld_clust+2)& (0+255),b
  6035   00801E  6B6E               	clrf	(??_ld_clust+3)& (0+255),b
  6036   008020  C06C  F06E         	movff	??_ld_clust+1,??_ld_clust+3
  6037   008024  C06B  F06D         	movff	??_ld_clust,??_ld_clust+2
  6038   008028  6B6C               	clrf	(??_ld_clust+1)& (0+255),b
  6039   00802A  6B6B               	clrf	??_ld_clust& (0+255),b
  6040   00802C  516B               	movf	??_ld_clust& (0+255),w,b
  6041   00802E  136F               	iorwf	ld_clust@cl& (0+255),f,b
  6042   008030  516C               	movf	(??_ld_clust+1)& (0+255),w,b
  6043   008032  1370               	iorwf	(ld_clust@cl+1)& (0+255),f,b
  6044   008034  516D               	movf	(??_ld_clust+2)& (0+255),w,b
  6045   008036  1371               	iorwf	(ld_clust@cl+2)& (0+255),f,b
  6046   008038  516E               	movf	(??_ld_clust+3)& (0+255),w,b
  6047   00803A  1372               	iorwf	(ld_clust@cl+3)& (0+255),f,b
  6048   00803C                     l14762:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  6052   00803C  C06F  F067         	movff	ld_clust@cl,?_ld_clust
  6053   008040  C070  F068         	movff	ld_clust@cl+1,?_ld_clust+1
  6054   008044  C071  F069         	movff	ld_clust@cl+2,?_ld_clust+2
  6055   008048  C072  F06A         	movff	ld_clust@cl+3,?_ld_clust+3
  6056   00804C                     
  6057                           ; BSR set to: 0
  6058   00804C  0012               	return		;funcret
  6059   00804E                     __end_of_ld_clust:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _dir_find *****************
  6063 ;; Defined at:
  6064 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  dp              2   45[BANK1 ] PTR struct .
  6067 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  fs              2   47[BANK1 ] PTR struct .
  6070 ;;		 -> FatFs(563), NULL(0), 
  6071 ;;  res             1   50[BANK1 ] enum E68
  6072 ;;  c               1   49[BANK1 ] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      enum E68
  6075 ;; Registers used:
  6076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6082 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;Total ram usage:        8 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 15
  6089 ;; This function calls:
  6090 ;;		_dir_next
  6091 ;;		_dir_sdi
  6092 ;;		_mem_cmp
  6093 ;;		_move_window
  6094 ;; This function is called by:
  6095 ;;		_follow_path
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text11
  6100   0064E0                     __ptext11:
  6101                           	callstack 0
  6102   0064E0                     _dir_find:
  6103                           	callstack 12
  6104   0064E0                     
  6105                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  6106   0064E0  0060  F4B7  FFD9   	movff	dir_find@dp,fsr2l
  6107   0064E6  0060  F4BB  FFDA   	movff	dir_find@dp+1,fsr2h
  6108   0064EC  006F FF78  F12F    	movff	postinc2,dir_find@fs
  6109   0064F2  006F FF74  F130    	movff	postdec2,dir_find@fs+1
  6110   0064F8                     
  6111                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  6112   0064F8  C12D  F0ED         	movff	dir_find@dp,dir_sdi@dp
  6113   0064FC  C12E  F0EE         	movff	dir_find@dp+1,dir_sdi@dp+1
  6114   006500  0E00               	movlw	0
  6115   006502  0100               	movlb	0	; () banked
  6116   006504  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  6117   006506  0E00               	movlw	0
  6118   006508  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  6119   00650A  0E00               	movlw	0
  6120   00650C  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  6121   00650E  0E00               	movlw	0
  6122   006510  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  6123   006512  ECC8  F027         	call	_dir_sdi	;wreg free
  6124   006516  0101               	movlb	1	; () banked
  6125   006518  6F32               	movwf	dir_find@res& (0+255),b
  6126   00651A                     
  6127                           ; BSR set to: 1
  6128                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  6129   00651A  5132               	movf	dir_find@res& (0+255),w,b
  6130   00651C  B4D8               	btfsc	status,2,c
  6131   00651E  EF93  F032         	goto	u17541
  6132   006522  EF95  F032         	goto	u17540
  6133   006526                     u17541:
  6134   006526  EF99  F032         	goto	l14782
  6135   00652A                     u17540:
  6136   00652A                     l14778:
  6137   00652A  0101               	movlb	1	; () banked
  6138   00652C  5132               	movf	dir_find@res& (0+255),w,b
  6139   00652E  EF43  F033         	goto	l1106
  6140   006532                     l14782:
  6141                           
  6142                           ; BSR set to: 1
  6143                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  6144   006532  C12F  F0C8         	movff	dir_find@fs,move_window@fs
  6145   006536  C130  F0C9         	movff	dir_find@fs+1,move_window@fs+1
  6146   00653A  EE20 F016          	lfsr	2,22
  6147   00653E  512D               	movf	dir_find@dp& (0+255),w,b
  6148   006540  26D9               	addwf	fsr2l,f,c
  6149   006542  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6150   006544  22DA               	addwfc	fsr2h,f,c
  6151   006546  006F FF78  F0CA    	movff	postinc2,move_window@sector
  6152   00654C  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  6153   006552  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  6154   006558  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  6155   00655E  ECBF  F03D         	call	_move_window	;wreg free
  6156   006562  0101               	movlb	1	; () banked
  6157   006564  6F32               	movwf	dir_find@res& (0+255),b
  6158   006566                     
  6159                           ; BSR set to: 1
  6160                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  6161   006566  5132               	movf	dir_find@res& (0+255),w,b
  6162   006568  B4D8               	btfsc	status,2,c
  6163   00656A  EFB9  F032         	goto	u17551
  6164   00656E  EFBB  F032         	goto	u17550
  6165   006572                     u17551:
  6166   006572  EFBD  F032         	goto	l14788
  6167   006576                     u17550:
  6168   006576  EF95  F032         	goto	l14778
  6169   00657A                     l14788:
  6170                           
  6171                           ; BSR set to: 1
  6172                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  6173   00657A  EE20 F01A          	lfsr	2,26
  6174   00657E  512D               	movf	dir_find@dp& (0+255),w,b
  6175   006580  26D9               	addwf	fsr2l,f,c
  6176   006582  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6177   006584  22DA               	addwfc	fsr2h,f,c
  6178   006586  006F FF78  F0FE    	movff	postinc2,??_dir_find
  6179   00658C  006F FF74  F0FF    	movff	postdec2,??_dir_find+1
  6180   006592  0060  F3FB  FFD9   	movff	??_dir_find,fsr2l
  6181   006598  0060  F3FF  FFDA   	movff	??_dir_find+1,fsr2h
  6182   00659E  50DF               	movf	indf2,w,c
  6183   0065A0  6F31               	movwf	dir_find@c& (0+255),b
  6184   0065A2                     
  6185                           ; BSR set to: 1
  6186                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  6187   0065A2  5131               	movf	dir_find@c& (0+255),w,b
  6188   0065A4  A4D8               	btfss	status,2,c
  6189   0065A6  EFD7  F032         	goto	u17561
  6190   0065AA  EFD9  F032         	goto	u17560
  6191   0065AE                     u17561:
  6192   0065AE  EFDD  F032         	goto	l14794
  6193   0065B2                     u17560:
  6194   0065B2                     
  6195                           ; BSR set to: 1
  6196   0065B2  0E04               	movlw	4
  6197   0065B4  6F32               	movwf	dir_find@res& (0+255),b
  6198   0065B6  EF95  F032         	goto	l14778
  6199   0065BA                     l14794:
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  6203   0065BA  EE20 F004          	lfsr	2,4
  6204   0065BE  512D               	movf	dir_find@dp& (0+255),w,b
  6205   0065C0  26D9               	addwf	fsr2l,f,c
  6206   0065C2  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6207   0065C4  22DA               	addwfc	fsr2h,f,c
  6208   0065C6  EE10 F01A          	lfsr	1,26
  6209   0065CA  512D               	movf	dir_find@dp& (0+255),w,b
  6210   0065CC  26E1               	addwf	fsr1l,f,c
  6211   0065CE  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6212   0065D0  22E2               	addwfc	fsr1h,f,c
  6213   0065D2  EE00 F00B          	lfsr	0,11
  6214   0065D6  50E6               	movf	postinc1,w,c
  6215   0065D8  26E9               	addwf	fsr0l,f,c
  6216   0065DA  50E5               	movf	postdec1,w,c
  6217   0065DC  22EA               	addwfc	fsr0h,f,c
  6218   0065DE  50EF               	movf	indf0,w,c
  6219   0065E0  0B3F               	andlw	63
  6220   0065E2  6EDF               	movwf	indf2,c
  6221   0065E4                     
  6222                           ; BSR set to: 1
  6223                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  6224   0065E4  EE20 F01A          	lfsr	2,26
  6225   0065E8  512D               	movf	dir_find@dp& (0+255),w,b
  6226   0065EA  26D9               	addwf	fsr2l,f,c
  6227   0065EC  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6228   0065EE  22DA               	addwfc	fsr2h,f,c
  6229   0065F0  EE10 F00B          	lfsr	1,11
  6230   0065F4  50DE               	movf	postinc2,w,c
  6231   0065F6  26E1               	addwf	fsr1l,f,c
  6232   0065F8  50DD               	movf	postdec2,w,c
  6233   0065FA  22E2               	addwfc	fsr1h,f,c
  6234   0065FC  B6E7               	btfsc	indf1,3,c
  6235   0065FE  EF03  F033         	goto	u17571
  6236   006602  EF05  F033         	goto	u17570
  6237   006606                     u17571:
  6238   006606  EF2C  F033         	goto	l14802
  6239   00660A                     u17570:
  6240   00660A                     
  6241                           ; BSR set to: 1
  6242   00660A  EE20 F01A          	lfsr	2,26
  6243   00660E  512D               	movf	dir_find@dp& (0+255),w,b
  6244   006610  26D9               	addwf	fsr2l,f,c
  6245   006612  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  6246   006614  22DA               	addwfc	fsr2h,f,c
  6247   006616  006F FF78  F060    	movff	postinc2,mem_cmp@dst
  6248   00661C  006F FF74  F061    	movff	postdec2,mem_cmp@dst+1
  6249   006622  0E1C               	movlw	28
  6250   006624  252D               	addwf	dir_find@dp& (0+255),w,b
  6251   006626  0100               	movlb	0	; () banked
  6252   006628  6F62               	movwf	mem_cmp@src& (0+255),b
  6253   00662A  0E00               	movlw	0
  6254   00662C  0101               	movlb	1	; () banked
  6255   00662E  212E               	addwfc	(dir_find@dp+1)& (0+255),w,b
  6256   006630  0100               	movlb	0	; () banked
  6257   006632  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
  6258   006634  0E00               	movlw	0
  6259   006636  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
  6260   006638  0E0B               	movlw	11
  6261   00663A  6F64               	movwf	mem_cmp@cnt& (0+255),b
  6262   00663C  EC96  F03F         	call	_mem_cmp	;wreg free
  6263   006640  0100               	movlb	0	; () banked
  6264   006642  5160               	movf	?_mem_cmp& (0+255),w,b
  6265   006644  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
  6266   006646  A4D8               	btfss	status,2,c
  6267   006648  EF28  F033         	goto	u17581
  6268   00664C  EF2A  F033         	goto	u17580
  6269   006650                     u17581:
  6270   006650  EF2C  F033         	goto	l14802
  6271   006654                     u17580:
  6272   006654  EF95  F032         	goto	l14778
  6273   006658                     l14802:
  6274                           
  6275                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  6276   006658  C12D  F0FA         	movff	dir_find@dp,dir_next@dp
  6277   00665C  C12E  F0FB         	movff	dir_find@dp+1,dir_next@dp+1
  6278   006660  0E00               	movlw	0
  6279   006662  0100               	movlb	0	; () banked
  6280   006664  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  6281   006666  0E00               	movlw	0
  6282   006668  6FFC               	movwf	dir_next@stretch& (0+255),b
  6283   00666A  EC5A  F021         	call	_dir_next	;wreg free
  6284   00666E  0101               	movlb	1	; () banked
  6285   006670  6F32               	movwf	dir_find@res& (0+255),b
  6286   006672                     
  6287                           ; BSR set to: 1
  6288                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  6289   006672  5132               	movf	dir_find@res& (0+255),w,b
  6290   006674  B4D8               	btfsc	status,2,c
  6291   006676  EF3F  F033         	goto	u17591
  6292   00667A  EF41  F033         	goto	u17590
  6293   00667E                     u17591:
  6294   00667E  EF99  F032         	goto	l14782
  6295   006682                     u17590:
  6296   006682  EF95  F032         	goto	l14778
  6297   006686                     l1106:
  6298                           
  6299                           ; BSR set to: 1
  6300   006686  0012               	return		;funcret
  6301   006688                     __end_of_dir_find:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _create_name *****************
  6305 ;; Defined at:
  6306 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  dp              2    8[BANK0 ] PTR struct .
  6309 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  6310 ;;  path            2   10[BANK0 ] PTR PTR const unsigned c
  6311 ;;		 -> follow_path@path(2), 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  si              2   27[BANK0 ] unsigned int 
  6314 ;;  sfn             2   25[BANK0 ] PTR unsigned char 
  6315 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
  6316 ;;  i               2   23[BANK0 ] unsigned int 
  6317 ;;  p               2   21[BANK0 ] PTR const unsigned char 
  6318 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
  6319 ;;  ni              2   19[BANK0 ] unsigned int 
  6320 ;;  c               1   29[BANK0 ] unsigned char 
  6321 ;;  d               1   18[BANK0 ] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      enum E68
  6324 ;; Registers used:
  6325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;Total ram usage:       22 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 6
  6338 ;; This function calls:
  6339 ;;		_chk_chr
  6340 ;;		_dbc_1st
  6341 ;;		_dbc_2nd
  6342 ;;		_mem_set
  6343 ;; This function is called by:
  6344 ;;		_follow_path
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text12
  6349   003E0A                     __ptext12:
  6350                           	callstack 0
  6351   003E0A                     _create_name:
  6352                           	callstack 21
  6353   003E0A                     
  6354                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  6355   003E0A  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  6356   003E10  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  6357   003E16  006F FF78  F075    	movff	postinc2,create_name@p
  6358   003E1C  006F FF74  F076    	movff	postdec2,create_name@p+1
  6359   003E22  0E1C               	movlw	28
  6360   003E24  0100               	movlb	0	; () banked
  6361   003E26  2568               	addwf	create_name@dp& (0+255),w,b
  6362   003E28  6F79               	movwf	create_name@sfn& (0+255),b
  6363   003E2A  0E00               	movlw	0
  6364   003E2C  2169               	addwfc	(create_name@dp+1)& (0+255),w,b
  6365   003E2E  6F7A               	movwf	(create_name@sfn+1)& (0+255),b
  6366   003E30                     
  6367                           ; BSR set to: 0
  6368                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  6369   003E30  C079  F060         	movff	create_name@sfn,mem_set@dst
  6370   003E34  C07A  F061         	movff	create_name@sfn+1,mem_set@dst+1
  6371   003E38  0E00               	movlw	0
  6372   003E3A  6F63               	movwf	(mem_set@val+1)& (0+255),b
  6373   003E3C  0E20               	movlw	32
  6374   003E3E  6F62               	movwf	mem_set@val& (0+255),b
  6375   003E40  0E00               	movlw	0
  6376   003E42  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  6377   003E44  0E0B               	movlw	11
  6378   003E46  6F64               	movwf	mem_set@cnt& (0+255),b
  6379   003E48  ECF2  F044         	call	_mem_set	;wreg free
  6380   003E4C                     
  6381                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  6382   003E4C  0E00               	movlw	0
  6383   003E4E  0100               	movlb	0	; () banked
  6384   003E50  6F78               	movwf	(create_name@i+1)& (0+255),b
  6385   003E52  0E00               	movlw	0
  6386   003E54  6F77               	movwf	create_name@i& (0+255),b
  6387   003E56  C077  F07B         	movff	create_name@i,create_name@si
  6388   003E5A  C078  F07C         	movff	create_name@i+1,create_name@si+1
  6389   003E5E                     
  6390                           ; BSR set to: 0
  6391   003E5E  0E00               	movlw	0
  6392   003E60  6F74               	movwf	(create_name@ni+1)& (0+255),b
  6393   003E62  0E08               	movlw	8
  6394   003E64  6F73               	movwf	create_name@ni& (0+255),b
  6395   003E66                     
  6396                           ; BSR set to: 0
  6397                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  6398   003E66  517B               	movf	create_name@si& (0+255),w,b
  6399   003E68  2575               	addwf	create_name@p& (0+255),w,b
  6400   003E6A  6F6C               	movwf	??_create_name& (0+255),b
  6401   003E6C  517C               	movf	(create_name@si+1)& (0+255),w,b
  6402   003E6E  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6403   003E70  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6404   003E72  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6405   003E78  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6406   003E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6407   003E7E  6AF8               	clrf	tblptru,c
  6408   003E80                     	endif
  6409   003E80                     	if	0	;tblptru may be non-zero
  6410   003E80                     	endif
  6411   003E80  0008               	tblrd		*
  6412   003E82  50F5               	movf	tablat,w,c
  6413   003E84  0A2E               	xorlw	46
  6414   003E86  A4D8               	btfss	status,2,c
  6415   003E88  EF48  F01F         	goto	u17601
  6416   003E8C  EF4A  F01F         	goto	u17600
  6417   003E90                     u17601:
  6418   003E90  EFCD  F01F         	goto	l14858
  6419   003E94                     u17600:
  6420   003E94                     l14822:
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  6424   003E94  517B               	movf	create_name@si& (0+255),w,b
  6425   003E96  2575               	addwf	create_name@p& (0+255),w,b
  6426   003E98  6F6C               	movwf	??_create_name& (0+255),b
  6427   003E9A  517C               	movf	(create_name@si+1)& (0+255),w,b
  6428   003E9C  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6429   003E9E  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6430   003EA0  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6431   003EA6  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6432   003EAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6433   003EAC  6AF8               	clrf	tblptru,c
  6434   003EAE                     	endif
  6435   003EAE                     	if	0	;tblptru may be non-zero
  6436   003EAE                     	endif
  6437   003EAE  0008               	tblrd		*
  6438   003EB0  006F FFD4  F07D    	movff	tablat,create_name@c
  6439   003EB6                     
  6440                           ; BSR set to: 0
  6441   003EB6  4B7B               	infsnz	create_name@si& (0+255),f,b
  6442   003EB8  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  6443   003EBA                     
  6444                           ; BSR set to: 0
  6445                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  6446   003EBA  0E2E               	movlw	46
  6447   003EBC  197D               	xorwf	create_name@c& (0+255),w,b
  6448   003EBE  A4D8               	btfss	status,2,c
  6449   003EC0  EF64  F01F         	goto	u17611
  6450   003EC4  EF66  F01F         	goto	u17610
  6451   003EC8                     u17611:
  6452   003EC8  EF80  F01F         	goto	l14834
  6453   003ECC                     u17610:
  6454   003ECC                     
  6455                           ; BSR set to: 0
  6456   003ECC  517C               	movf	(create_name@si+1)& (0+255),w,b
  6457   003ECE  E109               	bnz	u17620
  6458   003ED0  0E03               	movlw	3
  6459   003ED2  5D7B               	subwf	create_name@si& (0+255),w,b
  6460   003ED4  A0D8               	btfss	status,0,c
  6461   003ED6  EF6F  F01F         	goto	u17621
  6462   003EDA  EF71  F01F         	goto	u17620
  6463   003EDE                     u17621:
  6464   003EDE  EF73  F01F         	goto	l14830
  6465   003EE2                     u17620:
  6466   003EE2  EF80  F01F         	goto	l14834
  6467   003EE6                     l14830:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  6471   003EE6  5177               	movf	create_name@i& (0+255),w,b
  6472   003EE8  2579               	addwf	create_name@sfn& (0+255),w,b
  6473   003EEA  6ED9               	movwf	fsr2l,c
  6474   003EEC  5178               	movf	(create_name@i+1)& (0+255),w,b
  6475   003EEE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  6476   003EF0  6EDA               	movwf	fsr2h,c
  6477   003EF2  0060  F1F7  FFDF   	movff	create_name@c,indf2
  6478   003EF8                     
  6479                           ; BSR set to: 0
  6480   003EF8  4B77               	infsnz	create_name@i& (0+255),f,b
  6481   003EFA  2B78               	incf	(create_name@i+1)& (0+255),f,b
  6482                           
  6483                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  6484   003EFC  EF4A  F01F         	goto	l14822
  6485   003F00                     l14834:
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  6489   003F00  0E2F               	movlw	47
  6490   003F02  197D               	xorwf	create_name@c& (0+255),w,b
  6491   003F04  B4D8               	btfsc	status,2,c
  6492   003F06  EF87  F01F         	goto	u17631
  6493   003F0A  EF89  F01F         	goto	u17630
  6494   003F0E                     u17631:
  6495   003F0E  EF9D  F01F         	goto	l14844
  6496   003F12                     u17630:
  6497   003F12                     
  6498                           ; BSR set to: 0
  6499   003F12  0E5C               	movlw	92
  6500   003F14  197D               	xorwf	create_name@c& (0+255),w,b
  6501   003F16  B4D8               	btfsc	status,2,c
  6502   003F18  EF90  F01F         	goto	u17641
  6503   003F1C  EF92  F01F         	goto	u17640
  6504   003F20                     u17641:
  6505   003F20  EF9D  F01F         	goto	l14844
  6506   003F24                     u17640:
  6507   003F24                     
  6508                           ; BSR set to: 0
  6509   003F24  0E20               	movlw	32
  6510   003F26  657D               	cpfsgt	create_name@c& (0+255),b
  6511   003F28  EF98  F01F         	goto	u17651
  6512   003F2C  EF9A  F01F         	goto	u17650
  6513   003F30                     u17651:
  6514   003F30  EF9D  F01F         	goto	l14844
  6515   003F34                     u17650:
  6516   003F34                     l14840:
  6517                           
  6518                           ; BSR set to: 0
  6519   003F34  0E06               	movlw	6
  6520   003F36  EF59  F021         	goto	l1126
  6521   003F3A                     l14844:
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  6525   003F3A  517B               	movf	create_name@si& (0+255),w,b
  6526   003F3C  2575               	addwf	create_name@p& (0+255),w,b
  6527   003F3E  6F6C               	movwf	??_create_name& (0+255),b
  6528   003F40  517C               	movf	(create_name@si+1)& (0+255),w,b
  6529   003F42  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6530   003F44  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6531   003F46  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  6532   003F4C  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  6533   003F52  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  6534   003F58  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  6535   003F5E                     
  6536                           ; BSR set to: 0
  6537                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  6538   003F5E  0E20               	movlw	32
  6539   003F60  657D               	cpfsgt	create_name@c& (0+255),b
  6540   003F62  EFB5  F01F         	goto	u17661
  6541   003F66  EFB7  F01F         	goto	u17660
  6542   003F6A                     u17661:
  6543   003F6A  EFBD  F01F         	goto	l14850
  6544   003F6E                     u17660:
  6545   003F6E                     
  6546                           ; BSR set to: 0
  6547   003F6E  0E00               	movlw	0
  6548   003F70  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  6549   003F72  0E20               	movlw	32
  6550   003F74  6F6E               	movwf	_create_name$2961& (0+255),b
  6551   003F76  EFC1  F01F         	goto	l14852
  6552   003F7A                     l14850:
  6553                           
  6554                           ; BSR set to: 0
  6555   003F7A  0E00               	movlw	0
  6556   003F7C  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  6557   003F7E  0E24               	movlw	36
  6558   003F80  6F6E               	movwf	_create_name$2961& (0+255),b
  6559   003F82                     l14852:
  6560                           
  6561                           ; BSR set to: 0
  6562   003F82  EE20 F00B          	lfsr	2,11
  6563   003F86  5179               	movf	create_name@sfn& (0+255),w,b
  6564   003F88  26D9               	addwf	fsr2l,f,c
  6565   003F8A  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  6566   003F8C  22DA               	addwfc	fsr2h,f,c
  6567   003F8E  0060  F1BB  FFDF   	movff	_create_name$2961,indf2
  6568   003F94                     l14854:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  6572   003F94  0E00               	movlw	0
  6573   003F96  EF59  F021         	goto	l1126
  6574   003F9A                     l14858:
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  6578   003F9A  517B               	movf	create_name@si& (0+255),w,b
  6579   003F9C  2575               	addwf	create_name@p& (0+255),w,b
  6580   003F9E  6F6C               	movwf	??_create_name& (0+255),b
  6581   003FA0  517C               	movf	(create_name@si+1)& (0+255),w,b
  6582   003FA2  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6583   003FA4  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6584   003FA6  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6585   003FAC  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6586   003FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6587   003FB2  6AF8               	clrf	tblptru,c
  6588   003FB4                     	endif
  6589   003FB4                     	if	0	;tblptru may be non-zero
  6590   003FB4                     	endif
  6591   003FB4  0008               	tblrd		*
  6592   003FB6  006F FFD4  F07D    	movff	tablat,create_name@c
  6593   003FBC                     
  6594                           ; BSR set to: 0
  6595   003FBC  4B7B               	infsnz	create_name@si& (0+255),f,b
  6596   003FBE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  6597   003FC0                     
  6598                           ; BSR set to: 0
  6599                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  6600   003FC0  0E21               	movlw	33
  6601   003FC2  617D               	cpfslt	create_name@c& (0+255),b
  6602   003FC4  EFE6  F01F         	goto	u17671
  6603   003FC8  EFE8  F01F         	goto	u17670
  6604   003FCC                     u17671:
  6605   003FCC  EFEA  F01F         	goto	l14866
  6606   003FD0                     u17670:
  6607   003FD0  EF08  F021         	goto	l14930
  6608   003FD4                     l14866:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  6612   003FD4  0E2F               	movlw	47
  6613   003FD6  197D               	xorwf	create_name@c& (0+255),w,b
  6614   003FD8  B4D8               	btfsc	status,2,c
  6615   003FDA  EFF1  F01F         	goto	u17681
  6616   003FDE  EFF3  F01F         	goto	u17680
  6617   003FE2                     u17681:
  6618   003FE2  EF00  F020         	goto	l14872
  6619   003FE6                     u17680:
  6620   003FE6                     
  6621                           ; BSR set to: 0
  6622   003FE6  0E5C               	movlw	92
  6623   003FE8  197D               	xorwf	create_name@c& (0+255),w,b
  6624   003FEA  A4D8               	btfss	status,2,c
  6625   003FEC  EFFA  F01F         	goto	u17691
  6626   003FF0  EFFC  F01F         	goto	u17690
  6627   003FF4                     u17691:
  6628   003FF4  EF30  F020         	goto	l14876
  6629   003FF8                     u17690:
  6630   003FF8  EF00  F020         	goto	l14872
  6631   003FFC                     l14870:
  6632                           
  6633                           ; BSR set to: 0
  6634   003FFC  4B7B               	infsnz	create_name@si& (0+255),f,b
  6635   003FFE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  6636   004000                     l14872:
  6637                           
  6638                           ; BSR set to: 0
  6639   004000  517B               	movf	create_name@si& (0+255),w,b
  6640   004002  2575               	addwf	create_name@p& (0+255),w,b
  6641   004004  6F6C               	movwf	??_create_name& (0+255),b
  6642   004006  517C               	movf	(create_name@si+1)& (0+255),w,b
  6643   004008  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6644   00400A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6645   00400C  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6646   004012  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6647   004018                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6648   004018  6AF8               	clrf	tblptru,c
  6649   00401A                     	endif
  6650   00401A                     	if	0	;tblptru may be non-zero
  6651   00401A                     	endif
  6652   00401A  0008               	tblrd		*
  6653   00401C  50F5               	movf	tablat,w,c
  6654   00401E  0A2F               	xorlw	47
  6655   004020  B4D8               	btfsc	status,2,c
  6656   004022  EF15  F020         	goto	u17701
  6657   004026  EF17  F020         	goto	u17700
  6658   00402A                     u17701:
  6659   00402A  EFFE  F01F         	goto	l14870
  6660   00402E                     u17700:
  6661   00402E                     
  6662                           ; BSR set to: 0
  6663   00402E  517B               	movf	create_name@si& (0+255),w,b
  6664   004030  2575               	addwf	create_name@p& (0+255),w,b
  6665   004032  6F6C               	movwf	??_create_name& (0+255),b
  6666   004034  517C               	movf	(create_name@si+1)& (0+255),w,b
  6667   004036  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6668   004038  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6669   00403A  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6670   004040  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6671   004046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6672   004046  6AF8               	clrf	tblptru,c
  6673   004048                     	endif
  6674   004048                     	if	0	;tblptru may be non-zero
  6675   004048                     	endif
  6676   004048  0008               	tblrd		*
  6677   00404A  50F5               	movf	tablat,w,c
  6678   00404C  0A5C               	xorlw	92
  6679   00404E  B4D8               	btfsc	status,2,c
  6680   004050  EF2C  F020         	goto	u17711
  6681   004054  EF2E  F020         	goto	u17710
  6682   004058                     u17711:
  6683   004058  EFFE  F01F         	goto	l14870
  6684   00405C                     u17710:
  6685   00405C  EF08  F021         	goto	l14930
  6686   004060                     l14876:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  6690   004060  0E2E               	movlw	46
  6691   004062  197D               	xorwf	create_name@c& (0+255),w,b
  6692   004064  B4D8               	btfsc	status,2,c
  6693   004066  EF37  F020         	goto	u17721
  6694   00406A  EF39  F020         	goto	u17720
  6695   00406E                     u17721:
  6696   00406E  EF44  F020         	goto	l14880
  6697   004072                     u17720:
  6698   004072                     
  6699                           ; BSR set to: 0
  6700   004072  5173               	movf	create_name@ni& (0+255),w,b
  6701   004074  5D77               	subwf	create_name@i& (0+255),w,b
  6702   004076  5174               	movf	(create_name@ni+1)& (0+255),w,b
  6703   004078  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  6704   00407A  A0D8               	btfss	status,0,c
  6705   00407C  EF42  F020         	goto	u17731
  6706   004080  EF44  F020         	goto	u17730
  6707   004084                     u17731:
  6708   004084  EF63  F020         	goto	l14890
  6709   004088                     u17730:
  6710   004088                     l14880:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  6714   004088  0E0B               	movlw	11
  6715   00408A  1973               	xorwf	create_name@ni& (0+255),w,b
  6716   00408C  1174               	iorwf	(create_name@ni+1)& (0+255),w,b
  6717   00408E  B4D8               	btfsc	status,2,c
  6718   004090  EF4C  F020         	goto	u17741
  6719   004094  EF4E  F020         	goto	u17740
  6720   004098                     u17741:
  6721   004098  EF9A  F01F         	goto	l14840
  6722   00409C                     u17740:
  6723   00409C                     
  6724                           ; BSR set to: 0
  6725   00409C  0E2E               	movlw	46
  6726   00409E  197D               	xorwf	create_name@c& (0+255),w,b
  6727   0040A0  B4D8               	btfsc	status,2,c
  6728   0040A2  EF55  F020         	goto	u17751
  6729   0040A6  EF57  F020         	goto	u17750
  6730   0040AA                     u17751:
  6731   0040AA  EF59  F020         	goto	l14888
  6732   0040AE                     u17750:
  6733   0040AE  EF9A  F01F         	goto	l14840
  6734   0040B2                     l14888:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  6738   0040B2  0E00               	movlw	0
  6739   0040B4  6F78               	movwf	(create_name@i+1)& (0+255),b
  6740   0040B6  0E08               	movlw	8
  6741   0040B8  6F77               	movwf	create_name@i& (0+255),b
  6742   0040BA  0E00               	movlw	0
  6743   0040BC  6F74               	movwf	(create_name@ni+1)& (0+255),b
  6744   0040BE  0E0B               	movlw	11
  6745   0040C0  6F73               	movwf	create_name@ni& (0+255),b
  6746                           
  6747                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  6748   0040C2  EFCD  F01F         	goto	l14858
  6749   0040C6                     l14890:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  6753   0040C6  0E7F               	movlw	127
  6754   0040C8  657D               	cpfsgt	create_name@c& (0+255),b
  6755   0040CA  EF69  F020         	goto	u17761
  6756   0040CE  EF6B  F020         	goto	u17760
  6757   0040D2                     u17761:
  6758   0040D2  EF7C  F020         	goto	l14894
  6759   0040D6                     u17760:
  6760   0040D6                     
  6761                           ; BSR set to: 0
  6762                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  6763   0040D6  517D               	movf	create_name@c& (0+255),w,b
  6764   0040D8  0B7F               	andlw	127
  6765   0040DA  6F6C               	movwf	??_create_name& (0+255),b
  6766   0040DC  6B6D               	clrf	(??_create_name+1)& (0+255),b
  6767   0040DE  0EC9               	movlw	low _ExCvt
  6768   0040E0  256C               	addwf	??_create_name& (0+255),w,b
  6769   0040E2  6EF6               	movwf	tblptrl,c
  6770   0040E4  0EFE               	movlw	high _ExCvt
  6771   0040E6  216D               	addwfc	(??_create_name+1)& (0+255),w,b
  6772   0040E8  6EF7               	movwf	tblptrh,c
  6773   0040EA                     	if	1	;There are 3 active tblptr bytes
  6774   0040EA  6AF8               	clrf	tblptru,c
  6775   0040EC  0E00               	movlw	low (__mediumconst shr (0+16))
  6776   0040EE  22F8               	addwfc	tblptru,f,c
  6777   0040F0                     	endif
  6778   0040F0  0008               	tblrd		*
  6779   0040F2  006F FFD4  F07D    	movff	tablat,create_name@c
  6780   0040F8                     l14894:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  6784   0040F8  517D               	movf	create_name@c& (0+255),w,b
  6785   0040FA  EC6A  F046         	call	_dbc_1st
  6786   0040FE  0100               	movlb	0	; () banked
  6787   004100  5160               	movf	?_dbc_1st& (0+255),w,b
  6788   004102  1161               	iorwf	(?_dbc_1st+1)& (0+255),w,b
  6789   004104  B4D8               	btfsc	status,2,c
  6790   004106  EF87  F020         	goto	u17771
  6791   00410A  EF89  F020         	goto	u17770
  6792   00410E                     u17771:
  6793   00410E  EFD4  F020         	goto	l14914
  6794   004112                     u17770:
  6795   004112                     
  6796                           ; BSR set to: 0
  6797                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  6798   004112  517B               	movf	create_name@si& (0+255),w,b
  6799   004114  2575               	addwf	create_name@p& (0+255),w,b
  6800   004116  6F6C               	movwf	??_create_name& (0+255),b
  6801   004118  517C               	movf	(create_name@si+1)& (0+255),w,b
  6802   00411A  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6803   00411C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6804   00411E  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  6805   004124  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  6806   00412A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6807   00412A  6AF8               	clrf	tblptru,c
  6808   00412C                     	endif
  6809   00412C                     	if	0	;tblptru may be non-zero
  6810   00412C                     	endif
  6811   00412C  0008               	tblrd		*
  6812   00412E  006F FFD4  F072    	movff	tablat,create_name@d
  6813   004134                     
  6814                           ; BSR set to: 0
  6815   004134  4B7B               	infsnz	create_name@si& (0+255),f,b
  6816   004136  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  6817   004138                     
  6818                           ; BSR set to: 0
  6819                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  6820   004138  5172               	movf	create_name@d& (0+255),w,b
  6821   00413A  EC64  F046         	call	_dbc_2nd
  6822   00413E  0100               	movlb	0	; () banked
  6823   004140  5160               	movf	?_dbc_2nd& (0+255),w,b
  6824   004142  1161               	iorwf	(?_dbc_2nd+1)& (0+255),w,b
  6825   004144  B4D8               	btfsc	status,2,c
  6826   004146  EFA7  F020         	goto	u17781
  6827   00414A  EFA9  F020         	goto	u17780
  6828   00414E                     u17781:
  6829   00414E  EF9A  F01F         	goto	l14840
  6830   004152                     u17780:
  6831   004152                     
  6832                           ; BSR set to: 0
  6833   004152  0EFF               	movlw	255
  6834   004154  2573               	addwf	create_name@ni& (0+255),w,b
  6835   004156  6F6C               	movwf	??_create_name& (0+255),b
  6836   004158  0EFF               	movlw	255
  6837   00415A  2174               	addwfc	(create_name@ni+1)& (0+255),w,b
  6838   00415C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6839   00415E  516C               	movf	??_create_name& (0+255),w,b
  6840   004160  5D77               	subwf	create_name@i& (0+255),w,b
  6841   004162  516D               	movf	(??_create_name+1)& (0+255),w,b
  6842   004164  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  6843   004166  A0D8               	btfss	status,0,c
  6844   004168  EFB8  F020         	goto	u17791
  6845   00416C  EFBA  F020         	goto	u17790
  6846   004170                     u17791:
  6847   004170  EFBC  F020         	goto	l14908
  6848   004174                     u17790:
  6849   004174  EF9A  F01F         	goto	l14840
  6850   004178                     l14908:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  6854   004178  5177               	movf	create_name@i& (0+255),w,b
  6855   00417A  2579               	addwf	create_name@sfn& (0+255),w,b
  6856   00417C  6ED9               	movwf	fsr2l,c
  6857   00417E  5178               	movf	(create_name@i+1)& (0+255),w,b
  6858   004180  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  6859   004182  6EDA               	movwf	fsr2h,c
  6860   004184  0060  F1F7  FFDF   	movff	create_name@c,indf2
  6861   00418A                     
  6862                           ; BSR set to: 0
  6863   00418A  4B77               	infsnz	create_name@i& (0+255),f,b
  6864   00418C  2B78               	incf	(create_name@i+1)& (0+255),f,b
  6865   00418E                     
  6866                           ; BSR set to: 0
  6867                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  6868   00418E  5177               	movf	create_name@i& (0+255),w,b
  6869   004190  2579               	addwf	create_name@sfn& (0+255),w,b
  6870   004192  6ED9               	movwf	fsr2l,c
  6871   004194  5178               	movf	(create_name@i+1)& (0+255),w,b
  6872   004196  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  6873   004198  6EDA               	movwf	fsr2h,c
  6874   00419A  0060  F1CB  FFDF   	movff	create_name@d,indf2
  6875   0041A0  4B77               	infsnz	create_name@i& (0+255),f,b
  6876   0041A2  2B78               	incf	(create_name@i+1)& (0+255),f,b
  6877                           
  6878                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  6879   0041A4  EFCD  F01F         	goto	l14858
  6880   0041A8                     l14914:
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  6884   0041A8  0ED0               	movlw	low STR_1
  6885   0041AA  6F60               	movwf	chk_chr@str& (0+255),b
  6886   0041AC  0EFF               	movlw	high STR_1
  6887   0041AE  6F61               	movwf	(chk_chr@str+1)& (0+255),b
  6888   0041B0  C07D  F062         	movff	create_name@c,chk_chr@chr
  6889   0041B4  6B63               	clrf	(chk_chr@chr+1)& (0+255),b
  6890   0041B6  EC26  F041         	call	_chk_chr	;wreg free
  6891   0041BA  0100               	movlb	0	; () banked
  6892   0041BC  5160               	movf	?_chk_chr& (0+255),w,b
  6893   0041BE  1161               	iorwf	(?_chk_chr+1)& (0+255),w,b
  6894   0041C0  B4D8               	btfsc	status,2,c
  6895   0041C2  EFE5  F020         	goto	u17801
  6896   0041C6  EFE7  F020         	goto	u17800
  6897   0041CA                     u17801:
  6898   0041CA  EFE9  F020         	goto	l14920
  6899   0041CE                     u17800:
  6900   0041CE  EF9A  F01F         	goto	l14840
  6901   0041D2                     l14920:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  6905   0041D2  0E60               	movlw	96
  6906   0041D4  657D               	cpfsgt	create_name@c& (0+255),b
  6907   0041D6  EFEF  F020         	goto	u17811
  6908   0041DA  EFF1  F020         	goto	u17810
  6909   0041DE                     u17811:
  6910   0041DE  EFFB  F020         	goto	l14926
  6911   0041E2                     u17810:
  6912   0041E2                     
  6913                           ; BSR set to: 0
  6914   0041E2  0E7B               	movlw	123
  6915   0041E4  617D               	cpfslt	create_name@c& (0+255),b
  6916   0041E6  EFF7  F020         	goto	u17821
  6917   0041EA  EFF9  F020         	goto	u17820
  6918   0041EE                     u17821:
  6919   0041EE  EFFB  F020         	goto	l14926
  6920   0041F2                     u17820:
  6921   0041F2                     
  6922                           ; BSR set to: 0
  6923   0041F2  0E20               	movlw	32
  6924   0041F4  5F7D               	subwf	create_name@c& (0+255),f,b
  6925   0041F6                     l14926:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  6929   0041F6  5177               	movf	create_name@i& (0+255),w,b
  6930   0041F8  2579               	addwf	create_name@sfn& (0+255),w,b
  6931   0041FA  6ED9               	movwf	fsr2l,c
  6932   0041FC  5178               	movf	(create_name@i+1)& (0+255),w,b
  6933   0041FE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  6934   004200  6EDA               	movwf	fsr2h,c
  6935   004202  0060  F1F7  FFDF   	movff	create_name@c,indf2
  6936   004208                     
  6937                           ; BSR set to: 0
  6938   004208  4B77               	infsnz	create_name@i& (0+255),f,b
  6939   00420A  2B78               	incf	(create_name@i+1)& (0+255),f,b
  6940   00420C  EFCD  F01F         	goto	l14858
  6941   004210                     l14930:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  6945   004210  517B               	movf	create_name@si& (0+255),w,b
  6946   004212  2575               	addwf	create_name@p& (0+255),w,b
  6947   004214  6F6C               	movwf	??_create_name& (0+255),b
  6948   004216  517C               	movf	(create_name@si+1)& (0+255),w,b
  6949   004218  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  6950   00421A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  6951   00421C  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  6952   004222  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  6953   004228  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  6954   00422E  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  6955   004234                     
  6956                           ; BSR set to: 0
  6957                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  6958   004234  5177               	movf	create_name@i& (0+255),w,b
  6959   004236  1178               	iorwf	(create_name@i+1)& (0+255),w,b
  6960   004238  A4D8               	btfss	status,2,c
  6961   00423A  EF21  F021         	goto	u17831
  6962   00423E  EF23  F021         	goto	u17830
  6963   004242                     u17831:
  6964   004242  EF25  F021         	goto	l14938
  6965   004246                     u17830:
  6966   004246  EF9A  F01F         	goto	l14840
  6967   00424A                     l14938:
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  6971   00424A  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  6972   004250  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  6973   004256  0EE5               	movlw	229
  6974   004258  18DE               	xorwf	postinc2,w,c
  6975   00425A  A4D8               	btfss	status,2,c
  6976   00425C  EF32  F021         	goto	u17841
  6977   004260  EF34  F021         	goto	u17840
  6978   004264                     u17841:
  6979   004264  EF3C  F021         	goto	l14942
  6980   004268                     u17840:
  6981   004268                     
  6982                           ; BSR set to: 0
  6983   004268  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  6984   00426E  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  6985   004274  0E05               	movlw	5
  6986   004276  6EDF               	movwf	indf2,c
  6987   004278                     l14942:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  6991   004278  0E20               	movlw	32
  6992   00427A  657D               	cpfsgt	create_name@c& (0+255),b
  6993   00427C  EF42  F021         	goto	u17851
  6994   004280  EF44  F021         	goto	u17850
  6995   004284                     u17851:
  6996   004284  EF4A  F021         	goto	l14946
  6997   004288                     u17850:
  6998   004288                     
  6999                           ; BSR set to: 0
  7000   004288  0E00               	movlw	0
  7001   00428A  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  7002   00428C  0E00               	movlw	0
  7003   00428E  6F70               	movwf	_create_name$2966& (0+255),b
  7004   004290  EF4E  F021         	goto	l14948
  7005   004294                     l14946:
  7006                           
  7007                           ; BSR set to: 0
  7008   004294  0E00               	movlw	0
  7009   004296  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  7010   004298  0E04               	movlw	4
  7011   00429A  6F70               	movwf	_create_name$2966& (0+255),b
  7012   00429C                     l14948:
  7013                           
  7014                           ; BSR set to: 0
  7015   00429C  EE20 F00B          	lfsr	2,11
  7016   0042A0  5179               	movf	create_name@sfn& (0+255),w,b
  7017   0042A2  26D9               	addwf	fsr2l,f,c
  7018   0042A4  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  7019   0042A6  22DA               	addwfc	fsr2h,f,c
  7020   0042A8  0060  F1C3  FFDF   	movff	_create_name$2966,indf2
  7021   0042AE  EFCA  F01F         	goto	l14854
  7022   0042B2                     l1126:
  7023                           
  7024                           ; BSR set to: 0
  7025   0042B2  0012               	return		;funcret
  7026   0042B4                     __end_of_create_name:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _dbc_2nd *****************
  7030 ;; Defined at:
  7031 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  c               1    wreg     unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  c               1    2[BANK0 ] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  2    0[BANK0 ] int 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;Total ram usage:        3 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 5
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_create_name
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text13
  7060   008CC8                     __ptext13:
  7061                           	callstack 0
  7062   008CC8                     _dbc_2nd:
  7063                           	callstack 21
  7064   008CC8  0E00               	movlw	0
  7065   008CCA  0100               	movlb	0	; () banked
  7066   008CCC  6F61               	movwf	(?_dbc_2nd+1)& (0+255),b
  7067   008CCE  0E00               	movlw	0
  7068   008CD0  6F60               	movwf	?_dbc_2nd& (0+255),b
  7069   008CD2                     
  7070                           ; BSR set to: 0
  7071   008CD2  0012               	return		;funcret
  7072   008CD4                     __end_of_dbc_2nd:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function _dbc_1st *****************
  7076 ;; Defined at:
  7077 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  c               1    wreg     unsigned char 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  c               1    2[BANK0 ] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  2    0[BANK0 ] int 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:        3 bytes
  7096 ;; Hardware stack levels used: 1
  7097 ;; Hardware stack levels required when called: 5
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_create_name
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text14
  7106   008CD4                     __ptext14:
  7107                           	callstack 0
  7108   008CD4                     _dbc_1st:
  7109                           	callstack 21
  7110   008CD4  0E00               	movlw	0
  7111   008CD6  0100               	movlb	0	; () banked
  7112   008CD8  6F61               	movwf	(?_dbc_1st+1)& (0+255),b
  7113   008CDA  0E00               	movlw	0
  7114   008CDC  6F60               	movwf	?_dbc_1st& (0+255),b
  7115   008CDE                     
  7116                           ; BSR set to: 0
  7117   008CDE  0012               	return		;funcret
  7118   008CE0                     __end_of_dbc_1st:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _chk_chr *****************
  7122 ;; Defined at:
  7123 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  7126 ;;		 -> STR_2(15), 
  7127 ;;  chr             2    2[BANK0 ] int 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2    0[BANK0 ] int 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;Total ram usage:        6 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 5
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_create_name
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text15
  7154   00824C                     __ptext15:
  7155                           	callstack 0
  7156   00824C                     _chk_chr:
  7157                           	callstack 21
  7158   00824C                     
  7159                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  7160   00824C  EF2A  F041         	goto	l14478
  7161   008250                     l14476:
  7162                           
  7163                           ; BSR set to: 0
  7164   008250  4B60               	infsnz	chk_chr@str& (0+255),f,b
  7165   008252  2B61               	incf	(chk_chr@str+1)& (0+255),f,b
  7166   008254                     l14478:
  7167   008254  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  7168   00825A  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  7169   008260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7170   008260  6AF8               	clrf	tblptru,c
  7171   008262                     	endif
  7172   008262                     	if	0	;tblptru may be non-zero
  7173   008262                     	endif
  7174   008262  0008               	tblrd		*
  7175   008264  50F5               	movf	tablat,w,c
  7176   008266  0900               	iorlw	0
  7177   008268  B4D8               	btfsc	status,2,c
  7178   00826A  EF39  F041         	goto	u17051
  7179   00826E  EF3B  F041         	goto	u17050
  7180   008272                     u17051:
  7181   008272  EF53  F041         	goto	l14482
  7182   008276                     u17050:
  7183   008276  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  7184   00827C  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  7185   008282                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7186   008282  6AF8               	clrf	tblptru,c
  7187   008284                     	endif
  7188   008284                     	if	0	;tblptru may be non-zero
  7189   008284                     	endif
  7190   008284  0008               	tblrd		*
  7191   008286  50F5               	movf	tablat,w,c
  7192   008288  0100               	movlb	0	; () banked
  7193   00828A  6F64               	movwf	??_chk_chr& (0+255),b
  7194   00828C  6B65               	clrf	(??_chk_chr+1)& (0+255),b
  7195   00828E  5162               	movf	chk_chr@chr& (0+255),w,b
  7196   008290  1964               	xorwf	??_chk_chr& (0+255),w,b
  7197   008292  E107               	bnz	u17061
  7198   008294  5163               	movf	(chk_chr@chr+1)& (0+255),w,b
  7199   008296  1965               	xorwf	(??_chk_chr+1)& (0+255),w,b
  7200   008298  A4D8               	btfss	status,2,c
  7201   00829A  EF51  F041         	goto	u17061
  7202   00829E  EF53  F041         	goto	u17060
  7203   0082A2                     u17061:
  7204   0082A2  EF28  F041         	goto	l14476
  7205   0082A6                     u17060:
  7206   0082A6                     l14482:
  7207                           
  7208                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  7209   0082A6  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  7210   0082AC  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  7211   0082B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7212   0082B2  6AF8               	clrf	tblptru,c
  7213   0082B4                     	endif
  7214   0082B4                     	if	0	;tblptru may be non-zero
  7215   0082B4                     	endif
  7216   0082B4  0008               	tblrd		*
  7217   0082B6  50F5               	movf	tablat,w,c
  7218   0082B8  0100               	movlb	0	; () banked
  7219   0082BA  6F60               	movwf	?_chk_chr& (0+255),b
  7220   0082BC  6B61               	clrf	(?_chk_chr+1)& (0+255),b
  7221   0082BE                     
  7222                           ; BSR set to: 0
  7223   0082BE  0012               	return		;funcret
  7224   0082C0                     __end_of_chk_chr:
  7225                           	callstack 0
  7226                           
  7227 ;; *************** function _dir_register *****************
  7228 ;; Defined at:
  7229 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  dp              2   57[BANK1 ] PTR struct .
  7232 ;;		 -> f_open@dj(40), 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  fs              2   59[BANK1 ] PTR struct .
  7235 ;;		 -> FatFs(563), NULL(0), 
  7236 ;;  res             1   61[BANK1 ] enum E68
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      enum E68
  7239 ;; Registers used:
  7240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7246 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;Total ram usage:        5 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 16
  7253 ;; This function calls:
  7254 ;;		_dir_alloc
  7255 ;;		_mem_cpy
  7256 ;;		_mem_set
  7257 ;;		_move_window
  7258 ;; This function is called by:
  7259 ;;		_f_open
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text16
  7264   0077D2                     __ptext16:
  7265                           	callstack 0
  7266   0077D2                     _dir_register:
  7267                           	callstack 12
  7268   0077D2                     
  7269                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  7270   0077D2  0060  F4E7  FFD9   	movff	dir_register@dp,fsr2l
  7271   0077D8  0060  F4EB  FFDA   	movff	dir_register@dp+1,fsr2h
  7272   0077DE  006F FF78  F13B    	movff	postinc2,dir_register@fs
  7273   0077E4  006F FF74  F13C    	movff	postdec2,dir_register@fs+1
  7274   0077EA                     
  7275                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  7276   0077EA  C139  F12D         	movff	dir_register@dp,dir_alloc@dp
  7277   0077EE  C13A  F12E         	movff	dir_register@dp+1,dir_alloc@dp+1
  7278   0077F2  0E00               	movlw	0
  7279   0077F4  0101               	movlb	1	; () banked
  7280   0077F6  6F30               	movwf	(dir_alloc@nent+1)& (0+255),b
  7281   0077F8  0E01               	movlw	1
  7282   0077FA  6F2F               	movwf	dir_alloc@nent& (0+255),b
  7283   0077FC  ECBA  F034         	call	_dir_alloc	;wreg free
  7284   007800  0101               	movlb	1	; () banked
  7285   007802  6F3D               	movwf	dir_register@res& (0+255),b
  7286   007804                     
  7287                           ; BSR set to: 1
  7288                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  7289   007804  513D               	movf	dir_register@res& (0+255),w,b
  7290   007806  A4D8               	btfss	status,2,c
  7291   007808  EF08  F03C         	goto	u18201
  7292   00780C  EF0A  F03C         	goto	u18200
  7293   007810                     u18201:
  7294   007810  EF68  F03C         	goto	l15160
  7295   007814                     u18200:
  7296   007814                     
  7297                           ; BSR set to: 1
  7298                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  7299   007814  C13B  F0C8         	movff	dir_register@fs,move_window@fs
  7300   007818  C13C  F0C9         	movff	dir_register@fs+1,move_window@fs+1
  7301   00781C  EE20 F016          	lfsr	2,22
  7302   007820  5139               	movf	dir_register@dp& (0+255),w,b
  7303   007822  26D9               	addwf	fsr2l,f,c
  7304   007824  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  7305   007826  22DA               	addwfc	fsr2h,f,c
  7306   007828  006F FF78  F0CA    	movff	postinc2,move_window@sector
  7307   00782E  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  7308   007834  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  7309   00783A  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  7310   007840  ECBF  F03D         	call	_move_window	;wreg free
  7311   007844  0101               	movlb	1	; () banked
  7312   007846  6F3D               	movwf	dir_register@res& (0+255),b
  7313   007848                     
  7314                           ; BSR set to: 1
  7315                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  7316   007848  513D               	movf	dir_register@res& (0+255),w,b
  7317   00784A  A4D8               	btfss	status,2,c
  7318   00784C  EF2A  F03C         	goto	u18211
  7319   007850  EF2C  F03C         	goto	u18210
  7320   007854                     u18211:
  7321   007854  EF68  F03C         	goto	l15160
  7322   007858                     u18210:
  7323   007858                     
  7324                           ; BSR set to: 1
  7325                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  7326   007858  EE20 F01A          	lfsr	2,26
  7327   00785C  5139               	movf	dir_register@dp& (0+255),w,b
  7328   00785E  26D9               	addwf	fsr2l,f,c
  7329   007860  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  7330   007862  22DA               	addwfc	fsr2h,f,c
  7331   007864  006F FF78  F060    	movff	postinc2,mem_set@dst
  7332   00786A  006F FF74  F061    	movff	postdec2,mem_set@dst+1
  7333   007870  0E00               	movlw	0
  7334   007872  0100               	movlb	0	; () banked
  7335   007874  6F63               	movwf	(mem_set@val+1)& (0+255),b
  7336   007876  0E00               	movlw	0
  7337   007878  6F62               	movwf	mem_set@val& (0+255),b
  7338   00787A  0E00               	movlw	0
  7339   00787C  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  7340   00787E  0E20               	movlw	32
  7341   007880  6F64               	movwf	mem_set@cnt& (0+255),b
  7342   007882  ECF2  F044         	call	_mem_set	;wreg free
  7343   007886                     
  7344                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  7345   007886  0101               	movlb	1	; () banked
  7346   007888  EE20 F01A          	lfsr	2,26
  7347   00788C  5139               	movf	dir_register@dp& (0+255),w,b
  7348   00788E  26D9               	addwf	fsr2l,f,c
  7349   007890  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  7350   007892  22DA               	addwfc	fsr2h,f,c
  7351   007894  006F FF78  F060    	movff	postinc2,mem_cpy@dst
  7352   00789A  006F FF74  F061    	movff	postdec2,mem_cpy@dst+1
  7353   0078A0  0E1C               	movlw	28
  7354   0078A2  2539               	addwf	dir_register@dp& (0+255),w,b
  7355   0078A4  0100               	movlb	0	; () banked
  7356   0078A6  6F62               	movwf	mem_cpy@src& (0+255),b
  7357   0078A8  0E00               	movlw	0
  7358   0078AA  0101               	movlb	1	; () banked
  7359   0078AC  213A               	addwfc	(dir_register@dp+1)& (0+255),w,b
  7360   0078AE  0100               	movlb	0	; () banked
  7361   0078B0  6F63               	movwf	(mem_cpy@src+1)& (0+255),b
  7362   0078B2  0E00               	movlw	0
  7363   0078B4  6F65               	movwf	(mem_cpy@cnt+1)& (0+255),b
  7364   0078B6  0E0B               	movlw	11
  7365   0078B8  6F64               	movwf	mem_cpy@cnt& (0+255),b
  7366   0078BA  ECAB  F040         	call	_mem_cpy	;wreg free
  7367   0078BE                     
  7368                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  7369   0078BE  0101               	movlb	1	; () banked
  7370   0078C0  EE20 F003          	lfsr	2,3
  7371   0078C4  513B               	movf	dir_register@fs& (0+255),w,b
  7372   0078C6  26D9               	addwf	fsr2l,f,c
  7373   0078C8  513C               	movf	(dir_register@fs+1)& (0+255),w,b
  7374   0078CA  22DA               	addwfc	fsr2h,f,c
  7375   0078CC  0E01               	movlw	1
  7376   0078CE  6EDF               	movwf	indf2,c
  7377   0078D0                     l15160:
  7378                           
  7379                           ; BSR set to: 1
  7380                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  7381   0078D0  513D               	movf	dir_register@res& (0+255),w,b
  7382   0078D2                     
  7383                           ; BSR set to: 1
  7384   0078D2  0012               	return		;funcret
  7385   0078D4                     __end_of_dir_register:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function _mem_cpy *****************
  7389 ;; Defined at:
  7390 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  dst             2    0[BANK0 ] PTR void 
  7393 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  7394 ;;		 -> NULL(0), 
  7395 ;;  src             2    2[BANK0 ] PTR const void 
  7396 ;;		 -> pb$buf(64), send_status_ok@buf(4), STR_9(12), f_printf@pb(70), 
  7397 ;;		 -> f_puts@pb(70), f_putc@pb(70), dj$fn(12), f_open@dj(40), 
  7398 ;;  cnt             2    4[BANK0 ] unsigned int 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7401 ;;		 -> pb$buf(64), send_status_ok@buf(4), STR_9(12), f_printf@pb(70), 
  7402 ;;		 -> f_puts@pb(70), f_putc@pb(70), dj$fn(12), f_open@dj(40), 
  7403 ;;  d               2    6[BANK0 ] PTR unsigned char 
  7404 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  7405 ;;		 -> NULL(0), 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7415 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;Total ram usage:       10 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 5
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_dir_register
  7426 ;;		_f_write
  7427 ;;		_f_read
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text17
  7432   008156                     __ptext17:
  7433                           	callstack 0
  7434   008156                     _mem_cpy:
  7435                           	callstack 23
  7436   008156                     
  7437                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  7438   008156  C060  F066         	movff	mem_cpy@dst,mem_cpy@d
  7439   00815A  C061  F067         	movff	mem_cpy@dst+1,mem_cpy@d+1
  7440                           
  7441                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  7442   00815E  C062  F068         	movff	mem_cpy@src,mem_cpy@s
  7443   008162  C063  F069         	movff	mem_cpy@src+1,mem_cpy@s+1
  7444                           
  7445                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  7446   008166  0100               	movlb	0	; () banked
  7447   008168  5164               	movf	mem_cpy@cnt& (0+255),w,b
  7448   00816A  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  7449   00816C  B4D8               	btfsc	status,2,c
  7450   00816E  EFBB  F040         	goto	u17381
  7451   008172  EFBD  F040         	goto	u17380
  7452   008176                     u17381:
  7453   008176  EFEA  F040         	goto	l867
  7454   00817A                     u17380:
  7455   00817A                     l14692:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  7459   00817A  0060  F1A3  FFF6   	movff	mem_cpy@s,tblptrl
  7460   008180  0060  F1A7  FFF7   	movff	mem_cpy@s+1,tblptrh
  7461   008186  0E00               	movlw	low (__mediumconst shr (0+16))
  7462   008188  6EF8               	movwf	tblptru,c
  7463   00818A  0060  F19B  FFD9   	movff	mem_cpy@d,fsr2l
  7464   008190  0060  F19F  FFDA   	movff	mem_cpy@d+1,fsr2h
  7465   008196  0E0F               	movlw	(high __ramtop+-1)
  7466   008198  64F7               	cpfsgt	tblptrh,c
  7467   00819A  D003               	bra	u17397
  7468   00819C  0008               	tblrd		*
  7469   00819E  50F5               	movf	tablat,w,c
  7470   0081A0  D007               	bra	u17390
  7471   0081A2                     u17397:
  7472   0081A2  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7473   0081A8  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7474   0081AE  50EF               	movf	indf0,w,c
  7475   0081B0                     u17390:
  7476   0081B0  6EDF               	movwf	indf2,c
  7477   0081B2  0100               	movlb	0	; () banked
  7478   0081B4  4B68               	infsnz	mem_cpy@s& (0+255),f,b
  7479   0081B6  2B69               	incf	(mem_cpy@s+1)& (0+255),f,b
  7480   0081B8                     
  7481                           ; BSR set to: 0
  7482   0081B8  4B66               	infsnz	mem_cpy@d& (0+255),f,b
  7483   0081BA  2B67               	incf	(mem_cpy@d+1)& (0+255),f,b
  7484   0081BC                     
  7485                           ; BSR set to: 0
  7486                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  7487   0081BC  0764               	decf	mem_cpy@cnt& (0+255),f,b
  7488   0081BE  A0D8               	btfss	status,0,c
  7489   0081C0  0765               	decf	(mem_cpy@cnt+1)& (0+255),f,b
  7490   0081C2  5164               	movf	mem_cpy@cnt& (0+255),w,b
  7491   0081C4  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  7492   0081C6  A4D8               	btfss	status,2,c
  7493   0081C8  EFE8  F040         	goto	u17401
  7494   0081CC  EFEA  F040         	goto	u17400
  7495   0081D0                     u17401:
  7496   0081D0  EFBD  F040         	goto	l14692
  7497   0081D4                     u17400:
  7498   0081D4                     l867:
  7499                           
  7500                           ; BSR set to: 0
  7501   0081D4  0012               	return		;funcret
  7502   0081D6                     __end_of_mem_cpy:
  7503                           	callstack 0
  7504                           
  7505 ;; *************** function _dir_alloc *****************
  7506 ;; Defined at:
  7507 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  dp              2   45[BANK1 ] PTR struct .
  7510 ;;		 -> f_open@dj(40), 
  7511 ;;  nent            2   47[BANK1 ] unsigned int 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  n               2   54[BANK1 ] unsigned int 
  7514 ;;  fs              2   52[BANK1 ] PTR struct .
  7515 ;;		 -> FatFs(563), NULL(0), 
  7516 ;;  res             1   56[BANK1 ] enum E68
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      enum E68
  7519 ;; Registers used:
  7520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7526 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;Total ram usage:       12 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 15
  7533 ;; This function calls:
  7534 ;;		_dir_next
  7535 ;;		_dir_sdi
  7536 ;;		_move_window
  7537 ;; This function is called by:
  7538 ;;		_dir_register
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text18
  7543   006974                     __ptext18:
  7544                           	callstack 0
  7545   006974                     _dir_alloc:
  7546                           	callstack 12
  7547   006974                     
  7548                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  7549   006974  0060  F4B7  FFD9   	movff	dir_alloc@dp,fsr2l
  7550   00697A  0060  F4BB  FFDA   	movff	dir_alloc@dp+1,fsr2h
  7551   006980  006F FF78  F134    	movff	postinc2,dir_alloc@fs
  7552   006986  006F FF74  F135    	movff	postdec2,dir_alloc@fs+1
  7553   00698C                     
  7554                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  7555   00698C  C12D  F0ED         	movff	dir_alloc@dp,dir_sdi@dp
  7556   006990  C12E  F0EE         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  7557   006994  0E00               	movlw	0
  7558   006996  0100               	movlb	0	; () banked
  7559   006998  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  7560   00699A  0E00               	movlw	0
  7561   00699C  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  7562   00699E  0E00               	movlw	0
  7563   0069A0  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  7564   0069A2  0E00               	movlw	0
  7565   0069A4  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  7566   0069A6  ECC8  F027         	call	_dir_sdi	;wreg free
  7567   0069AA  0101               	movlb	1	; () banked
  7568   0069AC  6F38               	movwf	dir_alloc@res& (0+255),b
  7569   0069AE                     
  7570                           ; BSR set to: 1
  7571                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  7572   0069AE  5138               	movf	dir_alloc@res& (0+255),w,b
  7573   0069B0  A4D8               	btfss	status,2,c
  7574   0069B2  EFDD  F034         	goto	u17451
  7575   0069B6  EFDF  F034         	goto	u17450
  7576   0069BA                     u17451:
  7577   0069BA  EF65  F035         	goto	l14750
  7578   0069BE                     u17450:
  7579   0069BE                     
  7580                           ; BSR set to: 1
  7581                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  7582   0069BE  0E00               	movlw	0
  7583   0069C0  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  7584   0069C2  0E00               	movlw	0
  7585   0069C4  6F36               	movwf	dir_alloc@n& (0+255),b
  7586   0069C6                     l14730:
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  7590   0069C6  C134  F0C8         	movff	dir_alloc@fs,move_window@fs
  7591   0069CA  C135  F0C9         	movff	dir_alloc@fs+1,move_window@fs+1
  7592   0069CE  EE20 F016          	lfsr	2,22
  7593   0069D2  512D               	movf	dir_alloc@dp& (0+255),w,b
  7594   0069D4  26D9               	addwf	fsr2l,f,c
  7595   0069D6  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7596   0069D8  22DA               	addwfc	fsr2h,f,c
  7597   0069DA  006F FF78  F0CA    	movff	postinc2,move_window@sector
  7598   0069E0  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  7599   0069E6  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  7600   0069EC  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  7601   0069F2  ECBF  F03D         	call	_move_window	;wreg free
  7602   0069F6  0101               	movlb	1	; () banked
  7603   0069F8  6F38               	movwf	dir_alloc@res& (0+255),b
  7604   0069FA                     
  7605                           ; BSR set to: 1
  7606                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  7607   0069FA  5138               	movf	dir_alloc@res& (0+255),w,b
  7608   0069FC  B4D8               	btfsc	status,2,c
  7609   0069FE  EF03  F035         	goto	u17461
  7610   006A02  EF05  F035         	goto	u17460
  7611   006A06                     u17461:
  7612   006A06  EF07  F035         	goto	l14736
  7613   006A0A                     u17460:
  7614   006A0A  EF65  F035         	goto	l14750
  7615   006A0E                     l14736:
  7616                           
  7617                           ; BSR set to: 1
  7618                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  7619   006A0E  EE20 F01A          	lfsr	2,26
  7620   006A12  512D               	movf	dir_alloc@dp& (0+255),w,b
  7621   006A14  26D9               	addwf	fsr2l,f,c
  7622   006A16  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7623   006A18  22DA               	addwfc	fsr2h,f,c
  7624   006A1A  006F FF78  F131    	movff	postinc2,??_dir_alloc
  7625   006A20  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  7626   006A26  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  7627   006A2C  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  7628   006A32  0EE5               	movlw	229
  7629   006A34  18DE               	xorwf	postinc2,w,c
  7630   006A36  B4D8               	btfsc	status,2,c
  7631   006A38  EF20  F035         	goto	u17471
  7632   006A3C  EF22  F035         	goto	u17470
  7633   006A40                     u17471:
  7634   006A40  EF3C  F035         	goto	l14740
  7635   006A44                     u17470:
  7636   006A44                     
  7637                           ; BSR set to: 1
  7638   006A44  EE20 F01A          	lfsr	2,26
  7639   006A48  512D               	movf	dir_alloc@dp& (0+255),w,b
  7640   006A4A  26D9               	addwf	fsr2l,f,c
  7641   006A4C  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7642   006A4E  22DA               	addwfc	fsr2h,f,c
  7643   006A50  006F FF78  F131    	movff	postinc2,??_dir_alloc
  7644   006A56  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  7645   006A5C  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  7646   006A62  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  7647   006A68  50DF               	movf	indf2,w,c
  7648   006A6A  A4D8               	btfss	status,2,c
  7649   006A6C  EF3A  F035         	goto	u17481
  7650   006A70  EF3C  F035         	goto	u17480
  7651   006A74                     u17481:
  7652   006A74  EF4C  F035         	goto	l14744
  7653   006A78                     u17480:
  7654   006A78                     l14740:
  7655                           
  7656                           ; BSR set to: 1
  7657                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  7658   006A78  4B36               	infsnz	dir_alloc@n& (0+255),f,b
  7659   006A7A  2B37               	incf	(dir_alloc@n+1)& (0+255),f,b
  7660   006A7C  512F               	movf	dir_alloc@nent& (0+255),w,b
  7661   006A7E  1936               	xorwf	dir_alloc@n& (0+255),w,b
  7662   006A80  E107               	bnz	u17491
  7663   006A82  5130               	movf	(dir_alloc@nent+1)& (0+255),w,b
  7664   006A84  1937               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  7665   006A86  A4D8               	btfss	status,2,c
  7666   006A88  EF48  F035         	goto	u17491
  7667   006A8C  EF4A  F035         	goto	u17490
  7668   006A90                     u17491:
  7669   006A90  EF50  F035         	goto	l14746
  7670   006A94                     u17490:
  7671   006A94  EF65  F035         	goto	l14750
  7672   006A98                     l14744:
  7673                           
  7674                           ; BSR set to: 1
  7675                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  7676   006A98  0E00               	movlw	0
  7677   006A9A  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  7678   006A9C  0E00               	movlw	0
  7679   006A9E  6F36               	movwf	dir_alloc@n& (0+255),b
  7680   006AA0                     l14746:
  7681                           
  7682                           ; BSR set to: 1
  7683                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  7684   006AA0  C12D  F0FA         	movff	dir_alloc@dp,dir_next@dp
  7685   006AA4  C12E  F0FB         	movff	dir_alloc@dp+1,dir_next@dp+1
  7686   006AA8  0E00               	movlw	0
  7687   006AAA  0100               	movlb	0	; () banked
  7688   006AAC  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  7689   006AAE  0E01               	movlw	1
  7690   006AB0  6FFC               	movwf	dir_next@stretch& (0+255),b
  7691   006AB2  EC5A  F021         	call	_dir_next	;wreg free
  7692   006AB6  0101               	movlb	1	; () banked
  7693   006AB8  6F38               	movwf	dir_alloc@res& (0+255),b
  7694   006ABA                     
  7695                           ; BSR set to: 1
  7696                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  7697   006ABA  5138               	movf	dir_alloc@res& (0+255),w,b
  7698   006ABC  B4D8               	btfsc	status,2,c
  7699   006ABE  EF63  F035         	goto	u17501
  7700   006AC2  EF65  F035         	goto	u17500
  7701   006AC6                     u17501:
  7702   006AC6  EFE3  F034         	goto	l14730
  7703   006ACA                     u17500:
  7704   006ACA                     l14750:
  7705                           
  7706                           ; BSR set to: 1
  7707                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  7708   006ACA  0E04               	movlw	4
  7709   006ACC  1938               	xorwf	dir_alloc@res& (0+255),w,b
  7710   006ACE  A4D8               	btfss	status,2,c
  7711   006AD0  EF6C  F035         	goto	u17511
  7712   006AD4  EF6E  F035         	goto	u17510
  7713   006AD8                     u17511:
  7714   006AD8  EF70  F035         	goto	l1093
  7715   006ADC                     u17510:
  7716   006ADC                     
  7717                           ; BSR set to: 1
  7718   006ADC  0E07               	movlw	7
  7719   006ADE  6F38               	movwf	dir_alloc@res& (0+255),b
  7720   006AE0                     l1093:
  7721                           
  7722                           ; BSR set to: 1
  7723                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  7724   006AE0  5138               	movf	dir_alloc@res& (0+255),w,b
  7725   006AE2                     
  7726                           ; BSR set to: 1
  7727   006AE2  0012               	return		;funcret
  7728   006AE4                     __end_of_dir_alloc:
  7729                           	callstack 0
  7730                           
  7731 ;; *************** function _dir_sdi *****************
  7732 ;; Defined at:
  7733 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  dp              2  141[BANK0 ] PTR struct .
  7736 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  7737 ;;  ofs             4  143[BANK0 ] unsigned long 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  clst            4    4[BANK1 ] unsigned long 
  7740 ;;  csz             4    0[BANK1 ] unsigned long 
  7741 ;;  fs              2    8[BANK1 ] PTR struct .
  7742 ;;		 -> FatFs(563), NULL(0), 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      enum E68
  7745 ;; Registers used:
  7746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7752 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Totals:         0      16      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;Total ram usage:       26 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 13
  7759 ;; This function calls:
  7760 ;;		_clst2sect
  7761 ;;		_get_fat
  7762 ;; This function is called by:
  7763 ;;		_dir_alloc
  7764 ;;		_dir_find
  7765 ;;		_follow_path
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text19
  7770   004F90                     __ptext19:
  7771                           	callstack 0
  7772   004F90                     _dir_sdi:
  7773                           	callstack 14
  7774   004F90                     
  7775                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  7776   004F90  0060  F3B7  FFD9   	movff	dir_sdi@dp,fsr2l
  7777   004F96  0060  F3BB  FFDA   	movff	dir_sdi@dp+1,fsr2h
  7778   004F9C  006F FF78  F108    	movff	postinc2,dir_sdi@fs
  7779   004FA2  006F FF74  F109    	movff	postdec2,dir_sdi@fs+1
  7780   004FA8  0100               	movlb	0	; () banked
  7781   004FAA  51F2               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  7782   004FAC  E107               	bnz	u17071
  7783   004FAE  0E20               	movlw	32
  7784   004FB0  5DF1               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  7785   004FB2  B0D8               	btfsc	status,0,c
  7786   004FB4  EFDE  F027         	goto	u17071
  7787   004FB8  EFE0  F027         	goto	u17070
  7788   004FBC                     u17071:
  7789   004FBC  EFF7  F027         	goto	l14518
  7790   004FC0                     u17070:
  7791   004FC0                     
  7792                           ; BSR set to: 0
  7793   004FC0  0E1F               	movlw	31
  7794   004FC2  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  7795   004FC4  6FF3               	movwf	??_dir_sdi& (0+255),b
  7796   004FC6  0E00               	movlw	0
  7797   004FC8  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  7798   004FCA  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  7799   004FCC  0E00               	movlw	0
  7800   004FCE  15F1               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  7801   004FD0  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  7802   004FD2  0E00               	movlw	0
  7803   004FD4  15F2               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  7804   004FD6  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  7805   004FD8  51F3               	movf	??_dir_sdi& (0+255),w,b
  7806   004FDA  11F4               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  7807   004FDC  11F5               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  7808   004FDE  11F6               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  7809   004FE0  B4D8               	btfsc	status,2,c
  7810   004FE2  EFF5  F027         	goto	u17081
  7811   004FE6  EFF7  F027         	goto	u17080
  7812   004FEA                     u17081:
  7813   004FEA  EFFA  F027         	goto	l14522
  7814   004FEE                     u17080:
  7815   004FEE                     l14518:
  7816                           
  7817                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  7818   004FEE  0E02               	movlw	2
  7819   004FF0  EFC8  F029         	goto	l1042
  7820   004FF4                     l14522:
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  7824   004FF4  EE20 F00E          	lfsr	2,14
  7825   004FF8  51ED               	movf	dir_sdi@dp& (0+255),w,b
  7826   004FFA  26D9               	addwf	fsr2l,f,c
  7827   004FFC  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7828   004FFE  22DA               	addwfc	fsr2h,f,c
  7829   005000  0060  F3BF  FFDE   	movff	dir_sdi@ofs,postinc2
  7830   005006  0060  F3C3  FFDE   	movff	dir_sdi@ofs+1,postinc2
  7831   00500C  0060  F3C7  FFDE   	movff	dir_sdi@ofs+2,postinc2
  7832   005012  0060  F3CB  FFDE   	movff	dir_sdi@ofs+3,postinc2
  7833                           
  7834                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  7835   005018  EE20 F006          	lfsr	2,6
  7836   00501C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  7837   00501E  26D9               	addwf	fsr2l,f,c
  7838   005020  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7839   005022  22DA               	addwfc	fsr2h,f,c
  7840   005024  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  7841   00502A  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  7842   005030  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  7843   005036  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  7844   00503C                     
  7845                           ; BSR set to: 0
  7846                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  7847   00503C  0101               	movlb	1	; () banked
  7848   00503E  5104               	movf	dir_sdi@clst& (0+255),w,b
  7849   005040  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7850   005042  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7851   005044  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  7852   005046  A4D8               	btfss	status,2,c
  7853   005048  EF28  F028         	goto	u17091
  7854   00504C  EF2A  F028         	goto	u17090
  7855   005050                     u17091:
  7856   005050  EF4A  F028         	goto	l14532
  7857   005054                     u17090:
  7858   005054                     
  7859                           ; BSR set to: 1
  7860   005054  0060  F423  FFD9   	movff	dir_sdi@fs,fsr2l
  7861   00505A  0060  F427  FFDA   	movff	dir_sdi@fs+1,fsr2h
  7862   005060  0E02               	movlw	2
  7863   005062  64DF               	cpfsgt	indf2,c
  7864   005064  EF36  F028         	goto	u17101
  7865   005068  EF38  F028         	goto	u17100
  7866   00506C                     u17101:
  7867   00506C  EF4A  F028         	goto	l14532
  7868   005070                     u17100:
  7869   005070                     
  7870                           ; BSR set to: 1
  7871                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  7872   005070  EE20 F027          	lfsr	2,39
  7873   005074  5108               	movf	dir_sdi@fs& (0+255),w,b
  7874   005076  26D9               	addwf	fsr2l,f,c
  7875   005078  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7876   00507A  22DA               	addwfc	fsr2h,f,c
  7877   00507C  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  7878   005082  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  7879   005088  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  7880   00508E  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  7881   005094                     l14532:
  7882                           
  7883                           ; BSR set to: 1
  7884                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  7885   005094  5104               	movf	dir_sdi@clst& (0+255),w,b
  7886   005096  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7887   005098  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7888   00509A  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  7889   00509C  A4D8               	btfss	status,2,c
  7890   00509E  EF53  F028         	goto	u17111
  7891   0050A2  EF55  F028         	goto	u17110
  7892   0050A6                     u17111:
  7893   0050A6  EFA8  F028         	goto	l14542
  7894   0050AA                     u17110:
  7895   0050AA                     
  7896                           ; BSR set to: 1
  7897                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  7898   0050AA  EE20 F007          	lfsr	2,7
  7899   0050AE  5108               	movf	dir_sdi@fs& (0+255),w,b
  7900   0050B0  26D9               	addwf	fsr2l,f,c
  7901   0050B2  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7902   0050B4  22DA               	addwfc	fsr2h,f,c
  7903   0050B6  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  7904   0050BC  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  7905   0050C2  0100               	movlb	0	; () banked
  7906   0050C4  51F3               	movf	??_dir_sdi& (0+255),w,b
  7907   0050C6  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  7908   0050C8  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  7909   0050CA  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  7910   0050CC  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  7911   0050CE  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  7912   0050D0  C0EF  F0F9         	movff	dir_sdi@ofs,??_dir_sdi+6
  7913   0050D4  C0F0  F0FA         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  7914   0050D8  C0F1  F0FB         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  7915   0050DC  C0F2  F0FC         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  7916   0050E0  0E06               	movlw	6
  7917   0050E2  EF78  F028         	goto	u17120
  7918   0050E6                     u17125:
  7919   0050E6  90D8               	bcf	status,0,c
  7920   0050E8  33FC               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  7921   0050EA  33FB               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  7922   0050EC  33FA               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  7923   0050EE  33F9               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  7924   0050F0                     u17120:
  7925   0050F0  2EE8               	decfsz	wreg,f,c
  7926   0050F2  EF73  F028         	goto	u17125
  7927   0050F6  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  7928   0050F8  5DF9               	subwf	(??_dir_sdi+6)& (0+255),w,b
  7929   0050FA  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  7930   0050FC  59FA               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  7931   0050FE  51F7               	movf	(??_dir_sdi+4)& (0+255),w,b
  7932   005100  59FB               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  7933   005102  51F8               	movf	(??_dir_sdi+5)& (0+255),w,b
  7934   005104  59FC               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  7935   005106  A0D8               	btfss	status,0,c
  7936   005108  EF88  F028         	goto	u17131
  7937   00510C  EF8A  F028         	goto	u17130
  7938   005110                     u17131:
  7939   005110  EF8C  F028         	goto	l14540
  7940   005114                     u17130:
  7941   005114  EFF7  F027         	goto	l14518
  7942   005118                     l14540:
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  7946   005118  0101               	movlb	1	; () banked
  7947   00511A  EE20 F027          	lfsr	2,39
  7948   00511E  5108               	movf	dir_sdi@fs& (0+255),w,b
  7949   005120  26D9               	addwf	fsr2l,f,c
  7950   005122  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7951   005124  22DA               	addwfc	fsr2h,f,c
  7952   005126  0100               	movlb	0	; () banked
  7953   005128  EE10 F016          	lfsr	1,22
  7954   00512C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  7955   00512E  26E1               	addwf	fsr1l,f,c
  7956   005130  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7957   005132  22E2               	addwfc	fsr1h,f,c
  7958   005134  006F FF7B FFE6     	movff	postinc2,postinc1
  7959   00513A  006F FF7B FFE6     	movff	postinc2,postinc1
  7960   005140  006F FF7B FFE6     	movff	postinc2,postinc1
  7961   005146  006F FF7B FFE6     	movff	postinc2,postinc1
  7962                           
  7963                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  7964   00514C  EF61  F029         	goto	l14564
  7965   005150                     l14542:
  7966                           
  7967                           ; BSR set to: 1
  7968                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  7969   005150  EE20 F009          	lfsr	2,9
  7970   005154  5108               	movf	dir_sdi@fs& (0+255),w,b
  7971   005156  26D9               	addwf	fsr2l,f,c
  7972   005158  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7973   00515A  22DA               	addwfc	fsr2h,f,c
  7974   00515C  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  7975   005162  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  7976   005168  0100               	movlb	0	; () banked
  7977   00516A  51F3               	movf	??_dir_sdi& (0+255),w,b
  7978   00516C  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  7979   00516E  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  7980   005170  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  7981   005172  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  7982   005174  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  7983   005176  0E09               	movlw	9
  7984   005178                     u17145:
  7985   005178  90D8               	bcf	status,0,c
  7986   00517A  37F5               	rlcf	(??_dir_sdi+2)& (0+255),f,b
  7987   00517C  37F6               	rlcf	(??_dir_sdi+3)& (0+255),f,b
  7988   00517E  37F7               	rlcf	(??_dir_sdi+4)& (0+255),f,b
  7989   005180  37F8               	rlcf	(??_dir_sdi+5)& (0+255),f,b
  7990   005182  2EE8               	decfsz	wreg,f,c
  7991   005184  EFBC  F028         	goto	u17145
  7992   005188  C0F5  F100         	movff	??_dir_sdi+2,dir_sdi@csz
  7993   00518C  C0F6  F101         	movff	??_dir_sdi+3,dir_sdi@csz+1
  7994   005190  C0F7  F102         	movff	??_dir_sdi+4,dir_sdi@csz+2
  7995   005194  C0F8  F103         	movff	??_dir_sdi+5,dir_sdi@csz+3
  7996                           
  7997                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  7998   005198  EF29  F029         	goto	l1048
  7999   00519C                     l14544:
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
  8003   00519C  C0ED  F0D3         	movff	dir_sdi@dp,get_fat@obj
  8004   0051A0  C0EE  F0D4         	movff	dir_sdi@dp+1,get_fat@obj+1
  8005   0051A4  C104  F0D5         	movff	dir_sdi@clst,get_fat@clst
  8006   0051A8  C105  F0D6         	movff	dir_sdi@clst+1,get_fat@clst+1
  8007   0051AC  C106  F0D7         	movff	dir_sdi@clst+2,get_fat@clst+2
  8008   0051B0  C107  F0D8         	movff	dir_sdi@clst+3,get_fat@clst+3
  8009   0051B4  ECBC  F025         	call	_get_fat	;wreg free
  8010   0051B8  C0D3  F104         	movff	?_get_fat,dir_sdi@clst
  8011   0051BC  C0D4  F105         	movff	?_get_fat+1,dir_sdi@clst+1
  8012   0051C0  C0D5  F106         	movff	?_get_fat+2,dir_sdi@clst+2
  8013   0051C4  C0D6  F107         	movff	?_get_fat+3,dir_sdi@clst+3
  8014   0051C8                     
  8015                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8016   0051C8  0101               	movlb	1	; () banked
  8017   0051CA  2904               	incf	dir_sdi@clst& (0+255),w,b
  8018   0051CC  E10A               	bnz	u17151
  8019   0051CE  2905               	incf	(dir_sdi@clst+1)& (0+255),w,b
  8020   0051D0  E108               	bnz	u17151
  8021   0051D2  2906               	incf	(dir_sdi@clst+2)& (0+255),w,b
  8022   0051D4  E106               	bnz	u17151
  8023   0051D6  2907               	incf	(dir_sdi@clst+3)& (0+255),w,b
  8024   0051D8  A4D8               	btfss	status,2,c
  8025   0051DA  EFF1  F028         	goto	u17151
  8026   0051DE  EFF3  F028         	goto	u17150
  8027   0051E2                     u17151:
  8028   0051E2  EFF6  F028         	goto	l14552
  8029   0051E6                     u17150:
  8030   0051E6                     
  8031                           ; BSR set to: 1
  8032   0051E6  0E01               	movlw	1
  8033   0051E8  EFC8  F029         	goto	l1042
  8034   0051EC                     l14552:
  8035                           
  8036                           ; BSR set to: 1
  8037                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
  8038   0051EC  5107               	movf	(dir_sdi@clst+3)& (0+255),w,b
  8039   0051EE  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  8040   0051F0  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  8041   0051F2  E109               	bnz	u17160
  8042   0051F4  0E02               	movlw	2
  8043   0051F6  5D04               	subwf	dir_sdi@clst& (0+255),w,b
  8044   0051F8  A0D8               	btfss	status,0,c
  8045   0051FA  EF01  F029         	goto	u17161
  8046   0051FE  EF03  F029         	goto	u17160
  8047   005202                     u17161:
  8048   005202  EFF7  F027         	goto	l14518
  8049   005206                     u17160:
  8050   005206                     
  8051                           ; BSR set to: 1
  8052   005206  EE20 F017          	lfsr	2,23
  8053   00520A  5108               	movf	dir_sdi@fs& (0+255),w,b
  8054   00520C  26D9               	addwf	fsr2l,f,c
  8055   00520E  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  8056   005210  22DA               	addwfc	fsr2h,f,c
  8057   005212  50DE               	movf	postinc2,w,c
  8058   005214  5D04               	subwf	dir_sdi@clst& (0+255),w,b
  8059   005216  50DE               	movf	postinc2,w,c
  8060   005218  5905               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  8061   00521A  50DE               	movf	postinc2,w,c
  8062   00521C  5906               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  8063   00521E  50DE               	movf	postinc2,w,c
  8064   005220  5907               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  8065   005222  A0D8               	btfss	status,0,c
  8066   005224  EF16  F029         	goto	u17171
  8067   005228  EF18  F029         	goto	u17170
  8068   00522C                     u17171:
  8069   00522C  EF1A  F029         	goto	l14560
  8070   005230                     u17170:
  8071   005230  EFF7  F027         	goto	l14518
  8072   005234                     l14560:
  8073                           
  8074                           ; BSR set to: 1
  8075                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
  8076   005234  5100               	movf	dir_sdi@csz& (0+255),w,b
  8077   005236  0100               	movlb	0	; () banked
  8078   005238  5FEF               	subwf	dir_sdi@ofs& (0+255),f,b
  8079   00523A  0101               	movlb	1	; () banked
  8080   00523C  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
  8081   00523E  0100               	movlb	0	; () banked
  8082   005240  5BF0               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
  8083   005242  0101               	movlb	1	; () banked
  8084   005244  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
  8085   005246  0100               	movlb	0	; () banked
  8086   005248  5BF1               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
  8087   00524A  0101               	movlb	1	; () banked
  8088   00524C  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
  8089   00524E  0100               	movlb	0	; () banked
  8090   005250  5BF2               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
  8091   005252                     l1048:
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  8095   005252  0101               	movlb	1	; () banked
  8096   005254  5100               	movf	dir_sdi@csz& (0+255),w,b
  8097   005256  0100               	movlb	0	; () banked
  8098   005258  5DEF               	subwf	dir_sdi@ofs& (0+255),w,b
  8099   00525A  0101               	movlb	1	; () banked
  8100   00525C  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
  8101   00525E  0100               	movlb	0	; () banked
  8102   005260  59F0               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
  8103   005262  0101               	movlb	1	; () banked
  8104   005264  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
  8105   005266  0100               	movlb	0	; () banked
  8106   005268  59F1               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
  8107   00526A  0101               	movlb	1	; () banked
  8108   00526C  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
  8109   00526E  0100               	movlb	0	; () banked
  8110   005270  59F2               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
  8111   005272  B0D8               	btfsc	status,0,c
  8112   005274  EF3E  F029         	goto	u17181
  8113   005278  EF40  F029         	goto	u17180
  8114   00527C                     u17181:
  8115   00527C  EFCE  F028         	goto	l14544
  8116   005280                     u17180:
  8117   005280                     
  8118                           ; BSR set to: 0
  8119                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
  8120   005280  C108  F06C         	movff	dir_sdi@fs,clst2sect@fs
  8121   005284  C109  F06D         	movff	dir_sdi@fs+1,clst2sect@fs+1
  8122   005288  C104  F06E         	movff	dir_sdi@clst,clst2sect@clst
  8123   00528C  C105  F06F         	movff	dir_sdi@clst+1,clst2sect@clst+1
  8124   005290  C106  F070         	movff	dir_sdi@clst+2,clst2sect@clst+2
  8125   005294  C107  F071         	movff	dir_sdi@clst+3,clst2sect@clst+3
  8126   005298  EC51  F03D         	call	_clst2sect	;wreg free
  8127   00529C  0100               	movlb	0	; () banked
  8128   00529E  EE20 F016          	lfsr	2,22
  8129   0052A2  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8130   0052A4  26D9               	addwf	fsr2l,f,c
  8131   0052A6  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8132   0052A8  22DA               	addwfc	fsr2h,f,c
  8133   0052AA  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
  8134   0052B0  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
  8135   0052B6  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
  8136   0052BC  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
  8137   0052C2                     l14564:
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
  8141   0052C2  EE20 F012          	lfsr	2,18
  8142   0052C6  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8143   0052C8  26D9               	addwf	fsr2l,f,c
  8144   0052CA  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8145   0052CC  22DA               	addwfc	fsr2h,f,c
  8146   0052CE  0060  F413  FFDE   	movff	dir_sdi@clst,postinc2
  8147   0052D4  0060  F417  FFDE   	movff	dir_sdi@clst+1,postinc2
  8148   0052DA  0060  F41B  FFDE   	movff	dir_sdi@clst+2,postinc2
  8149   0052E0  0060  F41F  FFDE   	movff	dir_sdi@clst+3,postinc2
  8150   0052E6                     
  8151                           ; BSR set to: 0
  8152                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
  8153   0052E6  EE20 F016          	lfsr	2,22
  8154   0052EA  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8155   0052EC  26D9               	addwf	fsr2l,f,c
  8156   0052EE  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8157   0052F0  22DA               	addwfc	fsr2h,f,c
  8158   0052F2  50DE               	movf	postinc2,w,c
  8159   0052F4  10DE               	iorwf	postinc2,w,c
  8160   0052F6  10DE               	iorwf	postinc2,w,c
  8161   0052F8  10DE               	iorwf	postinc2,w,c
  8162   0052FA  A4D8               	btfss	status,2,c
  8163   0052FC  EF82  F029         	goto	u17191
  8164   005300  EF84  F029         	goto	u17190
  8165   005304                     u17191:
  8166   005304  EF86  F029         	goto	l14572
  8167   005308                     u17190:
  8168   005308  EFF7  F027         	goto	l14518
  8169   00530C                     l14572:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
  8173   00530C  C0EF  F0F3         	movff	dir_sdi@ofs,??_dir_sdi
  8174   005310  C0F0  F0F4         	movff	dir_sdi@ofs+1,??_dir_sdi+1
  8175   005314  C0F1  F0F5         	movff	dir_sdi@ofs+2,??_dir_sdi+2
  8176   005318  C0F2  F0F6         	movff	dir_sdi@ofs+3,??_dir_sdi+3
  8177   00531C  0E0A               	movlw	10
  8178   00531E  EF96  F029         	goto	u17200
  8179   005322                     u17205:
  8180   005322  90D8               	bcf	status,0,c
  8181   005324  33F6               	rrcf	(??_dir_sdi+3)& (0+255),f,b
  8182   005326  33F5               	rrcf	(??_dir_sdi+2)& (0+255),f,b
  8183   005328  33F4               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  8184   00532A  33F3               	rrcf	??_dir_sdi& (0+255),f,b
  8185   00532C                     u17200:
  8186   00532C  2EE8               	decfsz	wreg,f,c
  8187   00532E  EF91  F029         	goto	u17205
  8188   005332  EE20 F016          	lfsr	2,22
  8189   005336  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8190   005338  26D9               	addwf	fsr2l,f,c
  8191   00533A  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8192   00533C  22DA               	addwfc	fsr2h,f,c
  8193   00533E  51F3               	movf	??_dir_sdi& (0+255),w,b
  8194   005340  26DE               	addwf	postinc2,f,c
  8195   005342  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  8196   005344  22DE               	addwfc	postinc2,f,c
  8197   005346  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  8198   005348  22DE               	addwfc	postinc2,f,c
  8199   00534A  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  8200   00534C  22DE               	addwfc	postinc2,f,c
  8201                           
  8202                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
  8203   00534E  0EFF               	movlw	255
  8204   005350  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  8205   005352  6FF3               	movwf	??_dir_sdi& (0+255),b
  8206   005354  0E01               	movlw	1
  8207   005356  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  8208   005358  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  8209   00535A  51F3               	movf	??_dir_sdi& (0+255),w,b
  8210   00535C  0101               	movlb	1	; () banked
  8211   00535E  2508               	addwf	dir_sdi@fs& (0+255),w,b
  8212   005360  0100               	movlb	0	; () banked
  8213   005362  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  8214   005364  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  8215   005366  0101               	movlb	1	; () banked
  8216   005368  2109               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
  8217   00536A  0100               	movlb	0	; () banked
  8218   00536C  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  8219   00536E  0E33               	movlw	51
  8220   005370  27F5               	addwf	(??_dir_sdi+2)& (0+255),f,b
  8221   005372  0E00               	movlw	0
  8222   005374  23F6               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  8223   005376  EE20 F01A          	lfsr	2,26
  8224   00537A  51ED               	movf	dir_sdi@dp& (0+255),w,b
  8225   00537C  26D9               	addwf	fsr2l,f,c
  8226   00537E  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8227   005380  22DA               	addwfc	fsr2h,f,c
  8228   005382  0060  F3D7  FFDE   	movff	??_dir_sdi+2,postinc2
  8229   005388  0060  F3DB  FFDD   	movff	??_dir_sdi+3,postdec2
  8230   00538E                     
  8231                           ; BSR set to: 0
  8232                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
  8233   00538E  0E00               	movlw	0
  8234   005390                     l1042:
  8235   005390  0012               	return		;funcret
  8236   005392                     __end_of_dir_sdi:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _dir_next *****************
  8240 ;; Defined at:
  8241 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  dp              2  154[BANK0 ] PTR struct .
  8244 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8245 ;;  stretch         2  156[BANK0 ] int 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  clst            4   41[BANK1 ] unsigned long 
  8248 ;;  ofs             4   35[BANK1 ] unsigned long 
  8249 ;;  fs              2   39[BANK1 ] PTR struct .
  8250 ;;		 -> FatFs(563), NULL(0), 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      enum E68
  8253 ;; Registers used:
  8254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Totals:         0       4      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;Total ram usage:       26 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 14
  8267 ;; This function calls:
  8268 ;;		_clst2sect
  8269 ;;		_create_chain
  8270 ;;		_dir_clear
  8271 ;;		_get_fat
  8272 ;; This function is called by:
  8273 ;;		_dir_alloc
  8274 ;;		_dir_find
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text20
  8279   0042B4                     __ptext20:
  8280                           	callstack 0
  8281   0042B4                     _dir_next:
  8282                           	callstack 12
  8283   0042B4                     
  8284                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
  8285   0042B4  0060  F3EB  FFD9   	movff	dir_next@dp,fsr2l
  8286   0042BA  0060  F3EF  FFDA   	movff	dir_next@dp+1,fsr2h
  8287   0042C0  006F FF78  F127    	movff	postinc2,dir_next@fs
  8288   0042C6  006F FF74  F128    	movff	postdec2,dir_next@fs+1
  8289   0042CC                     
  8290                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
  8291   0042CC  0100               	movlb	0	; () banked
  8292   0042CE  EE20 F00E          	lfsr	2,14
  8293   0042D2  51FA               	movf	dir_next@dp& (0+255),w,b
  8294   0042D4  26D9               	addwf	fsr2l,f,c
  8295   0042D6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8296   0042D8  22DA               	addwfc	fsr2h,f,c
  8297   0042DA  006F FF78  F117    	movff	postinc2,??_dir_next
  8298   0042E0  006F FF78  F118    	movff	postinc2,??_dir_next+1
  8299   0042E6  006F FF78  F119    	movff	postinc2,??_dir_next+2
  8300   0042EC  006F FF78  F11A    	movff	postinc2,??_dir_next+3
  8301   0042F2  0E20               	movlw	32
  8302   0042F4  0101               	movlb	1	; () banked
  8303   0042F6  2517               	addwf	??_dir_next& (0+255),w,b
  8304   0042F8  6F23               	movwf	dir_next@ofs& (0+255),b
  8305   0042FA  0E00               	movlw	0
  8306   0042FC  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
  8307   0042FE  6F24               	movwf	(dir_next@ofs+1)& (0+255),b
  8308   004300  0E00               	movlw	0
  8309   004302  2119               	addwfc	(??_dir_next+2)& (0+255),w,b
  8310   004304  6F25               	movwf	(dir_next@ofs+2)& (0+255),b
  8311   004306  0E00               	movlw	0
  8312   004308  211A               	addwfc	(??_dir_next+3)& (0+255),w,b
  8313   00430A  6F26               	movwf	(dir_next@ofs+3)& (0+255),b
  8314   00430C                     
  8315                           ; BSR set to: 1
  8316                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
  8317   00430C  0100               	movlb	0	; () banked
  8318   00430E  EE20 F016          	lfsr	2,22
  8319   004312  51FA               	movf	dir_next@dp& (0+255),w,b
  8320   004314  26D9               	addwf	fsr2l,f,c
  8321   004316  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8322   004318  22DA               	addwfc	fsr2h,f,c
  8323   00431A  50DE               	movf	postinc2,w,c
  8324   00431C  10DE               	iorwf	postinc2,w,c
  8325   00431E  10DE               	iorwf	postinc2,w,c
  8326   004320  10DE               	iorwf	postinc2,w,c
  8327   004322  B4D8               	btfsc	status,2,c
  8328   004324  EF96  F021         	goto	u17211
  8329   004328  EF98  F021         	goto	u17210
  8330   00432C                     u17211:
  8331   00432C  EFA4  F021         	goto	l14594
  8332   004330                     u17210:
  8333   004330                     
  8334                           ; BSR set to: 0
  8335   004330  0101               	movlb	1	; () banked
  8336   004332  5126               	movf	(dir_next@ofs+3)& (0+255),w,b
  8337   004334  E109               	bnz	u17220
  8338   004336  0E20               	movlw	32
  8339   004338  5D25               	subwf	(dir_next@ofs+2)& (0+255),w,b
  8340   00433A  A0D8               	btfss	status,0,c
  8341   00433C  EFA2  F021         	goto	u17221
  8342   004340  EFA4  F021         	goto	u17220
  8343   004344                     u17221:
  8344   004344  EFA7  F021         	goto	l14598
  8345   004348                     u17220:
  8346   004348                     l14594:
  8347   004348  0E04               	movlw	4
  8348   00434A  EF92  F023         	goto	l1067
  8349   00434E                     l14598:
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
  8353   00434E  0EFF               	movlw	255
  8354   004350  1523               	andwf	dir_next@ofs& (0+255),w,b
  8355   004352  6F17               	movwf	??_dir_next& (0+255),b
  8356   004354  0E01               	movlw	1
  8357   004356  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
  8358   004358  6F18               	movwf	(??_dir_next+1)& (0+255),b
  8359   00435A  0E00               	movlw	0
  8360   00435C  1525               	andwf	(dir_next@ofs+2)& (0+255),w,b
  8361   00435E  6F19               	movwf	(??_dir_next+2)& (0+255),b
  8362   004360  0E00               	movlw	0
  8363   004362  1526               	andwf	(dir_next@ofs+3)& (0+255),w,b
  8364   004364  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  8365   004366  5117               	movf	??_dir_next& (0+255),w,b
  8366   004368  1118               	iorwf	(??_dir_next+1)& (0+255),w,b
  8367   00436A  1119               	iorwf	(??_dir_next+2)& (0+255),w,b
  8368   00436C  111A               	iorwf	(??_dir_next+3)& (0+255),w,b
  8369   00436E  A4D8               	btfss	status,2,c
  8370   004370  EFBC  F021         	goto	u17231
  8371   004374  EFBE  F021         	goto	u17230
  8372   004378                     u17231:
  8373   004378  EF60  F023         	goto	l14666
  8374   00437C                     u17230:
  8375   00437C                     
  8376                           ; BSR set to: 1
  8377                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
  8378   00437C  0100               	movlb	0	; () banked
  8379   00437E  EE20 F016          	lfsr	2,22
  8380   004382  51FA               	movf	dir_next@dp& (0+255),w,b
  8381   004384  26D9               	addwf	fsr2l,f,c
  8382   004386  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8383   004388  22DA               	addwfc	fsr2h,f,c
  8384   00438A  2ADE               	incf	postinc2,f,c
  8385   00438C  0E00               	movlw	0
  8386   00438E  22DE               	addwfc	postinc2,f,c
  8387   004390  22DE               	addwfc	postinc2,f,c
  8388   004392  22DE               	addwfc	postinc2,f,c
  8389                           
  8390                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
  8391   004394  EE20 F012          	lfsr	2,18
  8392   004398  51FA               	movf	dir_next@dp& (0+255),w,b
  8393   00439A  26D9               	addwf	fsr2l,f,c
  8394   00439C  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8395   00439E  22DA               	addwfc	fsr2h,f,c
  8396   0043A0  50DE               	movf	postinc2,w,c
  8397   0043A2  10DE               	iorwf	postinc2,w,c
  8398   0043A4  10DE               	iorwf	postinc2,w,c
  8399   0043A6  10DE               	iorwf	postinc2,w,c
  8400   0043A8  A4D8               	btfss	status,2,c
  8401   0043AA  EFD9  F021         	goto	u17241
  8402   0043AE  EFDB  F021         	goto	u17240
  8403   0043B2                     u17241:
  8404   0043B2  EF1D  F022         	goto	l14610
  8405   0043B6                     u17240:
  8406   0043B6                     
  8407                           ; BSR set to: 0
  8408                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
  8409   0043B6  0101               	movlb	1	; () banked
  8410   0043B8  EE20 F007          	lfsr	2,7
  8411   0043BC  5127               	movf	dir_next@fs& (0+255),w,b
  8412   0043BE  26D9               	addwf	fsr2l,f,c
  8413   0043C0  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  8414   0043C2  22DA               	addwfc	fsr2h,f,c
  8415   0043C4  006F FF78  F117    	movff	postinc2,??_dir_next
  8416   0043CA  006F FF74  F118    	movff	postdec2,??_dir_next+1
  8417   0043D0  5117               	movf	??_dir_next& (0+255),w,b
  8418   0043D2  6F19               	movwf	(??_dir_next+2)& (0+255),b
  8419   0043D4  5118               	movf	(??_dir_next+1)& (0+255),w,b
  8420   0043D6  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  8421   0043D8  6B1B               	clrf	(??_dir_next+4)& (0+255),b
  8422   0043DA  6B1C               	clrf	(??_dir_next+5)& (0+255),b
  8423   0043DC  C123  F11D         	movff	dir_next@ofs,??_dir_next+6
  8424   0043E0  C124  F11E         	movff	dir_next@ofs+1,??_dir_next+7
  8425   0043E4  C125  F11F         	movff	dir_next@ofs+2,??_dir_next+8
  8426   0043E8  C126  F120         	movff	dir_next@ofs+3,??_dir_next+9
  8427   0043EC  0E06               	movlw	6
  8428   0043EE  EFFE  F021         	goto	u17250
  8429   0043F2                     u17255:
  8430   0043F2  90D8               	bcf	status,0,c
  8431   0043F4  3320               	rrcf	(??_dir_next+9)& (0+255),f,b
  8432   0043F6  331F               	rrcf	(??_dir_next+8)& (0+255),f,b
  8433   0043F8  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
  8434   0043FA  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
  8435   0043FC                     u17250:
  8436   0043FC  2EE8               	decfsz	wreg,f,c
  8437   0043FE  EFF9  F021         	goto	u17255
  8438   004402  5119               	movf	(??_dir_next+2)& (0+255),w,b
  8439   004404  5D1D               	subwf	(??_dir_next+6)& (0+255),w,b
  8440   004406  511A               	movf	(??_dir_next+3)& (0+255),w,b
  8441   004408  591E               	subwfb	(??_dir_next+7)& (0+255),w,b
  8442   00440A  511B               	movf	(??_dir_next+4)& (0+255),w,b
  8443   00440C  591F               	subwfb	(??_dir_next+8)& (0+255),w,b
  8444   00440E  511C               	movf	(??_dir_next+5)& (0+255),w,b
  8445   004410  5920               	subwfb	(??_dir_next+9)& (0+255),w,b
  8446   004412  A0D8               	btfss	status,0,c
  8447   004414  EF0E  F022         	goto	u17261
  8448   004418  EF10  F022         	goto	u17260
  8449   00441C                     u17261:
  8450   00441C  EF60  F023         	goto	l14666
  8451   004420                     u17260:
  8452   004420                     
  8453                           ; BSR set to: 1
  8454                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
  8455   004420  0100               	movlb	0	; () banked
  8456   004422  EE20 F016          	lfsr	2,22
  8457   004426  51FA               	movf	dir_next@dp& (0+255),w,b
  8458   004428  26D9               	addwf	fsr2l,f,c
  8459   00442A  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8460   00442C  22DA               	addwfc	fsr2h,f,c
  8461   00442E  6ADE               	clrf	postinc2,c
  8462   004430  6ADE               	clrf	postinc2,c
  8463   004432  6ADE               	clrf	postinc2,c
  8464   004434  6ADD               	clrf	postdec2,c
  8465   004436  EFA4  F021         	goto	l14594
  8466   00443A                     l14610:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
  8470   00443A  0101               	movlb	1	; () banked
  8471   00443C  EE20 F009          	lfsr	2,9
  8472   004440  5127               	movf	dir_next@fs& (0+255),w,b
  8473   004442  26D9               	addwf	fsr2l,f,c
  8474   004444  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  8475   004446  22DA               	addwfc	fsr2h,f,c
  8476   004448  006F FF78  F117    	movff	postinc2,??_dir_next
  8477   00444E  006F FF74  F118    	movff	postdec2,??_dir_next+1
  8478   004454  0EFF               	movlw	255
  8479   004456  2517               	addwf	??_dir_next& (0+255),w,b
  8480   004458  6F19               	movwf	(??_dir_next+2)& (0+255),b
  8481   00445A  0EFF               	movlw	255
  8482   00445C  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
  8483   00445E  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  8484   004460  C123  F11B         	movff	dir_next@ofs,??_dir_next+4
  8485   004464  C124  F11C         	movff	dir_next@ofs+1,??_dir_next+5
  8486   004468  C125  F11D         	movff	dir_next@ofs+2,??_dir_next+6
  8487   00446C  C126  F11E         	movff	dir_next@ofs+3,??_dir_next+7
  8488   004470  0E0A               	movlw	10
  8489   004472  EF40  F022         	goto	u17270
  8490   004476                     u17275:
  8491   004476  90D8               	bcf	status,0,c
  8492   004478  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
  8493   00447A  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
  8494   00447C  331C               	rrcf	(??_dir_next+5)& (0+255),f,b
  8495   00447E  331B               	rrcf	(??_dir_next+4)& (0+255),f,b
  8496   004480                     u17270:
  8497   004480  2EE8               	decfsz	wreg,f,c
  8498   004482  EF3B  F022         	goto	u17275
  8499   004486  5119               	movf	(??_dir_next+2)& (0+255),w,b
  8500   004488  151B               	andwf	(??_dir_next+4)& (0+255),w,b
  8501   00448A  6F1F               	movwf	(??_dir_next+8)& (0+255),b
  8502   00448C  511A               	movf	(??_dir_next+3)& (0+255),w,b
  8503   00448E  151C               	andwf	(??_dir_next+5)& (0+255),w,b
  8504   004490  6F20               	movwf	(??_dir_next+9)& (0+255),b
  8505   004492  0E00               	movlw	0
  8506   004494  151D               	andwf	(??_dir_next+6)& (0+255),w,b
  8507   004496  6F21               	movwf	(??_dir_next+10)& (0+255),b
  8508   004498  0E00               	movlw	0
  8509   00449A  151E               	andwf	(??_dir_next+7)& (0+255),w,b
  8510   00449C  6F22               	movwf	(??_dir_next+11)& (0+255),b
  8511   00449E  511F               	movf	(??_dir_next+8)& (0+255),w,b
  8512   0044A0  1120               	iorwf	(??_dir_next+9)& (0+255),w,b
  8513   0044A2  1121               	iorwf	(??_dir_next+10)& (0+255),w,b
  8514   0044A4  1122               	iorwf	(??_dir_next+11)& (0+255),w,b
  8515   0044A6  A4D8               	btfss	status,2,c
  8516   0044A8  EF58  F022         	goto	u17281
  8517   0044AC  EF5A  F022         	goto	u17280
  8518   0044B0                     u17281:
  8519   0044B0  EF60  F023         	goto	l14666
  8520   0044B4                     u17280:
  8521   0044B4                     
  8522                           ; BSR set to: 1
  8523                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
  8524   0044B4  C0FA  F0D3         	movff	dir_next@dp,get_fat@obj
  8525   0044B8  C0FB  F0D4         	movff	dir_next@dp+1,get_fat@obj+1
  8526   0044BC  0100               	movlb	0	; () banked
  8527   0044BE  EE20 F012          	lfsr	2,18
  8528   0044C2  51FA               	movf	dir_next@dp& (0+255),w,b
  8529   0044C4  26D9               	addwf	fsr2l,f,c
  8530   0044C6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8531   0044C8  22DA               	addwfc	fsr2h,f,c
  8532   0044CA  006F FF78  F0D5    	movff	postinc2,get_fat@clst
  8533   0044D0  006F FF78  F0D6    	movff	postinc2,get_fat@clst+1
  8534   0044D6  006F FF78  F0D7    	movff	postinc2,get_fat@clst+2
  8535   0044DC  006F FF78  F0D8    	movff	postinc2,get_fat@clst+3
  8536   0044E2  ECBC  F025         	call	_get_fat	;wreg free
  8537   0044E6  C0D3  F129         	movff	?_get_fat,dir_next@clst
  8538   0044EA  C0D4  F12A         	movff	?_get_fat+1,dir_next@clst+1
  8539   0044EE  C0D5  F12B         	movff	?_get_fat+2,dir_next@clst+2
  8540   0044F2  C0D6  F12C         	movff	?_get_fat+3,dir_next@clst+3
  8541   0044F6                     
  8542                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
  8543   0044F6  0101               	movlb	1	; () banked
  8544   0044F8  512C               	movf	(dir_next@clst+3)& (0+255),w,b
  8545   0044FA  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8546   0044FC  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8547   0044FE  E107               	bnz	u17291
  8548   004500  0E02               	movlw	2
  8549   004502  5D29               	subwf	dir_next@clst& (0+255),w,b
  8550   004504  B0D8               	btfsc	status,0,c
  8551   004506  EF87  F022         	goto	u17291
  8552   00450A  EF89  F022         	goto	u17290
  8553   00450E                     u17291:
  8554   00450E  EF8C  F022         	goto	l14620
  8555   004512                     u17290:
  8556   004512                     l14616:
  8557                           
  8558                           ; BSR set to: 1
  8559   004512  0E02               	movlw	2
  8560   004514  EF92  F023         	goto	l1067
  8561   004518                     l14620:
  8562                           
  8563                           ; BSR set to: 1
  8564                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8565   004518  2929               	incf	dir_next@clst& (0+255),w,b
  8566   00451A  E10A               	bnz	u17301
  8567   00451C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
  8568   00451E  E108               	bnz	u17301
  8569   004520  292B               	incf	(dir_next@clst+2)& (0+255),w,b
  8570   004522  E106               	bnz	u17301
  8571   004524  292C               	incf	(dir_next@clst+3)& (0+255),w,b
  8572   004526  A4D8               	btfss	status,2,c
  8573   004528  EF98  F022         	goto	u17301
  8574   00452C  EF9A  F022         	goto	u17300
  8575   004530                     u17301:
  8576   004530  EF9D  F022         	goto	l14626
  8577   004534                     u17300:
  8578   004534                     l14622:
  8579   004534  0E01               	movlw	1
  8580   004536  EF92  F023         	goto	l1067
  8581   00453A                     l14626:
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
  8585   00453A  EE20 F017          	lfsr	2,23
  8586   00453E  5127               	movf	dir_next@fs& (0+255),w,b
  8587   004540  26D9               	addwf	fsr2l,f,c
  8588   004542  5128               	movf	(dir_next@fs+1)& (0+255),w,b
  8589   004544  22DA               	addwfc	fsr2h,f,c
  8590   004546  50DE               	movf	postinc2,w,c
  8591   004548  5D29               	subwf	dir_next@clst& (0+255),w,b
  8592   00454A  50DE               	movf	postinc2,w,c
  8593   00454C  592A               	subwfb	(dir_next@clst+1)& (0+255),w,b
  8594   00454E  50DE               	movf	postinc2,w,c
  8595   004550  592B               	subwfb	(dir_next@clst+2)& (0+255),w,b
  8596   004552  50DE               	movf	postinc2,w,c
  8597   004554  592C               	subwfb	(dir_next@clst+3)& (0+255),w,b
  8598   004556  A0D8               	btfss	status,0,c
  8599   004558  EFB0  F022         	goto	u17311
  8600   00455C  EFB2  F022         	goto	u17310
  8601   004560                     u17311:
  8602   004560  EF2C  F023         	goto	l1075
  8603   004564                     u17310:
  8604   004564                     
  8605                           ; BSR set to: 1
  8606                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
  8607   004564  0100               	movlb	0	; () banked
  8608   004566  51FC               	movf	dir_next@stretch& (0+255),w,b
  8609   004568  11FD               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  8610   00456A  A4D8               	btfss	status,2,c
  8611   00456C  EFBA  F022         	goto	u17321
  8612   004570  EFBC  F022         	goto	u17320
  8613   004574                     u17321:
  8614   004574  EFC8  F022         	goto	l14636
  8615   004578                     u17320:
  8616   004578                     
  8617                           ; BSR set to: 0
  8618                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
  8619   004578  EE20 F016          	lfsr	2,22
  8620   00457C  51FA               	movf	dir_next@dp& (0+255),w,b
  8621   00457E  26D9               	addwf	fsr2l,f,c
  8622   004580  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8623   004582  22DA               	addwfc	fsr2h,f,c
  8624   004584  6ADE               	clrf	postinc2,c
  8625   004586  6ADE               	clrf	postinc2,c
  8626   004588  6ADE               	clrf	postinc2,c
  8627   00458A  6ADD               	clrf	postdec2,c
  8628   00458C  EFA4  F021         	goto	l14594
  8629   004590                     l14636:
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
  8633   004590  C0FA  F0F4         	movff	dir_next@dp,create_chain@obj
  8634   004594  C0FB  F0F5         	movff	dir_next@dp+1,create_chain@obj+1
  8635   004598  EE20 F012          	lfsr	2,18
  8636   00459C  51FA               	movf	dir_next@dp& (0+255),w,b
  8637   00459E  26D9               	addwf	fsr2l,f,c
  8638   0045A0  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8639   0045A2  22DA               	addwfc	fsr2h,f,c
  8640   0045A4  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  8641   0045AA  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  8642   0045B0  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  8643   0045B6  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  8644   0045BC  ECFA  F016         	call	_create_chain	;wreg free
  8645   0045C0  C0F4  F129         	movff	?_create_chain,dir_next@clst
  8646   0045C4  C0F5  F12A         	movff	?_create_chain+1,dir_next@clst+1
  8647   0045C8  C0F6  F12B         	movff	?_create_chain+2,dir_next@clst+2
  8648   0045CC  C0F7  F12C         	movff	?_create_chain+3,dir_next@clst+3
  8649   0045D0                     
  8650                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
  8651   0045D0  0101               	movlb	1	; () banked
  8652   0045D2  5129               	movf	dir_next@clst& (0+255),w,b
  8653   0045D4  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8654   0045D6  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8655   0045D8  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
  8656   0045DA  A4D8               	btfss	status,2,c
  8657   0045DC  EFF2  F022         	goto	u17331
  8658   0045E0  EFF4  F022         	goto	u17330
  8659   0045E4                     u17331:
  8660   0045E4  EFF7  F022         	goto	l14644
  8661   0045E8                     u17330:
  8662   0045E8                     
  8663                           ; BSR set to: 1
  8664   0045E8  0E07               	movlw	7
  8665   0045EA  EF92  F023         	goto	l1067
  8666   0045EE                     l14644:
  8667                           
  8668                           ; BSR set to: 1
  8669                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
  8670   0045EE  0529               	decf	dir_next@clst& (0+255),w,b
  8671   0045F0  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8672   0045F2  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8673   0045F4  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
  8674   0045F6  A4D8               	btfss	status,2,c
  8675   0045F8  EF00  F023         	goto	u17341
  8676   0045FC  EF02  F023         	goto	u17340
  8677   004600                     u17341:
  8678   004600  EF04  F023         	goto	l14650
  8679   004604                     u17340:
  8680   004604  EF89  F022         	goto	l14616
  8681   004608                     l14650:
  8682                           
  8683                           ; BSR set to: 1
  8684                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8685   004608  2929               	incf	dir_next@clst& (0+255),w,b
  8686   00460A  E10A               	bnz	u17351
  8687   00460C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
  8688   00460E  E108               	bnz	u17351
  8689   004610  292B               	incf	(dir_next@clst+2)& (0+255),w,b
  8690   004612  E106               	bnz	u17351
  8691   004614  292C               	incf	(dir_next@clst+3)& (0+255),w,b
  8692   004616  A4D8               	btfss	status,2,c
  8693   004618  EF10  F023         	goto	u17351
  8694   00461C  EF12  F023         	goto	u17350
  8695   004620                     u17351:
  8696   004620  EF14  F023         	goto	l14656
  8697   004624                     u17350:
  8698   004624  EF9A  F022         	goto	l14622
  8699   004628                     l14656:
  8700                           
  8701                           ; BSR set to: 1
  8702                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
  8703   004628  C127  F0C8         	movff	dir_next@fs,dir_clear@fs
  8704   00462C  C128  F0C9         	movff	dir_next@fs+1,dir_clear@fs+1
  8705   004630  C129  F0CA         	movff	dir_next@clst,dir_clear@clst
  8706   004634  C12A  F0CB         	movff	dir_next@clst+1,dir_clear@clst+1
  8707   004638  C12B  F0CC         	movff	dir_next@clst+2,dir_clear@clst+2
  8708   00463C  C12C  F0CD         	movff	dir_next@clst+3,dir_clear@clst+3
  8709   004640  EC22  F036         	call	_dir_clear	;wreg free
  8710   004644  0900               	iorlw	0
  8711   004646  B4D8               	btfsc	status,2,c
  8712   004648  EF28  F023         	goto	u17361
  8713   00464C  EF2A  F023         	goto	u17360
  8714   004650                     u17361:
  8715   004650  EF2C  F023         	goto	l1075
  8716   004654                     u17360:
  8717   004654  EF9A  F022         	goto	l14622
  8718   004658                     l1075:
  8719                           
  8720                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
  8721   004658  0100               	movlb	0	; () banked
  8722   00465A  EE20 F012          	lfsr	2,18
  8723   00465E  51FA               	movf	dir_next@dp& (0+255),w,b
  8724   004660  26D9               	addwf	fsr2l,f,c
  8725   004662  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8726   004664  22DA               	addwfc	fsr2h,f,c
  8727   004666  0060  F4A7  FFDE   	movff	dir_next@clst,postinc2
  8728   00466C  0060  F4AB  FFDE   	movff	dir_next@clst+1,postinc2
  8729   004672  0060  F4AF  FFDE   	movff	dir_next@clst+2,postinc2
  8730   004678  0060  F4B3  FFDE   	movff	dir_next@clst+3,postinc2
  8731   00467E                     
  8732                           ; BSR set to: 0
  8733                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
  8734   00467E  C127  F06C         	movff	dir_next@fs,clst2sect@fs
  8735   004682  C128  F06D         	movff	dir_next@fs+1,clst2sect@fs+1
  8736   004686  C129  F06E         	movff	dir_next@clst,clst2sect@clst
  8737   00468A  C12A  F06F         	movff	dir_next@clst+1,clst2sect@clst+1
  8738   00468E  C12B  F070         	movff	dir_next@clst+2,clst2sect@clst+2
  8739   004692  C12C  F071         	movff	dir_next@clst+3,clst2sect@clst+3
  8740   004696  EC51  F03D         	call	_clst2sect	;wreg free
  8741   00469A  0100               	movlb	0	; () banked
  8742   00469C  EE20 F016          	lfsr	2,22
  8743   0046A0  51FA               	movf	dir_next@dp& (0+255),w,b
  8744   0046A2  26D9               	addwf	fsr2l,f,c
  8745   0046A4  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8746   0046A6  22DA               	addwfc	fsr2h,f,c
  8747   0046A8  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
  8748   0046AE  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
  8749   0046B4  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
  8750   0046BA  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
  8751   0046C0                     l14666:
  8752                           
  8753                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
  8754   0046C0  0100               	movlb	0	; () banked
  8755   0046C2  EE20 F00E          	lfsr	2,14
  8756   0046C6  51FA               	movf	dir_next@dp& (0+255),w,b
  8757   0046C8  26D9               	addwf	fsr2l,f,c
  8758   0046CA  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8759   0046CC  22DA               	addwfc	fsr2h,f,c
  8760   0046CE  0060  F48F  FFDE   	movff	dir_next@ofs,postinc2
  8761   0046D4  0060  F493  FFDE   	movff	dir_next@ofs+1,postinc2
  8762   0046DA  0060  F497  FFDE   	movff	dir_next@ofs+2,postinc2
  8763   0046E0  0060  F49B  FFDE   	movff	dir_next@ofs+3,postinc2
  8764   0046E6                     
  8765                           ; BSR set to: 0
  8766                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
  8767   0046E6  0EFF               	movlw	255
  8768   0046E8  0101               	movlb	1	; () banked
  8769   0046EA  1523               	andwf	dir_next@ofs& (0+255),w,b
  8770   0046EC  6F17               	movwf	??_dir_next& (0+255),b
  8771   0046EE  0E01               	movlw	1
  8772   0046F0  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
  8773   0046F2  6F18               	movwf	(??_dir_next+1)& (0+255),b
  8774   0046F4  5117               	movf	??_dir_next& (0+255),w,b
  8775   0046F6  2527               	addwf	dir_next@fs& (0+255),w,b
  8776   0046F8  6F19               	movwf	(??_dir_next+2)& (0+255),b
  8777   0046FA  5118               	movf	(??_dir_next+1)& (0+255),w,b
  8778   0046FC  2128               	addwfc	(dir_next@fs+1)& (0+255),w,b
  8779   0046FE  6F1A               	movwf	(??_dir_next+3)& (0+255),b
  8780   004700  0E33               	movlw	51
  8781   004702  2719               	addwf	(??_dir_next+2)& (0+255),f,b
  8782   004704  0E00               	movlw	0
  8783   004706  231A               	addwfc	(??_dir_next+3)& (0+255),f,b
  8784   004708  0100               	movlb	0	; () banked
  8785   00470A  EE20 F01A          	lfsr	2,26
  8786   00470E  51FA               	movf	dir_next@dp& (0+255),w,b
  8787   004710  26D9               	addwf	fsr2l,f,c
  8788   004712  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
  8789   004714  22DA               	addwfc	fsr2h,f,c
  8790   004716  0060  F467  FFDE   	movff	??_dir_next+2,postinc2
  8791   00471C  0060  F46B  FFDD   	movff	??_dir_next+3,postdec2
  8792   004722                     
  8793                           ; BSR set to: 0
  8794                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
  8795   004722  0E00               	movlw	0
  8796   004724                     l1067:
  8797   004724  0012               	return		;funcret
  8798   004726                     __end_of_dir_next:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _dir_clear *****************
  8802 ;; Defined at:
  8803 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  fs              2  104[BANK0 ] PTR struct .
  8806 ;;		 -> FatFs(563), NULL(0), 
  8807 ;;  clst            4  106[BANK0 ] unsigned long 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  sect            4  114[BANK0 ] unsigned long 
  8810 ;;  n               2  120[BANK0 ] unsigned int 
  8811 ;;  szb             2  118[BANK0 ] unsigned int 
  8812 ;;  ibuf            2  112[BANK0 ] PTR unsigned char 
  8813 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      enum E68
  8816 ;; Registers used:
  8817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8823 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8824 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;Total ram usage:       18 bytes
  8828 ;; Hardware stack levels used: 1
  8829 ;; Hardware stack levels required when called: 11
  8830 ;; This function calls:
  8831 ;;		_clst2sect
  8832 ;;		_disk_write
  8833 ;;		_mem_set
  8834 ;;		_sync_window
  8835 ;; This function is called by:
  8836 ;;		_dir_next
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           	psect	text21
  8841   006C44                     __ptext21:
  8842                           	callstack 0
  8843   006C44                     _dir_clear:
  8844                           	callstack 14
  8845   006C44                     
  8846                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
  8847   006C44  C0C8  F0B5         	movff	dir_clear@fs,sync_window@fs
  8848   006C48  C0C9  F0B6         	movff	dir_clear@fs+1,sync_window@fs+1
  8849   006C4C  EC8B  F031         	call	_sync_window	;wreg free
  8850   006C50  0900               	iorlw	0
  8851   006C52  B4D8               	btfsc	status,2,c
  8852   006C54  EF2E  F036         	goto	u16471
  8853   006C58  EF30  F036         	goto	u16470
  8854   006C5C                     u16471:
  8855   006C5C  EF33  F036         	goto	l14204
  8856   006C60                     u16470:
  8857   006C60  0E01               	movlw	1
  8858   006C62  EFCD  F036         	goto	l1025
  8859   006C66                     l14204:
  8860                           
  8861                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
  8862   006C66  C0C8  F06C         	movff	dir_clear@fs,clst2sect@fs
  8863   006C6A  C0C9  F06D         	movff	dir_clear@fs+1,clst2sect@fs+1
  8864   006C6E  C0CA  F06E         	movff	dir_clear@clst,clst2sect@clst
  8865   006C72  C0CB  F06F         	movff	dir_clear@clst+1,clst2sect@clst+1
  8866   006C76  C0CC  F070         	movff	dir_clear@clst+2,clst2sect@clst+2
  8867   006C7A  C0CD  F071         	movff	dir_clear@clst+3,clst2sect@clst+3
  8868   006C7E  EC51  F03D         	call	_clst2sect	;wreg free
  8869   006C82  C06C  F0D2         	movff	?_clst2sect,dir_clear@sect
  8870   006C86  C06D  F0D3         	movff	?_clst2sect+1,dir_clear@sect+1
  8871   006C8A  C06E  F0D4         	movff	?_clst2sect+2,dir_clear@sect+2
  8872   006C8E  C06F  F0D5         	movff	?_clst2sect+3,dir_clear@sect+3
  8873   006C92                     
  8874                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
  8875   006C92  0100               	movlb	0	; () banked
  8876   006C94  EE20 F02F          	lfsr	2,47
  8877   006C98  51C8               	movf	dir_clear@fs& (0+255),w,b
  8878   006C9A  26D9               	addwf	fsr2l,f,c
  8879   006C9C  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
  8880   006C9E  22DA               	addwfc	fsr2h,f,c
  8881   006CA0  0060  F34B  FFDE   	movff	dir_clear@sect,postinc2
  8882   006CA6  0060  F34F  FFDE   	movff	dir_clear@sect+1,postinc2
  8883   006CAC  0060  F353  FFDE   	movff	dir_clear@sect+2,postinc2
  8884   006CB2  0060  F357  FFDE   	movff	dir_clear@sect+3,postinc2
  8885   006CB8                     
  8886                           ; BSR set to: 0
  8887                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
  8888   006CB8  0E33               	movlw	51
  8889   006CBA  25C8               	addwf	dir_clear@fs& (0+255),w,b
  8890   006CBC  6F60               	movwf	mem_set@dst& (0+255),b
  8891   006CBE  0E00               	movlw	0
  8892   006CC0  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  8893   006CC2  6F61               	movwf	(mem_set@dst+1)& (0+255),b
  8894   006CC4  0E00               	movlw	0
  8895   006CC6  6F63               	movwf	(mem_set@val+1)& (0+255),b
  8896   006CC8  0E00               	movlw	0
  8897   006CCA  6F62               	movwf	mem_set@val& (0+255),b
  8898   006CCC  0E02               	movlw	2
  8899   006CCE  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  8900   006CD0  0E00               	movlw	0
  8901   006CD2  6F64               	movwf	mem_set@cnt& (0+255),b
  8902   006CD4  ECF2  F044         	call	_mem_set	;wreg free
  8903   006CD8                     
  8904                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
  8905   006CD8  0E33               	movlw	51
  8906   006CDA  0100               	movlb	0	; () banked
  8907   006CDC  25C8               	addwf	dir_clear@fs& (0+255),w,b
  8908   006CDE  6FD0               	movwf	dir_clear@ibuf& (0+255),b
  8909   006CE0  0E00               	movlw	0
  8910   006CE2  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  8911   006CE4  6FD1               	movwf	(dir_clear@ibuf+1)& (0+255),b
  8912   006CE6                     
  8913                           ; BSR set to: 0
  8914   006CE6  0E00               	movlw	0
  8915   006CE8  6FD7               	movwf	(dir_clear@szb+1)& (0+255),b
  8916   006CEA  0E01               	movlw	1
  8917   006CEC  6FD6               	movwf	dir_clear@szb& (0+255),b
  8918   006CEE                     
  8919                           ; BSR set to: 0
  8920                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
  8921   006CEE  0E00               	movlw	0
  8922   006CF0  6FD9               	movwf	(dir_clear@n+1)& (0+255),b
  8923   006CF2  0E00               	movlw	0
  8924   006CF4  6FD8               	movwf	dir_clear@n& (0+255),b
  8925   006CF6  EF82  F036         	goto	l14218
  8926   006CFA                     l14216:
  8927   006CFA  0100               	movlb	0	; () banked
  8928   006CFC  51D6               	movf	dir_clear@szb& (0+255),w,b
  8929   006CFE  27D8               	addwf	dir_clear@n& (0+255),f,b
  8930   006D00  51D7               	movf	(dir_clear@szb+1)& (0+255),w,b
  8931   006D02  23D9               	addwfc	(dir_clear@n+1)& (0+255),f,b
  8932   006D04                     l14218:
  8933                           
  8934                           ; BSR set to: 0
  8935   006D04  EE20 F009          	lfsr	2,9
  8936   006D08  51C8               	movf	dir_clear@fs& (0+255),w,b
  8937   006D0A  26D9               	addwf	fsr2l,f,c
  8938   006D0C  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
  8939   006D0E  22DA               	addwfc	fsr2h,f,c
  8940   006D10  50DE               	movf	postinc2,w,c
  8941   006D12  5DD8               	subwf	dir_clear@n& (0+255),w,b
  8942   006D14  50DE               	movf	postinc2,w,c
  8943   006D16  59D9               	subwfb	(dir_clear@n+1)& (0+255),w,b
  8944   006D18  B0D8               	btfsc	status,0,c
  8945   006D1A  EF91  F036         	goto	u16481
  8946   006D1E  EF93  F036         	goto	u16480
  8947   006D22                     u16481:
  8948   006D22  EFB8  F036         	goto	l14222
  8949   006D26                     u16480:
  8950   006D26                     
  8951                           ; BSR set to: 0
  8952   006D26  C0D0  F0AB         	movff	dir_clear@ibuf,disk_write@buff
  8953   006D2A  C0D1  F0AC         	movff	dir_clear@ibuf+1,disk_write@buff+1
  8954   006D2E  51D8               	movf	dir_clear@n& (0+255),w,b
  8955   006D30  25D2               	addwf	dir_clear@sect& (0+255),w,b
  8956   006D32  6FAD               	movwf	disk_write@sector& (0+255),b
  8957   006D34  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
  8958   006D36  21D3               	addwfc	(dir_clear@sect+1)& (0+255),w,b
  8959   006D38  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
  8960   006D3A  0E00               	movlw	0
  8961   006D3C  21D4               	addwfc	(dir_clear@sect+2)& (0+255),w,b
  8962   006D3E  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
  8963   006D40  0E00               	movlw	0
  8964   006D42  21D5               	addwfc	(dir_clear@sect+3)& (0+255),w,b
  8965   006D44  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
  8966   006D46  C0D6  F0B1         	movff	dir_clear@szb,disk_write@count
  8967   006D4A  C0D7  F0B2         	movff	dir_clear@szb+1,disk_write@count+1
  8968   006D4E  EE20 F001          	lfsr	2,1
  8969   006D52  51C8               	movf	dir_clear@fs& (0+255),w,b
  8970   006D54  26D9               	addwf	fsr2l,f,c
  8971   006D56  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
  8972   006D58  22DA               	addwfc	fsr2h,f,c
  8973   006D5A  50DF               	movf	indf2,w,c
  8974   006D5C  EC3D  F042         	call	_disk_write
  8975   006D60  0900               	iorlw	0
  8976   006D62  B4D8               	btfsc	status,2,c
  8977   006D64  EFB6  F036         	goto	u16491
  8978   006D68  EFB8  F036         	goto	u16490
  8979   006D6C                     u16491:
  8980   006D6C  EF7D  F036         	goto	l14216
  8981   006D70                     u16490:
  8982   006D70                     l14222:
  8983                           
  8984                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
  8985   006D70  0100               	movlb	0	; () banked
  8986   006D72  EE20 F009          	lfsr	2,9
  8987   006D76  51C8               	movf	dir_clear@fs& (0+255),w,b
  8988   006D78  26D9               	addwf	fsr2l,f,c
  8989   006D7A  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
  8990   006D7C  22DA               	addwfc	fsr2h,f,c
  8991   006D7E  51D8               	movf	dir_clear@n& (0+255),w,b
  8992   006D80  18DE               	xorwf	postinc2,w,c
  8993   006D82  E107               	bnz	u16501
  8994   006D84  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
  8995   006D86  18DE               	xorwf	postinc2,w,c
  8996   006D88  A4D8               	btfss	status,2,c
  8997   006D8A  EFC9  F036         	goto	u16501
  8998   006D8E  EFCC  F036         	goto	u16500
  8999   006D92                     u16501:
  9000   006D92  0E01               	movlw	1
  9001   006D94  EFCD  F036         	goto	u16510
  9002   006D98                     u16500:
  9003   006D98  0E00               	movlw	0
  9004   006D9A                     u16510:
  9005   006D9A                     l1025:
  9006   006D9A  0012               	return		;funcret
  9007   006D9C                     __end_of_dir_clear:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function _clst2sect *****************
  9011 ;; Defined at:
  9012 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  fs              2   12[BANK0 ] PTR struct .
  9015 ;;		 -> FatFs(563), NULL(0), 
  9016 ;;  clst            4   14[BANK0 ] unsigned long 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  4   12[BANK0 ] unsigned long 
  9021 ;; Registers used:
  9022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;Total ram usage:       12 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 6
  9035 ;; This function calls:
  9036 ;;		___lmul
  9037 ;; This function is called by:
  9038 ;;		_dir_clear
  9039 ;;		_dir_sdi
  9040 ;;		_dir_next
  9041 ;;		_f_open
  9042 ;;		_f_write
  9043 ;;		_f_read
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text22
  9048   007AA2                     __ptext22:
  9049                           	callstack 0
  9050   007AA2                     _clst2sect:
  9051                           	callstack 22
  9052   007AA2                     
  9053                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
  9054   007AA2  0E02               	movlw	2
  9055   007AA4  0100               	movlb	0	; () banked
  9056   007AA6  5F6E               	subwf	clst2sect@clst& (0+255),f,b
  9057   007AA8  0E00               	movlw	0
  9058   007AAA  5B6F               	subwfb	(clst2sect@clst+1)& (0+255),f,b
  9059   007AAC  5B70               	subwfb	(clst2sect@clst+2)& (0+255),f,b
  9060   007AAE  5B71               	subwfb	(clst2sect@clst+3)& (0+255),f,b
  9061   007AB0                     
  9062                           ; BSR set to: 0
  9063                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
  9064   007AB0  EE20 F017          	lfsr	2,23
  9065   007AB4  516C               	movf	clst2sect@fs& (0+255),w,b
  9066   007AB6  26D9               	addwf	fsr2l,f,c
  9067   007AB8  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
  9068   007ABA  22DA               	addwfc	fsr2h,f,c
  9069   007ABC  0EFE               	movlw	254
  9070   007ABE  24DE               	addwf	postinc2,w,c
  9071   007AC0  6F72               	movwf	??_clst2sect& (0+255),b
  9072   007AC2  0EFF               	movlw	255
  9073   007AC4  20DE               	addwfc	postinc2,w,c
  9074   007AC6  6F73               	movwf	(??_clst2sect+1)& (0+255),b
  9075   007AC8  0EFF               	movlw	255
  9076   007ACA  20DE               	addwfc	postinc2,w,c
  9077   007ACC  6F74               	movwf	(??_clst2sect+2)& (0+255),b
  9078   007ACE  0EFF               	movlw	255
  9079   007AD0  20DE               	addwfc	postinc2,w,c
  9080   007AD2  6F75               	movwf	(??_clst2sect+3)& (0+255),b
  9081   007AD4  5172               	movf	??_clst2sect& (0+255),w,b
  9082   007AD6  5D6E               	subwf	clst2sect@clst& (0+255),w,b
  9083   007AD8  5173               	movf	(??_clst2sect+1)& (0+255),w,b
  9084   007ADA  596F               	subwfb	(clst2sect@clst+1)& (0+255),w,b
  9085   007ADC  5174               	movf	(??_clst2sect+2)& (0+255),w,b
  9086   007ADE  5970               	subwfb	(clst2sect@clst+2)& (0+255),w,b
  9087   007AE0  5175               	movf	(??_clst2sect+3)& (0+255),w,b
  9088   007AE2  5971               	subwfb	(clst2sect@clst+3)& (0+255),w,b
  9089   007AE4  A0D8               	btfss	status,0,c
  9090   007AE6  EF77  F03D         	goto	u15951
  9091   007AEA  EF79  F03D         	goto	u15950
  9092   007AEE                     u15951:
  9093   007AEE  EF83  F03D         	goto	l13944
  9094   007AF2                     u15950:
  9095   007AF2                     
  9096                           ; BSR set to: 0
  9097   007AF2  0E00               	movlw	0
  9098   007AF4  6F6C               	movwf	?_clst2sect& (0+255),b
  9099   007AF6  0E00               	movlw	0
  9100   007AF8  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
  9101   007AFA  0E00               	movlw	0
  9102   007AFC  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
  9103   007AFE  0E00               	movlw	0
  9104   007B00  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
  9105   007B02  EFBE  F03D         	goto	l919
  9106   007B06                     l13944:
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
  9110   007B06  EE20 F02B          	lfsr	2,43
  9111   007B0A  516C               	movf	clst2sect@fs& (0+255),w,b
  9112   007B0C  26D9               	addwf	fsr2l,f,c
  9113   007B0E  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
  9114   007B10  22DA               	addwfc	fsr2h,f,c
  9115   007B12  006F FF78  F072    	movff	postinc2,??_clst2sect
  9116   007B18  006F FF78  F073    	movff	postinc2,??_clst2sect+1
  9117   007B1E  006F FF78  F074    	movff	postinc2,??_clst2sect+2
  9118   007B24  006F FF78  F075    	movff	postinc2,??_clst2sect+3
  9119   007B2A  EE20 F009          	lfsr	2,9
  9120   007B2E  516C               	movf	clst2sect@fs& (0+255),w,b
  9121   007B30  26D9               	addwf	fsr2l,f,c
  9122   007B32  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
  9123   007B34  22DA               	addwfc	fsr2h,f,c
  9124   007B36  006F FF78  F076    	movff	postinc2,??_clst2sect+4
  9125   007B3C  006F FF74  F077    	movff	postdec2,??_clst2sect+5
  9126   007B42  C076  F060         	movff	??_clst2sect+4,___lmul@multiplier
  9127   007B46  C077  F061         	movff	??_clst2sect+5,___lmul@multiplier+1
  9128   007B4A  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
  9129   007B4C  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
  9130   007B4E  C06E  F064         	movff	clst2sect@clst,___lmul@multiplicand
  9131   007B52  C06F  F065         	movff	clst2sect@clst+1,___lmul@multiplicand+1
  9132   007B56  C070  F066         	movff	clst2sect@clst+2,___lmul@multiplicand+2
  9133   007B5A  C071  F067         	movff	clst2sect@clst+3,___lmul@multiplicand+3
  9134   007B5E  EC07  F042         	call	___lmul	;wreg free
  9135   007B62  0100               	movlb	0	; () banked
  9136   007B64  5172               	movf	??_clst2sect& (0+255),w,b
  9137   007B66  2560               	addwf	?___lmul& (0+255),w,b
  9138   007B68  6F6C               	movwf	?_clst2sect& (0+255),b
  9139   007B6A  5173               	movf	(??_clst2sect+1)& (0+255),w,b
  9140   007B6C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  9141   007B6E  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
  9142   007B70  5174               	movf	(??_clst2sect+2)& (0+255),w,b
  9143   007B72  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  9144   007B74  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
  9145   007B76  5175               	movf	(??_clst2sect+3)& (0+255),w,b
  9146   007B78  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  9147   007B7A  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
  9148   007B7C                     l919:
  9149                           
  9150                           ; BSR set to: 0
  9151   007B7C  0012               	return		;funcret
  9152   007B7E                     __end_of_clst2sect:
  9153                           	callstack 0
  9154                           
  9155 ;; *************** function _create_chain *****************
  9156 ;; Defined at:
  9157 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  obj             2  148[BANK0 ] PTR struct .
  9160 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
  9161 ;;  clst            4  150[BANK0 ] unsigned long 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  cs              4   19[BANK1 ] unsigned long 
  9164 ;;  ncl             4   13[BANK1 ] unsigned long 
  9165 ;;  scl             4    9[BANK1 ] unsigned long 
  9166 ;;  fs              2   17[BANK1 ] PTR struct .
  9167 ;;		 -> FatFs(563), NULL(0), 
  9168 ;;  res             1    8[BANK1 ] enum E68
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  4  148[BANK0 ] unsigned long 
  9171 ;; Registers used:
  9172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Totals:         0       6      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;Total ram usage:       29 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 13
  9185 ;; This function calls:
  9186 ;;		_get_fat
  9187 ;;		_put_fat
  9188 ;; This function is called by:
  9189 ;;		_dir_next
  9190 ;;		_f_write
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text23
  9195   002DF4                     __ptext23:
  9196                           	callstack 0
  9197   002DF4                     _create_chain:
  9198                           	callstack 15
  9199   002DF4                     
  9200                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
  9201   002DF4  0060  F3D3  FFD9   	movff	create_chain@obj,fsr2l
  9202   002DFA  0060  F3D7  FFDA   	movff	create_chain@obj+1,fsr2h
  9203   002E00  006F FF78  F111    	movff	postinc2,create_chain@fs
  9204   002E06  006F FF74  F112    	movff	postdec2,create_chain@fs+1
  9205   002E0C                     
  9206                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
  9207   002E0C  0100               	movlb	0	; () banked
  9208   002E0E  51F6               	movf	create_chain@clst& (0+255),w,b
  9209   002E10  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
  9210   002E12  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
  9211   002E14  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
  9212   002E16  A4D8               	btfss	status,2,c
  9213   002E18  EF10  F017         	goto	u16211
  9214   002E1C  EF12  F017         	goto	u16210
  9215   002E20                     u16211:
  9216   002E20  EF4F  F017         	goto	l14096
  9217   002E24                     u16210:
  9218   002E24                     
  9219                           ; BSR set to: 0
  9220                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
  9221   002E24  0101               	movlb	1	; () banked
  9222   002E26  EE20 F00B          	lfsr	2,11
  9223   002E2A  5111               	movf	create_chain@fs& (0+255),w,b
  9224   002E2C  26D9               	addwf	fsr2l,f,c
  9225   002E2E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9226   002E30  22DA               	addwfc	fsr2h,f,c
  9227   002E32  006F FF78  F109    	movff	postinc2,create_chain@scl
  9228   002E38  006F FF78  F10A    	movff	postinc2,create_chain@scl+1
  9229   002E3E  006F FF78  F10B    	movff	postinc2,create_chain@scl+2
  9230   002E44  006F FF78  F10C    	movff	postinc2,create_chain@scl+3
  9231   002E4A                     
  9232                           ; BSR set to: 1
  9233                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
  9234   002E4A  5109               	movf	create_chain@scl& (0+255),w,b
  9235   002E4C  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9236   002E4E  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9237   002E50  110C               	iorwf	(create_chain@scl+3)& (0+255),w,b
  9238   002E52  B4D8               	btfsc	status,2,c
  9239   002E54  EF2E  F017         	goto	u16221
  9240   002E58  EF30  F017         	goto	u16220
  9241   002E5C                     u16221:
  9242   002E5C  EF45  F017         	goto	l14094
  9243   002E60                     u16220:
  9244   002E60                     
  9245                           ; BSR set to: 1
  9246   002E60  EE20 F017          	lfsr	2,23
  9247   002E64  5111               	movf	create_chain@fs& (0+255),w,b
  9248   002E66  26D9               	addwf	fsr2l,f,c
  9249   002E68  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9250   002E6A  22DA               	addwfc	fsr2h,f,c
  9251   002E6C  50DE               	movf	postinc2,w,c
  9252   002E6E  5D09               	subwf	create_chain@scl& (0+255),w,b
  9253   002E70  50DE               	movf	postinc2,w,c
  9254   002E72  590A               	subwfb	(create_chain@scl+1)& (0+255),w,b
  9255   002E74  50DE               	movf	postinc2,w,c
  9256   002E76  590B               	subwfb	(create_chain@scl+2)& (0+255),w,b
  9257   002E78  50DE               	movf	postinc2,w,c
  9258   002E7A  590C               	subwfb	(create_chain@scl+3)& (0+255),w,b
  9259   002E7C  A0D8               	btfss	status,0,c
  9260   002E7E  EF43  F017         	goto	u16231
  9261   002E82  EF45  F017         	goto	u16230
  9262   002E86                     u16231:
  9263   002E86  EFB5  F017         	goto	l14112
  9264   002E8A                     u16230:
  9265   002E8A                     l14094:
  9266                           
  9267                           ; BSR set to: 1
  9268   002E8A  0E01               	movlw	1
  9269   002E8C  6F09               	movwf	create_chain@scl& (0+255),b
  9270   002E8E  0E00               	movlw	0
  9271   002E90  6F0A               	movwf	(create_chain@scl+1)& (0+255),b
  9272   002E92  0E00               	movlw	0
  9273   002E94  6F0B               	movwf	(create_chain@scl+2)& (0+255),b
  9274   002E96  0E00               	movlw	0
  9275   002E98  6F0C               	movwf	(create_chain@scl+3)& (0+255),b
  9276   002E9A  EFB5  F017         	goto	l14112
  9277   002E9E                     l14096:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
  9281   002E9E  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
  9282   002EA2  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
  9283   002EA6  C0F6  F0D5         	movff	create_chain@clst,get_fat@clst
  9284   002EAA  C0F7  F0D6         	movff	create_chain@clst+1,get_fat@clst+1
  9285   002EAE  C0F8  F0D7         	movff	create_chain@clst+2,get_fat@clst+2
  9286   002EB2  C0F9  F0D8         	movff	create_chain@clst+3,get_fat@clst+3
  9287   002EB6  ECBC  F025         	call	_get_fat	;wreg free
  9288   002EBA  C0D3  F113         	movff	?_get_fat,create_chain@cs
  9289   002EBE  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
  9290   002EC2  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
  9291   002EC6  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
  9292   002ECA                     
  9293                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
  9294   002ECA  0101               	movlb	1	; () banked
  9295   002ECC  5116               	movf	(create_chain@cs+3)& (0+255),w,b
  9296   002ECE  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9297   002ED0  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9298   002ED2  E107               	bnz	u16241
  9299   002ED4  0E02               	movlw	2
  9300   002ED6  5D13               	subwf	create_chain@cs& (0+255),w,b
  9301   002ED8  B0D8               	btfsc	status,0,c
  9302   002EDA  EF71  F017         	goto	u16241
  9303   002EDE  EF73  F017         	goto	u16240
  9304   002EE2                     u16241:
  9305   002EE2  EF7E  F017         	goto	l14104
  9306   002EE6                     u16240:
  9307   002EE6                     
  9308                           ; BSR set to: 1
  9309   002EE6  0E01               	movlw	1
  9310   002EE8  0100               	movlb	0	; () banked
  9311   002EEA  6FF4               	movwf	?_create_chain& (0+255),b
  9312   002EEC  0E00               	movlw	0
  9313   002EEE  6FF5               	movwf	(?_create_chain+1)& (0+255),b
  9314   002EF0  0E00               	movlw	0
  9315   002EF2  6FF6               	movwf	(?_create_chain+2)& (0+255),b
  9316   002EF4  0E00               	movlw	0
  9317   002EF6  6FF7               	movwf	(?_create_chain+3)& (0+255),b
  9318   002EF8  EFEF  F019         	goto	l993
  9319   002EFC                     l14104:
  9320                           
  9321                           ; BSR set to: 1
  9322                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
  9323   002EFC  2913               	incf	create_chain@cs& (0+255),w,b
  9324   002EFE  E10A               	bnz	u16251
  9325   002F00  2914               	incf	(create_chain@cs+1)& (0+255),w,b
  9326   002F02  E108               	bnz	u16251
  9327   002F04  2915               	incf	(create_chain@cs+2)& (0+255),w,b
  9328   002F06  E106               	bnz	u16251
  9329   002F08  2916               	incf	(create_chain@cs+3)& (0+255),w,b
  9330   002F0A  A4D8               	btfss	status,2,c
  9331   002F0C  EF8A  F017         	goto	u16251
  9332   002F10  EF8C  F017         	goto	u16250
  9333   002F14                     u16251:
  9334   002F14  EF96  F017         	goto	l14108
  9335   002F18                     u16250:
  9336   002F18                     l14106:
  9337                           
  9338                           ; BSR set to: 1
  9339   002F18  C113  F0F4         	movff	create_chain@cs,?_create_chain
  9340   002F1C  C114  F0F5         	movff	create_chain@cs+1,?_create_chain+1
  9341   002F20  C115  F0F6         	movff	create_chain@cs+2,?_create_chain+2
  9342   002F24  C116  F0F7         	movff	create_chain@cs+3,?_create_chain+3
  9343   002F28  EFEF  F019         	goto	l993
  9344   002F2C                     l14108:
  9345                           
  9346                           ; BSR set to: 1
  9347                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
  9348   002F2C  EE20 F017          	lfsr	2,23
  9349   002F30  5111               	movf	create_chain@fs& (0+255),w,b
  9350   002F32  26D9               	addwf	fsr2l,f,c
  9351   002F34  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9352   002F36  22DA               	addwfc	fsr2h,f,c
  9353   002F38  50DE               	movf	postinc2,w,c
  9354   002F3A  5D13               	subwf	create_chain@cs& (0+255),w,b
  9355   002F3C  50DE               	movf	postinc2,w,c
  9356   002F3E  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9357   002F40  50DE               	movf	postinc2,w,c
  9358   002F42  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9359   002F44  50DE               	movf	postinc2,w,c
  9360   002F46  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9361   002F48  B0D8               	btfsc	status,0,c
  9362   002F4A  EFA9  F017         	goto	u16261
  9363   002F4E  EFAB  F017         	goto	u16260
  9364   002F52                     u16261:
  9365   002F52  EFAD  F017         	goto	l995
  9366   002F56                     u16260:
  9367   002F56  EF8C  F017         	goto	l14106
  9368   002F5A                     l995:
  9369                           
  9370                           ; BSR set to: 1
  9371                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
  9372   002F5A  C0F6  F109         	movff	create_chain@clst,create_chain@scl
  9373   002F5E  C0F7  F10A         	movff	create_chain@clst+1,create_chain@scl+1
  9374   002F62  C0F8  F10B         	movff	create_chain@clst+2,create_chain@scl+2
  9375   002F66  C0F9  F10C         	movff	create_chain@clst+3,create_chain@scl+3
  9376   002F6A                     l14112:
  9377                           
  9378                           ; BSR set to: 1
  9379                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
  9380   002F6A  EE20 F00F          	lfsr	2,15
  9381   002F6E  5111               	movf	create_chain@fs& (0+255),w,b
  9382   002F70  26D9               	addwf	fsr2l,f,c
  9383   002F72  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9384   002F74  22DA               	addwfc	fsr2h,f,c
  9385   002F76  50DE               	movf	postinc2,w,c
  9386   002F78  10DE               	iorwf	postinc2,w,c
  9387   002F7A  10DE               	iorwf	postinc2,w,c
  9388   002F7C  10DE               	iorwf	postinc2,w,c
  9389   002F7E  A4D8               	btfss	status,2,c
  9390   002F80  EFC4  F017         	goto	u16271
  9391   002F84  EFC6  F017         	goto	u16270
  9392   002F88                     u16271:
  9393   002F88  EFD1  F017         	goto	l14118
  9394   002F8C                     u16270:
  9395   002F8C                     l14114:
  9396                           
  9397                           ; BSR set to: 1
  9398   002F8C  0E00               	movlw	0
  9399   002F8E  0100               	movlb	0	; () banked
  9400   002F90  6FF4               	movwf	?_create_chain& (0+255),b
  9401   002F92  0E00               	movlw	0
  9402   002F94  6FF5               	movwf	(?_create_chain+1)& (0+255),b
  9403   002F96  0E00               	movlw	0
  9404   002F98  6FF6               	movwf	(?_create_chain+2)& (0+255),b
  9405   002F9A  0E00               	movlw	0
  9406   002F9C  6FF7               	movwf	(?_create_chain+3)& (0+255),b
  9407   002F9E  EFEF  F019         	goto	l993
  9408   002FA2                     l14118:
  9409                           
  9410                           ; BSR set to: 1
  9411                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
  9412   002FA2  0E00               	movlw	0
  9413   002FA4  6F0D               	movwf	create_chain@ncl& (0+255),b
  9414   002FA6  0E00               	movlw	0
  9415   002FA8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9416   002FAA  0E00               	movlw	0
  9417   002FAC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9418   002FAE  0E00               	movlw	0
  9419   002FB0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9420   002FB2                     
  9421                           ; BSR set to: 1
  9422                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
  9423   002FB2  0100               	movlb	0	; () banked
  9424   002FB4  51F6               	movf	create_chain@clst& (0+255),w,b
  9425   002FB6  0101               	movlb	1	; () banked
  9426   002FB8  1909               	xorwf	create_chain@scl& (0+255),w,b
  9427   002FBA  E113               	bnz	u16281
  9428   002FBC  0100               	movlb	0	; () banked
  9429   002FBE  51F7               	movf	(create_chain@clst+1)& (0+255),w,b
  9430   002FC0  0101               	movlb	1	; () banked
  9431   002FC2  190A               	xorwf	(create_chain@scl+1)& (0+255),w,b
  9432   002FC4  E10E               	bnz	u16281
  9433   002FC6  0100               	movlb	0	; () banked
  9434   002FC8  51F8               	movf	(create_chain@clst+2)& (0+255),w,b
  9435   002FCA  0101               	movlb	1	; () banked
  9436   002FCC  190B               	xorwf	(create_chain@scl+2)& (0+255),w,b
  9437   002FCE  E109               	bnz	u16281
  9438   002FD0  0100               	movlb	0	; () banked
  9439   002FD2  51F9               	movf	(create_chain@clst+3)& (0+255),w,b
  9440   002FD4  0101               	movlb	1	; () banked
  9441   002FD6  190C               	xorwf	(create_chain@scl+3)& (0+255),w,b
  9442   002FD8  A4D8               	btfss	status,2,c
  9443   002FDA  EFF1  F017         	goto	u16281
  9444   002FDE  EFF3  F017         	goto	u16280
  9445   002FE2                     u16281:
  9446   002FE2  EF9D  F018         	goto	l14146
  9447   002FE6                     u16280:
  9448   002FE6                     
  9449                           ; BSR set to: 1
  9450                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
  9451   002FE6  0E01               	movlw	1
  9452   002FE8  2509               	addwf	create_chain@scl& (0+255),w,b
  9453   002FEA  6F0D               	movwf	create_chain@ncl& (0+255),b
  9454   002FEC  0E00               	movlw	0
  9455   002FEE  210A               	addwfc	(create_chain@scl+1)& (0+255),w,b
  9456   002FF0  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9457   002FF2  0E00               	movlw	0
  9458   002FF4  210B               	addwfc	(create_chain@scl+2)& (0+255),w,b
  9459   002FF6  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9460   002FF8  0E00               	movlw	0
  9461   002FFA  210C               	addwfc	(create_chain@scl+3)& (0+255),w,b
  9462   002FFC  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9463   002FFE                     
  9464                           ; BSR set to: 1
  9465                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
  9466   002FFE  EE20 F017          	lfsr	2,23
  9467   003002  5111               	movf	create_chain@fs& (0+255),w,b
  9468   003004  26D9               	addwf	fsr2l,f,c
  9469   003006  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9470   003008  22DA               	addwfc	fsr2h,f,c
  9471   00300A  50DE               	movf	postinc2,w,c
  9472   00300C  5D0D               	subwf	create_chain@ncl& (0+255),w,b
  9473   00300E  50DE               	movf	postinc2,w,c
  9474   003010  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  9475   003012  50DE               	movf	postinc2,w,c
  9476   003014  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  9477   003016  50DE               	movf	postinc2,w,c
  9478   003018  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  9479   00301A  A0D8               	btfss	status,0,c
  9480   00301C  EF12  F018         	goto	u16291
  9481   003020  EF14  F018         	goto	u16290
  9482   003024                     u16291:
  9483   003024  EF1C  F018         	goto	l14128
  9484   003028                     u16290:
  9485   003028                     
  9486                           ; BSR set to: 1
  9487   003028  0E02               	movlw	2
  9488   00302A  6F0D               	movwf	create_chain@ncl& (0+255),b
  9489   00302C  0E00               	movlw	0
  9490   00302E  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9491   003030  0E00               	movlw	0
  9492   003032  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9493   003034  0E00               	movlw	0
  9494   003036  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9495   003038                     l14128:
  9496                           
  9497                           ; BSR set to: 1
  9498                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
  9499   003038  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
  9500   00303C  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
  9501   003040  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
  9502   003044  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
  9503   003048  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
  9504   00304C  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
  9505   003050  ECBC  F025         	call	_get_fat	;wreg free
  9506   003054  C0D3  F113         	movff	?_get_fat,create_chain@cs
  9507   003058  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
  9508   00305C  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
  9509   003060  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
  9510   003064                     
  9511                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
  9512   003064  0101               	movlb	1	; () banked
  9513   003066  0513               	decf	create_chain@cs& (0+255),w,b
  9514   003068  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9515   00306A  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9516   00306C  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9517   00306E  B4D8               	btfsc	status,2,c
  9518   003070  EF3C  F018         	goto	u16301
  9519   003074  EF3E  F018         	goto	u16300
  9520   003078                     u16301:
  9521   003078  EF8C  F017         	goto	l14106
  9522   00307C                     u16300:
  9523   00307C                     
  9524                           ; BSR set to: 1
  9525   00307C  2913               	incf	create_chain@cs& (0+255),w,b
  9526   00307E  E10A               	bnz	u16311
  9527   003080  2914               	incf	(create_chain@cs+1)& (0+255),w,b
  9528   003082  E108               	bnz	u16311
  9529   003084  2915               	incf	(create_chain@cs+2)& (0+255),w,b
  9530   003086  E106               	bnz	u16311
  9531   003088  2916               	incf	(create_chain@cs+3)& (0+255),w,b
  9532   00308A  A4D8               	btfss	status,2,c
  9533   00308C  EF4A  F018         	goto	u16311
  9534   003090  EF4C  F018         	goto	u16310
  9535   003094                     u16311:
  9536   003094  EF4E  F018         	goto	l14134
  9537   003098                     u16310:
  9538   003098  EF8C  F017         	goto	l14106
  9539   00309C                     l14134:
  9540                           
  9541                           ; BSR set to: 1
  9542                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
  9543   00309C  5113               	movf	create_chain@cs& (0+255),w,b
  9544   00309E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9545   0030A0  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9546   0030A2  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9547   0030A4  B4D8               	btfsc	status,2,c
  9548   0030A6  EF57  F018         	goto	u16321
  9549   0030AA  EF59  F018         	goto	u16320
  9550   0030AE                     u16321:
  9551   0030AE  EF9D  F018         	goto	l14146
  9552   0030B2                     u16320:
  9553   0030B2                     
  9554                           ; BSR set to: 1
  9555                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
  9556   0030B2  EE20 F00B          	lfsr	2,11
  9557   0030B6  5111               	movf	create_chain@fs& (0+255),w,b
  9558   0030B8  26D9               	addwf	fsr2l,f,c
  9559   0030BA  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9560   0030BC  22DA               	addwfc	fsr2h,f,c
  9561   0030BE  006F FF78  F113    	movff	postinc2,create_chain@cs
  9562   0030C4  006F FF78  F114    	movff	postinc2,create_chain@cs+1
  9563   0030CA  006F FF78  F115    	movff	postinc2,create_chain@cs+2
  9564   0030D0  006F FF78  F116    	movff	postinc2,create_chain@cs+3
  9565   0030D6                     
  9566                           ; BSR set to: 1
  9567                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
  9568   0030D6  5116               	movf	(create_chain@cs+3)& (0+255),w,b
  9569   0030D8  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9570   0030DA  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9571   0030DC  E109               	bnz	u16330
  9572   0030DE  0E02               	movlw	2
  9573   0030E0  5D13               	subwf	create_chain@cs& (0+255),w,b
  9574   0030E2  A0D8               	btfss	status,0,c
  9575   0030E4  EF76  F018         	goto	u16331
  9576   0030E8  EF78  F018         	goto	u16330
  9577   0030EC                     u16331:
  9578   0030EC  EF95  F018         	goto	l14144
  9579   0030F0                     u16330:
  9580   0030F0                     
  9581                           ; BSR set to: 1
  9582   0030F0  EE20 F017          	lfsr	2,23
  9583   0030F4  5111               	movf	create_chain@fs& (0+255),w,b
  9584   0030F6  26D9               	addwf	fsr2l,f,c
  9585   0030F8  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9586   0030FA  22DA               	addwfc	fsr2h,f,c
  9587   0030FC  50DE               	movf	postinc2,w,c
  9588   0030FE  5D13               	subwf	create_chain@cs& (0+255),w,b
  9589   003100  50DE               	movf	postinc2,w,c
  9590   003102  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9591   003104  50DE               	movf	postinc2,w,c
  9592   003106  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9593   003108  50DE               	movf	postinc2,w,c
  9594   00310A  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9595   00310C  B0D8               	btfsc	status,0,c
  9596   00310E  EF8B  F018         	goto	u16341
  9597   003112  EF8D  F018         	goto	u16340
  9598   003116                     u16341:
  9599   003116  EF95  F018         	goto	l14144
  9600   00311A                     u16340:
  9601   00311A                     
  9602                           ; BSR set to: 1
  9603   00311A  C113  F109         	movff	create_chain@cs,create_chain@scl
  9604   00311E  C114  F10A         	movff	create_chain@cs+1,create_chain@scl+1
  9605   003122  C115  F10B         	movff	create_chain@cs+2,create_chain@scl+2
  9606   003126  C116  F10C         	movff	create_chain@cs+3,create_chain@scl+3
  9607   00312A                     l14144:
  9608                           
  9609                           ; BSR set to: 1
  9610                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
  9611   00312A  0E00               	movlw	0
  9612   00312C  6F0D               	movwf	create_chain@ncl& (0+255),b
  9613   00312E  0E00               	movlw	0
  9614   003130  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9615   003132  0E00               	movlw	0
  9616   003134  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9617   003136  0E00               	movlw	0
  9618   003138  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9619   00313A                     l14146:
  9620                           
  9621                           ; BSR set to: 1
  9622                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
  9623   00313A  510D               	movf	create_chain@ncl& (0+255),w,b
  9624   00313C  110E               	iorwf	(create_chain@ncl+1)& (0+255),w,b
  9625   00313E  110F               	iorwf	(create_chain@ncl+2)& (0+255),w,b
  9626   003140  1110               	iorwf	(create_chain@ncl+3)& (0+255),w,b
  9627   003142  A4D8               	btfss	status,2,c
  9628   003144  EFA6  F018         	goto	u16351
  9629   003148  EFA8  F018         	goto	u16350
  9630   00314C                     u16351:
  9631   00314C  EF35  F019         	goto	l14178
  9632   003150                     u16350:
  9633   003150                     
  9634                           ; BSR set to: 1
  9635                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
  9636   003150  C109  F10D         	movff	create_chain@scl,create_chain@ncl
  9637   003154  C10A  F10E         	movff	create_chain@scl+1,create_chain@ncl+1
  9638   003158  C10B  F10F         	movff	create_chain@scl+2,create_chain@ncl+2
  9639   00315C  C10C  F110         	movff	create_chain@scl+3,create_chain@ncl+3
  9640   003160                     l14150:
  9641                           
  9642                           ; BSR set to: 1
  9643                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
  9644   003160  0E01               	movlw	1
  9645   003162  270D               	addwf	create_chain@ncl& (0+255),f,b
  9646   003164  0E00               	movlw	0
  9647   003166  230E               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  9648   003168  230F               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  9649   00316A  2310               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  9650   00316C                     
  9651                           ; BSR set to: 1
  9652                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
  9653   00316C  EE20 F017          	lfsr	2,23
  9654   003170  5111               	movf	create_chain@fs& (0+255),w,b
  9655   003172  26D9               	addwf	fsr2l,f,c
  9656   003174  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9657   003176  22DA               	addwfc	fsr2h,f,c
  9658   003178  50DE               	movf	postinc2,w,c
  9659   00317A  5D0D               	subwf	create_chain@ncl& (0+255),w,b
  9660   00317C  50DE               	movf	postinc2,w,c
  9661   00317E  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  9662   003180  50DE               	movf	postinc2,w,c
  9663   003182  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  9664   003184  50DE               	movf	postinc2,w,c
  9665   003186  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  9666   003188  A0D8               	btfss	status,0,c
  9667   00318A  EFC9  F018         	goto	u16361
  9668   00318E  EFCB  F018         	goto	u16360
  9669   003192                     u16361:
  9670   003192  EFE2  F018         	goto	l14162
  9671   003196                     u16360:
  9672   003196                     
  9673                           ; BSR set to: 1
  9674                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
  9675   003196  0E02               	movlw	2
  9676   003198  6F0D               	movwf	create_chain@ncl& (0+255),b
  9677   00319A  0E00               	movlw	0
  9678   00319C  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9679   00319E  0E00               	movlw	0
  9680   0031A0  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9681   0031A2  0E00               	movlw	0
  9682   0031A4  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9683   0031A6                     
  9684                           ; BSR set to: 1
  9685                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
  9686   0031A6  510C               	movf	(create_chain@scl+3)& (0+255),w,b
  9687   0031A8  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9688   0031AA  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9689   0031AC  E107               	bnz	u16371
  9690   0031AE  0E02               	movlw	2
  9691   0031B0  5D09               	subwf	create_chain@scl& (0+255),w,b
  9692   0031B2  B0D8               	btfsc	status,0,c
  9693   0031B4  EFDE  F018         	goto	u16371
  9694   0031B8  EFE0  F018         	goto	u16370
  9695   0031BC                     u16371:
  9696   0031BC  EFE2  F018         	goto	l14162
  9697   0031C0                     u16370:
  9698   0031C0  EFC6  F017         	goto	l14114
  9699   0031C4                     l14162:
  9700                           
  9701                           ; BSR set to: 1
  9702                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
  9703   0031C4  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
  9704   0031C8  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
  9705   0031CC  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
  9706   0031D0  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
  9707   0031D4  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
  9708   0031D8  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
  9709   0031DC  ECBC  F025         	call	_get_fat	;wreg free
  9710   0031E0  C0D3  F113         	movff	?_get_fat,create_chain@cs
  9711   0031E4  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
  9712   0031E8  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
  9713   0031EC  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
  9714   0031F0                     
  9715                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
  9716   0031F0  0101               	movlb	1	; () banked
  9717   0031F2  5113               	movf	create_chain@cs& (0+255),w,b
  9718   0031F4  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9719   0031F6  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9720   0031F8  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9721   0031FA  A4D8               	btfss	status,2,c
  9722   0031FC  EF02  F019         	goto	u16381
  9723   003200  EF04  F019         	goto	u16380
  9724   003204                     u16381:
  9725   003204  EF06  F019         	goto	l14168
  9726   003208                     u16380:
  9727   003208  EF35  F019         	goto	l14178
  9728   00320C                     l14168:
  9729                           
  9730                           ; BSR set to: 1
  9731                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
  9732   00320C  0513               	decf	create_chain@cs& (0+255),w,b
  9733   00320E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9734   003210  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9735   003212  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9736   003214  B4D8               	btfsc	status,2,c
  9737   003216  EF0F  F019         	goto	u16391
  9738   00321A  EF11  F019         	goto	u16390
  9739   00321E                     u16391:
  9740   00321E  EF8C  F017         	goto	l14106
  9741   003222                     u16390:
  9742   003222                     
  9743                           ; BSR set to: 1
  9744   003222  2913               	incf	create_chain@cs& (0+255),w,b
  9745   003224  E10A               	bnz	u16401
  9746   003226  2914               	incf	(create_chain@cs+1)& (0+255),w,b
  9747   003228  E108               	bnz	u16401
  9748   00322A  2915               	incf	(create_chain@cs+2)& (0+255),w,b
  9749   00322C  E106               	bnz	u16401
  9750   00322E  2916               	incf	(create_chain@cs+3)& (0+255),w,b
  9751   003230  A4D8               	btfss	status,2,c
  9752   003232  EF1D  F019         	goto	u16401
  9753   003236  EF1F  F019         	goto	u16400
  9754   00323A                     u16401:
  9755   00323A  EF21  F019         	goto	l14172
  9756   00323E                     u16400:
  9757   00323E  EF8C  F017         	goto	l14106
  9758   003242                     l14172:
  9759                           
  9760                           ; BSR set to: 1
  9761                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
  9762   003242  5109               	movf	create_chain@scl& (0+255),w,b
  9763   003244  190D               	xorwf	create_chain@ncl& (0+255),w,b
  9764   003246  E10D               	bnz	u16411
  9765   003248  510A               	movf	(create_chain@scl+1)& (0+255),w,b
  9766   00324A  190E               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  9767   00324C  E10A               	bnz	u16411
  9768   00324E  510B               	movf	(create_chain@scl+2)& (0+255),w,b
  9769   003250  190F               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  9770   003252  E107               	bnz	u16411
  9771   003254  510C               	movf	(create_chain@scl+3)& (0+255),w,b
  9772   003256  1910               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  9773   003258  A4D8               	btfss	status,2,c
  9774   00325A  EF31  F019         	goto	u16411
  9775   00325E  EF33  F019         	goto	u16410
  9776   003262                     u16411:
  9777   003262  EFB0  F018         	goto	l14150
  9778   003266                     u16410:
  9779   003266  EFC6  F017         	goto	l14114
  9780   00326A                     l14178:
  9781                           
  9782                           ; BSR set to: 1
  9783                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
  9784   00326A  C111  F0D3         	movff	create_chain@fs,put_fat@fs
  9785   00326E  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
  9786   003272  C10D  F0D5         	movff	create_chain@ncl,put_fat@clst
  9787   003276  C10E  F0D6         	movff	create_chain@ncl+1,put_fat@clst+1
  9788   00327A  C10F  F0D7         	movff	create_chain@ncl+2,put_fat@clst+2
  9789   00327E  C110  F0D8         	movff	create_chain@ncl+3,put_fat@clst+3
  9790   003282  0EFF               	movlw	255
  9791   003284  0100               	movlb	0	; () banked
  9792   003286  6FD9               	movwf	put_fat@val& (0+255),b
  9793   003288  0EFF               	movlw	255
  9794   00328A  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  9795   00328C  0EFF               	movlw	255
  9796   00328E  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  9797   003290  0EFF               	movlw	255
  9798   003292  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  9799   003294  ECF0  F019         	call	_put_fat	;wreg free
  9800   003298  0101               	movlb	1	; () banked
  9801   00329A  6F08               	movwf	create_chain@res& (0+255),b
  9802   00329C                     
  9803                           ; BSR set to: 1
  9804                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
  9805   00329C  5108               	movf	create_chain@res& (0+255),w,b
  9806   00329E  A4D8               	btfss	status,2,c
  9807   0032A0  EF54  F019         	goto	u16421
  9808   0032A4  EF56  F019         	goto	u16420
  9809   0032A8                     u16421:
  9810   0032A8  EF7A  F019         	goto	l14186
  9811   0032AC                     u16420:
  9812   0032AC                     
  9813                           ; BSR set to: 1
  9814   0032AC  0100               	movlb	0	; () banked
  9815   0032AE  51F6               	movf	create_chain@clst& (0+255),w,b
  9816   0032B0  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
  9817   0032B2  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
  9818   0032B4  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
  9819   0032B6  B4D8               	btfsc	status,2,c
  9820   0032B8  EF60  F019         	goto	u16431
  9821   0032BC  EF62  F019         	goto	u16430
  9822   0032C0                     u16431:
  9823   0032C0  EF7A  F019         	goto	l14186
  9824   0032C4                     u16430:
  9825   0032C4                     
  9826                           ; BSR set to: 0
  9827                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
  9828   0032C4  C111  F0D3         	movff	create_chain@fs,put_fat@fs
  9829   0032C8  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
  9830   0032CC  C0F6  F0D5         	movff	create_chain@clst,put_fat@clst
  9831   0032D0  C0F7  F0D6         	movff	create_chain@clst+1,put_fat@clst+1
  9832   0032D4  C0F8  F0D7         	movff	create_chain@clst+2,put_fat@clst+2
  9833   0032D8  C0F9  F0D8         	movff	create_chain@clst+3,put_fat@clst+3
  9834   0032DC  C10D  F0D9         	movff	create_chain@ncl,put_fat@val
  9835   0032E0  C10E  F0DA         	movff	create_chain@ncl+1,put_fat@val+1
  9836   0032E4  C10F  F0DB         	movff	create_chain@ncl+2,put_fat@val+2
  9837   0032E8  C110  F0DC         	movff	create_chain@ncl+3,put_fat@val+3
  9838   0032EC  ECF0  F019         	call	_put_fat	;wreg free
  9839   0032F0  0101               	movlb	1	; () banked
  9840   0032F2  6F08               	movwf	create_chain@res& (0+255),b
  9841   0032F4                     l14186:
  9842                           
  9843                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
  9844   0032F4  0101               	movlb	1	; () banked
  9845   0032F6  5108               	movf	create_chain@res& (0+255),w,b
  9846   0032F8  A4D8               	btfss	status,2,c
  9847   0032FA  EF81  F019         	goto	u16441
  9848   0032FE  EF83  F019         	goto	u16440
  9849   003302                     u16441:
  9850   003302  EFD1  F019         	goto	l14194
  9851   003306                     u16440:
  9852   003306                     
  9853                           ; BSR set to: 1
  9854                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
  9855   003306  EE20 F00B          	lfsr	2,11
  9856   00330A  5111               	movf	create_chain@fs& (0+255),w,b
  9857   00330C  26D9               	addwf	fsr2l,f,c
  9858   00330E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9859   003310  22DA               	addwfc	fsr2h,f,c
  9860   003312  0060  F437  FFDE   	movff	create_chain@ncl,postinc2
  9861   003318  0060  F43B  FFDE   	movff	create_chain@ncl+1,postinc2
  9862   00331E  0060  F43F  FFDE   	movff	create_chain@ncl+2,postinc2
  9863   003324  0060  F443  FFDE   	movff	create_chain@ncl+3,postinc2
  9864   00332A                     
  9865                           ; BSR set to: 1
  9866                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
  9867   00332A  EE20 F00F          	lfsr	2,15
  9868   00332E  5111               	movf	create_chain@fs& (0+255),w,b
  9869   003330  26D9               	addwf	fsr2l,f,c
  9870   003332  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9871   003334  22DA               	addwfc	fsr2h,f,c
  9872   003336  EE10 F017          	lfsr	1,23
  9873   00333A  5111               	movf	create_chain@fs& (0+255),w,b
  9874   00333C  26E1               	addwf	fsr1l,f,c
  9875   00333E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9876   003340  22E2               	addwfc	fsr1h,f,c
  9877   003342  0EFE               	movlw	254
  9878   003344  24E6               	addwf	postinc1,w,c
  9879   003346  6F04               	movwf	(??_create_chain+4)& (0+255),b
  9880   003348  0EFF               	movlw	255
  9881   00334A  20E6               	addwfc	postinc1,w,c
  9882   00334C  6F05               	movwf	(??_create_chain+5)& (0+255),b
  9883   00334E  0EFF               	movlw	255
  9884   003350  20E6               	addwfc	postinc1,w,c
  9885   003352  6F06               	movwf	(??_create_chain+6)& (0+255),b
  9886   003354  0EFF               	movlw	255
  9887   003356  20E6               	addwfc	postinc1,w,c
  9888   003358  6F07               	movwf	(??_create_chain+7)& (0+255),b
  9889   00335A  50DE               	movf	postinc2,w,c
  9890   00335C  5D04               	subwf	(??_create_chain+4)& (0+255),w,b
  9891   00335E  50DE               	movf	postinc2,w,c
  9892   003360  5905               	subwfb	(??_create_chain+5)& (0+255),w,b
  9893   003362  50DE               	movf	postinc2,w,c
  9894   003364  5906               	subwfb	(??_create_chain+6)& (0+255),w,b
  9895   003366  50DE               	movf	postinc2,w,c
  9896   003368  5907               	subwfb	(??_create_chain+7)& (0+255),w,b
  9897   00336A  A0D8               	btfss	status,0,c
  9898   00336C  EFBA  F019         	goto	u16451
  9899   003370  EFBC  F019         	goto	u16450
  9900   003374                     u16451:
  9901   003374  EFC7  F019         	goto	l1016
  9902   003378                     u16450:
  9903   003378                     
  9904                           ; BSR set to: 1
  9905   003378  EE20 F00F          	lfsr	2,15
  9906   00337C  5111               	movf	create_chain@fs& (0+255),w,b
  9907   00337E  26D9               	addwf	fsr2l,f,c
  9908   003380  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9909   003382  22DA               	addwfc	fsr2h,f,c
  9910   003384  06DE               	decf	postinc2,f,c
  9911   003386  0E00               	movlw	0
  9912   003388  5ADE               	subwfb	postinc2,f,c
  9913   00338A  5ADE               	subwfb	postinc2,f,c
  9914   00338C  5ADE               	subwfb	postinc2,f,c
  9915   00338E                     l1016:
  9916                           
  9917                           ; BSR set to: 1
  9918                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
  9919   00338E  EE20 F004          	lfsr	2,4
  9920   003392  5111               	movf	create_chain@fs& (0+255),w,b
  9921   003394  26D9               	addwf	fsr2l,f,c
  9922   003396  5112               	movf	(create_chain@fs+1)& (0+255),w,b
  9923   003398  22DA               	addwfc	fsr2h,f,c
  9924   00339A  0E00               	movlw	0
  9925   00339C  80DB               	bsf	plusw2,0,c
  9926                           
  9927                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
  9928   00339E  EFE7  F019         	goto	l1017
  9929   0033A2                     l14194:
  9930                           
  9931                           ; BSR set to: 1
  9932                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
  9933   0033A2  0508               	decf	create_chain@res& (0+255),w,b
  9934   0033A4  B4D8               	btfsc	status,2,c
  9935   0033A6  EFD7  F019         	goto	u16461
  9936   0033AA  EFD9  F019         	goto	u16460
  9937   0033AE                     u16461:
  9938   0033AE  EFE3  F019         	goto	l1019
  9939   0033B2                     u16460:
  9940   0033B2                     
  9941                           ; BSR set to: 1
  9942   0033B2  0E01               	movlw	1
  9943   0033B4  6F0D               	movwf	create_chain@ncl& (0+255),b
  9944   0033B6  0E00               	movlw	0
  9945   0033B8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
  9946   0033BA  0E00               	movlw	0
  9947   0033BC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
  9948   0033BE  0E00               	movlw	0
  9949   0033C0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
  9950   0033C2  EFE7  F019         	goto	l1017
  9951   0033C6                     l1019:
  9952                           
  9953                           ; BSR set to: 1
  9954   0033C6  690D               	setf	create_chain@ncl& (0+255),b
  9955   0033C8  690E               	setf	(create_chain@ncl+1)& (0+255),b
  9956   0033CA  690F               	setf	(create_chain@ncl+2)& (0+255),b
  9957   0033CC  6910               	setf	(create_chain@ncl+3)& (0+255),b
  9958   0033CE                     l1017:
  9959                           
  9960                           ; BSR set to: 1
  9961                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
  9962   0033CE  C10D  F0F4         	movff	create_chain@ncl,?_create_chain
  9963   0033D2  C10E  F0F5         	movff	create_chain@ncl+1,?_create_chain+1
  9964   0033D6  C10F  F0F6         	movff	create_chain@ncl+2,?_create_chain+2
  9965   0033DA  C110  F0F7         	movff	create_chain@ncl+3,?_create_chain+3
  9966   0033DE                     l993:
  9967   0033DE  0012               	return		;funcret
  9968   0033E0                     __end_of_create_chain:
  9969                           	callstack 0
  9970                           
  9971 ;; *************** function _put_fat *****************
  9972 ;; Defined at:
  9973 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  fs              2  115[BANK0 ] PTR struct .
  9976 ;;		 -> FatFs(563), NULL(0), 
  9977 ;;  clst            4  117[BANK0 ] unsigned long 
  9978 ;;  val             4  121[BANK0 ] unsigned long 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  bc              2  145[BANK0 ] unsigned int 
  9981 ;;  p               2  143[BANK0 ] PTR unsigned char 
  9982 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  9983 ;;  res             1  147[BANK0 ] enum E68
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  1    wreg      enum E68
  9986 ;; Registers used:
  9987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9993 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;Total ram usage:       33 bytes
  9998 ;; Hardware stack levels used: 1
  9999 ;; Hardware stack levels required when called: 12
 10000 ;; This function calls:
 10001 ;;		_ld_dword
 10002 ;;		_move_window
 10003 ;;		_st_dword
 10004 ;;		_st_word
 10005 ;; This function is called by:
 10006 ;;		_remove_chain
 10007 ;;		_create_chain
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text24
 10012   0033E0                     __ptext24:
 10013                           	callstack 0
 10014   0033E0                     _put_fat:
 10015                           	callstack 15
 10016   0033E0                     
 10017                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 10018   0033E0  0E02               	movlw	2
 10019   0033E2  0100               	movlb	0	; () banked
 10020   0033E4  6FF3               	movwf	put_fat@res& (0+255),b
 10021   0033E6                     
 10022                           ; BSR set to: 0
 10023                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 10024   0033E6  51D8               	movf	(put_fat@clst+3)& (0+255),w,b
 10025   0033E8  11D7               	iorwf	(put_fat@clst+2)& (0+255),w,b
 10026   0033EA  11D6               	iorwf	(put_fat@clst+1)& (0+255),w,b
 10027   0033EC  E109               	bnz	u16070
 10028   0033EE  0E02               	movlw	2
 10029   0033F0  5DD5               	subwf	put_fat@clst& (0+255),w,b
 10030   0033F2  A0D8               	btfss	status,0,c
 10031   0033F4  EFFE  F019         	goto	u16071
 10032   0033F8  EF00  F01A         	goto	u16070
 10033   0033FC                     u16071:
 10034   0033FC  EF80  F01C         	goto	l14068
 10035   003400                     u16070:
 10036   003400                     
 10037                           ; BSR set to: 0
 10038   003400  EE20 F017          	lfsr	2,23
 10039   003404  51D3               	movf	put_fat@fs& (0+255),w,b
 10040   003406  26D9               	addwf	fsr2l,f,c
 10041   003408  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10042   00340A  22DA               	addwfc	fsr2h,f,c
 10043   00340C  50DE               	movf	postinc2,w,c
 10044   00340E  5DD5               	subwf	put_fat@clst& (0+255),w,b
 10045   003410  50DE               	movf	postinc2,w,c
 10046   003412  59D6               	subwfb	(put_fat@clst+1)& (0+255),w,b
 10047   003414  50DE               	movf	postinc2,w,c
 10048   003416  59D7               	subwfb	(put_fat@clst+2)& (0+255),w,b
 10049   003418  50DE               	movf	postinc2,w,c
 10050   00341A  59D8               	subwfb	(put_fat@clst+3)& (0+255),w,b
 10051   00341C  B0D8               	btfsc	status,0,c
 10052   00341E  EF13  F01A         	goto	u16081
 10053   003422  EF15  F01A         	goto	u16080
 10054   003426                     u16081:
 10055   003426  EF80  F01C         	goto	l14068
 10056   00342A                     u16080:
 10057   00342A  EF6B  F01C         	goto	l14066
 10058   00342E                     l945:
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 10062   00342E  C0D5  F0F1         	movff	put_fat@clst,put_fat@bc
 10063   003432  C0D6  F0F2         	movff	put_fat@clst+1,put_fat@bc+1
 10064   003436                     
 10065                           ; BSR set to: 0
 10066   003436  90D8               	bcf	status,0,c
 10067   003438  31F2               	rrcf	(put_fat@bc+1)& (0+255),w,b
 10068   00343A  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 10069   00343C  31F1               	rrcf	put_fat@bc& (0+255),w,b
 10070   00343E  6FDD               	movwf	??_put_fat& (0+255),b
 10071   003440  51DD               	movf	??_put_fat& (0+255),w,b
 10072   003442  27F1               	addwf	put_fat@bc& (0+255),f,b
 10073   003444  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10074   003446  23F2               	addwfc	(put_fat@bc+1)& (0+255),f,b
 10075   003448                     
 10076                           ; BSR set to: 0
 10077                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 10078   003448  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 10079   00344C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 10080   003450  EE20 F023          	lfsr	2,35
 10081   003454  51D3               	movf	put_fat@fs& (0+255),w,b
 10082   003456  26D9               	addwf	fsr2l,f,c
 10083   003458  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10084   00345A  22DA               	addwfc	fsr2h,f,c
 10085   00345C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 10086   003462  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 10087   003468  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 10088   00346E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 10089   003474  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 10090   003478  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 10091   00347C  0E09               	movlw	9
 10092   00347E  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 10093   003480                     u16095:
 10094   003480  90D8               	bcf	status,0,c
 10095   003482  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 10096   003484  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 10097   003486  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 10098   003488  EF40  F01A         	goto	u16095
 10099   00348C  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 10100   00348E  25DD               	addwf	??_put_fat& (0+255),w,b
 10101   003490  6FCA               	movwf	move_window@sector& (0+255),b
 10102   003492  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 10103   003494  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 10104   003496  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10105   003498  0E00               	movlw	0
 10106   00349A  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 10107   00349C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10108   00349E  0E00               	movlw	0
 10109   0034A0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 10110   0034A2  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10111   0034A4  ECBF  F03D         	call	_move_window	;wreg free
 10112   0034A8  0100               	movlb	0	; () banked
 10113   0034AA  6FF3               	movwf	put_fat@res& (0+255),b
 10114   0034AC                     
 10115                           ; BSR set to: 0
 10116                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 10117   0034AC  51F3               	movf	put_fat@res& (0+255),w,b
 10118   0034AE  B4D8               	btfsc	status,2,c
 10119   0034B0  EF5C  F01A         	goto	u16101
 10120   0034B4  EF5E  F01A         	goto	u16100
 10121   0034B8                     u16101:
 10122   0034B8  EF60  F01A         	goto	l14012
 10123   0034BC                     u16100:
 10124   0034BC  EF80  F01C         	goto	l14068
 10125   0034C0                     l14012:
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 10129   0034C0  0EFF               	movlw	255
 10130   0034C2  15F1               	andwf	put_fat@bc& (0+255),w,b
 10131   0034C4  6FDD               	movwf	??_put_fat& (0+255),b
 10132   0034C6  0E01               	movlw	1
 10133   0034C8  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 10134   0034CA  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 10135   0034CC  51DD               	movf	??_put_fat& (0+255),w,b
 10136   0034CE  25D3               	addwf	put_fat@fs& (0+255),w,b
 10137   0034D0  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10138   0034D2  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10139   0034D4  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 10140   0034D6  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 10141   0034D8  0E33               	movlw	51
 10142   0034DA  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 10143   0034DC  6FEF               	movwf	put_fat@p& (0+255),b
 10144   0034DE  0E00               	movlw	0
 10145   0034E0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 10146   0034E2  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 10147   0034E4                     
 10148                           ; BSR set to: 0
 10149   0034E4  4BF1               	infsnz	put_fat@bc& (0+255),f,b
 10150   0034E6  2BF2               	incf	(put_fat@bc+1)& (0+255),f,b
 10151   0034E8                     
 10152                           ; BSR set to: 0
 10153                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 10154   0034E8  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 10155   0034EA  EF79  F01A         	goto	u16111
 10156   0034EE  EF7B  F01A         	goto	u16110
 10157   0034F2                     u16111:
 10158   0034F2  EF80  F01A         	goto	l14020
 10159   0034F6                     u16110:
 10160   0034F6                     
 10161                           ; BSR set to: 0
 10162   0034F6  C0D9  F0EB         	movff	put_fat@val,_put_fat$2606
 10163   0034FA  6BEC               	clrf	(_put_fat$2606+1)& (0+255),b
 10164   0034FC  EF9C  F01A         	goto	l14022
 10165   003500                     l14020:
 10166                           
 10167                           ; BSR set to: 0
 10168   003500  51D9               	movf	put_fat@val& (0+255),w,b
 10169   003502  6FDD               	movwf	??_put_fat& (0+255),b
 10170   003504  6BDE               	clrf	(??_put_fat+1)& (0+255),b
 10171   003506  3BDD               	swapf	??_put_fat& (0+255),f,b
 10172   003508  3BDE               	swapf	(??_put_fat+1)& (0+255),f,b
 10173   00350A  0EF0               	movlw	240
 10174   00350C  17DE               	andwf	(??_put_fat+1)& (0+255),f,b
 10175   00350E  51DD               	movf	??_put_fat& (0+255),w,b
 10176   003510  0B0F               	andlw	15
 10177   003512  13DE               	iorwf	(??_put_fat+1)& (0+255),f,b
 10178   003514  0EF0               	movlw	240
 10179   003516  17DD               	andwf	??_put_fat& (0+255),f,b
 10180   003518  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 10181   00351E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 10182   003524  50DF               	movf	indf2,w,c
 10183   003526  0B0F               	andlw	15
 10184   003528  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10185   00352A  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 10186   00352C  51DD               	movf	??_put_fat& (0+255),w,b
 10187   00352E  11DF               	iorwf	(??_put_fat+2)& (0+255),w,b
 10188   003530  6FEB               	movwf	_put_fat$2606& (0+255),b
 10189   003532  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10190   003534  11E0               	iorwf	(??_put_fat+3)& (0+255),w,b
 10191   003536  6FEC               	movwf	(_put_fat$2606+1)& (0+255),b
 10192   003538                     l14022:
 10193                           
 10194                           ; BSR set to: 0
 10195   003538  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 10196   00353E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 10197   003544  0060  F3AF  FFDF   	movff	_put_fat$2606,indf2
 10198   00354A                     
 10199                           ; BSR set to: 0
 10200                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 10201   00354A  EE20 F003          	lfsr	2,3
 10202   00354E  51D3               	movf	put_fat@fs& (0+255),w,b
 10203   003550  26D9               	addwf	fsr2l,f,c
 10204   003552  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10205   003554  22DA               	addwfc	fsr2h,f,c
 10206   003556  0E01               	movlw	1
 10207   003558  6EDF               	movwf	indf2,c
 10208   00355A                     
 10209                           ; BSR set to: 0
 10210                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 10211   00355A  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 10212   00355E  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 10213   003562  EE20 F023          	lfsr	2,35
 10214   003566  51D3               	movf	put_fat@fs& (0+255),w,b
 10215   003568  26D9               	addwf	fsr2l,f,c
 10216   00356A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10217   00356C  22DA               	addwfc	fsr2h,f,c
 10218   00356E  006F FF78  F0DD    	movff	postinc2,??_put_fat
 10219   003574  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 10220   00357A  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 10221   003580  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 10222   003586  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 10223   00358A  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 10224   00358E  0E09               	movlw	9
 10225   003590  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 10226   003592                     u16125:
 10227   003592  90D8               	bcf	status,0,c
 10228   003594  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 10229   003596  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 10230   003598  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 10231   00359A  EFC9  F01A         	goto	u16125
 10232   00359E  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 10233   0035A0  25DD               	addwf	??_put_fat& (0+255),w,b
 10234   0035A2  6FCA               	movwf	move_window@sector& (0+255),b
 10235   0035A4  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 10236   0035A6  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 10237   0035A8  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10238   0035AA  0E00               	movlw	0
 10239   0035AC  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 10240   0035AE  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10241   0035B0  0E00               	movlw	0
 10242   0035B2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 10243   0035B4  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10244   0035B6  ECBF  F03D         	call	_move_window	;wreg free
 10245   0035BA  0100               	movlb	0	; () banked
 10246   0035BC  6FF3               	movwf	put_fat@res& (0+255),b
 10247   0035BE                     
 10248                           ; BSR set to: 0
 10249                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 10250   0035BE  51F3               	movf	put_fat@res& (0+255),w,b
 10251   0035C0  B4D8               	btfsc	status,2,c
 10252   0035C2  EFE5  F01A         	goto	u16131
 10253   0035C6  EFE7  F01A         	goto	u16130
 10254   0035CA                     u16131:
 10255   0035CA  EFE9  F01A         	goto	l14032
 10256   0035CE                     u16130:
 10257   0035CE  EF80  F01C         	goto	l14068
 10258   0035D2                     l14032:
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 10262   0035D2  0EFF               	movlw	255
 10263   0035D4  15F1               	andwf	put_fat@bc& (0+255),w,b
 10264   0035D6  6FDD               	movwf	??_put_fat& (0+255),b
 10265   0035D8  0E01               	movlw	1
 10266   0035DA  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 10267   0035DC  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 10268   0035DE  51DD               	movf	??_put_fat& (0+255),w,b
 10269   0035E0  25D3               	addwf	put_fat@fs& (0+255),w,b
 10270   0035E2  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10271   0035E4  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10272   0035E6  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 10273   0035E8  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 10274   0035EA  0E33               	movlw	51
 10275   0035EC  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 10276   0035EE  6FEF               	movwf	put_fat@p& (0+255),b
 10277   0035F0  0E00               	movlw	0
 10278   0035F2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 10279   0035F4  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 10280   0035F6                     
 10281                           ; BSR set to: 0
 10282                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 10283   0035F6  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 10284   0035F8  EF00  F01B         	goto	u16141
 10285   0035FC  EF02  F01B         	goto	u16140
 10286   003600                     u16141:
 10287   003600  EF22  F01B         	goto	l14038
 10288   003604                     u16140:
 10289   003604                     
 10290                           ; BSR set to: 0
 10291   003604  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 10292   003608  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 10293   00360C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 10294   003610  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 10295   003614  C0DE  F0DD         	movff	??_put_fat+1,??_put_fat
 10296   003618  C0DF  F0DE         	movff	??_put_fat+2,??_put_fat+1
 10297   00361C  C0E0  F0DF         	movff	??_put_fat+3,??_put_fat+2
 10298   003620  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 10299   003622  0E0F               	movlw	15
 10300   003624  17DD               	andwf	??_put_fat& (0+255),f,b
 10301   003626  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 10302   00362C  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 10303   003632  50DF               	movf	indf2,w,c
 10304   003634  0BF0               	andlw	240
 10305   003636  11DD               	iorwf	??_put_fat& (0+255),w,b
 10306   003638  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 10307   00363A  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 10308   00363C  6FED               	movwf	_put_fat$2607& (0+255),b
 10309   00363E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 10310   003640  EF38  F01B         	goto	l14040
 10311   003644                     l14038:
 10312                           
 10313                           ; BSR set to: 0
 10314   003644  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 10315   003648  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 10316   00364C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 10317   003650  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 10318   003654  0E05               	movlw	5
 10319   003656  EF32  F01B         	goto	u16150
 10320   00365A                     u16155:
 10321   00365A  90D8               	bcf	status,0,c
 10322   00365C  33E0               	rrcf	(??_put_fat+3)& (0+255),f,b
 10323   00365E  33DF               	rrcf	(??_put_fat+2)& (0+255),f,b
 10324   003660  33DE               	rrcf	(??_put_fat+1)& (0+255),f,b
 10325   003662  33DD               	rrcf	??_put_fat& (0+255),f,b
 10326   003664                     u16150:
 10327   003664  2EE8               	decfsz	wreg,f,c
 10328   003666  EF2D  F01B         	goto	u16155
 10329   00366A  51DD               	movf	??_put_fat& (0+255),w,b
 10330   00366C  6FED               	movwf	_put_fat$2607& (0+255),b
 10331   00366E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 10332   003670                     l14040:
 10333                           
 10334                           ; BSR set to: 0
 10335   003670  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 10336   003676  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 10337   00367C  0060  F3B7  FFDF   	movff	_put_fat$2607,indf2
 10338                           
 10339                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 10340   003682  EE20 F003          	lfsr	2,3
 10341   003686  51D3               	movf	put_fat@fs& (0+255),w,b
 10342   003688  26D9               	addwf	fsr2l,f,c
 10343   00368A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10344   00368C  22DA               	addwfc	fsr2h,f,c
 10345   00368E  0E01               	movlw	1
 10346   003690  6EDF               	movwf	indf2,c
 10347                           
 10348                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 10349   003692  EF80  F01C         	goto	l14068
 10350   003696                     l14042:
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 10354   003696  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 10355   00369A  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 10356   00369E  EE20 F023          	lfsr	2,35
 10357   0036A2  51D3               	movf	put_fat@fs& (0+255),w,b
 10358   0036A4  26D9               	addwf	fsr2l,f,c
 10359   0036A6  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10360   0036A8  22DA               	addwfc	fsr2h,f,c
 10361   0036AA  006F FF78  F0DD    	movff	postinc2,??_put_fat
 10362   0036B0  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 10363   0036B6  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 10364   0036BC  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 10365   0036C2  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 10366   0036C6  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 10367   0036CA  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 10368   0036CE  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 10369   0036D2  C0E2  F0E1         	movff	??_put_fat+5,??_put_fat+4
 10370   0036D6  C0E3  F0E2         	movff	??_put_fat+6,??_put_fat+5
 10371   0036DA  C0E4  F0E3         	movff	??_put_fat+7,??_put_fat+6
 10372   0036DE  6BE4               	clrf	(??_put_fat+7)& (0+255),b
 10373   0036E0  51DD               	movf	??_put_fat& (0+255),w,b
 10374   0036E2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 10375   0036E4  6FCA               	movwf	move_window@sector& (0+255),b
 10376   0036E6  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10377   0036E8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 10378   0036EA  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10379   0036EC  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 10380   0036EE  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 10381   0036F0  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10382   0036F2  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 10383   0036F4  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 10384   0036F6  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10385   0036F8  ECBF  F03D         	call	_move_window	;wreg free
 10386   0036FC  0100               	movlb	0	; () banked
 10387   0036FE  6FF3               	movwf	put_fat@res& (0+255),b
 10388   003700                     
 10389                           ; BSR set to: 0
 10390                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 10391   003700  51F3               	movf	put_fat@res& (0+255),w,b
 10392   003702  B4D8               	btfsc	status,2,c
 10393   003704  EF86  F01B         	goto	u16161
 10394   003708  EF88  F01B         	goto	u16160
 10395   00370C                     u16161:
 10396   00370C  EF8A  F01B         	goto	l14048
 10397   003710                     u16160:
 10398   003710  EF80  F01C         	goto	l14068
 10399   003714                     l14048:
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 10403   003714  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 10404   003718  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 10405   00371C  90D8               	bcf	status,0,c
 10406   00371E  37DD               	rlcf	??_put_fat& (0+255),f,b
 10407   003720  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 10408   003722  0EFF               	movlw	255
 10409   003724  15DD               	andwf	??_put_fat& (0+255),w,b
 10410   003726  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10411   003728  0E01               	movlw	1
 10412   00372A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 10413   00372C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 10414   00372E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 10415   003730  25D3               	addwf	put_fat@fs& (0+255),w,b
 10416   003732  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 10417   003734  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 10418   003736  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 10419   003738  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 10420   00373A  0E33               	movlw	51
 10421   00373C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 10422   00373E  6F60               	movwf	st_word@ptr& (0+255),b
 10423   003740  0E00               	movlw	0
 10424   003742  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 10425   003744  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 10426   003746  C0D9  F062         	movff	put_fat@val,st_word@val
 10427   00374A  C0DA  F063         	movff	put_fat@val+1,st_word@val+1
 10428   00374E  EC48  F045         	call	_st_word	;wreg free
 10429   003752                     
 10430                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 10431   003752  0100               	movlb	0	; () banked
 10432   003754  EE20 F003          	lfsr	2,3
 10433   003758  51D3               	movf	put_fat@fs& (0+255),w,b
 10434   00375A  26D9               	addwf	fsr2l,f,c
 10435   00375C  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10436   00375E  22DA               	addwfc	fsr2h,f,c
 10437   003760  0E01               	movlw	1
 10438   003762  6EDF               	movwf	indf2,c
 10439                           
 10440                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 10441   003764  EF80  F01C         	goto	l14068
 10442   003768                     l14052:
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 10446   003768  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 10447   00376C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 10448   003770  EE20 F023          	lfsr	2,35
 10449   003774  51D3               	movf	put_fat@fs& (0+255),w,b
 10450   003776  26D9               	addwf	fsr2l,f,c
 10451   003778  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10452   00377A  22DA               	addwfc	fsr2h,f,c
 10453   00377C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 10454   003782  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 10455   003788  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 10456   00378E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 10457   003794  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 10458   003798  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 10459   00379C  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 10460   0037A0  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 10461   0037A4  0E08               	movlw	8
 10462   0037A6  EFDA  F01B         	goto	u16170
 10463   0037AA                     u16175:
 10464   0037AA  90D8               	bcf	status,0,c
 10465   0037AC  33E4               	rrcf	(??_put_fat+7)& (0+255),f,b
 10466   0037AE  33E3               	rrcf	(??_put_fat+6)& (0+255),f,b
 10467   0037B0  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 10468   0037B2  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 10469   0037B4                     u16170:
 10470   0037B4  2EE8               	decfsz	wreg,f,c
 10471   0037B6  EFD5  F01B         	goto	u16175
 10472   0037BA  51DD               	movf	??_put_fat& (0+255),w,b
 10473   0037BC  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 10474   0037BE  6FCA               	movwf	move_window@sector& (0+255),b
 10475   0037C0  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 10476   0037C2  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 10477   0037C4  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10478   0037C6  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 10479   0037C8  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 10480   0037CA  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10481   0037CC  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 10482   0037CE  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 10483   0037D0  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10484   0037D2  ECBF  F03D         	call	_move_window	;wreg free
 10485   0037D6  0100               	movlb	0	; () banked
 10486   0037D8  6FF3               	movwf	put_fat@res& (0+255),b
 10487   0037DA                     
 10488                           ; BSR set to: 0
 10489                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 10490   0037DA  51F3               	movf	put_fat@res& (0+255),w,b
 10491   0037DC  B4D8               	btfsc	status,2,c
 10492   0037DE  EFF3  F01B         	goto	u16181
 10493   0037E2  EFF5  F01B         	goto	u16180
 10494   0037E6                     u16181:
 10495   0037E6  EFF7  F01B         	goto	l14060
 10496   0037EA                     u16180:
 10497   0037EA  EF80  F01C         	goto	l14068
 10498   0037EE                     l14060:
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 10502   0037EE  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 10503   0037F2  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 10504   0037F6  90D8               	bcf	status,0,c
 10505   0037F8  37DD               	rlcf	??_put_fat& (0+255),f,b
 10506   0037FA  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 10507   0037FC  90D8               	bcf	status,0,c
 10508   0037FE  37DD               	rlcf	??_put_fat& (0+255),f,b
 10509   003800  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 10510   003802  0EFF               	movlw	255
 10511   003804  15DD               	andwf	??_put_fat& (0+255),w,b
 10512   003806  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10513   003808  0E01               	movlw	1
 10514   00380A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 10515   00380C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 10516   00380E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 10517   003810  25D3               	addwf	put_fat@fs& (0+255),w,b
 10518   003812  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 10519   003814  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 10520   003816  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 10521   003818  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 10522   00381A  0E33               	movlw	51
 10523   00381C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 10524   00381E  6F60               	movwf	ld_dword@ptr& (0+255),b
 10525   003820  0E00               	movlw	0
 10526   003822  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 10527   003824  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 10528   003826  EC91  F03E         	call	_ld_dword	;wreg free
 10529   00382A  0E00               	movlw	0
 10530   00382C  0100               	movlb	0	; () banked
 10531   00382E  1560               	andwf	?_ld_dword& (0+255),w,b
 10532   003830  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 10533   003832  0E00               	movlw	0
 10534   003834  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 10535   003836  6FE4               	movwf	(??_put_fat+7)& (0+255),b
 10536   003838  0E00               	movlw	0
 10537   00383A  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 10538   00383C  6FE5               	movwf	(??_put_fat+8)& (0+255),b
 10539   00383E  0EF0               	movlw	240
 10540   003840  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 10541   003842  6FE6               	movwf	(??_put_fat+9)& (0+255),b
 10542   003844  0EFF               	movlw	255
 10543   003846  15D9               	andwf	put_fat@val& (0+255),w,b
 10544   003848  6FE7               	movwf	(??_put_fat+10)& (0+255),b
 10545   00384A  0EFF               	movlw	255
 10546   00384C  15DA               	andwf	(put_fat@val+1)& (0+255),w,b
 10547   00384E  6FE8               	movwf	(??_put_fat+11)& (0+255),b
 10548   003850  0EFF               	movlw	255
 10549   003852  15DB               	andwf	(put_fat@val+2)& (0+255),w,b
 10550   003854  6FE9               	movwf	(??_put_fat+12)& (0+255),b
 10551   003856  0E0F               	movlw	15
 10552   003858  15DC               	andwf	(put_fat@val+3)& (0+255),w,b
 10553   00385A  6FEA               	movwf	(??_put_fat+13)& (0+255),b
 10554   00385C  51E3               	movf	(??_put_fat+6)& (0+255),w,b
 10555   00385E  11E7               	iorwf	(??_put_fat+10)& (0+255),w,b
 10556   003860  6FD9               	movwf	put_fat@val& (0+255),b
 10557   003862  51E4               	movf	(??_put_fat+7)& (0+255),w,b
 10558   003864  11E8               	iorwf	(??_put_fat+11)& (0+255),w,b
 10559   003866  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 10560   003868  51E5               	movf	(??_put_fat+8)& (0+255),w,b
 10561   00386A  11E9               	iorwf	(??_put_fat+12)& (0+255),w,b
 10562   00386C  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 10563   00386E  51E6               	movf	(??_put_fat+9)& (0+255),w,b
 10564   003870  11EA               	iorwf	(??_put_fat+13)& (0+255),w,b
 10565   003872  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 10566   003874                     
 10567                           ; BSR set to: 0
 10568                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 10569   003874  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 10570   003878  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 10571   00387C  90D8               	bcf	status,0,c
 10572   00387E  37DD               	rlcf	??_put_fat& (0+255),f,b
 10573   003880  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 10574   003882  90D8               	bcf	status,0,c
 10575   003884  37DD               	rlcf	??_put_fat& (0+255),f,b
 10576   003886  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 10577   003888  0EFF               	movlw	255
 10578   00388A  15DD               	andwf	??_put_fat& (0+255),w,b
 10579   00388C  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 10580   00388E  0E01               	movlw	1
 10581   003890  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 10582   003892  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 10583   003894  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 10584   003896  25D3               	addwf	put_fat@fs& (0+255),w,b
 10585   003898  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 10586   00389A  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 10587   00389C  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 10588   00389E  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 10589   0038A0  0E33               	movlw	51
 10590   0038A2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 10591   0038A4  6F60               	movwf	st_dword@ptr& (0+255),b
 10592   0038A6  0E00               	movlw	0
 10593   0038A8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 10594   0038AA  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 10595   0038AC  C0D9  F062         	movff	put_fat@val,st_dword@val
 10596   0038B0  C0DA  F063         	movff	put_fat@val+1,st_dword@val+1
 10597   0038B4  C0DB  F064         	movff	put_fat@val+2,st_dword@val+2
 10598   0038B8  C0DC  F065         	movff	put_fat@val+3,st_dword@val+3
 10599   0038BC  EC27  F040         	call	_st_dword	;wreg free
 10600   0038C0                     
 10601                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 10602   0038C0  0100               	movlb	0	; () banked
 10603   0038C2  EE20 F003          	lfsr	2,3
 10604   0038C6  51D3               	movf	put_fat@fs& (0+255),w,b
 10605   0038C8  26D9               	addwf	fsr2l,f,c
 10606   0038CA  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 10607   0038CC  22DA               	addwfc	fsr2h,f,c
 10608   0038CE  0E01               	movlw	1
 10609   0038D0  6EDF               	movwf	indf2,c
 10610                           
 10611                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 10612   0038D2  EF80  F01C         	goto	l14068
 10613   0038D6                     l14066:
 10614                           
 10615                           ; BSR set to: 0
 10616   0038D6  0060  F34F  FFD9   	movff	put_fat@fs,fsr2l
 10617   0038DC  0060  F353  FFDA   	movff	put_fat@fs+1,fsr2h
 10618   0038E2  50DF               	movf	indf2,w,c
 10619                           
 10620                           ; Switch size 1, requested type "simple"
 10621                           ; Number of cases is 3, Range of values is 1 to 3
 10622                           ; switch strategies available:
 10623                           ; Name         Instructions Cycles
 10624                           ; simple_byte           10     6 (average)
 10625                           ;	Chosen strategy is simple_byte
 10626   0038E4  0A01               	xorlw	1	; case 1
 10627   0038E6  B4D8               	btfsc	status,2,c
 10628   0038E8  EF17  F01A         	goto	l945
 10629   0038EC  0A03               	xorlw	3	; case 2
 10630   0038EE  B4D8               	btfsc	status,2,c
 10631   0038F0  EF4B  F01B         	goto	l14042
 10632   0038F4  0A01               	xorlw	1	; case 3
 10633   0038F6  B4D8               	btfsc	status,2,c
 10634   0038F8  EFB4  F01B         	goto	l14052
 10635   0038FC  EF80  F01C         	goto	l14068
 10636   003900                     l14068:
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 10640   003900  51F3               	movf	put_fat@res& (0+255),w,b
 10641   003902                     
 10642                           ; BSR set to: 0
 10643   003902  0012               	return		;funcret
 10644   003904                     __end_of_put_fat:
 10645                           	callstack 0
 10646                           
 10647 ;; *************** function _get_fat *****************
 10648 ;; Defined at:
 10649 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  obj             2  115[BANK0 ] PTR struct .
 10652 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 10653 ;;  clst            4  117[BANK0 ] unsigned long 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  val             4  133[BANK0 ] unsigned long 
 10656 ;;  fs              2  139[BANK0 ] PTR struct .
 10657 ;;		 -> FatFs(563), NULL(0), 
 10658 ;;  bc              2  137[BANK0 ] unsigned int 
 10659 ;;  wc              2  131[BANK0 ] unsigned int 
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  4  115[BANK0 ] unsigned long 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10669 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;Total ram usage:       26 bytes
 10674 ;; Hardware stack levels used: 1
 10675 ;; Hardware stack levels required when called: 12
 10676 ;; This function calls:
 10677 ;;		_ld_dword
 10678 ;;		_ld_word
 10679 ;;		_move_window
 10680 ;; This function is called by:
 10681 ;;		_remove_chain
 10682 ;;		_create_chain
 10683 ;;		_dir_sdi
 10684 ;;		_dir_next
 10685 ;;		_f_open
 10686 ;;		_f_read
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text25
 10691   004B78                     __ptext25:
 10692                           	callstack 0
 10693   004B78                     _get_fat:
 10694                           	callstack 15
 10695   004B78                     
 10696                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 10697   004B78  0060  F34F  FFD9   	movff	get_fat@obj,fsr2l
 10698   004B7E  0060  F353  FFDA   	movff	get_fat@obj+1,fsr2h
 10699   004B84  006F FF78  F0EB    	movff	postinc2,get_fat@fs
 10700   004B8A  006F FF74  F0EC    	movff	postdec2,get_fat@fs+1
 10701   004B90                     
 10702                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 10703   004B90  0100               	movlb	0	; () banked
 10704   004B92  51D8               	movf	(get_fat@clst+3)& (0+255),w,b
 10705   004B94  11D7               	iorwf	(get_fat@clst+2)& (0+255),w,b
 10706   004B96  11D6               	iorwf	(get_fat@clst+1)& (0+255),w,b
 10707   004B98  E109               	bnz	u15960
 10708   004B9A  0E02               	movlw	2
 10709   004B9C  5DD5               	subwf	get_fat@clst& (0+255),w,b
 10710   004B9E  A0D8               	btfss	status,0,c
 10711   004BA0  EFD4  F025         	goto	u15961
 10712   004BA4  EFD6  F025         	goto	u15960
 10713   004BA8                     u15961:
 10714   004BA8  EFEB  F025         	goto	l13954
 10715   004BAC                     u15960:
 10716   004BAC                     
 10717                           ; BSR set to: 0
 10718   004BAC  EE20 F017          	lfsr	2,23
 10719   004BB0  51EB               	movf	get_fat@fs& (0+255),w,b
 10720   004BB2  26D9               	addwf	fsr2l,f,c
 10721   004BB4  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 10722   004BB6  22DA               	addwfc	fsr2h,f,c
 10723   004BB8  50DE               	movf	postinc2,w,c
 10724   004BBA  5DD5               	subwf	get_fat@clst& (0+255),w,b
 10725   004BBC  50DE               	movf	postinc2,w,c
 10726   004BBE  59D6               	subwfb	(get_fat@clst+1)& (0+255),w,b
 10727   004BC0  50DE               	movf	postinc2,w,c
 10728   004BC2  59D7               	subwfb	(get_fat@clst+2)& (0+255),w,b
 10729   004BC4  50DE               	movf	postinc2,w,c
 10730   004BC6  59D8               	subwfb	(get_fat@clst+3)& (0+255),w,b
 10731   004BC8  A0D8               	btfss	status,0,c
 10732   004BCA  EFE9  F025         	goto	u15971
 10733   004BCE  EFEB  F025         	goto	u15970
 10734   004BD2                     u15971:
 10735   004BD2  EFF5  F025         	goto	l922
 10736   004BD6                     u15970:
 10737   004BD6                     l13954:
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 10741   004BD6  0E01               	movlw	1
 10742   004BD8  6FE5               	movwf	get_fat@val& (0+255),b
 10743   004BDA  0E00               	movlw	0
 10744   004BDC  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 10745   004BDE  0E00               	movlw	0
 10746   004BE0  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 10747   004BE2  0E00               	movlw	0
 10748   004BE4  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 10749                           
 10750                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 10751   004BE6  EFBF  F027         	goto	l925
 10752   004BEA                     l922:
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 10756   004BEA  69E5               	setf	get_fat@val& (0+255),b
 10757   004BEC  69E6               	setf	(get_fat@val+1)& (0+255),b
 10758   004BEE  69E7               	setf	(get_fat@val+2)& (0+255),b
 10759   004BF0  69E8               	setf	(get_fat@val+3)& (0+255),b
 10760                           
 10761                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 10762   004BF2  EFAA  F027         	goto	l13994
 10763   004BF6                     l927:
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 10767   004BF6  C0D5  F0E9         	movff	get_fat@clst,get_fat@bc
 10768   004BFA  C0D6  F0EA         	movff	get_fat@clst+1,get_fat@bc+1
 10769   004BFE                     
 10770                           ; BSR set to: 0
 10771   004BFE  90D8               	bcf	status,0,c
 10772   004C00  31EA               	rrcf	(get_fat@bc+1)& (0+255),w,b
 10773   004C02  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 10774   004C04  31E9               	rrcf	get_fat@bc& (0+255),w,b
 10775   004C06  6FD9               	movwf	??_get_fat& (0+255),b
 10776   004C08  51D9               	movf	??_get_fat& (0+255),w,b
 10777   004C0A  27E9               	addwf	get_fat@bc& (0+255),f,b
 10778   004C0C  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 10779   004C0E  23EA               	addwfc	(get_fat@bc+1)& (0+255),f,b
 10780   004C10                     
 10781                           ; BSR set to: 0
 10782                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 10783   004C10  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 10784   004C14  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 10785   004C18  EE20 F023          	lfsr	2,35
 10786   004C1C  51EB               	movf	get_fat@fs& (0+255),w,b
 10787   004C1E  26D9               	addwf	fsr2l,f,c
 10788   004C20  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 10789   004C22  22DA               	addwfc	fsr2h,f,c
 10790   004C24  006F FF78  F0D9    	movff	postinc2,??_get_fat
 10791   004C2A  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 10792   004C30  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 10793   004C36  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 10794   004C3C  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 10795   004C40  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 10796   004C44  0E09               	movlw	9
 10797   004C46  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 10798   004C48                     u15985:
 10799   004C48  90D8               	bcf	status,0,c
 10800   004C4A  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 10801   004C4C  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 10802   004C4E  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 10803   004C50  EF24  F026         	goto	u15985
 10804   004C54  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 10805   004C56  25D9               	addwf	??_get_fat& (0+255),w,b
 10806   004C58  6FCA               	movwf	move_window@sector& (0+255),b
 10807   004C5A  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 10808   004C5C  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 10809   004C5E  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10810   004C60  0E00               	movlw	0
 10811   004C62  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 10812   004C64  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10813   004C66  0E00               	movlw	0
 10814   004C68  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 10815   004C6A  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10816   004C6C  ECBF  F03D         	call	_move_window	;wreg free
 10817   004C70  0900               	iorlw	0
 10818   004C72  B4D8               	btfsc	status,2,c
 10819   004C74  EF3E  F026         	goto	u15991
 10820   004C78  EF40  F026         	goto	u15990
 10821   004C7C                     u15991:
 10822   004C7C  EF42  F026         	goto	l13962
 10823   004C80                     u15990:
 10824   004C80  EFBF  F027         	goto	l925
 10825   004C84                     l13962:
 10826                           
 10827                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 10828   004C84  0EFF               	movlw	255
 10829   004C86  0100               	movlb	0	; () banked
 10830   004C88  15E9               	andwf	get_fat@bc& (0+255),w,b
 10831   004C8A  6FD9               	movwf	??_get_fat& (0+255),b
 10832   004C8C  0E01               	movlw	1
 10833   004C8E  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 10834   004C90  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 10835   004C92  51D9               	movf	??_get_fat& (0+255),w,b
 10836   004C94  25EB               	addwf	get_fat@fs& (0+255),w,b
 10837   004C96  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 10838   004C98  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 10839   004C9A  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 10840   004C9C  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 10841   004C9E  0E33               	movlw	51
 10842   004CA0  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 10843   004CA2  6ED9               	movwf	fsr2l,c
 10844   004CA4  0E00               	movlw	0
 10845   004CA6  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 10846   004CA8  6EDA               	movwf	fsr2h,c
 10847   004CAA  50DF               	movf	indf2,w,c
 10848   004CAC  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 10849   004CAE  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 10850   004CB0  6FE3               	movwf	get_fat@wc& (0+255),b
 10851   004CB2  6BE4               	clrf	(get_fat@wc+1)& (0+255),b
 10852   004CB4                     
 10853                           ; BSR set to: 0
 10854   004CB4  4BE9               	infsnz	get_fat@bc& (0+255),f,b
 10855   004CB6  2BEA               	incf	(get_fat@bc+1)& (0+255),f,b
 10856   004CB8                     
 10857                           ; BSR set to: 0
 10858                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 10859   004CB8  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 10860   004CBC  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 10861   004CC0  EE20 F023          	lfsr	2,35
 10862   004CC4  51EB               	movf	get_fat@fs& (0+255),w,b
 10863   004CC6  26D9               	addwf	fsr2l,f,c
 10864   004CC8  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 10865   004CCA  22DA               	addwfc	fsr2h,f,c
 10866   004CCC  006F FF78  F0D9    	movff	postinc2,??_get_fat
 10867   004CD2  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 10868   004CD8  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 10869   004CDE  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 10870   004CE4  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 10871   004CE8  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 10872   004CEC  0E09               	movlw	9
 10873   004CEE  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 10874   004CF0                     u16005:
 10875   004CF0  90D8               	bcf	status,0,c
 10876   004CF2  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 10877   004CF4  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 10878   004CF6  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 10879   004CF8  EF78  F026         	goto	u16005
 10880   004CFC  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 10881   004CFE  25D9               	addwf	??_get_fat& (0+255),w,b
 10882   004D00  6FCA               	movwf	move_window@sector& (0+255),b
 10883   004D02  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 10884   004D04  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 10885   004D06  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 10886   004D08  0E00               	movlw	0
 10887   004D0A  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 10888   004D0C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 10889   004D0E  0E00               	movlw	0
 10890   004D10  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 10891   004D12  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 10892   004D14  ECBF  F03D         	call	_move_window	;wreg free
 10893   004D18  0900               	iorlw	0
 10894   004D1A  B4D8               	btfsc	status,2,c
 10895   004D1C  EF92  F026         	goto	u16011
 10896   004D20  EF94  F026         	goto	u16010
 10897   004D24                     u16011:
 10898   004D24  EF96  F026         	goto	l13970
 10899   004D28                     u16010:
 10900   004D28  EFBF  F027         	goto	l925
 10901   004D2C                     l13970:
 10902                           
 10903                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 10904   004D2C  0EFF               	movlw	255
 10905   004D2E  0100               	movlb	0	; () banked
 10906   004D30  15E9               	andwf	get_fat@bc& (0+255),w,b
 10907   004D32  6FD9               	movwf	??_get_fat& (0+255),b
 10908   004D34  0E01               	movlw	1
 10909   004D36  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 10910   004D38  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 10911   004D3A  51D9               	movf	??_get_fat& (0+255),w,b
 10912   004D3C  25EB               	addwf	get_fat@fs& (0+255),w,b
 10913   004D3E  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 10914   004D40  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 10915   004D42  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 10916   004D44  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 10917   004D46  0E33               	movlw	51
 10918   004D48  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 10919   004D4A  6ED9               	movwf	fsr2l,c
 10920   004D4C  0E00               	movlw	0
 10921   004D4E  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 10922   004D50  6EDA               	movwf	fsr2h,c
 10923   004D52  50DF               	movf	indf2,w,c
 10924   004D54  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 10925   004D56  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 10926   004D58  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 10927   004D5A  6BDE               	clrf	(??_get_fat+5)& (0+255),b
 10928   004D5C  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 10929   004D5E  13E3               	iorwf	get_fat@wc& (0+255),f,b
 10930   004D60  51DF               	movf	(??_get_fat+6)& (0+255),w,b
 10931   004D62  13E4               	iorwf	(get_fat@wc+1)& (0+255),f,b
 10932   004D64                     
 10933                           ; BSR set to: 0
 10934                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 10935   004D64  B1D5               	btfsc	get_fat@clst& (0+255),0,b
 10936   004D66  EFB7  F026         	goto	u16021
 10937   004D6A  EFB9  F026         	goto	u16020
 10938   004D6E                     u16021:
 10939   004D6E  EFC1  F026         	goto	l13976
 10940   004D72                     u16020:
 10941   004D72                     
 10942                           ; BSR set to: 0
 10943   004D72  0EFF               	movlw	255
 10944   004D74  15E3               	andwf	get_fat@wc& (0+255),w,b
 10945   004D76  6FE1               	movwf	_get_fat$2577& (0+255),b
 10946   004D78  0E0F               	movlw	15
 10947   004D7A  15E4               	andwf	(get_fat@wc+1)& (0+255),w,b
 10948   004D7C  6FE2               	movwf	(_get_fat$2577+1)& (0+255),b
 10949   004D7E  EFD1  F026         	goto	l13978
 10950   004D82                     l13976:
 10951                           
 10952                           ; BSR set to: 0
 10953   004D82  C0E3  F0D9         	movff	get_fat@wc,??_get_fat
 10954   004D86  C0E4  F0DA         	movff	get_fat@wc+1,??_get_fat+1
 10955   004D8A  0E04               	movlw	4
 10956   004D8C  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 10957   004D8E                     u16035:
 10958   004D8E  90D8               	bcf	status,0,c
 10959   004D90  33DA               	rrcf	(??_get_fat+1)& (0+255),f,b
 10960   004D92  33D9               	rrcf	??_get_fat& (0+255),f,b
 10961   004D94  2FDB               	decfsz	(??_get_fat+2)& (0+255),f,b
 10962   004D96  EFC7  F026         	goto	u16035
 10963   004D9A  C0D9  F0E1         	movff	??_get_fat,_get_fat$2577
 10964   004D9E  C0DA  F0E2         	movff	??_get_fat+1,_get_fat$2577+1
 10965   004DA2                     l13978:
 10966                           
 10967                           ; BSR set to: 0
 10968   004DA2  C0E1  F0E5         	movff	_get_fat$2577,get_fat@val
 10969   004DA6  C0E2  F0E6         	movff	_get_fat$2577+1,get_fat@val+1
 10970   004DAA  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 10971   004DAC  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 10972                           
 10973                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 10974   004DAE  EFBF  F027         	goto	l925
 10975   004DB2                     l13980:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 10979   004DB2  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 10980   004DB6  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 10981   004DBA  EE20 F023          	lfsr	2,35
 10982   004DBE  51EB               	movf	get_fat@fs& (0+255),w,b
 10983   004DC0  26D9               	addwf	fsr2l,f,c
 10984   004DC2  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 10985   004DC4  22DA               	addwfc	fsr2h,f,c
 10986   004DC6  006F FF78  F0D9    	movff	postinc2,??_get_fat
 10987   004DCC  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 10988   004DD2  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 10989   004DD8  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 10990   004DDE  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 10991   004DE2  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 10992   004DE6  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 10993   004DEA  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 10994   004DEE  C0DE  F0DD         	movff	??_get_fat+5,??_get_fat+4
 10995   004DF2  C0DF  F0DE         	movff	??_get_fat+6,??_get_fat+5
 10996   004DF6  C0E0  F0DF         	movff	??_get_fat+7,??_get_fat+6
 10997   004DFA  6BE0               	clrf	(??_get_fat+7)& (0+255),b
 10998   004DFC  51D9               	movf	??_get_fat& (0+255),w,b
 10999   004DFE  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 11000   004E00  6FCA               	movwf	move_window@sector& (0+255),b
 11001   004E02  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 11002   004E04  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 11003   004E06  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11004   004E08  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 11005   004E0A  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 11006   004E0C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11007   004E0E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 11008   004E10  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 11009   004E12  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11010   004E14  ECBF  F03D         	call	_move_window	;wreg free
 11011   004E18  0900               	iorlw	0
 11012   004E1A  B4D8               	btfsc	status,2,c
 11013   004E1C  EF12  F027         	goto	u16041
 11014   004E20  EF14  F027         	goto	u16040
 11015   004E24                     u16041:
 11016   004E24  EF16  F027         	goto	l13984
 11017   004E28                     u16040:
 11018   004E28  EFBF  F027         	goto	l925
 11019   004E2C                     l13984:
 11020                           
 11021                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 11022   004E2C  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 11023   004E30  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 11024   004E34  90D8               	bcf	status,0,c
 11025   004E36  0100               	movlb	0	; () banked
 11026   004E38  37D9               	rlcf	??_get_fat& (0+255),f,b
 11027   004E3A  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 11028   004E3C  0EFF               	movlw	255
 11029   004E3E  15D9               	andwf	??_get_fat& (0+255),w,b
 11030   004E40  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 11031   004E42  0E01               	movlw	1
 11032   004E44  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 11033   004E46  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 11034   004E48  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 11035   004E4A  25EB               	addwf	get_fat@fs& (0+255),w,b
 11036   004E4C  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 11037   004E4E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 11038   004E50  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 11039   004E52  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 11040   004E54  0E33               	movlw	51
 11041   004E56  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 11042   004E58  6F60               	movwf	ld_word@ptr& (0+255),b
 11043   004E5A  0E00               	movlw	0
 11044   004E5C  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 11045   004E5E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 11046   004E60  ECB5  F044         	call	_ld_word	;wreg free
 11047   004E64  0100               	movlb	0	; () banked
 11048   004E66  C060  F0E5         	movff	?_ld_word,get_fat@val
 11049   004E6A  C061  F0E6         	movff	?_ld_word+1,get_fat@val+1
 11050   004E6E  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 11051   004E70  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 11052                           
 11053                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 11054   004E72  EFBF  F027         	goto	l925
 11055   004E76                     l13986:
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 11059   004E76  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 11060   004E7A  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 11061   004E7E  EE20 F023          	lfsr	2,35
 11062   004E82  51EB               	movf	get_fat@fs& (0+255),w,b
 11063   004E84  26D9               	addwf	fsr2l,f,c
 11064   004E86  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 11065   004E88  22DA               	addwfc	fsr2h,f,c
 11066   004E8A  006F FF78  F0D9    	movff	postinc2,??_get_fat
 11067   004E90  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 11068   004E96  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 11069   004E9C  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 11070   004EA2  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 11071   004EA6  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 11072   004EAA  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 11073   004EAE  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 11074   004EB2  0E08               	movlw	8
 11075   004EB4  EF61  F027         	goto	u16050
 11076   004EB8                     u16055:
 11077   004EB8  90D8               	bcf	status,0,c
 11078   004EBA  33E0               	rrcf	(??_get_fat+7)& (0+255),f,b
 11079   004EBC  33DF               	rrcf	(??_get_fat+6)& (0+255),f,b
 11080   004EBE  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 11081   004EC0  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 11082   004EC2                     u16050:
 11083   004EC2  2EE8               	decfsz	wreg,f,c
 11084   004EC4  EF5C  F027         	goto	u16055
 11085   004EC8  51D9               	movf	??_get_fat& (0+255),w,b
 11086   004ECA  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 11087   004ECC  6FCA               	movwf	move_window@sector& (0+255),b
 11088   004ECE  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 11089   004ED0  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 11090   004ED2  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 11091   004ED4  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 11092   004ED6  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 11093   004ED8  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 11094   004EDA  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 11095   004EDC  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 11096   004EDE  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 11097   004EE0  ECBF  F03D         	call	_move_window	;wreg free
 11098   004EE4  0900               	iorlw	0
 11099   004EE6  B4D8               	btfsc	status,2,c
 11100   004EE8  EF78  F027         	goto	u16061
 11101   004EEC  EF7A  F027         	goto	u16060
 11102   004EF0                     u16061:
 11103   004EF0  EF7C  F027         	goto	l13990
 11104   004EF4                     u16060:
 11105   004EF4  EFBF  F027         	goto	l925
 11106   004EF8                     l13990:
 11107                           
 11108                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 11109   004EF8  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 11110   004EFC  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 11111   004F00  0100               	movlb	0	; () banked
 11112   004F02  90D8               	bcf	status,0,c
 11113   004F04  37D9               	rlcf	??_get_fat& (0+255),f,b
 11114   004F06  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 11115   004F08  90D8               	bcf	status,0,c
 11116   004F0A  37D9               	rlcf	??_get_fat& (0+255),f,b
 11117   004F0C  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 11118   004F0E  0EFF               	movlw	255
 11119   004F10  15D9               	andwf	??_get_fat& (0+255),w,b
 11120   004F12  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 11121   004F14  0E01               	movlw	1
 11122   004F16  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 11123   004F18  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 11124   004F1A  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 11125   004F1C  25EB               	addwf	get_fat@fs& (0+255),w,b
 11126   004F1E  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 11127   004F20  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 11128   004F22  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 11129   004F24  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 11130   004F26  0E33               	movlw	51
 11131   004F28  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 11132   004F2A  6F60               	movwf	ld_dword@ptr& (0+255),b
 11133   004F2C  0E00               	movlw	0
 11134   004F2E  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 11135   004F30  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 11136   004F32  EC91  F03E         	call	_ld_dword	;wreg free
 11137   004F36  0EFF               	movlw	255
 11138   004F38  0100               	movlb	0	; () banked
 11139   004F3A  1560               	andwf	?_ld_dword& (0+255),w,b
 11140   004F3C  6FE5               	movwf	get_fat@val& (0+255),b
 11141   004F3E  0EFF               	movlw	255
 11142   004F40  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 11143   004F42  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 11144   004F44  0EFF               	movlw	255
 11145   004F46  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 11146   004F48  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 11147   004F4A  0E0F               	movlw	15
 11148   004F4C  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 11149   004F4E  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 11150                           
 11151                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 11152   004F50  EFBF  F027         	goto	l925
 11153   004F54                     l13994:
 11154                           
 11155                           ; BSR set to: 0
 11156   004F54  0060  F3AF  FFD9   	movff	get_fat@fs,fsr2l
 11157   004F5A  0060  F3B3  FFDA   	movff	get_fat@fs+1,fsr2h
 11158   004F60  50DF               	movf	indf2,w,c
 11159                           
 11160                           ; Switch size 1, requested type "simple"
 11161                           ; Number of cases is 3, Range of values is 1 to 3
 11162                           ; switch strategies available:
 11163                           ; Name         Instructions Cycles
 11164                           ; simple_byte           10     6 (average)
 11165                           ;	Chosen strategy is simple_byte
 11166   004F62  0A01               	xorlw	1	; case 1
 11167   004F64  B4D8               	btfsc	status,2,c
 11168   004F66  EFFB  F025         	goto	l927
 11169   004F6A  0A03               	xorlw	3	; case 2
 11170   004F6C  B4D8               	btfsc	status,2,c
 11171   004F6E  EFD9  F026         	goto	l13980
 11172   004F72  0A01               	xorlw	1	; case 3
 11173   004F74  B4D8               	btfsc	status,2,c
 11174   004F76  EF3B  F027         	goto	l13986
 11175   004F7A  EFEB  F025         	goto	l13954
 11176   004F7E                     l925:
 11177                           
 11178                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 11179   004F7E  C0E5  F0D3         	movff	get_fat@val,?_get_fat
 11180   004F82  C0E6  F0D4         	movff	get_fat@val+1,?_get_fat+1
 11181   004F86  C0E7  F0D5         	movff	get_fat@val+2,?_get_fat+2
 11182   004F8A  C0E8  F0D6         	movff	get_fat@val+3,?_get_fat+3
 11183   004F8E  0012               	return		;funcret
 11184   004F90                     __end_of_get_fat:
 11185                           	callstack 0
 11186                           
 11187 ;; *************** function _f_close *****************
 11188 ;; Defined at:
 11189 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  fp              2  122[BANK0 ] PTR struct .
 11192 ;;		 -> Fil(546), 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  fs              2  124[BANK0 ] PTR struct .
 11195 ;;		 -> FatFs(563), NULL(0), 
 11196 ;;  res             1  126[BANK0 ] enum E68
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      enum E68
 11199 ;; Registers used:
 11200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11207 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;Total ram usage:        5 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 13
 11213 ;; This function calls:
 11214 ;;		_f_sync
 11215 ;;		_validate
 11216 ;; This function is called by:
 11217 ;;		_main
 11218 ;;		_send_status_ok
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text26
 11223   00878A                     __ptext26:
 11224                           	callstack 0
 11225   00878A                     _f_close:
 11226                           	callstack 16
 11227   00878A                     
 11228                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 11229   00878A  C0DA  F0D3         	movff	f_close@fp,f_sync@fp
 11230   00878E  C0DB  F0D4         	movff	f_close@fp+1,f_sync@fp+1
 11231   008792  EC7F  F02E         	call	_f_sync	;wreg free
 11232   008796  0100               	movlb	0	; () banked
 11233   008798  6FDE               	movwf	f_close@res& (0+255),b
 11234   00879A                     
 11235                           ; BSR set to: 0
 11236                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 11237   00879A  51DE               	movf	f_close@res& (0+255),w,b
 11238   00879C  A4D8               	btfss	status,2,c
 11239   00879E  EFD3  F043         	goto	u19781
 11240   0087A2  EFD5  F043         	goto	u19780
 11241   0087A6                     u19781:
 11242   0087A6  EFF0  F043         	goto	l1397
 11243   0087AA                     u19780:
 11244   0087AA                     
 11245                           ; BSR set to: 0
 11246                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 11247   0087AA  C0DA  F062         	movff	f_close@fp,validate@obj
 11248   0087AE  C0DB  F063         	movff	f_close@fp+1,validate@obj+1
 11249   0087B2  0EDC               	movlw	low f_close@fs
 11250   0087B4  6F64               	movwf	validate@rfs& (0+255),b
 11251   0087B6  6B65               	clrf	(validate@rfs+1)& (0+255),b
 11252   0087B8  EC43  F039         	call	_validate	;wreg free
 11253   0087BC  0100               	movlb	0	; () banked
 11254   0087BE  6FDE               	movwf	f_close@res& (0+255),b
 11255   0087C0                     
 11256                           ; BSR set to: 0
 11257                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 11258   0087C0  51DE               	movf	f_close@res& (0+255),w,b
 11259   0087C2  A4D8               	btfss	status,2,c
 11260   0087C4  EFE6  F043         	goto	u19791
 11261   0087C8  EFE8  F043         	goto	u19790
 11262   0087CC                     u19791:
 11263   0087CC  EFF0  F043         	goto	l1397
 11264   0087D0                     u19790:
 11265   0087D0                     
 11266                           ; BSR set to: 0
 11267                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 11268   0087D0  0060  F36B  FFD9   	movff	f_close@fp,fsr2l
 11269   0087D6  0060  F36F  FFDA   	movff	f_close@fp+1,fsr2h
 11270   0087DC  6ADE               	clrf	postinc2,c
 11271   0087DE  6ADD               	clrf	postdec2,c
 11272   0087E0                     l1397:
 11273                           
 11274                           ; BSR set to: 0
 11275   0087E0  0012               	return		;funcret
 11276   0087E2                     __end_of_f_close:
 11277                           	callstack 0
 11278                           
 11279 ;; *************** function _f_sync *****************
 11280 ;; Defined at:
 11281 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;  fp              2  115[BANK0 ] PTR struct .
 11284 ;;		 -> Fil(546), 
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;  tm              4    0        unsigned long 
 11287 ;;  fs              2  120[BANK0 ] PTR struct .
 11288 ;;		 -> FatFs(563), NULL(0), 
 11289 ;;  dir             2  118[BANK0 ] PTR unsigned char 
 11290 ;;		 -> FatFs(563), NULL(0), 
 11291 ;;  res             1  117[BANK0 ] enum E68
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      enum E68
 11294 ;; Registers used:
 11295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11302 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;Total ram usage:        7 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 12
 11308 ;; This function calls:
 11309 ;;		_disk_write
 11310 ;;		_move_window
 11311 ;;		_st_clust
 11312 ;;		_st_dword
 11313 ;;		_st_word
 11314 ;;		_sync_fs
 11315 ;;		_validate
 11316 ;; This function is called by:
 11317 ;;		_f_close
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text27
 11322   005CFE                     __ptext27:
 11323                           	callstack 0
 11324   005CFE                     _f_sync:
 11325                           	callstack 16
 11326   005CFE                     
 11327                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 11328   005CFE  C0D3  F062         	movff	f_sync@fp,validate@obj
 11329   005D02  C0D4  F063         	movff	f_sync@fp+1,validate@obj+1
 11330   005D06  0ED8               	movlw	low f_sync@fs
 11331   005D08  0100               	movlb	0	; () banked
 11332   005D0A  6F64               	movwf	validate@rfs& (0+255),b
 11333   005D0C  6B65               	clrf	(validate@rfs+1)& (0+255),b
 11334   005D0E  EC43  F039         	call	_validate	;wreg free
 11335   005D12  0100               	movlb	0	; () banked
 11336   005D14  6FD5               	movwf	f_sync@res& (0+255),b
 11337   005D16                     
 11338                           ; BSR set to: 0
 11339                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 11340   005D16  51D5               	movf	f_sync@res& (0+255),w,b
 11341   005D18  A4D8               	btfss	status,2,c
 11342   005D1A  EF91  F02E         	goto	u18831
 11343   005D1E  EF93  F02E         	goto	u18830
 11344   005D22                     u18831:
 11345   005D22  EF92  F02F         	goto	l15540
 11346   005D26                     u18830:
 11347   005D26                     
 11348                           ; BSR set to: 0
 11349                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 11350   005D26  EE20 F00E          	lfsr	2,14
 11351   005D2A  51D3               	movf	f_sync@fp& (0+255),w,b
 11352   005D2C  26D9               	addwf	fsr2l,f,c
 11353   005D2E  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11354   005D30  22DA               	addwfc	fsr2h,f,c
 11355   005D32  ACDF               	btfss	indf2,6,c
 11356   005D34  EF9E  F02E         	goto	u18841
 11357   005D38  EFA0  F02E         	goto	u18840
 11358   005D3C                     u18841:
 11359   005D3C  EF92  F02F         	goto	l15540
 11360   005D40                     u18840:
 11361   005D40                     
 11362                           ; BSR set to: 0
 11363                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 11364   005D40  EE20 F00E          	lfsr	2,14
 11365   005D44  51D3               	movf	f_sync@fp& (0+255),w,b
 11366   005D46  26D9               	addwf	fsr2l,f,c
 11367   005D48  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11368   005D4A  22DA               	addwfc	fsr2h,f,c
 11369   005D4C  AEDF               	btfss	indf2,7,c
 11370   005D4E  EFAB  F02E         	goto	u18851
 11371   005D52  EFAD  F02E         	goto	u18850
 11372   005D56                     u18851:
 11373   005D56  EFE6  F02E         	goto	l15520
 11374   005D5A                     u18850:
 11375   005D5A                     
 11376                           ; BSR set to: 0
 11377                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 11378   005D5A  0E22               	movlw	34
 11379   005D5C  25D3               	addwf	f_sync@fp& (0+255),w,b
 11380   005D5E  6FAB               	movwf	disk_write@buff& (0+255),b
 11381   005D60  0E00               	movlw	0
 11382   005D62  21D4               	addwfc	(f_sync@fp+1)& (0+255),w,b
 11383   005D64  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 11384   005D66  EE20 F018          	lfsr	2,24
 11385   005D6A  51D3               	movf	f_sync@fp& (0+255),w,b
 11386   005D6C  26D9               	addwf	fsr2l,f,c
 11387   005D6E  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11388   005D70  22DA               	addwfc	fsr2h,f,c
 11389   005D72  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 11390   005D78  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 11391   005D7E  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 11392   005D84  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 11393   005D8A  0E00               	movlw	0
 11394   005D8C  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 11395   005D8E  0E01               	movlw	1
 11396   005D90  6FB1               	movwf	disk_write@count& (0+255),b
 11397   005D92  EE20 F001          	lfsr	2,1
 11398   005D96  51D8               	movf	f_sync@fs& (0+255),w,b
 11399   005D98  26D9               	addwf	fsr2l,f,c
 11400   005D9A  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 11401   005D9C  22DA               	addwfc	fsr2h,f,c
 11402   005D9E  50DF               	movf	indf2,w,c
 11403   005DA0  EC3D  F042         	call	_disk_write
 11404   005DA4  0900               	iorlw	0
 11405   005DA6  B4D8               	btfsc	status,2,c
 11406   005DA8  EFD8  F02E         	goto	u18861
 11407   005DAC  EFDA  F02E         	goto	u18860
 11408   005DB0                     u18861:
 11409   005DB0  EFDD  F02E         	goto	l15518
 11410   005DB4                     u18860:
 11411   005DB4  0E01               	movlw	1
 11412   005DB6  EF93  F02F         	goto	l1391
 11413   005DBA                     l15518:
 11414                           
 11415                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 11416   005DBA  0100               	movlb	0	; () banked
 11417   005DBC  EE20 F00E          	lfsr	2,14
 11418   005DC0  51D3               	movf	f_sync@fp& (0+255),w,b
 11419   005DC2  26D9               	addwf	fsr2l,f,c
 11420   005DC4  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11421   005DC6  22DA               	addwfc	fsr2h,f,c
 11422   005DC8  0E7F               	movlw	127
 11423   005DCA  16DF               	andwf	indf2,f,c
 11424   005DCC                     l15520:
 11425   005DCC                     
 11426                           ; BSR set to: 0
 11427                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 11428   005DCC  C0D8  F0C8         	movff	f_sync@fs,move_window@fs
 11429   005DD0  C0D9  F0C9         	movff	f_sync@fs+1,move_window@fs+1
 11430   005DD4  EE20 F01C          	lfsr	2,28
 11431   005DD8  51D3               	movf	f_sync@fp& (0+255),w,b
 11432   005DDA  26D9               	addwf	fsr2l,f,c
 11433   005DDC  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11434   005DDE  22DA               	addwfc	fsr2h,f,c
 11435   005DE0  006F FF78  F0CA    	movff	postinc2,move_window@sector
 11436   005DE6  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
 11437   005DEC  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
 11438   005DF2  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
 11439   005DF8  ECBF  F03D         	call	_move_window	;wreg free
 11440   005DFC  0100               	movlb	0	; () banked
 11441   005DFE  6FD5               	movwf	f_sync@res& (0+255),b
 11442   005E00                     
 11443                           ; BSR set to: 0
 11444                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 11445   005E00  51D5               	movf	f_sync@res& (0+255),w,b
 11446   005E02  A4D8               	btfss	status,2,c
 11447   005E04  EF06  F02F         	goto	u18871
 11448   005E08  EF08  F02F         	goto	u18870
 11449   005E0C                     u18871:
 11450   005E0C  EF92  F02F         	goto	l15540
 11451   005E10                     u18870:
 11452   005E10                     
 11453                           ; BSR set to: 0
 11454                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 11455   005E10  EE20 F020          	lfsr	2,32
 11456   005E14  51D3               	movf	f_sync@fp& (0+255),w,b
 11457   005E16  26D9               	addwf	fsr2l,f,c
 11458   005E18  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11459   005E1A  22DA               	addwfc	fsr2h,f,c
 11460   005E1C  006F FF78  F0D6    	movff	postinc2,f_sync@dir
 11461   005E22  006F FF74  F0D7    	movff	postdec2,f_sync@dir+1
 11462                           
 11463                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 11464   005E28  EE20 F00B          	lfsr	2,11
 11465   005E2C  51D6               	movf	f_sync@dir& (0+255),w,b
 11466   005E2E  26D9               	addwf	fsr2l,f,c
 11467   005E30  51D7               	movf	(f_sync@dir+1)& (0+255),w,b
 11468   005E32  22DA               	addwfc	fsr2h,f,c
 11469   005E34  0E00               	movlw	0
 11470   005E36  8ADB               	bsf	plusw2,5,c
 11471   005E38                     
 11472                           ; BSR set to: 0
 11473                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 11474   005E38  0060  F34F  FFD9   	movff	f_sync@fp,fsr2l
 11475   005E3E  0060  F353  FFDA   	movff	f_sync@fp+1,fsr2h
 11476   005E44  006F FF78  F064    	movff	postinc2,st_clust@fs
 11477   005E4A  006F FF74  F065    	movff	postdec2,st_clust@fs+1
 11478   005E50  C0D6  F066         	movff	f_sync@dir,st_clust@dir
 11479   005E54  C0D7  F067         	movff	f_sync@dir+1,st_clust@dir+1
 11480   005E58  EE20 F006          	lfsr	2,6
 11481   005E5C  51D3               	movf	f_sync@fp& (0+255),w,b
 11482   005E5E  26D9               	addwf	fsr2l,f,c
 11483   005E60  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11484   005E62  22DA               	addwfc	fsr2h,f,c
 11485   005E64  006F FF78  F068    	movff	postinc2,st_clust@cl
 11486   005E6A  006F FF78  F069    	movff	postinc2,st_clust@cl+1
 11487   005E70  006F FF78  F06A    	movff	postinc2,st_clust@cl+2
 11488   005E76  006F FF78  F06B    	movff	postinc2,st_clust@cl+3
 11489   005E7C  EC1C  F044         	call	_st_clust	;wreg free
 11490   005E80                     
 11491                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 11492   005E80  0E1C               	movlw	28
 11493   005E82  0100               	movlb	0	; () banked
 11494   005E84  25D6               	addwf	f_sync@dir& (0+255),w,b
 11495   005E86  6F60               	movwf	st_dword@ptr& (0+255),b
 11496   005E88  0E00               	movlw	0
 11497   005E8A  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 11498   005E8C  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11499   005E8E  EE20 F00A          	lfsr	2,10
 11500   005E92  51D3               	movf	f_sync@fp& (0+255),w,b
 11501   005E94  26D9               	addwf	fsr2l,f,c
 11502   005E96  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11503   005E98  22DA               	addwfc	fsr2h,f,c
 11504   005E9A  006F FF78  F062    	movff	postinc2,st_dword@val
 11505   005EA0  006F FF78  F063    	movff	postinc2,st_dword@val+1
 11506   005EA6  006F FF78  F064    	movff	postinc2,st_dword@val+2
 11507   005EAC  006F FF78  F065    	movff	postinc2,st_dword@val+3
 11508   005EB2  EC27  F040         	call	_st_dword	;wreg free
 11509   005EB6                     
 11510                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 11511   005EB6  0E16               	movlw	22
 11512   005EB8  0100               	movlb	0	; () banked
 11513   005EBA  25D6               	addwf	f_sync@dir& (0+255),w,b
 11514   005EBC  6F60               	movwf	st_dword@ptr& (0+255),b
 11515   005EBE  0E00               	movlw	0
 11516   005EC0  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 11517   005EC2  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11518   005EC4  0E00               	movlw	0
 11519   005EC6  6F62               	movwf	st_dword@val& (0+255),b
 11520   005EC8  0E00               	movlw	0
 11521   005ECA  6F63               	movwf	(st_dword@val+1)& (0+255),b
 11522   005ECC  0EF7               	movlw	247
 11523   005ECE  6F64               	movwf	(st_dword@val+2)& (0+255),b
 11524   005ED0  0E58               	movlw	88
 11525   005ED2  6F65               	movwf	(st_dword@val+3)& (0+255),b
 11526   005ED4  EC27  F040         	call	_st_dword	;wreg free
 11527   005ED8                     
 11528                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 11529   005ED8  0E12               	movlw	18
 11530   005EDA  0100               	movlb	0	; () banked
 11531   005EDC  25D6               	addwf	f_sync@dir& (0+255),w,b
 11532   005EDE  6F60               	movwf	st_word@ptr& (0+255),b
 11533   005EE0  0E00               	movlw	0
 11534   005EE2  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 11535   005EE4  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 11536   005EE6  0E00               	movlw	0
 11537   005EE8  6F63               	movwf	(st_word@val+1)& (0+255),b
 11538   005EEA  0E00               	movlw	0
 11539   005EEC  6F62               	movwf	st_word@val& (0+255),b
 11540   005EEE  EC48  F045         	call	_st_word	;wreg free
 11541                           
 11542                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 11543   005EF2  0100               	movlb	0	; () banked
 11544   005EF4  EE20 F003          	lfsr	2,3
 11545   005EF8  51D8               	movf	f_sync@fs& (0+255),w,b
 11546   005EFA  26D9               	addwf	fsr2l,f,c
 11547   005EFC  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 11548   005EFE  22DA               	addwfc	fsr2h,f,c
 11549   005F00  0E01               	movlw	1
 11550   005F02  6EDF               	movwf	indf2,c
 11551   005F04                     
 11552                           ; BSR set to: 0
 11553                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 11554   005F04  C0D8  F0C8         	movff	f_sync@fs,sync_fs@fs
 11555   005F08  C0D9  F0C9         	movff	f_sync@fs+1,sync_fs@fs+1
 11556   005F0C  EC62  F02D         	call	_sync_fs	;wreg free
 11557   005F10  0100               	movlb	0	; () banked
 11558   005F12  6FD5               	movwf	f_sync@res& (0+255),b
 11559   005F14                     
 11560                           ; BSR set to: 0
 11561                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 11562   005F14  EE20 F00E          	lfsr	2,14
 11563   005F18  51D3               	movf	f_sync@fp& (0+255),w,b
 11564   005F1A  26D9               	addwf	fsr2l,f,c
 11565   005F1C  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 11566   005F1E  22DA               	addwfc	fsr2h,f,c
 11567   005F20  0EBF               	movlw	191
 11568   005F22  16DF               	andwf	indf2,f,c
 11569   005F24                     l15540:
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 11573   005F24  51D5               	movf	f_sync@res& (0+255),w,b
 11574   005F26                     l1391:
 11575   005F26  0012               	return		;funcret
 11576   005F28                     __end_of_f_sync:
 11577                           	callstack 0
 11578                           
 11579 ;; *************** function _validate *****************
 11580 ;; Defined at:
 11581 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  obj             2    2[BANK0 ] PTR struct .
 11584 ;;		 -> Fil(546), pb$fp(3), 
 11585 ;;  rfs             2    4[BANK0 ] PTR PTR struct .
 11586 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  res             1   12[BANK0 ] enum E68
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      enum E68
 11591 ;; Registers used:
 11592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;Total ram usage:       11 bytes
 11603 ;; Hardware stack levels used: 1
 11604 ;; Hardware stack levels required when called: 7
 11605 ;; This function calls:
 11606 ;;		_disk_status
 11607 ;; This function is called by:
 11608 ;;		_f_write
 11609 ;;		_f_sync
 11610 ;;		_f_close
 11611 ;;		_f_read
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           	psect	text28
 11616   007286                     __ptext28:
 11617                           	callstack 0
 11618   007286                     _validate:
 11619                           	callstack 21
 11620   007286                     
 11621                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 11622   007286  0E09               	movlw	9
 11623   007288  0100               	movlb	0	; () banked
 11624   00728A  6F6C               	movwf	validate@res& (0+255),b
 11625   00728C                     
 11626                           ; BSR set to: 0
 11627                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 11628   00728C  5162               	movf	validate@obj& (0+255),w,b
 11629   00728E  1163               	iorwf	(validate@obj+1)& (0+255),w,b
 11630   007290  B4D8               	btfsc	status,2,c
 11631   007292  EF4D  F039         	goto	u18011
 11632   007296  EF4F  F039         	goto	u18010
 11633   00729A                     u18011:
 11634   00729A  EFB0  F039         	goto	l1267
 11635   00729E                     u18010:
 11636   00729E                     
 11637                           ; BSR set to: 0
 11638   00729E  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 11639   0072A4  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 11640   0072AA  50DE               	movf	postinc2,w,c
 11641   0072AC  10DE               	iorwf	postinc2,w,c
 11642   0072AE  B4D8               	btfsc	status,2,c
 11643   0072B0  EF5C  F039         	goto	u18021
 11644   0072B4  EF5E  F039         	goto	u18020
 11645   0072B8                     u18021:
 11646   0072B8  EFB0  F039         	goto	l1267
 11647   0072BC                     u18020:
 11648   0072BC                     
 11649                           ; BSR set to: 0
 11650   0072BC  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 11651   0072C2  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 11652   0072C8  006F FF78  F066    	movff	postinc2,??_validate
 11653   0072CE  006F FF74  F067    	movff	postdec2,??_validate+1
 11654   0072D4  0060  F19B  FFD9   	movff	??_validate,fsr2l
 11655   0072DA  0060  F19F  FFDA   	movff	??_validate+1,fsr2h
 11656   0072E0  50DF               	movf	indf2,w,c
 11657   0072E2  B4D8               	btfsc	status,2,c
 11658   0072E4  EF76  F039         	goto	u18031
 11659   0072E8  EF78  F039         	goto	u18030
 11660   0072EC                     u18031:
 11661   0072EC  EFB0  F039         	goto	l1267
 11662   0072F0                     u18030:
 11663   0072F0                     
 11664                           ; BSR set to: 0
 11665   0072F0  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 11666   0072F6  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 11667   0072FC  EE10 F005          	lfsr	1,5
 11668   007300  50DE               	movf	postinc2,w,c
 11669   007302  26E1               	addwf	fsr1l,f,c
 11670   007304  50DD               	movf	postdec2,w,c
 11671   007306  22E2               	addwfc	fsr1h,f,c
 11672   007308  EE20 F002          	lfsr	2,2
 11673   00730C  5162               	movf	validate@obj& (0+255),w,b
 11674   00730E  26D9               	addwf	fsr2l,f,c
 11675   007310  5163               	movf	(validate@obj+1)& (0+255),w,b
 11676   007312  22DA               	addwfc	fsr2h,f,c
 11677   007314  50E6               	movf	postinc1,w,c
 11678   007316  18DE               	xorwf	postinc2,w,c
 11679   007318  E107               	bnz	u18041
 11680   00731A  50E6               	movf	postinc1,w,c
 11681   00731C  18DE               	xorwf	postinc2,w,c
 11682   00731E  A4D8               	btfss	status,2,c
 11683   007320  EF94  F039         	goto	u18041
 11684   007324  EF96  F039         	goto	u18040
 11685   007328                     u18041:
 11686   007328  EFB0  F039         	goto	l1267
 11687   00732C                     u18040:
 11688   00732C                     
 11689                           ; BSR set to: 0
 11690                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 11691   00732C  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 11692   007332  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 11693   007338  EE10 F001          	lfsr	1,1
 11694   00733C  50DE               	movf	postinc2,w,c
 11695   00733E  26E1               	addwf	fsr1l,f,c
 11696   007340  50DD               	movf	postdec2,w,c
 11697   007342  22E2               	addwfc	fsr1h,f,c
 11698   007344  50E7               	movf	indf1,w,c
 11699   007346  EC60  F041         	call	_disk_status
 11700   00734A  0100               	movlb	0	; () banked
 11701   00734C  6F66               	movwf	??_validate& (0+255),b
 11702   00734E  B166               	btfsc	??_validate& (0+255),0,b
 11703   007350  EFAC  F039         	goto	u18051
 11704   007354  EFAE  F039         	goto	u18050
 11705   007358                     u18051:
 11706   007358  EFB0  F039         	goto	l1267
 11707   00735C                     u18050:
 11708   00735C                     
 11709                           ; BSR set to: 0
 11710                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 11711   00735C  0E00               	movlw	0
 11712   00735E  6F6C               	movwf	validate@res& (0+255),b
 11713   007360                     l1267:
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 11717   007360  516C               	movf	validate@res& (0+255),w,b
 11718   007362  B4D8               	btfsc	status,2,c
 11719   007364  EFB6  F039         	goto	u18061
 11720   007368  EFB8  F039         	goto	u18060
 11721   00736C                     u18061:
 11722   00736C  EFBE  F039         	goto	l15048
 11723   007370                     u18060:
 11724   007370                     
 11725                           ; BSR set to: 0
 11726   007370  0E00               	movlw	0
 11727   007372  6F6A               	movwf	_validate$3131& (0+255),b
 11728   007374  0E00               	movlw	0
 11729   007376  6F6B               	movwf	(_validate$3131+1)& (0+255),b
 11730   007378  EFCA  F039         	goto	l1272
 11731   00737C                     l15048:
 11732                           
 11733                           ; BSR set to: 0
 11734   00737C  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 11735   007382  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 11736   007388  006F FF78  F06A    	movff	postinc2,_validate$3131
 11737   00738E  006F FF74  F06B    	movff	postdec2,_validate$3131+1
 11738   007394                     l1272:
 11739                           
 11740                           ; BSR set to: 0
 11741   007394  0060  F193  FFD9   	movff	validate@rfs,fsr2l
 11742   00739A  0060  F197  FFDA   	movff	validate@rfs+1,fsr2h
 11743   0073A0  0060  F1AB  FFDE   	movff	_validate$3131,postinc2
 11744   0073A6  0060  F1AF  FFDD   	movff	_validate$3131+1,postdec2
 11745   0073AC                     
 11746                           ; BSR set to: 0
 11747                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 11748   0073AC  516C               	movf	validate@res& (0+255),w,b
 11749   0073AE                     
 11750                           ; BSR set to: 0
 11751   0073AE  0012               	return		;funcret
 11752   0073B0                     __end_of_validate:
 11753                           	callstack 0
 11754                           
 11755 ;; *************** function _sync_fs *****************
 11756 ;; Defined at:
 11757 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  fs              2  104[BANK0 ] PTR struct .
 11760 ;;		 -> FatFs(563), NULL(0), 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  res             1  114[BANK0 ] enum E68
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      enum E68
 11765 ;; Registers used:
 11766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;Total ram usage:       11 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 11
 11779 ;; This function calls:
 11780 ;;		_disk_ioctl
 11781 ;;		_disk_write
 11782 ;;		_mem_set
 11783 ;;		_st_dword
 11784 ;;		_st_word
 11785 ;;		_sync_window
 11786 ;; This function is called by:
 11787 ;;		_f_sync
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text29
 11792   005AC4                     __ptext29:
 11793                           	callstack 0
 11794   005AC4                     _sync_fs:
 11795                           	callstack 16
 11796   005AC4                     
 11797                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 11798   005AC4  C0C8  F0B5         	movff	sync_fs@fs,sync_window@fs
 11799   005AC8  C0C9  F0B6         	movff	sync_fs@fs+1,sync_window@fs+1
 11800   005ACC  EC8B  F031         	call	_sync_window	;wreg free
 11801   005AD0  0100               	movlb	0	; () banked
 11802   005AD2  6FD2               	movwf	sync_fs@res& (0+255),b
 11803   005AD4                     
 11804                           ; BSR set to: 0
 11805                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 11806   005AD4  51D2               	movf	sync_fs@res& (0+255),w,b
 11807   005AD6  A4D8               	btfss	status,2,c
 11808   005AD8  EF70  F02D         	goto	u17411
 11809   005ADC  EF72  F02D         	goto	u17410
 11810   005AE0                     u17411:
 11811   005AE0  EF7C  F02E         	goto	l912
 11812   005AE4                     u17410:
 11813   005AE4                     
 11814                           ; BSR set to: 0
 11815                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 11816   005AE4  0060  F323  FFD9   	movff	sync_fs@fs,fsr2l
 11817   005AEA  0060  F327  FFDA   	movff	sync_fs@fs+1,fsr2h
 11818   005AF0  0E03               	movlw	3
 11819   005AF2  18DE               	xorwf	postinc2,w,c
 11820   005AF4  A4D8               	btfss	status,2,c
 11821   005AF6  EF7F  F02D         	goto	u17421
 11822   005AFA  EF81  F02D         	goto	u17420
 11823   005AFE                     u17421:
 11824   005AFE  EF62  F02E         	goto	l14716
 11825   005B02                     u17420:
 11826   005B02                     
 11827                           ; BSR set to: 0
 11828   005B02  EE20 F004          	lfsr	2,4
 11829   005B06  51C8               	movf	sync_fs@fs& (0+255),w,b
 11830   005B08  26D9               	addwf	fsr2l,f,c
 11831   005B0A  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11832   005B0C  22DA               	addwfc	fsr2h,f,c
 11833   005B0E  04DE               	decf	postinc2,w,c
 11834   005B10  A4D8               	btfss	status,2,c
 11835   005B12  EF8D  F02D         	goto	u17431
 11836   005B16  EF8F  F02D         	goto	u17430
 11837   005B1A                     u17431:
 11838   005B1A  EF62  F02E         	goto	l14716
 11839   005B1E                     u17430:
 11840   005B1E                     
 11841                           ; BSR set to: 0
 11842                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 11843   005B1E  0E33               	movlw	51
 11844   005B20  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11845   005B22  6F60               	movwf	mem_set@dst& (0+255),b
 11846   005B24  0E00               	movlw	0
 11847   005B26  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11848   005B28  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 11849   005B2A  0E00               	movlw	0
 11850   005B2C  6F63               	movwf	(mem_set@val+1)& (0+255),b
 11851   005B2E  0E00               	movlw	0
 11852   005B30  6F62               	movwf	mem_set@val& (0+255),b
 11853   005B32  0E02               	movlw	2
 11854   005B34  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 11855   005B36  0E00               	movlw	0
 11856   005B38  6F64               	movwf	mem_set@cnt& (0+255),b
 11857   005B3A  ECF2  F044         	call	_mem_set	;wreg free
 11858                           
 11859                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 11860   005B3E  0E31               	movlw	49
 11861   005B40  0100               	movlb	0	; () banked
 11862   005B42  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11863   005B44  6F60               	movwf	st_word@ptr& (0+255),b
 11864   005B46  0E02               	movlw	2
 11865   005B48  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11866   005B4A  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 11867   005B4C  0EAA               	movlw	170
 11868   005B4E  6F63               	movwf	(st_word@val+1)& (0+255),b
 11869   005B50  0E55               	movlw	85
 11870   005B52  6F62               	movwf	st_word@val& (0+255),b
 11871   005B54  EC48  F045         	call	_st_word	;wreg free
 11872                           
 11873                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 11874   005B58  0E33               	movlw	51
 11875   005B5A  0100               	movlb	0	; () banked
 11876   005B5C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11877   005B5E  6F60               	movwf	st_dword@ptr& (0+255),b
 11878   005B60  0E00               	movlw	0
 11879   005B62  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11880   005B64  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11881   005B66  0E52               	movlw	82
 11882   005B68  6F62               	movwf	st_dword@val& (0+255),b
 11883   005B6A  0E52               	movlw	82
 11884   005B6C  6F63               	movwf	(st_dword@val+1)& (0+255),b
 11885   005B6E  0E61               	movlw	97
 11886   005B70  6F64               	movwf	(st_dword@val+2)& (0+255),b
 11887   005B72  0E41               	movlw	65
 11888   005B74  6F65               	movwf	(st_dword@val+3)& (0+255),b
 11889   005B76  EC27  F040         	call	_st_dword	;wreg free
 11890                           
 11891                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 11892   005B7A  0E17               	movlw	23
 11893   005B7C  0100               	movlb	0	; () banked
 11894   005B7E  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11895   005B80  6F60               	movwf	st_dword@ptr& (0+255),b
 11896   005B82  0E02               	movlw	2
 11897   005B84  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11898   005B86  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11899   005B88  0E72               	movlw	114
 11900   005B8A  6F62               	movwf	st_dword@val& (0+255),b
 11901   005B8C  0E72               	movlw	114
 11902   005B8E  6F63               	movwf	(st_dword@val+1)& (0+255),b
 11903   005B90  0E41               	movlw	65
 11904   005B92  6F64               	movwf	(st_dword@val+2)& (0+255),b
 11905   005B94  0E61               	movlw	97
 11906   005B96  6F65               	movwf	(st_dword@val+3)& (0+255),b
 11907   005B98  EC27  F040         	call	_st_dword	;wreg free
 11908                           
 11909                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 11910   005B9C  0E1B               	movlw	27
 11911   005B9E  0100               	movlb	0	; () banked
 11912   005BA0  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11913   005BA2  6F60               	movwf	st_dword@ptr& (0+255),b
 11914   005BA4  0E02               	movlw	2
 11915   005BA6  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11916   005BA8  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11917   005BAA  EE20 F00F          	lfsr	2,15
 11918   005BAE  51C8               	movf	sync_fs@fs& (0+255),w,b
 11919   005BB0  26D9               	addwf	fsr2l,f,c
 11920   005BB2  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11921   005BB4  22DA               	addwfc	fsr2h,f,c
 11922   005BB6  006F FF78  F062    	movff	postinc2,st_dword@val
 11923   005BBC  006F FF78  F063    	movff	postinc2,st_dword@val+1
 11924   005BC2  006F FF78  F064    	movff	postinc2,st_dword@val+2
 11925   005BC8  006F FF78  F065    	movff	postinc2,st_dword@val+3
 11926   005BCE  EC27  F040         	call	_st_dword	;wreg free
 11927                           
 11928                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 11929   005BD2  0E1F               	movlw	31
 11930   005BD4  0100               	movlb	0	; () banked
 11931   005BD6  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11932   005BD8  6F60               	movwf	st_dword@ptr& (0+255),b
 11933   005BDA  0E02               	movlw	2
 11934   005BDC  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11935   005BDE  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 11936   005BE0  EE20 F00B          	lfsr	2,11
 11937   005BE4  51C8               	movf	sync_fs@fs& (0+255),w,b
 11938   005BE6  26D9               	addwf	fsr2l,f,c
 11939   005BE8  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11940   005BEA  22DA               	addwfc	fsr2h,f,c
 11941   005BEC  006F FF78  F062    	movff	postinc2,st_dword@val
 11942   005BF2  006F FF78  F063    	movff	postinc2,st_dword@val+1
 11943   005BF8  006F FF78  F064    	movff	postinc2,st_dword@val+2
 11944   005BFE  006F FF78  F065    	movff	postinc2,st_dword@val+3
 11945   005C04  EC27  F040         	call	_st_dword	;wreg free
 11946   005C08                     
 11947                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 11948   005C08  0100               	movlb	0	; () banked
 11949   005C0A  EE20 F01F          	lfsr	2,31
 11950   005C0E  51C8               	movf	sync_fs@fs& (0+255),w,b
 11951   005C10  26D9               	addwf	fsr2l,f,c
 11952   005C12  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11953   005C14  22DA               	addwfc	fsr2h,f,c
 11954   005C16  006F FF78  F0CA    	movff	postinc2,??_sync_fs
 11955   005C1C  006F FF78  F0CB    	movff	postinc2,??_sync_fs+1
 11956   005C22  006F FF78  F0CC    	movff	postinc2,??_sync_fs+2
 11957   005C28  006F FF78  F0CD    	movff	postinc2,??_sync_fs+3
 11958   005C2E  0E01               	movlw	1
 11959   005C30  25CA               	addwf	??_sync_fs& (0+255),w,b
 11960   005C32  6FCE               	movwf	(??_sync_fs+4)& (0+255),b
 11961   005C34  0E00               	movlw	0
 11962   005C36  21CB               	addwfc	(??_sync_fs+1)& (0+255),w,b
 11963   005C38  6FCF               	movwf	(??_sync_fs+5)& (0+255),b
 11964   005C3A  0E00               	movlw	0
 11965   005C3C  21CC               	addwfc	(??_sync_fs+2)& (0+255),w,b
 11966   005C3E  6FD0               	movwf	(??_sync_fs+6)& (0+255),b
 11967   005C40  0E00               	movlw	0
 11968   005C42  21CD               	addwfc	(??_sync_fs+3)& (0+255),w,b
 11969   005C44  6FD1               	movwf	(??_sync_fs+7)& (0+255),b
 11970   005C46  EE20 F02F          	lfsr	2,47
 11971   005C4A  51C8               	movf	sync_fs@fs& (0+255),w,b
 11972   005C4C  26D9               	addwf	fsr2l,f,c
 11973   005C4E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11974   005C50  22DA               	addwfc	fsr2h,f,c
 11975   005C52  0060  F33B  FFDE   	movff	??_sync_fs+4,postinc2
 11976   005C58  0060  F33F  FFDE   	movff	??_sync_fs+5,postinc2
 11977   005C5E  0060  F343  FFDE   	movff	??_sync_fs+6,postinc2
 11978   005C64  0060  F347  FFDE   	movff	??_sync_fs+7,postinc2
 11979   005C6A                     
 11980                           ; BSR set to: 0
 11981                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 11982   005C6A  0E33               	movlw	51
 11983   005C6C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 11984   005C6E  6FAB               	movwf	disk_write@buff& (0+255),b
 11985   005C70  0E00               	movlw	0
 11986   005C72  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 11987   005C74  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 11988   005C76  EE20 F02F          	lfsr	2,47
 11989   005C7A  51C8               	movf	sync_fs@fs& (0+255),w,b
 11990   005C7C  26D9               	addwf	fsr2l,f,c
 11991   005C7E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 11992   005C80  22DA               	addwfc	fsr2h,f,c
 11993   005C82  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 11994   005C88  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 11995   005C8E  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 11996   005C94  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 11997   005C9A  0E00               	movlw	0
 11998   005C9C  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 11999   005C9E  0E01               	movlw	1
 12000   005CA0  6FB1               	movwf	disk_write@count& (0+255),b
 12001   005CA2  EE20 F001          	lfsr	2,1
 12002   005CA6  51C8               	movf	sync_fs@fs& (0+255),w,b
 12003   005CA8  26D9               	addwf	fsr2l,f,c
 12004   005CAA  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 12005   005CAC  22DA               	addwfc	fsr2h,f,c
 12006   005CAE  50DF               	movf	indf2,w,c
 12007   005CB0  EC3D  F042         	call	_disk_write
 12008   005CB4                     
 12009                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 12010   005CB4  0100               	movlb	0	; () banked
 12011   005CB6  EE20 F004          	lfsr	2,4
 12012   005CBA  51C8               	movf	sync_fs@fs& (0+255),w,b
 12013   005CBC  26D9               	addwf	fsr2l,f,c
 12014   005CBE  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 12015   005CC0  22DA               	addwfc	fsr2h,f,c
 12016   005CC2  6ADF               	clrf	indf2,c
 12017   005CC4                     l14716:
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 12021   005CC4  0E00               	movlw	0
 12022   005CC6  6F60               	movwf	disk_ioctl@cmd& (0+255),b
 12023   005CC8  0E00               	movlw	0
 12024   005CCA  6F61               	movwf	disk_ioctl@buff& (0+255),b
 12025   005CCC  0E00               	movlw	0
 12026   005CCE  6F62               	movwf	(disk_ioctl@buff+1)& (0+255),b
 12027   005CD0  EE20 F001          	lfsr	2,1
 12028   005CD4  51C8               	movf	sync_fs@fs& (0+255),w,b
 12029   005CD6  26D9               	addwf	fsr2l,f,c
 12030   005CD8  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 12031   005CDA  22DA               	addwfc	fsr2h,f,c
 12032   005CDC  50DF               	movf	indf2,w,c
 12033   005CDE  ECD9  F045         	call	_disk_ioctl
 12034   005CE2  0900               	iorlw	0
 12035   005CE4  B4D8               	btfsc	status,2,c
 12036   005CE6  EF77  F02E         	goto	u17441
 12037   005CEA  EF79  F02E         	goto	u17440
 12038   005CEE                     u17441:
 12039   005CEE  EF7C  F02E         	goto	l912
 12040   005CF2                     u17440:
 12041   005CF2  0E01               	movlw	1
 12042   005CF4  0100               	movlb	0	; () banked
 12043   005CF6  6FD2               	movwf	sync_fs@res& (0+255),b
 12044   005CF8                     l912:
 12045                           
 12046                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 12047   005CF8  0100               	movlb	0	; () banked
 12048   005CFA  51D2               	movf	sync_fs@res& (0+255),w,b
 12049   005CFC                     
 12050                           ; BSR set to: 0
 12051   005CFC  0012               	return		;funcret
 12052   005CFE                     __end_of_sync_fs:
 12053                           	callstack 0
 12054                           
 12055 ;; *************** function _st_dword *****************
 12056 ;; Defined at:
 12057 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 12060 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 12061 ;;  val             4    2[BANK0 ] unsigned long 
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1    wreg      void 
 12066 ;; Registers used:
 12067 ;;		fsr2l, fsr2h, status,2, status,0
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12073 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12076 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;Total ram usage:        6 bytes
 12078 ;; Hardware stack levels used: 1
 12079 ;; Hardware stack levels required when called: 5
 12080 ;; This function calls:
 12081 ;;		Nothing
 12082 ;; This function is called by:
 12083 ;;		_sync_fs
 12084 ;;		_put_fat
 12085 ;;		_f_open
 12086 ;;		_f_sync
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text30
 12091   00804E                     __ptext30:
 12092                           	callstack 0
 12093   00804E                     _st_dword:
 12094                           	callstack 21
 12095   00804E                     
 12096                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 12097   00804E  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 12098   008054  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 12099   00805A  0060  F18B  FFDF   	movff	st_dword@val,indf2
 12100   008060  0100               	movlb	0	; () banked
 12101   008062  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 12102   008064  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 12103   008066                     
 12104                           ; BSR set to: 0
 12105   008066  C063  F062         	movff	st_dword@val+1,st_dword@val
 12106   00806A  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 12107   00806E  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 12108   008072  6B65               	clrf	(st_dword@val+3)& (0+255),b
 12109   008074                     
 12110                           ; BSR set to: 0
 12111                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 12112   008074  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 12113   00807A  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 12114   008080  0060  F18B  FFDF   	movff	st_dword@val,indf2
 12115   008086                     
 12116                           ; BSR set to: 0
 12117   008086  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 12118   008088  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 12119   00808A  C063  F062         	movff	st_dword@val+1,st_dword@val
 12120   00808E  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 12121   008092  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 12122   008096  6B65               	clrf	(st_dword@val+3)& (0+255),b
 12123   008098                     
 12124                           ; BSR set to: 0
 12125                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 12126   008098  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 12127   00809E  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 12128   0080A4  0060  F18B  FFDF   	movff	st_dword@val,indf2
 12129   0080AA                     
 12130                           ; BSR set to: 0
 12131   0080AA  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 12132   0080AC  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 12133   0080AE                     
 12134                           ; BSR set to: 0
 12135   0080AE  C063  F062         	movff	st_dword@val+1,st_dword@val
 12136   0080B2  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 12137   0080B6  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 12138   0080BA  6B65               	clrf	(st_dword@val+3)& (0+255),b
 12139   0080BC                     
 12140                           ; BSR set to: 0
 12141                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 12142   0080BC  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 12143   0080C2  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 12144   0080C8  0060  F18B  FFDF   	movff	st_dword@val,indf2
 12145   0080CE  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 12146   0080D0  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 12147   0080D2                     
 12148                           ; BSR set to: 0
 12149   0080D2  0012               	return		;funcret
 12150   0080D4                     __end_of_st_dword:
 12151                           	callstack 0
 12152                           
 12153 ;; *************** function _mem_set *****************
 12154 ;; Defined at:
 12155 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  dst             2    0[BANK0 ] PTR void 
 12158 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 12159 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 12160 ;;		 -> NULL(0), 
 12161 ;;  val             2    2[BANK0 ] int 
 12162 ;;  cnt             2    4[BANK0 ] unsigned int 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  d               2    6[BANK0 ] PTR unsigned char 
 12165 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 12166 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 12167 ;;		 -> NULL(0), 
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      void 
 12170 ;; Registers used:
 12171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12177 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;Total ram usage:        8 bytes
 12182 ;; Hardware stack levels used: 1
 12183 ;; Hardware stack levels required when called: 5
 12184 ;; This function calls:
 12185 ;;		Nothing
 12186 ;; This function is called by:
 12187 ;;		_sync_fs
 12188 ;;		_dir_clear
 12189 ;;		_dir_register
 12190 ;;		_create_name
 12191 ;;		_f_open
 12192 ;;		_putc_init
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           	psect	text31
 12197   0089E4                     __ptext31:
 12198                           	callstack 0
 12199   0089E4                     _mem_set:
 12200                           	callstack 23
 12201   0089E4                     
 12202                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 12203   0089E4  C060  F066         	movff	mem_set@dst,mem_set@d
 12204   0089E8  C061  F067         	movff	mem_set@dst+1,mem_set@d+1
 12205   0089EC                     l13930:
 12206                           
 12207                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 12208   0089EC  0060  F19B  FFD9   	movff	mem_set@d,fsr2l
 12209   0089F2  0060  F19F  FFDA   	movff	mem_set@d+1,fsr2h
 12210   0089F8  0060  F18B  FFDF   	movff	mem_set@val,indf2
 12211   0089FE  0100               	movlb	0	; () banked
 12212   008A00  4B66               	infsnz	mem_set@d& (0+255),f,b
 12213   008A02  2B67               	incf	(mem_set@d+1)& (0+255),f,b
 12214   008A04                     
 12215                           ; BSR set to: 0
 12216                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 12217   008A04  0764               	decf	mem_set@cnt& (0+255),f,b
 12218   008A06  A0D8               	btfss	status,0,c
 12219   008A08  0765               	decf	(mem_set@cnt+1)& (0+255),f,b
 12220   008A0A  5164               	movf	mem_set@cnt& (0+255),w,b
 12221   008A0C  1165               	iorwf	(mem_set@cnt+1)& (0+255),w,b
 12222   008A0E  A4D8               	btfss	status,2,c
 12223   008A10  EF0C  F045         	goto	u15941
 12224   008A14  EF0E  F045         	goto	u15940
 12225   008A18                     u15941:
 12226   008A18  EFF6  F044         	goto	l13930
 12227   008A1C                     u15940:
 12228   008A1C                     
 12229                           ; BSR set to: 0
 12230   008A1C  0012               	return		;funcret
 12231   008A1E                     __end_of_mem_set:
 12232                           	callstack 0
 12233                           
 12234 ;; *************** function _disk_ioctl *****************
 12235 ;; Defined at:
 12236 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  pdrv            1    wreg     unsigned char 
 12239 ;;  cmd             1    0[BANK0 ] unsigned char 
 12240 ;;  buff            2    1[BANK0 ] PTR void 
 12241 ;;		 -> NULL(0), 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  pdrv            1    3[BANK0 ] unsigned char 
 12244 ;;  res             1    0        enum E12
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  1    wreg      enum E12
 12247 ;; Registers used:
 12248 ;;		wreg, status,2, status,0
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;Total ram usage:        4 bytes
 12259 ;; Hardware stack levels used: 1
 12260 ;; Hardware stack levels required when called: 5
 12261 ;; This function calls:
 12262 ;;		Nothing
 12263 ;; This function is called by:
 12264 ;;		_sync_fs
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           	psect	text32
 12269   008BB2                     __ptext32:
 12270                           	callstack 0
 12271   008BB2                     _disk_ioctl:
 12272                           	callstack 21
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;incstack = 0
 12276                           ;disk_ioctl@pdrv stored from wreg
 12277   008BB2  0100               	movlb	0	; () banked
 12278   008BB4  6F63               	movwf	disk_ioctl@pdrv& (0+255),b
 12279   008BB6                     
 12280                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 12281   008BB6  EFE0  F045         	goto	l14454
 12282   008BBA                     l824:
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 12286   008BBA  0E00               	movlw	0
 12287   008BBC  EFE9  F045         	goto	l825
 12288   008BC0                     l14454:
 12289   008BC0  0100               	movlb	0	; () banked
 12290   008BC2  5163               	movf	disk_ioctl@pdrv& (0+255),w,b
 12291                           
 12292                           ; Switch size 1, requested type "simple"
 12293                           ; Number of cases is 1, Range of values is 0 to 0
 12294                           ; switch strategies available:
 12295                           ; Name         Instructions Cycles
 12296                           ; simple_byte            4     3 (average)
 12297                           ;	Chosen strategy is simple_byte
 12298   008BC4  0A00               	xorlw	0	; case 0
 12299   008BC6  B4D8               	btfsc	status,2,c
 12300   008BC8  EFDD  F045         	goto	l824
 12301   008BCC  EFE8  F045         	goto	l14456
 12302   008BD0                     l14456:
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 12306   008BD0  0E04               	movlw	4
 12307   008BD2                     l825:
 12308                           
 12309                           ; BSR set to: 0
 12310   008BD2  0012               	return		;funcret
 12311   008BD4                     __end_of_disk_ioctl:
 12312                           	callstack 0
 12313                           
 12314 ;; *************** function _st_clust *****************
 12315 ;; Defined at:
 12316 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;  fs              2    4[BANK0 ] PTR struct .
 12319 ;;		 -> FatFs(563), NULL(0), 
 12320 ;;  dir             2    6[BANK0 ] PTR unsigned char 
 12321 ;;		 -> FatFs(563), NULL(0), 
 12322 ;;  cl              4    8[BANK0 ] unsigned long 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;Total ram usage:        9 bytes
 12339 ;; Hardware stack levels used: 1
 12340 ;; Hardware stack levels required when called: 6
 12341 ;; This function calls:
 12342 ;;		_st_word
 12343 ;; This function is called by:
 12344 ;;		_f_open
 12345 ;;		_f_sync
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text33
 12350   008838                     __ptext33:
 12351                           	callstack 0
 12352   008838                     _st_clust:
 12353                           	callstack 22
 12354   008838                     
 12355                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 12356   008838  0E1A               	movlw	26
 12357   00883A  0100               	movlb	0	; () banked
 12358   00883C  2566               	addwf	st_clust@dir& (0+255),w,b
 12359   00883E  6F60               	movwf	st_word@ptr& (0+255),b
 12360   008840  0E00               	movlw	0
 12361   008842  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 12362   008844  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 12363   008846  C068  F062         	movff	st_clust@cl,st_word@val
 12364   00884A  C069  F063         	movff	st_clust@cl+1,st_word@val+1
 12365   00884E  EC48  F045         	call	_st_word	;wreg free
 12366   008852                     
 12367                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 12368   008852  0060  F193  FFD9   	movff	st_clust@fs,fsr2l
 12369   008858  0060  F197  FFDA   	movff	st_clust@fs+1,fsr2h
 12370   00885E  0E03               	movlw	3
 12371   008860  18DE               	xorwf	postinc2,w,c
 12372   008862  A4D8               	btfss	status,2,c
 12373   008864  EF36  F044         	goto	u17531
 12374   008868  EF38  F044         	goto	u17530
 12375   00886C                     u17531:
 12376   00886C  EF45  F044         	goto	l1102
 12377   008870                     u17530:
 12378   008870                     
 12379                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 12380   008870  0E14               	movlw	20
 12381   008872  0100               	movlb	0	; () banked
 12382   008874  2566               	addwf	st_clust@dir& (0+255),w,b
 12383   008876  6F60               	movwf	st_word@ptr& (0+255),b
 12384   008878  0E00               	movlw	0
 12385   00887A  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 12386   00887C  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 12387   00887E  C06A  F062         	movff	st_clust@cl+2,st_word@val
 12388   008882  C06B  F063         	movff	st_clust@cl+3,st_word@val+1
 12389   008886  EC48  F045         	call	_st_word	;wreg free
 12390   00888A                     l1102:
 12391   00888A  0012               	return		;funcret
 12392   00888C                     __end_of_st_clust:
 12393                           	callstack 0
 12394                           
 12395 ;; *************** function _st_word *****************
 12396 ;; Defined at:
 12397 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 12400 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 12401 ;;  val             2    2[BANK0 ] unsigned short 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;		None
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;Total ram usage:        4 bytes
 12418 ;; Hardware stack levels used: 1
 12419 ;; Hardware stack levels required when called: 5
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_sync_fs
 12424 ;;		_put_fat
 12425 ;;		_st_clust
 12426 ;;		_f_sync
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text34
 12431   008A90                     __ptext34:
 12432                           	callstack 0
 12433   008A90                     _st_word:
 12434                           	callstack 21
 12435   008A90                     
 12436                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 12437   008A90  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 12438   008A96  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 12439   008A9C  0060  F18B  FFDF   	movff	st_word@val,indf2
 12440   008AA2  0100               	movlb	0	; () banked
 12441   008AA4  4B60               	infsnz	st_word@ptr& (0+255),f,b
 12442   008AA6  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 12443   008AA8                     
 12444                           ; BSR set to: 0
 12445   008AA8  5163               	movf	(st_word@val+1)& (0+255),w,b
 12446   008AAA  6F62               	movwf	st_word@val& (0+255),b
 12447   008AAC  6B63               	clrf	(st_word@val+1)& (0+255),b
 12448   008AAE                     
 12449                           ; BSR set to: 0
 12450                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 12451   008AAE  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 12452   008AB4  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 12453   008ABA  0060  F18B  FFDF   	movff	st_word@val,indf2
 12454   008AC0                     
 12455                           ; BSR set to: 0
 12456   008AC0  4B60               	infsnz	st_word@ptr& (0+255),f,b
 12457   008AC2  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 12458   008AC4                     
 12459                           ; BSR set to: 0
 12460   008AC4  0012               	return		;funcret
 12461   008AC6                     __end_of_st_word:
 12462                           	callstack 0
 12463                           
 12464 ;; *************** function _BLUE_LED_TOGGLE *****************
 12465 ;; Defined at:
 12466 ;;		line 44 in file "./common.h"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;		None
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;		None
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		None
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;Total ram usage:        0 bytes
 12485 ;; Hardware stack levels used: 1
 12486 ;; Hardware stack levels required when called: 5
 12487 ;; This function calls:
 12488 ;;		Nothing
 12489 ;; This function is called by:
 12490 ;;		_send_status_ok
 12491 ;; This function uses a non-reentrant model
 12492 ;;
 12493                           
 12494                           	psect	text35
 12495   008D00                     __ptext35:
 12496                           	callstack 0
 12497   008D00                     _BLUE_LED_TOGGLE:
 12498                           	callstack 24
 12499   008D00                     
 12500                           ;./common.h: 45:     LATA2 ^= 1;
 12501   008D00  74BA               	btg	16314,2,c	;volatile
 12502   008D02  0012               	return		;funcret
 12503   008D04                     __end_of_BLUE_LED_TOGGLE:
 12504                           	callstack 0
 12505                           
 12506 ;; *************** function _send_status_err *****************
 12507 ;; Defined at:
 12508 ;;		line 239 in file "main.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;		None
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;  board_stat_m   11   23[BANK0 ] struct .
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      void 
 12515 ;; Registers used:
 12516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12526 ;;Total ram usage:       11 bytes
 12527 ;; Hardware stack levels used: 1
 12528 ;; Hardware stack levels required when called: 7
 12529 ;; This function calls:
 12530 ;;		_RED_LED_TOGGLE
 12531 ;;		_build_board_stat_msg
 12532 ;;		_can_send
 12533 ;;		_millis
 12534 ;; This function is called by:
 12535 ;;		_main
 12536 ;; This function uses a non-reentrant model
 12537 ;;
 12538                           
 12539                           	psect	text36
 12540   008928                     __ptext36:
 12541                           	callstack 0
 12542   008928                     _send_status_err:
 12543                           	callstack 23
 12544   008928                     
 12545                           ;main.c: 240:     can_msg_t board_stat_msg;;main.c: 241:     build_board_stat_msg(millis
      +                          (), E_MISSING_CRITICAL_BOARD, ((void*)0), 0, &board_stat_msg);
 12546   008928  EC7B  F045         	call	_millis	;wreg free
 12547   00892C  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
 12548   008930  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
 12549   008934  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
 12550   008938  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
 12551   00893C  0E0B               	movlw	11
 12552   00893E  0100               	movlb	0	; () banked
 12553   008940  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
 12554   008942  0E00               	movlw	0
 12555   008944  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
 12556   008946  0E00               	movlw	0
 12557   008948  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
 12558   00894A  0E00               	movlw	0
 12559   00894C  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
 12560   00894E  0E77               	movlw	low send_status_err@board_stat_msg
 12561   008950  6F70               	movwf	build_board_stat_msg@output& (0+255),b
 12562   008952  6B71               	clrf	(build_board_stat_msg@output+1)& (0+255),b
 12563   008954  EC61  F03A         	call	_build_board_stat_msg	;wreg free
 12564   008958                     
 12565                           ;main.c: 242:     can_send(&board_stat_msg);
 12566   008958  0E77               	movlw	low send_status_err@board_stat_msg
 12567   00895A  0100               	movlb	0	; () banked
 12568   00895C  6F6B               	movwf	can_send@message& (0+255),b
 12569   00895E  6B6C               	clrf	(can_send@message+1)& (0+255),b
 12570   008960  ECD8  F039         	call	_can_send	;wreg free
 12571   008964                     
 12572                           ;main.c: 244:     RED_LED_TOGGLE();
 12573   008964  EC82  F046         	call	_RED_LED_TOGGLE	;wreg free
 12574   008968  0012               	return		;funcret
 12575   00896A                     __end_of_send_status_err:
 12576                           	callstack 0
 12577                           
 12578 ;; *************** function _millis *****************
 12579 ;; Defined at:
 12580 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;		None
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  res             4    4[BANK0 ] unsigned long 
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  4    0[BANK0 ] unsigned long 
 12587 ;; Registers used:
 12588 ;;		None
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12598 ;;Total ram usage:        8 bytes
 12599 ;; Hardware stack levels used: 1
 12600 ;; Hardware stack levels required when called: 5
 12601 ;; This function calls:
 12602 ;;		Nothing
 12603 ;; This function is called by:
 12604 ;;		_main
 12605 ;;		_send_status_ok
 12606 ;;		_send_status_err
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           
 12610                           	psect	text37
 12611   008AF6                     __ptext37:
 12612                           	callstack 0
 12613   008AF6                     _millis:
 12614                           	callstack 24
 12615   008AF6                     
 12616                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     INTCON0bits.GIE = 0;
 12617   008AF6  9ED2               	bcf	210,7,c	;volatile
 12618                           
 12619                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 28:     uint32_t res = millis_counter;
 12620   008AF8  C03E  F064         	movff	_millis_counter,millis@res	;volatile
 12621   008AFC  C03F  F065         	movff	_millis_counter+1,millis@res+1	;volatile
 12622   008B00  C040  F066         	movff	_millis_counter+2,millis@res+2	;volatile
 12623   008B04  C041  F067         	movff	_millis_counter+3,millis@res+3	;volatile
 12624                           
 12625                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 29:     INTCON0bits.GIE = 1;
 12626   008B08  8ED2               	bsf	210,7,c	;volatile
 12627                           
 12628                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 30:     return res;
 12629   008B0A  C064  F060         	movff	millis@res,?_millis
 12630   008B0E  C065  F061         	movff	millis@res+1,?_millis+1
 12631   008B12  C066  F062         	movff	millis@res+2,?_millis+2
 12632   008B16  C067  F063         	movff	millis@res+3,?_millis+3
 12633   008B1A  0012               	return		;funcret
 12634   008B1C                     __end_of_millis:
 12635                           	callstack 0
 12636                           
 12637 ;; *************** function _can_send *****************
 12638 ;; Defined at:
 12639 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  message         2   11[BANK0 ] PTR const struct .
 12642 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), txb_heartbeat@msg_sent(11), 
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12658 ;;Total ram usage:        4 bytes
 12659 ;; Hardware stack levels used: 1
 12660 ;; Hardware stack levels required when called: 6
 12661 ;; This function calls:
 12662 ;;		_memcpy
 12663 ;; This function is called by:
 12664 ;;		_main
 12665 ;;		_send_status_ok
 12666 ;;		_send_status_err
 12667 ;;		_txb_heartbeat
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           
 12671                           	psect	text38
 12672   0073B0                     __ptext38:
 12673                           	callstack 0
 12674   0073B0                     _can_send:
 12675                           	callstack 23
 12676   0073B0                     
 12677                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
 12678   0073B0  0137               	movlb	55	; () banked
 12679   0073B2  A7E0               	btfss	224,3,b	;volatile
 12680   0073B4  EFDE  F039         	goto	u19091
 12681   0073B8  EFE0  F039         	goto	u19090
 12682   0073BC                     u19091:
 12683   0073BC  EFE2  F039         	goto	l15658
 12684   0073C0                     u19090:
 12685   0073C0  EF60  F03A         	goto	l75
 12686   0073C4                     l15658:
 12687                           
 12688                           ; BSR set to: 55
 12689                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x7FF) {
 12690   0073C4  0100               	movlb	0	; () banked
 12691   0073C6  EE20 F002          	lfsr	2,2
 12692   0073CA  516B               	movf	can_send@message& (0+255),w,b
 12693   0073CC  26D9               	addwf	fsr2l,f,c
 12694   0073CE  516C               	movf	(can_send@message+1)& (0+255),w,b
 12695   0073D0  22DA               	addwfc	fsr2h,f,c
 12696   0073D2  0E09               	movlw	9
 12697   0073D4  60DF               	cpfslt	indf2,c
 12698   0073D6  EFEF  F039         	goto	u19101
 12699   0073DA  EFF1  F039         	goto	u19100
 12700   0073DE                     u19101:
 12701   0073DE  EF60  F03A         	goto	l75
 12702   0073E2                     u19100:
 12703   0073E2                     
 12704                           ; BSR set to: 0
 12705   0073E2  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 12706   0073E8  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 12707   0073EE  52DE               	movf	postinc2,f,c
 12708   0073F0  0E08               	movlw	8
 12709   0073F2  5CDE               	subwf	postinc2,w,c
 12710   0073F4  A0D8               	btfss	status,0,c
 12711   0073F6  EFFF  F039         	goto	u19111
 12712   0073FA  EF01  F03A         	goto	u19110
 12713   0073FE                     u19111:
 12714   0073FE  EF03  F03A         	goto	l15662
 12715   007402                     u19110:
 12716   007402  EF60  F03A         	goto	l75
 12717   007406                     l15662:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
 12721   007406  0EFC               	movlw	-4
 12722   007408  0137               	movlb	55	; () banked
 12723   00740A  17E0               	andwf	224,f,b	;volatile
 12724   00740C                     
 12725                           ; BSR set to: 55
 12726                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = ((message->sid) >> 3);
 12727   00740C  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 12728   007412  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 12729   007418  006F FF78  F06D    	movff	postinc2,??_can_send
 12730   00741E  006F FF74  F06E    	movff	postdec2,??_can_send+1
 12731   007424  0100               	movlb	0	; () banked
 12732   007426  90D8               	bcf	status,0,c
 12733   007428  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 12734   00742A  336D               	rrcf	??_can_send& (0+255),f,b
 12735   00742C  90D8               	bcf	status,0,c
 12736   00742E  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 12737   007430  336D               	rrcf	??_can_send& (0+255),f,b
 12738   007432  90D8               	bcf	status,0,c
 12739   007434  336E               	rrcf	(??_can_send+1)& (0+255),f,b
 12740   007436  336D               	rrcf	??_can_send& (0+255),f,b
 12741   007438  516D               	movf	??_can_send& (0+255),w,b
 12742   00743A  0137               	movlb	55	; () banked
 12743   00743C  6FE1               	movwf	225,b	;volatile
 12744   00743E                     
 12745                           ; BSR set to: 55
 12746                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid) & 0x7) << 5);
 12747   00743E  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
 12748   007444  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
 12749   00744A  50DF               	movf	indf2,w,c
 12750   00744C  0100               	movlb	0	; () banked
 12751   00744E  6F6D               	movwf	??_can_send& (0+255),b
 12752   007450  0E07               	movlw	7
 12753   007452  176D               	andwf	??_can_send& (0+255),f,b
 12754   007454  0E05               	movlw	5
 12755   007456  6F6E               	movwf	(??_can_send+1)& (0+255),b
 12756   007458                     u19125:
 12757   007458  90D8               	bcf	status,0,c
 12758   00745A  376D               	rlcf	??_can_send& (0+255),f,b
 12759   00745C  2F6E               	decfsz	(??_can_send+1)& (0+255),f,b
 12760   00745E  EF2C  F03A         	goto	u19125
 12761   007462  516D               	movf	??_can_send& (0+255),w,b
 12762   007464  0137               	movlb	55	; () banked
 12763   007466  6FE2               	movwf	226,b	;volatile
 12764   007468                     
 12765                           ; BSR set to: 55
 12766                           ;canlib/pic18f26k83/pic18f26k83_can.c: 102:     TXB0DLCbits.TXRTR = 0;
 12767   007468  9DE5               	bcf	229,6,b	;volatile
 12768   00746A                     
 12769                           ; BSR set to: 55
 12770                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.DLC = message->data_len;
 12771   00746A  0100               	movlb	0	; () banked
 12772   00746C  EE20 F002          	lfsr	2,2
 12773   007470  516B               	movf	can_send@message& (0+255),w,b
 12774   007472  26D9               	addwf	fsr2l,f,c
 12775   007474  516C               	movf	(can_send@message+1)& (0+255),w,b
 12776   007476  22DA               	addwfc	fsr2h,f,c
 12777   007478  50DF               	movf	indf2,w,c
 12778   00747A  6F6D               	movwf	??_can_send& (0+255),b
 12779   00747C  0137               	movlb	55	; () banked
 12780   00747E  51E5               	movf	229,w,b	;volatile
 12781   007480  0100               	movlb	0	; () banked
 12782   007482  196D               	xorwf	??_can_send& (0+255),w,b
 12783   007484  0BF0               	andlw	-16
 12784   007486  196D               	xorwf	??_can_send& (0+255),w,b
 12785   007488  0137               	movlb	55	; () banked
 12786   00748A  6FE5               	movwf	229,b	;volatile
 12787   00748C                     
 12788                           ; BSR set to: 55
 12789                           ;canlib/pic18f26k83/pic18f26k83_can.c: 108:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
 12790   00748C  0EE6               	movlw	230
 12791   00748E  0100               	movlb	0	; () banked
 12792   007490  6F60               	movwf	memcpy@d1& (0+255),b
 12793   007492  0E37               	movlw	55
 12794   007494  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12795   007496  0E03               	movlw	3
 12796   007498  256B               	addwf	can_send@message& (0+255),w,b
 12797   00749A  6F62               	movwf	memcpy@s1& (0+255),b
 12798   00749C  0E00               	movlw	0
 12799   00749E  216C               	addwfc	(can_send@message+1)& (0+255),w,b
 12800   0074A0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12801   0074A2  EE20 F002          	lfsr	2,2
 12802   0074A6  516B               	movf	can_send@message& (0+255),w,b
 12803   0074A8  26D9               	addwf	fsr2l,f,c
 12804   0074AA  516C               	movf	(can_send@message+1)& (0+255),w,b
 12805   0074AC  22DA               	addwfc	fsr2h,f,c
 12806   0074AE  50DF               	movf	indf2,w,c
 12807   0074B0  6F6D               	movwf	??_can_send& (0+255),b
 12808   0074B2  516D               	movf	??_can_send& (0+255),w,b
 12809   0074B4  6F64               	movwf	memcpy@n& (0+255),b
 12810   0074B6  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12811   0074B8  EC6A  F043         	call	_memcpy	;wreg free
 12812   0074BC                     
 12813                           ;canlib/pic18f26k83/pic18f26k83_can.c: 111:     TXB0CONbits.TXREQ = 1;
 12814   0074BC  0137               	movlb	55	; () banked
 12815   0074BE  87E0               	bsf	224,3,b	;volatile
 12816   0074C0                     l75:
 12817   0074C0  0012               	return		;funcret
 12818   0074C2                     __end_of_can_send:
 12819                           	callstack 0
 12820                           
 12821 ;; *************** function _build_board_stat_msg *****************
 12822 ;; Defined at:
 12823 ;;		line 189 in file "canlib/can_common.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  timestamp       4    8[BANK0 ] unsigned long 
 12826 ;;  error_code      1   12[BANK0 ] enum E60
 12827 ;;  error_data      2   13[BANK0 ] PTR const unsigned char 
 12828 ;;		 -> NULL(0), 
 12829 ;;  error_data_l    1   15[BANK0 ] unsigned char 
 12830 ;;  output          2   16[BANK0 ] PTR struct .
 12831 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;  i               2   21[BANK0 ] int 
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      _Bool 
 12836 ;; Registers used:
 12837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12843 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12847 ;;Total ram usage:       15 bytes
 12848 ;; Hardware stack levels used: 1
 12849 ;; Hardware stack levels required when called: 6
 12850 ;; This function calls:
 12851 ;;		_write_timestamp_3bytes
 12852 ;; This function is called by:
 12853 ;;		_send_status_ok
 12854 ;;		_send_status_err
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           	psect	text39
 12859   0074C2                     __ptext39:
 12860                           	callstack 0
 12861   0074C2                     _build_board_stat_msg:
 12862                           	callstack 23
 12863   0074C2                     
 12864                           ;canlib/can_common.c: 189: _Bool build_board_stat_msg(uint32_t timestamp,;canlib/can_com
      +                          mon.c: 190:                           enum BOARD_STATUS error_code,;canlib/can_common.c:
      +                           191:                           const uint8_t *error_data,;canlib/can_common.c: 192:    
      +                                                 uint8_t error_data_len,;canlib/can_common.c: 193:                
      +                                     can_msg_t *output);canlib/can_common.c: 194: {;canlib/can_common.c: 195:     
      +                          if (error_data_len > 0 && !error_data) { return 0; }
 12865   0074C2  0100               	movlb	0	; () banked
 12866   0074C4  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 12867   0074C6  B4D8               	btfsc	status,2,c
 12868   0074C8  EF68  F03A         	goto	u19131
 12869   0074CC  EF6A  F03A         	goto	u19130
 12870   0074D0                     u19131:
 12871   0074D0  EF75  F03A         	goto	l15694
 12872   0074D4                     u19130:
 12873   0074D4                     
 12874                           ; BSR set to: 0
 12875   0074D4  516D               	movf	build_board_stat_msg@error_data& (0+255),w,b
 12876   0074D6  116E               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
 12877   0074D8  A4D8               	btfss	status,2,c
 12878   0074DA  EF71  F03A         	goto	u19141
 12879   0074DE  EF73  F03A         	goto	u19140
 12880   0074E2                     u19141:
 12881   0074E2  EF75  F03A         	goto	l15694
 12882   0074E6                     u19140:
 12883   0074E6  EFE4  F03A         	goto	l292
 12884   0074EA                     l15694:
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;canlib/can_common.c: 196:     if (!output) { return 0; }
 12888   0074EA  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 12889   0074EC  1171               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
 12890   0074EE  A4D8               	btfss	status,2,c
 12891   0074F0  EF7C  F03A         	goto	u19151
 12892   0074F4  EF7E  F03A         	goto	u19150
 12893   0074F8                     u19151:
 12894   0074F8  EF80  F03A         	goto	l15698
 12895   0074FC                     u19150:
 12896   0074FC  EFE4  F03A         	goto	l292
 12897   007500                     l15698:
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;canlib/can_common.c: 197:     if (error_data_len > 4) { return 0; }
 12901   007500  0E04               	movlw	4
 12902   007502  656F               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
 12903   007504  EF86  F03A         	goto	u19161
 12904   007508  EF88  F03A         	goto	u19160
 12905   00750C                     u19161:
 12906   00750C  EF8A  F03A         	goto	l15702
 12907   007510                     u19160:
 12908   007510  EFE4  F03A         	goto	l292
 12909   007514                     l15702:
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;canlib/can_common.c: 199:     output->sid = 0x520 | 0x0C;
 12913   007514  0060  F1C3  FFD9   	movff	build_board_stat_msg@output,fsr2l
 12914   00751A  0060  F1C7  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
 12915   007520  0E2C               	movlw	44
 12916   007522  6EDE               	movwf	postinc2,c
 12917   007524  0E05               	movlw	5
 12918   007526  6EDD               	movwf	postdec2,c
 12919   007528                     
 12920                           ; BSR set to: 0
 12921                           ;canlib/can_common.c: 200:     write_timestamp_3bytes(timestamp, output);
 12922   007528  C068  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
 12923   00752C  C069  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
 12924   007530  C06A  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
 12925   007534  C06B  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
 12926   007538  C070  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
 12927   00753C  C071  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
 12928   007540  EC0F  F045         	call	_write_timestamp_3bytes	;wreg free
 12929   007544                     
 12930                           ;canlib/can_common.c: 202:     output->data[3] = (uint8_t) error_code;
 12931   007544  0100               	movlb	0	; () banked
 12932   007546  EE20 F006          	lfsr	2,6
 12933   00754A  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 12934   00754C  26D9               	addwf	fsr2l,f,c
 12935   00754E  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 12936   007550  22DA               	addwfc	fsr2h,f,c
 12937   007552  0060  F1B3  FFDF   	movff	build_board_stat_msg@error_code,indf2
 12938   007558                     
 12939                           ; BSR set to: 0
 12940                           ;canlib/can_common.c: 203:     for (int i = 0; i < error_data_len; ++i) {
 12941   007558  0E00               	movlw	0
 12942   00755A  6F76               	movwf	(build_board_stat_msg@i+1)& (0+255),b
 12943   00755C  0E00               	movlw	0
 12944   00755E  6F75               	movwf	build_board_stat_msg@i& (0+255),b
 12945   007560  EFC9  F03A         	goto	l15714
 12946   007564                     l15710:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;canlib/can_common.c: 205:         output->data[4 + i] = error_data[i];
 12950   007564  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 12951   007566  256D               	addwf	build_board_stat_msg@error_data& (0+255),w,b
 12952   007568  6ED9               	movwf	fsr2l,c
 12953   00756A  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 12954   00756C  216E               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
 12955   00756E  6EDA               	movwf	fsr2h,c
 12956   007570  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 12957   007572  2570               	addwf	build_board_stat_msg@output& (0+255),w,b
 12958   007574  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 12959   007576  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 12960   007578  2171               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
 12961   00757A  6F73               	movwf	(??_build_board_stat_msg+1)& (0+255),b
 12962   00757C  0E07               	movlw	7
 12963   00757E  2572               	addwf	??_build_board_stat_msg& (0+255),w,b
 12964   007580  6EE1               	movwf	fsr1l,c
 12965   007582  0E00               	movlw	0
 12966   007584  2173               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
 12967   007586  6EE2               	movwf	fsr1h,c
 12968   007588  006F FF7F FFE7     	movff	indf2,indf1
 12969   00758E                     
 12970                           ; BSR set to: 0
 12971                           ;canlib/can_common.c: 206:     }
 12972   00758E  4B75               	infsnz	build_board_stat_msg@i& (0+255),f,b
 12973   007590  2B76               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
 12974   007592                     l15714:
 12975                           
 12976                           ; BSR set to: 0
 12977   007592  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 12978   007594  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 12979   007596  6B73               	clrf	(??_build_board_stat_msg+1)& (0+255),b
 12980   007598  5172               	movf	??_build_board_stat_msg& (0+255),w,b
 12981   00759A  5D75               	subwf	build_board_stat_msg@i& (0+255),w,b
 12982   00759C  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 12983   00759E  0A80               	xorlw	128
 12984   0075A0  6F74               	movwf	(??_build_board_stat_msg+2)& (0+255),b
 12985   0075A2  5173               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
 12986   0075A4  0A80               	xorlw	128
 12987   0075A6  5974               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
 12988   0075A8  A0D8               	btfss	status,0,c
 12989   0075AA  EFD9  F03A         	goto	u19171
 12990   0075AE  EFDB  F03A         	goto	u19170
 12991   0075B2                     u19171:
 12992   0075B2  EFB2  F03A         	goto	l15710
 12993   0075B6                     u19170:
 12994   0075B6                     
 12995                           ; BSR set to: 0
 12996                           ;canlib/can_common.c: 209:     output->data_len = 4 + error_data_len;
 12997   0075B6  EE20 F002          	lfsr	2,2
 12998   0075BA  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 12999   0075BC  26D9               	addwf	fsr2l,f,c
 13000   0075BE  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 13001   0075C0  22DA               	addwfc	fsr2h,f,c
 13002   0075C2  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 13003   0075C4  0F04               	addlw	4
 13004   0075C6  6EDF               	movwf	indf2,c
 13005   0075C8                     l292:
 13006                           
 13007                           ; BSR set to: 0
 13008   0075C8  0012               	return		;funcret
 13009   0075CA                     __end_of_build_board_stat_msg:
 13010                           	callstack 0
 13011                           
 13012 ;; *************** function _write_timestamp_3bytes *****************
 13013 ;; Defined at:
 13014 ;;		line 20 in file "canlib/can_common.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  timestamp       4    0[BANK0 ] unsigned long 
 13017 ;;  output          2    4[BANK0 ] PTR struct .
 13018 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13030 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;Total ram usage:        6 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 5
 13037 ;; This function calls:
 13038 ;;		Nothing
 13039 ;; This function is called by:
 13040 ;;		_build_board_stat_msg
 13041 ;;		_build_general_cmd_msg
 13042 ;;		_build_debug_msg
 13043 ;;		_build_reset_msg
 13044 ;;		_build_actuator_cmd_msg
 13045 ;;		_build_actuator_stat_msg
 13046 ;;		_build_actuator_cmd_analog
 13047 ;;		_build_arm_cmd_msg
 13048 ;;		_build_arm_stat_msg
 13049 ;;		_build_state_est_data_msg
 13050 ;;		_build_temp_data_msg
 13051 ;;		_build_altitude_data_msg
 13052 ;;		_build_gps_time_msg
 13053 ;;		_build_gps_lat_msg
 13054 ;;		_build_gps_lon_msg
 13055 ;;		_build_gps_alt_msg
 13056 ;;		_build_gps_info_msg
 13057 ;;		_build_state_est_calibration_msg
 13058 ;;		_build_fill_msg
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text40
 13063   008A1E                     __ptext40:
 13064                           	callstack 0
 13065   008A1E                     _write_timestamp_3bytes:
 13066                           	callstack 23
 13067   008A1E                     
 13068                           ;canlib/can_common.c: 20: static void write_timestamp_3bytes(uint32_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 21: {;canlib/can_common.c: 22:     output->data[0] = (t
      +                          imestamp >> 16) & 0xff;
 13069   008A1E  0100               	movlb	0	; () banked
 13070   008A20  EE20 F003          	lfsr	2,3
 13071   008A24  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 13072   008A26  26D9               	addwf	fsr2l,f,c
 13073   008A28  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 13074   008A2A  22DA               	addwfc	fsr2h,f,c
 13075   008A2C  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
 13076                           
 13077                           ;canlib/can_common.c: 23:     output->data[1] = (timestamp >> 8) & 0xff;
 13078   008A32  EE20 F004          	lfsr	2,4
 13079   008A36  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 13080   008A38  26D9               	addwf	fsr2l,f,c
 13081   008A3A  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 13082   008A3C  22DA               	addwfc	fsr2h,f,c
 13083   008A3E  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
 13084                           
 13085                           ;canlib/can_common.c: 24:     output->data[2] = (timestamp >> 0) & 0xff;
 13086   008A44  EE20 F005          	lfsr	2,5
 13087   008A48  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 13088   008A4A  26D9               	addwf	fsr2l,f,c
 13089   008A4C  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 13090   008A4E  22DA               	addwfc	fsr2h,f,c
 13091   008A50  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
 13092   008A56                     
 13093                           ; BSR set to: 0
 13094   008A56  0012               	return		;funcret
 13095   008A58                     __end_of_write_timestamp_3bytes:
 13096                           	callstack 0
 13097                           
 13098 ;; *************** function _RED_LED_TOGGLE *****************
 13099 ;; Defined at:
 13100 ;;		line 68 in file "./common.h"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		None
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 5
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_send_status_err
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           	psect	text41
 13129   008D04                     __ptext41:
 13130                           	callstack 0
 13131   008D04                     _RED_LED_TOGGLE:
 13132                           	callstack 24
 13133   008D04                     
 13134                           ;./common.h: 69:     LATA4 ^= 1;
 13135   008D04  78BA               	btg	16314,4,c	;volatile
 13136   008D06  0012               	return		;funcret
 13137   008D08                     __end_of_RED_LED_TOGGLE:
 13138                           	callstack 0
 13139                           
 13140 ;; *************** function _fxls_init *****************
 13141 ;; Defined at:
 13142 ;;		line 6 in file "fxls8974cf.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  sens_config2    1   20[BANK0 ] unsigned char 
 13147 ;;  sens_config3    1   19[BANK0 ] unsigned char 
 13148 ;;  int_pin_sel     1   18[BANK0 ] unsigned char 
 13149 ;;  int_en          1   17[BANK0 ] unsigned char 
 13150 ;;  buf_config1     1   16[BANK0 ] unsigned char 
 13151 ;;  sens_config1    1   15[BANK0 ] unsigned char 
 13152 ;;  sens_config4    1   14[BANK0 ] unsigned char 
 13153 ;;  sys_mode        1   21[BANK0 ] volatile unsigned char 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;Total ram usage:       10 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; Hardware stack levels required when called: 7
 13170 ;; This function calls:
 13171 ;;		_i2c_init
 13172 ;;		_i2c_read_reg8
 13173 ;;		_i2c_write_reg8
 13174 ;; This function is called by:
 13175 ;;		_main
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text42
 13180   00715A                     __ptext42:
 13181                           	callstack 0
 13182   00715A                     _fxls_init:
 13183                           	callstack 23
 13184   00715A                     
 13185                           ;fxls8974cf.c: 7:     i2c_init(0b000);
 13186   00715A  0E00               	movlw	0
 13187   00715C  EC63  F045         	call	_i2c_init
 13188   007160                     
 13189                           ;fxls8974cf.c: 10:     uint8_t sens_config1;;fxls8974cf.c: 11:     i2c_read_reg8(0x18, 0
      +                          x15, &sens_config1);
 13190   007160  0E15               	movlw	21
 13191   007162  0100               	movlb	0	; () banked
 13192   007164  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13193   007166  0E6F               	movlw	low fxls_init@sens_config1
 13194   007168  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13195   00716A  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13196   00716C  0E18               	movlw	24
 13197   00716E  ECA5  F042         	call	_i2c_read_reg8
 13198   007172                     
 13199                           ;fxls8974cf.c: 12:     sens_config1 |= 0x01;
 13200   007172  0100               	movlb	0	; () banked
 13201   007174  816F               	bsf	fxls_init@sens_config1& (0+255),0,b
 13202   007176                     
 13203                           ; BSR set to: 0
 13204                           ;fxls8974cf.c: 13:     i2c_write_reg8(0x18, 0x15, sens_config1);
 13205   007176  0E15               	movlw	21
 13206   007178  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13207   00717A  C06F  F067         	movff	fxls_init@sens_config1,i2c_write_reg8@val
 13208   00717E  0E18               	movlw	24
 13209   007180  EC8E  F045         	call	_i2c_write_reg8
 13210   007184                     
 13211                           ;fxls8974cf.c: 15:     volatile uint8_t sys_mode;;fxls8974cf.c: 16:     i2c_read_reg8(0x
      +                          18, 0x14, &sys_mode);
 13212   007184  0E14               	movlw	20
 13213   007186  0100               	movlb	0	; () banked
 13214   007188  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13215   00718A  0E75               	movlw	low fxls_init@sys_mode
 13216   00718C  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13217   00718E  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13218   007190  0E18               	movlw	24
 13219   007192  ECA5  F042         	call	_i2c_read_reg8
 13220   007196                     
 13221                           ;fxls8974cf.c: 19:     uint8_t sens_config2;;fxls8974cf.c: 20:     i2c_read_reg8(0x18, 0
      +                          x16, &sens_config2);
 13222   007196  0E16               	movlw	22
 13223   007198  0100               	movlb	0	; () banked
 13224   00719A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13225   00719C  0E74               	movlw	low fxls_init@sens_config2
 13226   00719E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13227   0071A0  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13228   0071A2  0E18               	movlw	24
 13229   0071A4  ECA5  F042         	call	_i2c_read_reg8
 13230   0071A8                     
 13231                           ;fxls8974cf.c: 21:     sens_config2 &= ~(0x01 << 3);
 13232   0071A8  0100               	movlb	0	; () banked
 13233   0071AA  9774               	bcf	fxls_init@sens_config2& (0+255),3,b
 13234   0071AC                     
 13235                           ; BSR set to: 0
 13236                           ;fxls8974cf.c: 22:     sens_config2 &= ~(0x01 << 1);
 13237   0071AC  9374               	bcf	fxls_init@sens_config2& (0+255),1,b
 13238   0071AE                     
 13239                           ; BSR set to: 0
 13240                           ;fxls8974cf.c: 23:     sens_config2 &= ~(0x01);
 13241   0071AE  9174               	bcf	fxls_init@sens_config2& (0+255),0,b
 13242   0071B0                     
 13243                           ; BSR set to: 0
 13244                           ;fxls8974cf.c: 25:     sens_config2 |= (0x00 << 4);
 13245   0071B0  8D74               	bsf	fxls_init@sens_config2& (0+255),6,b
 13246   0071B2                     
 13247                           ; BSR set to: 0
 13248                           ;fxls8974cf.c: 26:     i2c_write_reg8(0x18, 0x16, sens_config2);
 13249   0071B2  0E16               	movlw	22
 13250   0071B4  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13251   0071B6  C074  F067         	movff	fxls_init@sens_config2,i2c_write_reg8@val
 13252   0071BA  0E18               	movlw	24
 13253   0071BC  EC8E  F045         	call	_i2c_write_reg8
 13254   0071C0                     
 13255                           ;fxls8974cf.c: 30:     uint8_t buf_config1;;fxls8974cf.c: 31:     i2c_read_reg8(0x18, 0x
      +                          26, &buf_config1);
 13256   0071C0  0E26               	movlw	38
 13257   0071C2  0100               	movlb	0	; () banked
 13258   0071C4  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13259   0071C6  0E70               	movlw	low fxls_init@buf_config1
 13260   0071C8  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13261   0071CA  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13262   0071CC  0E18               	movlw	24
 13263   0071CE  ECA5  F042         	call	_i2c_read_reg8
 13264   0071D2                     
 13265                           ;fxls8974cf.c: 32:     buf_config1 &= ~0x60;;
 13266   0071D2  0E9F               	movlw	159
 13267   0071D4  0100               	movlb	0	; () banked
 13268   0071D6  1770               	andwf	fxls_init@buf_config1& (0+255),f,b
 13269   0071D8                     
 13270                           ; BSR set to: 0
 13271                           ;fxls8974cf.c: 33:     i2c_write_reg8(0x18, 0x26, buf_config1);
 13272   0071D8  0E26               	movlw	38
 13273   0071DA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13274   0071DC  C070  F067         	movff	fxls_init@buf_config1,i2c_write_reg8@val
 13275   0071E0  0E18               	movlw	24
 13276   0071E2  EC8E  F045         	call	_i2c_write_reg8
 13277   0071E6                     
 13278                           ;fxls8974cf.c: 36:     uint8_t sens_config3;;fxls8974cf.c: 37:     i2c_read_reg8(0x18, 0
      +                          x17, &sens_config3);
 13279   0071E6  0E17               	movlw	23
 13280   0071E8  0100               	movlb	0	; () banked
 13281   0071EA  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13282   0071EC  0E73               	movlw	low fxls_init@sens_config3
 13283   0071EE  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13284   0071F0  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13285   0071F2  0E18               	movlw	24
 13286   0071F4  ECA5  F042         	call	_i2c_read_reg8
 13287   0071F8                     
 13288                           ;fxls8974cf.c: 38:     sens_config3 &= 0x0F;
 13289   0071F8  0E0F               	movlw	15
 13290   0071FA  0100               	movlb	0	; () banked
 13291   0071FC  1773               	andwf	fxls_init@sens_config3& (0+255),f,b
 13292   0071FE                     
 13293                           ; BSR set to: 0
 13294                           ;fxls8974cf.c: 39:     sens_config3 |= 0b01010000;
 13295   0071FE  0E50               	movlw	80
 13296   007200  1373               	iorwf	fxls_init@sens_config3& (0+255),f,b
 13297   007202                     
 13298                           ; BSR set to: 0
 13299                           ;fxls8974cf.c: 40:     i2c_write_reg8(0x18, 0x17, sens_config3);
 13300   007202  0E17               	movlw	23
 13301   007204  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13302   007206  C073  F067         	movff	fxls_init@sens_config3,i2c_write_reg8@val
 13303   00720A  0E18               	movlw	24
 13304   00720C  EC8E  F045         	call	_i2c_write_reg8
 13305   007210                     
 13306                           ;fxls8974cf.c: 43:     uint8_t int_en;;fxls8974cf.c: 44:     i2c_read_reg8(0x18, 0x20, &
      +                          int_en);
 13307   007210  0E20               	movlw	32
 13308   007212  0100               	movlb	0	; () banked
 13309   007214  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13310   007216  0E71               	movlw	low fxls_init@int_en
 13311   007218  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13312   00721A  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13313   00721C  0E18               	movlw	24
 13314   00721E  ECA5  F042         	call	_i2c_read_reg8
 13315   007222                     
 13316                           ;fxls8974cf.c: 45:     int_en |= 0x80;
 13317   007222  0100               	movlb	0	; () banked
 13318   007224  8F71               	bsf	fxls_init@int_en& (0+255),7,b
 13319   007226                     
 13320                           ; BSR set to: 0
 13321                           ;fxls8974cf.c: 46:     i2c_write_reg8(0x18, 0x20, int_en);
 13322   007226  0E20               	movlw	32
 13323   007228  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13324   00722A  C071  F067         	movff	fxls_init@int_en,i2c_write_reg8@val
 13325   00722E  0E18               	movlw	24
 13326   007230  EC8E  F045         	call	_i2c_write_reg8
 13327   007234                     
 13328                           ;fxls8974cf.c: 49:     uint8_t int_pin_sel;;fxls8974cf.c: 50:     i2c_read_reg8(0x18, 0x
      +                          21, &int_pin_sel);
 13329   007234  0E21               	movlw	33
 13330   007236  0100               	movlb	0	; () banked
 13331   007238  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13332   00723A  0E72               	movlw	low fxls_init@int_pin_sel
 13333   00723C  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13334   00723E  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13335   007240  0E18               	movlw	24
 13336   007242  ECA5  F042         	call	_i2c_read_reg8
 13337   007246                     
 13338                           ;fxls8974cf.c: 51:     int_pin_sel |= 0x80;
 13339   007246  0100               	movlb	0	; () banked
 13340   007248  8F72               	bsf	fxls_init@int_pin_sel& (0+255),7,b
 13341   00724A                     
 13342                           ; BSR set to: 0
 13343                           ;fxls8974cf.c: 52:     i2c_write_reg8(0x18, 0x21, int_pin_sel);
 13344   00724A  0E21               	movlw	33
 13345   00724C  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13346   00724E  C072  F067         	movff	fxls_init@int_pin_sel,i2c_write_reg8@val
 13347   007252  0E18               	movlw	24
 13348   007254  EC8E  F045         	call	_i2c_write_reg8
 13349   007258                     
 13350                           ;fxls8974cf.c: 55:     uint8_t sens_config4;;fxls8974cf.c: 56:     i2c_read_reg8(0x18, 0
      +                          x18, sens_config4);
 13351   007258  0E18               	movlw	24
 13352   00725A  0100               	movlb	0	; () banked
 13353   00725C  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13354   00725E  516E               	movf	fxls_init@sens_config4& (0+255),w,b
 13355   007260  6F6C               	movwf	??_fxls_init& (0+255),b
 13356   007262  6B6D               	clrf	(??_fxls_init+1)& (0+255),b
 13357   007264  C06C  F067         	movff	??_fxls_init,i2c_read_reg8@value
 13358   007268  C06D  F068         	movff	??_fxls_init+1,i2c_read_reg8@value+1
 13359   00726C  0E18               	movlw	24
 13360   00726E  ECA5  F042         	call	_i2c_read_reg8
 13361   007272                     
 13362                           ;fxls8974cf.c: 57:     sens_config4 |= 0x01;
 13363   007272  0100               	movlb	0	; () banked
 13364   007274  816E               	bsf	fxls_init@sens_config4& (0+255),0,b
 13365   007276                     
 13366                           ; BSR set to: 0
 13367                           ;fxls8974cf.c: 58:     i2c_write_reg8(0x18, 0x18, sens_config4);
 13368   007276  0E18               	movlw	24
 13369   007278  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 13370   00727A  C06E  F067         	movff	fxls_init@sens_config4,i2c_write_reg8@val
 13371   00727E  0E18               	movlw	24
 13372   007280  EC8E  F045         	call	_i2c_write_reg8
 13373   007284  0012               	return		;funcret
 13374   007286                     __end_of_fxls_init:
 13375                           	callstack 0
 13376                           
 13377 ;; *************** function _i2c_write_reg8 *****************
 13378 ;; Defined at:
 13379 ;;		line 107 in file "rocketlib/pic18f26k83/i2c.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  address         1    wreg     unsigned char 
 13382 ;;  reg             1    6[BANK0 ] unsigned char 
 13383 ;;  val             1    7[BANK0 ] unsigned char 
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;  address         1    8[BANK0 ] unsigned char 
 13386 ;;  data            2    9[BANK0 ] unsigned char [2]
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      _Bool 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;Total ram usage:        5 bytes
 13401 ;; Hardware stack levels used: 1
 13402 ;; Hardware stack levels required when called: 6
 13403 ;; This function calls:
 13404 ;;		_i2c_write
 13405 ;; This function is called by:
 13406 ;;		_fxls_init
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text43
 13411   008B1C                     __ptext43:
 13412                           	callstack 0
 13413   008B1C                     _i2c_write_reg8:
 13414                           	callstack 23
 13415                           
 13416                           ;incstack = 0
 13417                           ;i2c_write_reg8@address stored from wreg
 13418   008B1C  0100               	movlb	0	; () banked
 13419   008B1E  6F68               	movwf	i2c_write_reg8@address& (0+255),b
 13420   008B20                     
 13421                           ;rocketlib/pic18f26k83/i2c.c: 108:     uint8_t data[2] = {reg, val};
 13422   008B20  0E00               	movlw	0
 13423   008B22  0100               	movlb	0	; () banked
 13424   008B24  6F6A               	movwf	(i2c_write_reg8@data+1)& (0+255),b
 13425   008B26  0E00               	movlw	0
 13426   008B28  6F69               	movwf	i2c_write_reg8@data& (0+255),b
 13427   008B2A                     
 13428                           ; BSR set to: 0
 13429   008B2A  C066  F069         	movff	i2c_write_reg8@reg,i2c_write_reg8@data
 13430   008B2E                     
 13431                           ; BSR set to: 0
 13432   008B2E  C067  F06A         	movff	i2c_write_reg8@val,i2c_write_reg8@data+1
 13433   008B32                     
 13434                           ; BSR set to: 0
 13435                           ;rocketlib/pic18f26k83/i2c.c: 109:     return i2c_write(address, data, 2);;	Return value
      +                           of _i2c_write_reg8 is never used
 13436   008B32  0E69               	movlw	low i2c_write_reg8@data
 13437   008B34  6F60               	movwf	i2c_write@data& (0+255),b
 13438   008B36  0E02               	movlw	2
 13439   008B38  6F61               	movwf	i2c_write@len& (0+255),b
 13440   008B3A  5168               	movf	i2c_write_reg8@address& (0+255),w,b
 13441   008B3C  ECE5  F03A         	call	_i2c_write
 13442   008B40  0012               	return		;funcret
 13443   008B42                     __end_of_i2c_write_reg8:
 13444                           	callstack 0
 13445                           
 13446 ;; *************** function _fxls_get_whoami *****************
 13447 ;; Defined at:
 13448 ;;		line 68 in file "fxls8974cf.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  res             1   12[BANK0 ] unsigned char 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      unsigned char 
 13455 ;; Registers used:
 13456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;Total ram usage:        1 bytes
 13467 ;; Hardware stack levels used: 1
 13468 ;; Hardware stack levels required when called: 7
 13469 ;; This function calls:
 13470 ;;		_i2c_init
 13471 ;;		_i2c_read_reg8
 13472 ;; This function is called by:
 13473 ;;		_main
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text44
 13478   008C14                     __ptext44:
 13479                           	callstack 0
 13480   008C14                     _fxls_get_whoami:
 13481                           	callstack 23
 13482   008C14                     
 13483                           ;fxls8974cf.c: 69:     i2c_init(0b000);
 13484   008C14  0E00               	movlw	0
 13485   008C16  EC63  F045         	call	_i2c_init
 13486   008C1A                     
 13487                           ;fxls8974cf.c: 70:     uint8_t res;;fxls8974cf.c: 71:     i2c_read_reg8(0x18, 0x13, &res
      +                          );
 13488   008C1A  0E13               	movlw	19
 13489   008C1C  0100               	movlb	0	; () banked
 13490   008C1E  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13491   008C20  0E6C               	movlw	low fxls_get_whoami@res
 13492   008C22  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13493   008C24  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13494   008C26  0E18               	movlw	24
 13495   008C28  ECA5  F042         	call	_i2c_read_reg8
 13496   008C2C                     
 13497                           ;fxls8974cf.c: 72:     return res;
 13498   008C2C  0100               	movlb	0	; () banked
 13499   008C2E  516C               	movf	fxls_get_whoami@res& (0+255),w,b
 13500   008C30                     
 13501                           ; BSR set to: 0
 13502   008C30  0012               	return		;funcret
 13503   008C32                     __end_of_fxls_get_whoami:
 13504                           	callstack 0
 13505                           
 13506 ;; *************** function _fxls_get_prod_rev *****************
 13507 ;; Defined at:
 13508 ;;		line 61 in file "fxls8974cf.c"
 13509 ;; Parameters:    Size  Location     Type
 13510 ;;		None
 13511 ;; Auto vars:     Size  Location     Type
 13512 ;;  res             1   12[BANK0 ] unsigned char 
 13513 ;; Return value:  Size  Location     Type
 13514 ;;                  1    wreg      unsigned char 
 13515 ;; Registers used:
 13516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : 0/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13526 ;;Total ram usage:        1 bytes
 13527 ;; Hardware stack levels used: 1
 13528 ;; Hardware stack levels required when called: 7
 13529 ;; This function calls:
 13530 ;;		_i2c_init
 13531 ;;		_i2c_read_reg8
 13532 ;; This function is called by:
 13533 ;;		_main
 13534 ;; This function uses a non-reentrant model
 13535 ;;
 13536                           
 13537                           	psect	text45
 13538   008C32                     __ptext45:
 13539                           	callstack 0
 13540   008C32                     _fxls_get_prod_rev:
 13541                           	callstack 23
 13542   008C32                     
 13543                           ;fxls8974cf.c: 62:     i2c_init(0b000);
 13544   008C32  0E00               	movlw	0
 13545   008C34  EC63  F045         	call	_i2c_init
 13546   008C38                     
 13547                           ;fxls8974cf.c: 63:     uint8_t res;;fxls8974cf.c: 64:     i2c_read_reg8(0x18, 0x12, &res
      +                          );
 13548   008C38  0E12               	movlw	18
 13549   008C3A  0100               	movlb	0	; () banked
 13550   008C3C  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 13551   008C3E  0E6C               	movlw	low fxls_get_prod_rev@res
 13552   008C40  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 13553   008C42  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 13554   008C44  0E18               	movlw	24
 13555   008C46  ECA5  F042         	call	_i2c_read_reg8
 13556   008C4A                     
 13557                           ;fxls8974cf.c: 65:     return res;
 13558   008C4A  0100               	movlb	0	; () banked
 13559   008C4C  516C               	movf	fxls_get_prod_rev@res& (0+255),w,b
 13560   008C4E                     
 13561                           ; BSR set to: 0
 13562   008C4E  0012               	return		;funcret
 13563   008C50                     __end_of_fxls_get_prod_rev:
 13564                           	callstack 0
 13565                           
 13566 ;; *************** function _i2c_read_reg8 *****************
 13567 ;; Defined at:
 13568 ;;		line 117 in file "rocketlib/pic18f26k83/i2c.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  address         1    wreg     unsigned char 
 13571 ;;  reg             1    6[BANK0 ] unsigned char 
 13572 ;;  value           2    7[BANK0 ] PTR unsigned char 
 13573 ;;		 -> fxls_read_accel_data@z_msb(1), fxls_read_accel_data@z_lsb(1), fxls_read_accel_data@y_msb(1), fxls_read_accel_dat
      +a@y_lsb(1), 
 13574 ;;		 -> fxls_read_accel_data@x_msb(1), fxls_read_accel_data@x_lsb(1), data_ready@status(1), fxls_get_whoami@res(1), 
 13575 ;;		 -> fxls_get_prod_rev@res(1), RAM(4095), fxls_init@int_pin_sel(1), fxls_init@int_en(1), 
 13576 ;;		 -> fxls_init@sens_config3(1), fxls_init@buf_config1(1), fxls_init@sens_config2(1), fxls_init@sys_mode(1), 
 13577 ;;		 -> fxls_init@sens_config1(1), 
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;  address         1    9[BANK0 ] unsigned char 
 13580 ;;  data            1   11[BANK0 ] unsigned char 
 13581 ;;  success         1   10[BANK0 ] _Bool 
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  1    wreg      _Bool 
 13584 ;; Registers used:
 13585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13586 ;; Tracked objects:
 13587 ;;		On entry : 0/0
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13591 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13592 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;Total ram usage:        6 bytes
 13596 ;; Hardware stack levels used: 1
 13597 ;; Hardware stack levels required when called: 6
 13598 ;; This function calls:
 13599 ;;		_i2c_read
 13600 ;;		_i2c_write
 13601 ;; This function is called by:
 13602 ;;		_fxls_init
 13603 ;;		_fxls_get_prod_rev
 13604 ;;		_fxls_get_whoami
 13605 ;;		_data_ready
 13606 ;;		_fxls_read_accel_data
 13607 ;; This function uses a non-reentrant model
 13608 ;;
 13609                           
 13610                           	psect	text46
 13611   00854A                     __ptext46:
 13612                           	callstack 0
 13613   00854A                     _i2c_read_reg8:
 13614                           	callstack 23
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;incstack = 0
 13618                           ;i2c_read_reg8@address stored from wreg
 13619   00854A  0100               	movlb	0	; () banked
 13620   00854C  6F69               	movwf	i2c_read_reg8@address& (0+255),b
 13621   00854E                     
 13622                           ;rocketlib/pic18f26k83/i2c.c: 118:     _Bool success = i2c_write(address, &reg, 1);
 13623   00854E  0E66               	movlw	low i2c_read_reg8@reg
 13624   008550  0100               	movlb	0	; () banked
 13625   008552  6F60               	movwf	i2c_write@data& (0+255),b
 13626   008554  0E01               	movlw	1
 13627   008556  6F61               	movwf	i2c_write@len& (0+255),b
 13628   008558  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 13629   00855A  ECE5  F03A         	call	_i2c_write
 13630   00855E  0100               	movlb	0	; () banked
 13631   008560  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 13632   008562                     
 13633                           ; BSR set to: 0
 13634                           ;rocketlib/pic18f26k83/i2c.c: 119:     if (!success) {
 13635   008562  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 13636   008564  A4D8               	btfss	status,2,c
 13637   008566  EFB7  F042         	goto	u19831
 13638   00856A  EFB9  F042         	goto	u19830
 13639   00856E                     u19831:
 13640   00856E  EFBB  F042         	goto	l16118
 13641   008572                     u19830:
 13642   008572  EFD7  F042         	goto	l2032
 13643   008576                     l16118:
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;rocketlib/pic18f26k83/i2c.c: 123:     uint8_t data;;rocketlib/pic18f26k83/i2c.c: 124:  
      +                             success = i2c_read(address, &data, 1);
 13647   008576  0E6B               	movlw	low i2c_read_reg8@data
 13648   008578  6F60               	movwf	i2c_read@data& (0+255),b
 13649   00857A  0E01               	movlw	1
 13650   00857C  6F61               	movwf	i2c_read@len& (0+255),b
 13651   00857E  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 13652   008580  EC67  F03B         	call	_i2c_read
 13653   008584  0100               	movlb	0	; () banked
 13654   008586  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 13655   008588                     
 13656                           ; BSR set to: 0
 13657                           ;rocketlib/pic18f26k83/i2c.c: 125:     if (!success) {
 13658   008588  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 13659   00858A  A4D8               	btfss	status,2,c
 13660   00858C  EFCA  F042         	goto	u19841
 13661   008590  EFCC  F042         	goto	u19840
 13662   008594                     u19841:
 13663   008594  EFCE  F042         	goto	l16124
 13664   008598                     u19840:
 13665   008598  EFD7  F042         	goto	l2032
 13666   00859C                     l16124:
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;rocketlib/pic18f26k83/i2c.c: 128:     *value = data;
 13670   00859C  0060  F19F  FFD9   	movff	i2c_read_reg8@value,fsr2l
 13671   0085A2  0060  F1A3  FFDA   	movff	i2c_read_reg8@value+1,fsr2h
 13672   0085A8  0060  F1AF  FFDF   	movff	i2c_read_reg8@data,indf2
 13673   0085AE                     l2032:
 13674                           
 13675                           ; BSR set to: 0
 13676   0085AE  0012               	return		;funcret
 13677   0085B0                     __end_of_i2c_read_reg8:
 13678                           	callstack 0
 13679                           
 13680 ;; *************** function _i2c_write *****************
 13681 ;; Defined at:
 13682 ;;		line 28 in file "rocketlib/pic18f26k83/i2c.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;  address         1    wreg     unsigned char 
 13685 ;;  data            1    0[BANK0 ] PTR const unsigned char 
 13686 ;;		 -> read_flow_sensor_data@stop_cmd(2), read_flow_sensor_data@start_cmd(2), i2c_read_reg16@reg(1), i2c_read_reg8@reg(
      +1), 
 13687 ;;		 -> i2c_write_reg16@data(3), i2c_write_reg8@data(2), 
 13688 ;;  len             1    1[BANK0 ] unsigned char 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;  address         1    3[BANK0 ] unsigned char 
 13691 ;;  timeout         2    4[BANK0 ] unsigned int 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      _Bool 
 13694 ;; Registers used:
 13695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13705 ;;Total ram usage:        6 bytes
 13706 ;; Hardware stack levels used: 1
 13707 ;; Hardware stack levels required when called: 5
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_i2c_write_reg8
 13712 ;;		_i2c_read_reg8
 13713 ;;		_i2c_write_data
 13714 ;;		_i2c_write_reg16
 13715 ;;		_i2c_read_reg16
 13716 ;;		_read_flow_sensor_data
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text47
 13721   0075CA                     __ptext47:
 13722                           	callstack 0
 13723   0075CA                     _i2c_write:
 13724                           	callstack 23
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;incstack = 0
 13728                           ;i2c_write@address stored from wreg
 13729   0075CA  0100               	movlb	0	; () banked
 13730   0075CC  6F63               	movwf	i2c_write@address& (0+255),b
 13731   0075CE                     
 13732                           ;rocketlib/pic18f26k83/i2c.c: 29:     I2C1ADB1 = (uint8_t)(address << 1);
 13733   0075CE  0100               	movlb	0	; () banked
 13734   0075D0  5163               	movf	i2c_write@address& (0+255),w,b
 13735   0075D2  2563               	addwf	i2c_write@address& (0+255),w,b
 13736   0075D4  013D               	movlb	61	; () banked
 13737   0075D6  6F6E               	movwf	110,b	;volatile
 13738   0075D8                     
 13739                           ; BSR set to: 61
 13740                           ;rocketlib/pic18f26k83/i2c.c: 30:     I2C1CNT = len;
 13741   0075D8  0060  F187  FD6C   	movff	i2c_write@len,15724	;volatile
 13742   0075DE                     
 13743                           ; BSR set to: 61
 13744                           ;rocketlib/pic18f26k83/i2c.c: 31:     I2C1PIRbits.PCIF = 0;
 13745   0075DE  9579               	bcf	121,2,b	;volatile
 13746   0075E0                     
 13747                           ; BSR set to: 61
 13748                           ;rocketlib/pic18f26k83/i2c.c: 32:     I2C1ERRbits.NACKIF = 0;
 13749   0075E0  9976               	bcf	118,4,b	;volatile
 13750   0075E2                     
 13751                           ; BSR set to: 61
 13752                           ;rocketlib/pic18f26k83/i2c.c: 33:     I2C1CON0bits.S = 1;
 13753   0075E2  8B73               	bsf	115,5,b	;volatile
 13754                           
 13755                           ;rocketlib/pic18f26k83/i2c.c: 35:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           36:     while (len--) {
 13756   0075E4  EF2B  F03B         	goto	l15572
 13757   0075E8                     l15554:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;rocketlib/pic18f26k83/i2c.c: 37:         I2C1TXB = *data++;
 13761   0075E8  5160               	movf	i2c_write@data& (0+255),w,b
 13762   0075EA  6ED9               	movwf	fsr2l,c
 13763   0075EC  6ADA               	clrf	fsr2h,c
 13764   0075EE  50DF               	movf	indf2,w,c
 13765   0075F0  013D               	movlb	61	; () banked
 13766   0075F2  6F6B               	movwf	107,b	;volatile
 13767   0075F4                     
 13768                           ; BSR set to: 61
 13769   0075F4  0100               	movlb	0	; () banked
 13770   0075F6  2B60               	incf	i2c_write@data& (0+255),f,b
 13771   0075F8                     
 13772                           ; BSR set to: 0
 13773                           ;rocketlib/pic18f26k83/i2c.c: 38:         timeout = 0;
 13774   0075F8  0E00               	movlw	0
 13775   0075FA  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 13776   0075FC  0E00               	movlw	0
 13777   0075FE  6F64               	movwf	i2c_write@timeout& (0+255),b
 13778                           
 13779                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 13780   007600  EF12  F03B         	goto	l15566
 13781   007604                     l15560:
 13782                           
 13783                           ; BSR set to: 61
 13784                           ;rocketlib/pic18f26k83/i2c.c: 40:             if (timeout >= 2000) {
 13785   007604  0ED0               	movlw	208
 13786   007606  0100               	movlb	0	; () banked
 13787   007608  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 13788   00760A  0E07               	movlw	7
 13789   00760C  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 13790   00760E  A0D8               	btfss	status,0,c
 13791   007610  EF0C  F03B         	goto	u18881
 13792   007614  EF0E  F03B         	goto	u18880
 13793   007618                     u18881:
 13794   007618  EF10  F03B         	goto	l15564
 13795   00761C                     u18880:
 13796   00761C  EF21  F03B         	goto	l1986
 13797   007620                     l15564:
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;rocketlib/pic18f26k83/i2c.c: 43:             timeout++;
 13801   007620  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 13802   007622  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 13803   007624                     l15566:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 13807   007624  013D               	movlb	61	; () banked
 13808   007626  BB78               	btfsc	120,5,b	;volatile
 13809   007628  EF18  F03B         	goto	u18891
 13810   00762C  EF1A  F03B         	goto	u18890
 13811   007630                     u18891:
 13812   007630  EF21  F03B         	goto	l1986
 13813   007634                     u18890:
 13814   007634                     
 13815                           ; BSR set to: 61
 13816   007634  A976               	btfss	118,4,b	;volatile
 13817   007636  EF1F  F03B         	goto	u18901
 13818   00763A  EF21  F03B         	goto	u18900
 13819   00763E                     u18901:
 13820   00763E  EF02  F03B         	goto	l15560
 13821   007642                     u18900:
 13822   007642                     l1986:
 13823                           
 13824                           ;rocketlib/pic18f26k83/i2c.c: 45:         if (I2C1ERRbits.NACKIF) {
 13825   007642  013D               	movlb	61	; () banked
 13826   007644  A976               	btfss	118,4,b	;volatile
 13827   007646  EF27  F03B         	goto	u18911
 13828   00764A  EF29  F03B         	goto	u18910
 13829   00764E                     u18911:
 13830   00764E  EF2B  F03B         	goto	l15572
 13831   007652                     u18910:
 13832   007652  EF35  F03B         	goto	l15574
 13833   007656                     l15572:
 13834                           
 13835                           ; BSR set to: 61
 13836                           ;rocketlib/pic18f26k83/i2c.c: 36:     while (len--) {
 13837   007656  0100               	movlb	0	; () banked
 13838   007658  0761               	decf	i2c_write@len& (0+255),f,b
 13839   00765A  2961               	incf	i2c_write@len& (0+255),w,b
 13840   00765C  A4D8               	btfss	status,2,c
 13841   00765E  EF33  F03B         	goto	u18921
 13842   007662  EF35  F03B         	goto	u18920
 13843   007666                     u18921:
 13844   007666  EFF4  F03A         	goto	l15554
 13845   00766A                     u18920:
 13846   00766A                     l15574:
 13847                           
 13848                           ;rocketlib/pic18f26k83/i2c.c: 50:     timeout = 0;
 13849   00766A  0E00               	movlw	0
 13850   00766C  0100               	movlb	0	; () banked
 13851   00766E  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 13852   007670  0E00               	movlw	0
 13853   007672  6F64               	movwf	i2c_write@timeout& (0+255),b
 13854                           
 13855                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 13856   007674  EF4C  F03B         	goto	l15582
 13857   007678                     l15576:
 13858                           
 13859                           ; BSR set to: 61
 13860                           ;rocketlib/pic18f26k83/i2c.c: 52:         if (timeout >= 2000) {
 13861   007678  0ED0               	movlw	208
 13862   00767A  0100               	movlb	0	; () banked
 13863   00767C  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 13864   00767E  0E07               	movlw	7
 13865   007680  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 13866   007682  A0D8               	btfss	status,0,c
 13867   007684  EF46  F03B         	goto	u18931
 13868   007688  EF48  F03B         	goto	u18930
 13869   00768C                     u18931:
 13870   00768C  EF4A  F03B         	goto	l15580
 13871   007690                     u18930:
 13872   007690  EF54  F03B         	goto	l1994
 13873   007694                     l15580:
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;rocketlib/pic18f26k83/i2c.c: 55:         timeout++;
 13877   007694  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 13878   007696  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 13879   007698                     l15582:
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 13883   007698  013D               	movlb	61	; () banked
 13884   00769A  A579               	btfss	121,2,b	;volatile
 13885   00769C  EF52  F03B         	goto	u18941
 13886   0076A0  EF54  F03B         	goto	u18940
 13887   0076A4                     u18941:
 13888   0076A4  EF3C  F03B         	goto	l15576
 13889   0076A8                     u18940:
 13890   0076A8                     l1994:
 13891                           
 13892                           ;rocketlib/pic18f26k83/i2c.c: 58:     I2C1PIRbits.PCIF = 0;
 13893   0076A8  013D               	movlb	61	; () banked
 13894   0076AA  9579               	bcf	121,2,b	;volatile
 13895                           
 13896                           ;rocketlib/pic18f26k83/i2c.c: 59:     I2C1STAT1bits.CLRBF = 1;
 13897   0076AC  8578               	bsf	120,2,b	;volatile
 13898   0076AE                     
 13899                           ; BSR set to: 61
 13900                           ;rocketlib/pic18f26k83/i2c.c: 61:     return (I2C1ERR & 0x70) != 0;
 13901   0076AE  006F F5D8  F062    	movff	15734,??_i2c_write	;volatile
 13902   0076B4  0E70               	movlw	112
 13903   0076B6  0100               	movlb	0	; () banked
 13904   0076B8  1762               	andwf	??_i2c_write& (0+255),f,b
 13905   0076BA  A4D8               	btfss	status,2,c
 13906   0076BC  EF62  F03B         	goto	u18951
 13907   0076C0  EF65  F03B         	goto	u18950
 13908   0076C4                     u18951:
 13909   0076C4  0E01               	movlw	1
 13910   0076C6  EF66  F03B         	goto	u18960
 13911   0076CA                     u18950:
 13912   0076CA  0E00               	movlw	0
 13913   0076CC                     u18960:
 13914   0076CC                     
 13915                           ; BSR set to: 0
 13916   0076CC  0012               	return		;funcret
 13917   0076CE                     __end_of_i2c_write:
 13918                           	callstack 0
 13919                           
 13920 ;; *************** function _i2c_read *****************
 13921 ;; Defined at:
 13922 ;;		line 64 in file "rocketlib/pic18f26k83/i2c.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  address         1    wreg     unsigned char 
 13925 ;;  data            1    0[BANK0 ] PTR unsigned char 
 13926 ;;		 -> read_flow_sensor_data@data(9), i2c_read_reg16@data(2), i2c_read_reg8@data(1), 
 13927 ;;  len             1    1[BANK0 ] unsigned char 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;  address         1    3[BANK0 ] unsigned char 
 13930 ;;  timeout         2    4[BANK0 ] unsigned int 
 13931 ;; Return value:  Size  Location     Type
 13932 ;;                  1    wreg      _Bool 
 13933 ;; Registers used:
 13934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/0
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13944 ;;Total ram usage:        6 bytes
 13945 ;; Hardware stack levels used: 1
 13946 ;; Hardware stack levels required when called: 5
 13947 ;; This function calls:
 13948 ;;		Nothing
 13949 ;; This function is called by:
 13950 ;;		_i2c_read_reg8
 13951 ;;		_i2c_read_data
 13952 ;;		_i2c_read_reg16
 13953 ;;		_read_flow_sensor_data
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text48
 13958   0076CE                     __ptext48:
 13959                           	callstack 0
 13960   0076CE                     _i2c_read:
 13961                           	callstack 23
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;incstack = 0
 13965                           ;i2c_read@address stored from wreg
 13966   0076CE  0100               	movlb	0	; () banked
 13967   0076D0  6F63               	movwf	i2c_read@address& (0+255),b
 13968   0076D2                     
 13969                           ;rocketlib/pic18f26k83/i2c.c: 65:     I2C1ADB1 = (uint8_t)((address << 1) | 1);
 13970   0076D2  80D8               	bsf	status,0,c
 13971   0076D4  0100               	movlb	0	; () banked
 13972   0076D6  3563               	rlcf	i2c_read@address& (0+255),w,b
 13973   0076D8  013D               	movlb	61	; () banked
 13974   0076DA  6F6E               	movwf	110,b	;volatile
 13975   0076DC                     
 13976                           ; BSR set to: 61
 13977                           ;rocketlib/pic18f26k83/i2c.c: 66:     I2C1CNT = len;
 13978   0076DC  0060  F187  FD6C   	movff	i2c_read@len,15724	;volatile
 13979   0076E2                     
 13980                           ; BSR set to: 61
 13981                           ;rocketlib/pic18f26k83/i2c.c: 67:     I2C1PIRbits.PCIF = 0;
 13982   0076E2  9579               	bcf	121,2,b	;volatile
 13983   0076E4                     
 13984                           ; BSR set to: 61
 13985                           ;rocketlib/pic18f26k83/i2c.c: 68:     I2C1ERRbits.NACKIF = 0;
 13986   0076E4  9976               	bcf	118,4,b	;volatile
 13987   0076E6                     
 13988                           ; BSR set to: 61
 13989                           ;rocketlib/pic18f26k83/i2c.c: 69:     I2C1CON0bits.S = 1;
 13990   0076E6  8B73               	bsf	115,5,b	;volatile
 13991                           
 13992                           ;rocketlib/pic18f26k83/i2c.c: 71:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           72:     while (len--) {
 13993   0076E8  EFAD  F03B         	goto	l15616
 13994   0076EC                     l15598:
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;rocketlib/pic18f26k83/i2c.c: 73:         timeout = 0;
 13998   0076EC  0E00               	movlw	0
 13999   0076EE  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 14000   0076F0  0E00               	movlw	0
 14001   0076F2  6F64               	movwf	i2c_read@timeout& (0+255),b
 14002                           
 14003                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 14004   0076F4  EF8C  F03B         	goto	l15606
 14005   0076F8                     l15600:
 14006                           
 14007                           ; BSR set to: 61
 14008                           ;rocketlib/pic18f26k83/i2c.c: 75:             if (timeout >= 2000) {
 14009   0076F8  0ED0               	movlw	208
 14010   0076FA  0100               	movlb	0	; () banked
 14011   0076FC  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 14012   0076FE  0E07               	movlw	7
 14013   007700  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 14014   007702  A0D8               	btfss	status,0,c
 14015   007704  EF86  F03B         	goto	u18971
 14016   007708  EF88  F03B         	goto	u18970
 14017   00770C                     u18971:
 14018   00770C  EF8A  F03B         	goto	l15604
 14019   007710                     u18970:
 14020   007710  EF9B  F03B         	goto	l2003
 14021   007714                     l15604:
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;rocketlib/pic18f26k83/i2c.c: 78:             timeout++;
 14025   007714  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 14026   007716  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 14027   007718                     l15606:
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 14031   007718  013D               	movlb	61	; () banked
 14032   00771A  B178               	btfsc	120,0,b	;volatile
 14033   00771C  EF92  F03B         	goto	u18981
 14034   007720  EF94  F03B         	goto	u18980
 14035   007724                     u18981:
 14036   007724  EF9B  F03B         	goto	l2003
 14037   007728                     u18980:
 14038   007728                     
 14039                           ; BSR set to: 61
 14040   007728  A976               	btfss	118,4,b	;volatile
 14041   00772A  EF99  F03B         	goto	u18991
 14042   00772E  EF9B  F03B         	goto	u18990
 14043   007732                     u18991:
 14044   007732  EF7C  F03B         	goto	l15600
 14045   007736                     u18990:
 14046   007736                     l2003:
 14047                           
 14048                           ;rocketlib/pic18f26k83/i2c.c: 80:         if (I2C1ERRbits.NACKIF) {
 14049   007736  013D               	movlb	61	; () banked
 14050   007738  A976               	btfss	118,4,b	;volatile
 14051   00773A  EFA1  F03B         	goto	u19001
 14052   00773E  EFA3  F03B         	goto	u19000
 14053   007742                     u19001:
 14054   007742  EFA5  F03B         	goto	l15612
 14055   007746                     u19000:
 14056   007746  EFB7  F03B         	goto	l15618
 14057   00774A                     l15612:
 14058                           
 14059                           ; BSR set to: 61
 14060                           ;rocketlib/pic18f26k83/i2c.c: 83:         *data++ = I2C1RXB;
 14061   00774A  0100               	movlb	0	; () banked
 14062   00774C  5160               	movf	i2c_read@data& (0+255),w,b
 14063   00774E  6ED9               	movwf	fsr2l,c
 14064   007750  6ADA               	clrf	fsr2h,c
 14065   007752  006F F5AB FFDF     	movff	15722,indf2	;volatile
 14066   007758                     
 14067                           ; BSR set to: 0
 14068   007758  2B60               	incf	i2c_read@data& (0+255),f,b
 14069   00775A                     l15616:
 14070                           
 14071                           ;rocketlib/pic18f26k83/i2c.c: 72:     while (len--) {
 14072   00775A  0100               	movlb	0	; () banked
 14073   00775C  0761               	decf	i2c_read@len& (0+255),f,b
 14074   00775E  2961               	incf	i2c_read@len& (0+255),w,b
 14075   007760  A4D8               	btfss	status,2,c
 14076   007762  EFB5  F03B         	goto	u19011
 14077   007766  EFB7  F03B         	goto	u19010
 14078   00776A                     u19011:
 14079   00776A  EF76  F03B         	goto	l15598
 14080   00776E                     u19010:
 14081   00776E                     l15618:
 14082                           
 14083                           ;rocketlib/pic18f26k83/i2c.c: 86:     timeout = 0;
 14084   00776E  0E00               	movlw	0
 14085   007770  0100               	movlb	0	; () banked
 14086   007772  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 14087   007774  0E00               	movlw	0
 14088   007776  6F64               	movwf	i2c_read@timeout& (0+255),b
 14089                           
 14090                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 14091   007778  EFCE  F03B         	goto	l15626
 14092   00777C                     l15620:
 14093                           
 14094                           ; BSR set to: 61
 14095                           ;rocketlib/pic18f26k83/i2c.c: 88:         if (timeout >= 2000) {
 14096   00777C  0ED0               	movlw	208
 14097   00777E  0100               	movlb	0	; () banked
 14098   007780  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 14099   007782  0E07               	movlw	7
 14100   007784  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 14101   007786  A0D8               	btfss	status,0,c
 14102   007788  EFC8  F03B         	goto	u19021
 14103   00778C  EFCA  F03B         	goto	u19020
 14104   007790                     u19021:
 14105   007790  EFCC  F03B         	goto	l15624
 14106   007794                     u19020:
 14107   007794  EFD6  F03B         	goto	l2011
 14108   007798                     l15624:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;rocketlib/pic18f26k83/i2c.c: 91:         timeout++;
 14112   007798  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 14113   00779A  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 14114   00779C                     l15626:
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 14118   00779C  013D               	movlb	61	; () banked
 14119   00779E  A579               	btfss	121,2,b	;volatile
 14120   0077A0  EFD4  F03B         	goto	u19031
 14121   0077A4  EFD6  F03B         	goto	u19030
 14122   0077A8                     u19031:
 14123   0077A8  EFBE  F03B         	goto	l15620
 14124   0077AC                     u19030:
 14125   0077AC                     l2011:
 14126                           
 14127                           ;rocketlib/pic18f26k83/i2c.c: 93:     I2C1PIRbits.PCIF = 0;
 14128   0077AC  013D               	movlb	61	; () banked
 14129   0077AE  9579               	bcf	121,2,b	;volatile
 14130                           
 14131                           ;rocketlib/pic18f26k83/i2c.c: 94:     I2C1STAT1bits.CLRBF = 1;
 14132   0077B0  8578               	bsf	120,2,b	;volatile
 14133   0077B2                     
 14134                           ; BSR set to: 61
 14135                           ;rocketlib/pic18f26k83/i2c.c: 96:     return (I2C1ERR & 0x70) != 0;
 14136   0077B2  006F F5D8  F062    	movff	15734,??_i2c_read	;volatile
 14137   0077B8  0E70               	movlw	112
 14138   0077BA  0100               	movlb	0	; () banked
 14139   0077BC  1762               	andwf	??_i2c_read& (0+255),f,b
 14140   0077BE  A4D8               	btfss	status,2,c
 14141   0077C0  EFE4  F03B         	goto	u19041
 14142   0077C4  EFE7  F03B         	goto	u19040
 14143   0077C8                     u19041:
 14144   0077C8  0E01               	movlw	1
 14145   0077CA  EFE8  F03B         	goto	u19050
 14146   0077CE                     u19040:
 14147   0077CE  0E00               	movlw	0
 14148   0077D0                     u19050:
 14149   0077D0                     
 14150                           ; BSR set to: 0
 14151   0077D0  0012               	return		;funcret
 14152   0077D2                     __end_of_i2c_read:
 14153                           	callstack 0
 14154                           
 14155 ;; *************** function _i2c_init *****************
 14156 ;; Defined at:
 14157 ;;		line 9 in file "rocketlib/pic18f26k83/i2c.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  clkdiv          1    wreg     unsigned char 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  clkdiv          1    0[BANK0 ] unsigned char 
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  1    wreg      void 
 14164 ;; Registers used:
 14165 ;;		wreg, status,2, status,0
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;Total ram usage:        1 bytes
 14176 ;; Hardware stack levels used: 1
 14177 ;; Hardware stack levels required when called: 5
 14178 ;; This function calls:
 14179 ;;		Nothing
 14180 ;; This function is called by:
 14181 ;;		_main
 14182 ;;		_fxls_init
 14183 ;;		_fxls_get_prod_rev
 14184 ;;		_fxls_get_whoami
 14185 ;;		_data_ready
 14186 ;;		_fxls_read_accel_data
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           	psect	text49
 14191   008AC6                     __ptext49:
 14192                           	callstack 0
 14193   008AC6                     _i2c_init:
 14194                           	callstack 25
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;incstack = 0
 14198                           ;i2c_init@clkdiv stored from wreg
 14199   008AC6  0100               	movlb	0	; () banked
 14200   008AC8  6F60               	movwf	i2c_init@clkdiv& (0+255),b
 14201   008ACA                     
 14202                           ;rocketlib/pic18f26k83/i2c.c: 12:     I2C1CON0 = 0x84;
 14203   008ACA  0E84               	movlw	132
 14204   008ACC  013D               	movlb	61	; () banked
 14205   008ACE  6F73               	movwf	115,b	;volatile
 14206                           
 14207                           ;rocketlib/pic18f26k83/i2c.c: 15:     I2C1CON1 = 0x80;
 14208   008AD0  0E80               	movlw	128
 14209   008AD2  6F74               	movwf	116,b	;volatile
 14210                           
 14211                           ;rocketlib/pic18f26k83/i2c.c: 18:     I2C1CON2 = 0x00;
 14212   008AD4  0E00               	movlw	0
 14213   008AD6  6F75               	movwf	117,b	;volatile
 14214   008AD8                     
 14215                           ; BSR set to: 61
 14216                           ;rocketlib/pic18f26k83/i2c.c: 20:     CLKRCON = 0b10010000 | clkdiv;
 14217   008AD8  0100               	movlb	0	; () banked
 14218   008ADA  5160               	movf	i2c_init@clkdiv& (0+255),w,b
 14219   008ADC  0990               	iorlw	144
 14220   008ADE  013C               	movlb	60	; () banked
 14221   008AE0  6FE5               	movwf	229,b	;volatile
 14222   008AE2                     
 14223                           ; BSR set to: 60
 14224                           ;rocketlib/pic18f26k83/i2c.c: 21:     CLKRCLK = 0b00000011;
 14225   008AE2  0E03               	movlw	3
 14226   008AE4  6FE6               	movwf	230,b	;volatile
 14227   008AE6                     
 14228                           ; BSR set to: 60
 14229                           ;rocketlib/pic18f26k83/i2c.c: 23:     I2C1CLK = 0x04;
 14230   008AE6  0E04               	movlw	4
 14231   008AE8  013D               	movlb	61	; () banked
 14232   008AEA  6F7B               	movwf	123,b	;volatile
 14233   008AEC                     
 14234                           ; BSR set to: 61
 14235                           ;rocketlib/pic18f26k83/i2c.c: 24:     I2C1PIR = 0;
 14236   008AEC  0E00               	movlw	0
 14237   008AEE  6F79               	movwf	121,b	;volatile
 14238   008AF0                     
 14239                           ; BSR set to: 61
 14240                           ;rocketlib/pic18f26k83/i2c.c: 25:     I2C1ERR = 0;
 14241   008AF0  0E00               	movlw	0
 14242   008AF2  6F76               	movwf	118,b	;volatile
 14243   008AF4                     
 14244                           ; BSR set to: 61
 14245   008AF4  0012               	return		;funcret
 14246   008AF6                     __end_of_i2c_init:
 14247                           	callstack 0
 14248                           
 14249 ;; *************** function _f_mount *****************
 14250 ;; Defined at:
 14251 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  fs              2  135[BANK0 ] PTR struct .
 14254 ;;		 -> FatFs(563), NULL(0), 
 14255 ;;  path            2  137[BANK0 ] PTR const unsigned char 
 14256 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
 14257 ;;  opt             1  139[BANK0 ] unsigned char 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  vol             2  145[BANK0 ] int 
 14260 ;;  cfs             2  143[BANK0 ] PTR struct .
 14261 ;;		 -> FatFs(563), NULL(0), 
 14262 ;;  rp              2  141[BANK0 ] PTR const unsigned char 
 14263 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
 14264 ;;  res             1  140[BANK0 ] enum E68
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  1    wreg      enum E68
 14267 ;; Registers used:
 14268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14274 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14277 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14278 ;;Total ram usage:       12 bytes
 14279 ;; Hardware stack levels used: 1
 14280 ;; Hardware stack levels required when called: 14
 14281 ;; This function calls:
 14282 ;;		_find_volume
 14283 ;;		_get_ldnumber
 14284 ;; This function is called by:
 14285 ;;		_main
 14286 ;; This function uses a non-reentrant model
 14287 ;;
 14288                           
 14289                           	psect	text50
 14290   0079C2                     __ptext50:
 14291                           	callstack 0
 14292   0079C2                     _f_mount:
 14293                           	callstack 16
 14294   0079C2                     
 14295                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
 14296   0079C2  C0E9  F0ED         	movff	f_mount@path,f_mount@rp
 14297   0079C6  C0EA  F0EE         	movff	f_mount@path+1,f_mount@rp+1
 14298   0079CA                     
 14299                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 14300   0079CA  0EED               	movlw	low f_mount@rp
 14301   0079CC  0100               	movlb	0	; () banked
 14302   0079CE  6F60               	movwf	get_ldnumber@path& (0+255),b
 14303   0079D0  6B61               	clrf	(get_ldnumber@path+1)& (0+255),b
 14304   0079D2  EC01  F034         	call	_get_ldnumber	;wreg free
 14305   0079D6  C060  F0F1         	movff	?_get_ldnumber,f_mount@vol
 14306   0079DA  C061  F0F2         	movff	?_get_ldnumber+1,f_mount@vol+1
 14307   0079DE                     
 14308                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 14309   0079DE  0100               	movlb	0	; () banked
 14310   0079E0  BFF2               	btfsc	(f_mount@vol+1)& (0+255),7,b
 14311   0079E2  EFF7  F03C         	goto	u19890
 14312   0079E6  EFF5  F03C         	goto	u19891
 14313   0079EA                     u19891:
 14314   0079EA  EFFA  F03C         	goto	l16346
 14315   0079EE                     u19890:
 14316   0079EE                     
 14317                           ; BSR set to: 0
 14318   0079EE  0E0B               	movlw	11
 14319   0079F0  EF50  F03D         	goto	l1277
 14320   0079F4                     l16346:
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 14324   0079F4  90D8               	bcf	status,0,c
 14325   0079F6  35F1               	rlcf	f_mount@vol& (0+255),w,b
 14326   0079F8  6ED9               	movwf	fsr2l,c
 14327   0079FA  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 14328   0079FC  6EDA               	movwf	fsr2h,c
 14329   0079FE  0EC2               	movlw	low _FatFs@ff$F2407
 14330   007A00  26D9               	addwf	fsr2l,f,c
 14331   007A02  0E01               	movlw	high _FatFs@ff$F2407
 14332   007A04  22DA               	addwfc	fsr2h,f,c
 14333   007A06  006F FF78  F0EF    	movff	postinc2,f_mount@cfs
 14334   007A0C  006F FF74  F0F0    	movff	postdec2,f_mount@cfs+1
 14335   007A12                     
 14336                           ; BSR set to: 0
 14337                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 14338   007A12  51EF               	movf	f_mount@cfs& (0+255),w,b
 14339   007A14  11F0               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 14340   007A16  B4D8               	btfsc	status,2,c
 14341   007A18  EF10  F03D         	goto	u19901
 14342   007A1C  EF12  F03D         	goto	u19900
 14343   007A20                     u19901:
 14344   007A20  EF19  F03D         	goto	l16352
 14345   007A24                     u19900:
 14346   007A24                     
 14347                           ; BSR set to: 0
 14348                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 14349   007A24  0060  F3BF  FFD9   	movff	f_mount@cfs,fsr2l
 14350   007A2A  0060  F3C3  FFDA   	movff	f_mount@cfs+1,fsr2h
 14351   007A30  6ADF               	clrf	indf2,c
 14352   007A32                     l16352:
 14353                           
 14354                           ; BSR set to: 0
 14355                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 14356   007A32  51E7               	movf	f_mount@fs& (0+255),w,b
 14357   007A34  11E8               	iorwf	(f_mount@fs+1)& (0+255),w,b
 14358   007A36  B4D8               	btfsc	status,2,c
 14359   007A38  EF20  F03D         	goto	u19911
 14360   007A3C  EF22  F03D         	goto	u19910
 14361   007A40                     u19911:
 14362   007A40  EF29  F03D         	goto	l16356
 14363   007A44                     u19910:
 14364   007A44                     
 14365                           ; BSR set to: 0
 14366                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 14367   007A44  0060  F39F  FFD9   	movff	f_mount@fs,fsr2l
 14368   007A4A  0060  F3A3  FFDA   	movff	f_mount@fs+1,fsr2h
 14369   007A50  6ADF               	clrf	indf2,c
 14370   007A52                     l16356:
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 14374   007A52  90D8               	bcf	status,0,c
 14375   007A54  35F1               	rlcf	f_mount@vol& (0+255),w,b
 14376   007A56  6ED9               	movwf	fsr2l,c
 14377   007A58  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 14378   007A5A  6EDA               	movwf	fsr2h,c
 14379   007A5C  0EC2               	movlw	low _FatFs@ff$F2407
 14380   007A5E  26D9               	addwf	fsr2l,f,c
 14381   007A60  0E01               	movlw	high _FatFs@ff$F2407
 14382   007A62  22DA               	addwfc	fsr2h,f,c
 14383   007A64  0060  F39F  FFDE   	movff	f_mount@fs,postinc2
 14384   007A6A  0060  F3A3  FFDD   	movff	f_mount@fs+1,postdec2
 14385   007A70                     
 14386                           ; BSR set to: 0
 14387                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 14388   007A70  51EB               	movf	f_mount@opt& (0+255),w,b
 14389   007A72  A4D8               	btfss	status,2,c
 14390   007A74  EF3E  F03D         	goto	u19921
 14391   007A78  EF40  F03D         	goto	u19920
 14392   007A7C                     u19921:
 14393   007A7C  EF43  F03D         	goto	l16364
 14394   007A80                     u19920:
 14395   007A80                     
 14396                           ; BSR set to: 0
 14397   007A80  0E00               	movlw	0
 14398   007A82  EF50  F03D         	goto	l1277
 14399   007A86                     l16364:
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 14403   007A86  0EE9               	movlw	low f_mount@path
 14404   007A88  6FDA               	movwf	find_volume@path& (0+255),b
 14405   007A8A  6BDB               	clrf	(find_volume@path+1)& (0+255),b
 14406   007A8C  0EE7               	movlw	low f_mount@fs
 14407   007A8E  6FDC               	movwf	find_volume@rfs& (0+255),b
 14408   007A90  6BDD               	clrf	(find_volume@rfs+1)& (0+255),b
 14409   007A92  0E00               	movlw	0
 14410   007A94  6FDE               	movwf	find_volume@mode& (0+255),b
 14411   007A96  EC0F  F000         	call	_find_volume	;wreg free
 14412   007A9A  0100               	movlb	0	; () banked
 14413   007A9C  6FEC               	movwf	f_mount@res& (0+255),b
 14414   007A9E                     
 14415                           ; BSR set to: 0
 14416                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 14417   007A9E  51EC               	movf	f_mount@res& (0+255),w,b
 14418   007AA0                     l1277:
 14419                           
 14420                           ; BSR set to: 0
 14421   007AA0  0012               	return		;funcret
 14422   007AA2                     __end_of_f_mount:
 14423                           	callstack 0
 14424                           
 14425 ;; *************** function _find_volume *****************
 14426 ;; Defined at:
 14427 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  path            2  122[BANK0 ] PTR PTR const unsigned c
 14430 ;;		 -> f_chdir@path(2), f_open@path(2), f_mount@path(2), 
 14431 ;;  rfs             2  124[BANK0 ] PTR PTR struct .
 14432 ;;		 -> f_chdir@fs(2), f_open@fs(2), f_mount@fs(2), 
 14433 ;;  mode            1  126[BANK0 ] unsigned char 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  br             16    0[BANK1 ] unsigned long [4]
 14436 ;;  bsect           4   49[BANK1 ] unsigned long 
 14437 ;;  fasize          4   45[BANK1 ] unsigned long 
 14438 ;;  nclst           4   41[BANK1 ] unsigned long 
 14439 ;;  tsect           4   36[BANK1 ] unsigned long 
 14440 ;;  sysect          4   28[BANK1 ] unsigned long 
 14441 ;;  szbfat          4   22[BANK1 ] unsigned long 
 14442 ;;  fs              2   56[BANK1 ] PTR struct .
 14443 ;;		 -> FatFs(563), NULL(0), 
 14444 ;;  i               2   53[BANK1 ] unsigned int 
 14445 ;;  nrsv            2   34[BANK1 ] unsigned short 
 14446 ;;  vol             2   32[BANK1 ] int 
 14447 ;;  pt              2   26[BANK1 ] PTR unsigned char 
 14448 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 14449 ;;  fmt             1   55[BANK1 ] unsigned char 
 14450 ;;  stat            1   40[BANK1 ] unsigned char 
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      enum E68
 14453 ;; Registers used:
 14454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14460 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14461 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14462 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Totals:         0      13      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;Total ram usage:       71 bytes
 14465 ;; Hardware stack levels used: 1
 14466 ;; Hardware stack levels required when called: 13
 14467 ;; This function calls:
 14468 ;;		___lldiv
 14469 ;;		___lmul
 14470 ;;		_check_fs
 14471 ;;		_disk_initialize
 14472 ;;		_disk_status
 14473 ;;		_get_ldnumber
 14474 ;;		_ld_dword
 14475 ;;		_ld_word
 14476 ;;		_move_window
 14477 ;; This function is called by:
 14478 ;;		_f_mount
 14479 ;;		_f_open
 14480 ;;		_f_chdir
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           	psect	text51
 14485   00001E                     __ptext51:
 14486                           	callstack 0
 14487   00001E                     _find_volume:
 14488                           	callstack 15
 14489   00001E                     
 14490                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 14491   00001E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 14492   000024  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 14493   00002A  6ADE               	clrf	postinc2,c
 14494   00002C  6ADD               	clrf	postdec2,c
 14495   00002E                     
 14496                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 14497   00002E  C0DA  F060         	movff	find_volume@path,get_ldnumber@path
 14498   000032  C0DB  F061         	movff	find_volume@path+1,get_ldnumber@path+1
 14499   000036  EC01  F034         	call	_get_ldnumber	;wreg free
 14500   00003A  C060  F120         	movff	?_get_ldnumber,find_volume@vol
 14501   00003E  C061  F121         	movff	?_get_ldnumber+1,find_volume@vol+1
 14502   000042                     
 14503                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 14504   000042  0101               	movlb	1	; () banked
 14505   000044  BF21               	btfsc	(find_volume@vol+1)& (0+255),7,b
 14506   000046  EF29  F000         	goto	u18350
 14507   00004A  EF27  F000         	goto	u18351
 14508   00004E                     u18351:
 14509   00004E  EF2C  F000         	goto	l15234
 14510   000052                     u18350:
 14511   000052                     
 14512                           ; BSR set to: 1
 14513   000052  0E0B               	movlw	11
 14514   000054  EF68  F007         	goto	l1211
 14515   000058                     l15234:
 14516                           
 14517                           ; BSR set to: 1
 14518                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 14519   000058  90D8               	bcf	status,0,c
 14520   00005A  3520               	rlcf	find_volume@vol& (0+255),w,b
 14521   00005C  6ED9               	movwf	fsr2l,c
 14522   00005E  3521               	rlcf	(find_volume@vol+1)& (0+255),w,b
 14523   000060  6EDA               	movwf	fsr2h,c
 14524   000062  0EC2               	movlw	low _FatFs@ff$F2407
 14525   000064  26D9               	addwf	fsr2l,f,c
 14526   000066  0E01               	movlw	high _FatFs@ff$F2407
 14527   000068  22DA               	addwfc	fsr2h,f,c
 14528   00006A  006F FF78  F138    	movff	postinc2,find_volume@fs
 14529   000070  006F FF74  F139    	movff	postdec2,find_volume@fs+1
 14530   000076                     
 14531                           ; BSR set to: 1
 14532                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 14533   000076  5138               	movf	find_volume@fs& (0+255),w,b
 14534   000078  1139               	iorwf	(find_volume@fs+1)& (0+255),w,b
 14535   00007A  A4D8               	btfss	status,2,c
 14536   00007C  EF42  F000         	goto	u18361
 14537   000080  EF44  F000         	goto	u18360
 14538   000084                     u18361:
 14539   000084  EF47  F000         	goto	l15242
 14540   000088                     u18360:
 14541   000088                     
 14542                           ; BSR set to: 1
 14543   000088  0E0C               	movlw	12
 14544   00008A  EF68  F007         	goto	l1211
 14545   00008E                     l15242:
 14546                           
 14547                           ; BSR set to: 1
 14548                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 14549   00008E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 14550   000094  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 14551   00009A  0060  F4E3  FFDE   	movff	find_volume@fs,postinc2
 14552   0000A0  0060  F4E7  FFDD   	movff	find_volume@fs+1,postdec2
 14553   0000A6                     
 14554                           ; BSR set to: 1
 14555                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 14556   0000A6  0100               	movlb	0	; () banked
 14557   0000A8  91DE               	bcf	find_volume@mode& (0+255),0,b
 14558   0000AA                     
 14559                           ; BSR set to: 0
 14560                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 14561   0000AA  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 14562   0000B0  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 14563   0000B6  50DF               	movf	indf2,w,c
 14564   0000B8  B4D8               	btfsc	status,2,c
 14565   0000BA  EF61  F000         	goto	u18371
 14566   0000BE  EF63  F000         	goto	u18370
 14567   0000C2                     u18371:
 14568   0000C2  EF8D  F000         	goto	l15264
 14569   0000C6                     u18370:
 14570   0000C6                     
 14571                           ; BSR set to: 0
 14572                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 14573   0000C6  0101               	movlb	1	; () banked
 14574   0000C8  EE20 F001          	lfsr	2,1
 14575   0000CC  5138               	movf	find_volume@fs& (0+255),w,b
 14576   0000CE  26D9               	addwf	fsr2l,f,c
 14577   0000D0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 14578   0000D2  22DA               	addwfc	fsr2h,f,c
 14579   0000D4  50DF               	movf	indf2,w,c
 14580   0000D6  EC60  F041         	call	_disk_status
 14581   0000DA  0101               	movlb	1	; () banked
 14582   0000DC  6F28               	movwf	find_volume@stat& (0+255),b
 14583   0000DE                     
 14584                           ; BSR set to: 1
 14585                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 14586   0000DE  B128               	btfsc	find_volume@stat& (0+255),0,b
 14587   0000E0  EF74  F000         	goto	u18381
 14588   0000E4  EF76  F000         	goto	u18380
 14589   0000E8                     u18381:
 14590   0000E8  EF8D  F000         	goto	l15264
 14591   0000EC                     u18380:
 14592   0000EC                     
 14593                           ; BSR set to: 1
 14594   0000EC  0100               	movlb	0	; () banked
 14595   0000EE  51DE               	movf	find_volume@mode& (0+255),w,b
 14596   0000F0  B4D8               	btfsc	status,2,c
 14597   0000F2  EF7D  F000         	goto	u18391
 14598   0000F6  EF7F  F000         	goto	u18390
 14599   0000FA                     u18391:
 14600   0000FA  EF8A  F000         	goto	l15260
 14601   0000FE                     u18390:
 14602   0000FE                     
 14603                           ; BSR set to: 0
 14604   0000FE  0101               	movlb	1	; () banked
 14605   000100  A528               	btfss	find_volume@stat& (0+255),2,b
 14606   000102  EF85  F000         	goto	u18401
 14607   000106  EF87  F000         	goto	u18400
 14608   00010A                     u18401:
 14609   00010A  EF8A  F000         	goto	l15260
 14610   00010E                     u18400:
 14611   00010E                     l15256:
 14612                           
 14613                           ; BSR set to: 1
 14614                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 14615   00010E  0E0A               	movlw	10
 14616   000110  EF68  F007         	goto	l1211
 14617   000114                     l15260:
 14618                           
 14619                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 14620   000114  0E00               	movlw	0
 14621   000116  EF68  F007         	goto	l1211
 14622   00011A                     l15264:
 14623                           
 14624                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 14625   00011A  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 14626   000120  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 14627   000126  6ADF               	clrf	indf2,c
 14628   000128                     
 14629                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 14630   000128  0101               	movlb	1	; () banked
 14631   00012A  EE20 F001          	lfsr	2,1
 14632   00012E  5138               	movf	find_volume@fs& (0+255),w,b
 14633   000130  26D9               	addwf	fsr2l,f,c
 14634   000132  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 14635   000134  22DA               	addwfc	fsr2h,f,c
 14636   000136  0060  F483  FFDF   	movff	find_volume@vol,indf2
 14637   00013C                     
 14638                           ; BSR set to: 1
 14639                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 14640   00013C  EE20 F001          	lfsr	2,1
 14641   000140  5138               	movf	find_volume@fs& (0+255),w,b
 14642   000142  26D9               	addwf	fsr2l,f,c
 14643   000144  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 14644   000146  22DA               	addwfc	fsr2h,f,c
 14645   000148  50DF               	movf	indf2,w,c
 14646   00014A  EC70  F044         	call	_disk_initialize
 14647   00014E  0101               	movlb	1	; () banked
 14648   000150  6F28               	movwf	find_volume@stat& (0+255),b
 14649   000152                     
 14650                           ; BSR set to: 1
 14651                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 14652   000152  A128               	btfss	find_volume@stat& (0+255),0,b
 14653   000154  EFAE  F000         	goto	u18411
 14654   000158  EFB0  F000         	goto	u18410
 14655   00015C                     u18411:
 14656   00015C  EFB3  F000         	goto	l15276
 14657   000160                     u18410:
 14658   000160                     
 14659                           ; BSR set to: 1
 14660                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 14661   000160  0E03               	movlw	3
 14662   000162  EF68  F007         	goto	l1211
 14663   000166                     l15276:
 14664                           
 14665                           ; BSR set to: 1
 14666   000166  0100               	movlb	0	; () banked
 14667   000168  51DE               	movf	find_volume@mode& (0+255),w,b
 14668   00016A  B4D8               	btfsc	status,2,c
 14669   00016C  EFBA  F000         	goto	u18421
 14670   000170  EFBC  F000         	goto	u18420
 14671   000174                     u18421:
 14672   000174  EFC6  F000         	goto	l15284
 14673   000178                     u18420:
 14674   000178                     
 14675                           ; BSR set to: 0
 14676   000178  0101               	movlb	1	; () banked
 14677   00017A  A528               	btfss	find_volume@stat& (0+255),2,b
 14678   00017C  EFC2  F000         	goto	u18431
 14679   000180  EFC4  F000         	goto	u18430
 14680   000184                     u18431:
 14681   000184  EFC6  F000         	goto	l15284
 14682   000188                     u18430:
 14683   000188  EF87  F000         	goto	l15256
 14684   00018C                     l15284:
 14685                           
 14686                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 14687   00018C  0E00               	movlw	0
 14688   00018E  0101               	movlb	1	; () banked
 14689   000190  6F31               	movwf	find_volume@bsect& (0+255),b
 14690   000192  0E00               	movlw	0
 14691   000194  6F32               	movwf	(find_volume@bsect+1)& (0+255),b
 14692   000196  0E00               	movlw	0
 14693   000198  6F33               	movwf	(find_volume@bsect+2)& (0+255),b
 14694   00019A  0E00               	movlw	0
 14695   00019C  6F34               	movwf	(find_volume@bsect+3)& (0+255),b
 14696   00019E                     
 14697                           ; BSR set to: 1
 14698                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 14699   00019E  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 14700   0001A2  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 14701   0001A6  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 14702   0001AA  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 14703   0001AE  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 14704   0001B2  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 14705   0001B6  EC72  F035         	call	_check_fs	;wreg free
 14706   0001BA  0101               	movlb	1	; () banked
 14707   0001BC  6F37               	movwf	find_volume@fmt& (0+255),b
 14708   0001BE                     
 14709                           ; BSR set to: 1
 14710                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 14711   0001BE  0E02               	movlw	2
 14712   0001C0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 14713   0001C2  B4D8               	btfsc	status,2,c
 14714   0001C4  EFE6  F000         	goto	u18441
 14715   0001C8  EFE8  F000         	goto	u18440
 14716   0001CC                     u18441:
 14717   0001CC  EFEA  F000         	goto	l15294
 14718   0001D0                     u18440:
 14719   0001D0  EFD7  F001         	goto	l15334
 14720   0001D4                     l15294:
 14721                           
 14722                           ; BSR set to: 1
 14723                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 14724   0001D4  0E00               	movlw	0
 14725   0001D6  6F36               	movwf	(find_volume@i+1)& (0+255),b
 14726   0001D8  0E00               	movlw	0
 14727   0001DA  6F35               	movwf	find_volume@i& (0+255),b
 14728   0001DC                     l15296:
 14729                           
 14730                           ; BSR set to: 1
 14731   0001DC  5136               	movf	(find_volume@i+1)& (0+255),w,b
 14732   0001DE  E109               	bnz	u18450
 14733   0001E0  0E04               	movlw	4
 14734   0001E2  5D35               	subwf	find_volume@i& (0+255),w,b
 14735   0001E4  A0D8               	btfss	status,0,c
 14736   0001E6  EFF7  F000         	goto	u18451
 14737   0001EA  EFF9  F000         	goto	u18450
 14738   0001EE                     u18451:
 14739   0001EE  EFFB  F000         	goto	l15300
 14740   0001F2                     u18450:
 14741   0001F2  EF6B  F001         	goto	l15314
 14742   0001F6                     l15300:
 14743                           
 14744                           ; BSR set to: 1
 14745                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 14746   0001F6  C135  F0DF         	movff	find_volume@i,??_find_volume
 14747   0001FA  C136  F0E0         	movff	find_volume@i+1,??_find_volume+1
 14748   0001FE  0100               	movlb	0	; () banked
 14749   000200  3BDF               	swapf	??_find_volume& (0+255),f,b
 14750   000202  3BE0               	swapf	(??_find_volume+1)& (0+255),f,b
 14751   000204  0EF0               	movlw	240
 14752   000206  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 14753   000208  51DF               	movf	??_find_volume& (0+255),w,b
 14754   00020A  0B0F               	andlw	15
 14755   00020C  13E0               	iorwf	(??_find_volume+1)& (0+255),f,b
 14756   00020E  0EF0               	movlw	240
 14757   000210  17DF               	andwf	??_find_volume& (0+255),f,b
 14758   000212  51DF               	movf	??_find_volume& (0+255),w,b
 14759   000214  0101               	movlb	1	; () banked
 14760   000216  2538               	addwf	find_volume@fs& (0+255),w,b
 14761   000218  0100               	movlb	0	; () banked
 14762   00021A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 14763   00021C  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 14764   00021E  0101               	movlb	1	; () banked
 14765   000220  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 14766   000222  0100               	movlb	0	; () banked
 14767   000224  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 14768   000226  0EF1               	movlw	241
 14769   000228  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 14770   00022A  0101               	movlb	1	; () banked
 14771   00022C  6F1A               	movwf	find_volume@pt& (0+255),b
 14772   00022E  0E01               	movlw	1
 14773   000230  0100               	movlb	0	; () banked
 14774   000232  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 14775   000234  0101               	movlb	1	; () banked
 14776   000236  6F1B               	movwf	(find_volume@pt+1)& (0+255),b
 14777   000238                     
 14778                           ; BSR set to: 1
 14779                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 14780   000238  EE20 F004          	lfsr	2,4
 14781   00023C  511A               	movf	find_volume@pt& (0+255),w,b
 14782   00023E  26D9               	addwf	fsr2l,f,c
 14783   000240  511B               	movf	(find_volume@pt+1)& (0+255),w,b
 14784   000242  22DA               	addwfc	fsr2h,f,c
 14785   000244  50DF               	movf	indf2,w,c
 14786   000246  A4D8               	btfss	status,2,c
 14787   000248  EF28  F001         	goto	u18461
 14788   00024C  EF2A  F001         	goto	u18460
 14789   000250                     u18461:
 14790   000250  EF34  F001         	goto	l15306
 14791   000254                     u18460:
 14792   000254                     
 14793                           ; BSR set to: 1
 14794   000254  0E00               	movlw	0
 14795   000256  6F10               	movwf	_find_volume$3099& (0+255),b
 14796   000258  0E00               	movlw	0
 14797   00025A  6F11               	movwf	(_find_volume$3099+1)& (0+255),b
 14798   00025C  0E00               	movlw	0
 14799   00025E  6F12               	movwf	(_find_volume$3099+2)& (0+255),b
 14800   000260  0E00               	movlw	0
 14801   000262  6F13               	movwf	(_find_volume$3099+3)& (0+255),b
 14802   000264  EF47  F001         	goto	l15308
 14803   000268                     l15306:
 14804                           
 14805                           ; BSR set to: 1
 14806   000268  0E08               	movlw	8
 14807   00026A  251A               	addwf	find_volume@pt& (0+255),w,b
 14808   00026C  0100               	movlb	0	; () banked
 14809   00026E  6F60               	movwf	ld_dword@ptr& (0+255),b
 14810   000270  0E00               	movlw	0
 14811   000272  0101               	movlb	1	; () banked
 14812   000274  211B               	addwfc	(find_volume@pt+1)& (0+255),w,b
 14813   000276  0100               	movlb	0	; () banked
 14814   000278  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 14815   00027A  EC91  F03E         	call	_ld_dword	;wreg free
 14816   00027E  C060  F110         	movff	?_ld_dword,_find_volume$3099
 14817   000282  C061  F111         	movff	?_ld_dword+1,_find_volume$3099+1
 14818   000286  C062  F112         	movff	?_ld_dword+2,_find_volume$3099+2
 14819   00028A  C063  F113         	movff	?_ld_dword+3,_find_volume$3099+3
 14820   00028E                     l15308:
 14821   00028E  0E00               	movlw	low find_volume@br
 14822   000290  0100               	movlb	0	; () banked
 14823   000292  6FDF               	movwf	??_find_volume& (0+255),b
 14824   000294  0E01               	movlw	high find_volume@br
 14825   000296  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 14826   000298  90D8               	bcf	status,0,c
 14827   00029A  0101               	movlb	1	; () banked
 14828   00029C  3535               	rlcf	find_volume@i& (0+255),w,b
 14829   00029E  6ED9               	movwf	fsr2l,c
 14830   0002A0  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 14831   0002A2  6EDA               	movwf	fsr2h,c
 14832   0002A4  90D8               	bcf	status,0,c
 14833   0002A6  36D9               	rlcf	fsr2l,f,c
 14834   0002A8  36DA               	rlcf	fsr2h,f,c
 14835   0002AA  0100               	movlb	0	; () banked
 14836   0002AC  51DF               	movf	??_find_volume& (0+255),w,b
 14837   0002AE  26D9               	addwf	fsr2l,f,c
 14838   0002B0  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 14839   0002B2  22DA               	addwfc	fsr2h,f,c
 14840   0002B4  0060  F443  FFDE   	movff	_find_volume$3099,postinc2
 14841   0002BA  0060  F447  FFDE   	movff	_find_volume$3099+1,postinc2
 14842   0002C0  0060  F44B  FFDE   	movff	_find_volume$3099+2,postinc2
 14843   0002C6  0060  F44F  FFDE   	movff	_find_volume$3099+3,postinc2
 14844   0002CC                     
 14845                           ; BSR set to: 0
 14846                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 14847   0002CC  0101               	movlb	1	; () banked
 14848   0002CE  4B35               	infsnz	find_volume@i& (0+255),f,b
 14849   0002D0  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 14850   0002D2  EFEE  F000         	goto	l15296
 14851   0002D6                     l15314:
 14852                           
 14853                           ; BSR set to: 1
 14854                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 14855   0002D6  0E00               	movlw	0
 14856   0002D8  6F36               	movwf	(find_volume@i+1)& (0+255),b
 14857   0002DA  0E00               	movlw	0
 14858   0002DC  6F35               	movwf	find_volume@i& (0+255),b
 14859   0002DE                     
 14860                           ; BSR set to: 1
 14861                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 14862   0002DE  5135               	movf	find_volume@i& (0+255),w,b
 14863   0002E0  1136               	iorwf	(find_volume@i+1)& (0+255),w,b
 14864   0002E2  B4D8               	btfsc	status,2,c
 14865   0002E4  EF76  F001         	goto	u18471
 14866   0002E8  EF78  F001         	goto	u18470
 14867   0002EC                     u18471:
 14868   0002EC  EF7B  F001         	goto	l15320
 14869   0002F0                     u18470:
 14870   0002F0                     
 14871                           ; BSR set to: 1
 14872   0002F0  0735               	decf	find_volume@i& (0+255),f,b
 14873   0002F2  A0D8               	btfss	status,0,c
 14874   0002F4  0736               	decf	(find_volume@i+1)& (0+255),f,b
 14875   0002F6                     l15320:
 14876                           
 14877                           ; BSR set to: 1
 14878                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 14879   0002F6  0E00               	movlw	low find_volume@br
 14880   0002F8  0100               	movlb	0	; () banked
 14881   0002FA  6FDF               	movwf	??_find_volume& (0+255),b
 14882   0002FC  0E01               	movlw	high find_volume@br
 14883   0002FE  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 14884   000300  90D8               	bcf	status,0,c
 14885   000302  0101               	movlb	1	; () banked
 14886   000304  3535               	rlcf	find_volume@i& (0+255),w,b
 14887   000306  6ED9               	movwf	fsr2l,c
 14888   000308  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 14889   00030A  6EDA               	movwf	fsr2h,c
 14890   00030C  90D8               	bcf	status,0,c
 14891   00030E  36D9               	rlcf	fsr2l,f,c
 14892   000310  36DA               	rlcf	fsr2h,f,c
 14893   000312  0100               	movlb	0	; () banked
 14894   000314  51DF               	movf	??_find_volume& (0+255),w,b
 14895   000316  26D9               	addwf	fsr2l,f,c
 14896   000318  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 14897   00031A  22DA               	addwfc	fsr2h,f,c
 14898   00031C  006F FF78  F131    	movff	postinc2,find_volume@bsect
 14899   000322  006F FF78  F132    	movff	postinc2,find_volume@bsect+1
 14900   000328  006F FF78  F133    	movff	postinc2,find_volume@bsect+2
 14901   00032E  006F FF78  F134    	movff	postinc2,find_volume@bsect+3
 14902   000334                     
 14903                           ; BSR set to: 0
 14904                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 14905   000334  0101               	movlb	1	; () banked
 14906   000336  5131               	movf	find_volume@bsect& (0+255),w,b
 14907   000338  1132               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 14908   00033A  1133               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 14909   00033C  1134               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 14910   00033E  A4D8               	btfss	status,2,c
 14911   000340  EFA4  F001         	goto	u18481
 14912   000344  EFA6  F001         	goto	u18480
 14913   000348                     u18481:
 14914   000348  EFAC  F001         	goto	l15326
 14915   00034C                     u18480:
 14916   00034C                     
 14917                           ; BSR set to: 1
 14918   00034C  0E00               	movlw	0
 14919   00034E  6F15               	movwf	(_find_volume$3100+1)& (0+255),b
 14920   000350  0E03               	movlw	3
 14921   000352  6F14               	movwf	_find_volume$3100& (0+255),b
 14922   000354  EFC0  F001         	goto	l15328
 14923   000358                     l15326:
 14924                           
 14925                           ; BSR set to: 1
 14926   000358  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 14927   00035C  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 14928   000360  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 14929   000364  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 14930   000368  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 14931   00036C  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 14932   000370  EC72  F035         	call	_check_fs	;wreg free
 14933   000374  0100               	movlb	0	; () banked
 14934   000376  6FDF               	movwf	??_find_volume& (0+255),b
 14935   000378  51DF               	movf	??_find_volume& (0+255),w,b
 14936   00037A  0101               	movlb	1	; () banked
 14937   00037C  6F14               	movwf	_find_volume$3100& (0+255),b
 14938   00037E  6B15               	clrf	(_find_volume$3100+1)& (0+255),b
 14939   000380                     l15328:
 14940                           
 14941                           ; BSR set to: 1
 14942                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 14943   000380  C114  F137         	movff	_find_volume$3100,find_volume@fmt
 14944   000384                     
 14945                           ; BSR set to: 1
 14946   000384  0E01               	movlw	1
 14947   000386  6537               	cpfsgt	find_volume@fmt& (0+255),b
 14948   000388  EFC8  F001         	goto	u18491
 14949   00038C  EFCA  F001         	goto	u18490
 14950   000390                     u18491:
 14951   000390  EFD7  F001         	goto	l15334
 14952   000394                     u18490:
 14953   000394                     
 14954                           ; BSR set to: 1
 14955   000394  4B35               	infsnz	find_volume@i& (0+255),f,b
 14956   000396  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 14957   000398  5136               	movf	(find_volume@i+1)& (0+255),w,b
 14958   00039A  E109               	bnz	u18500
 14959   00039C  0E04               	movlw	4
 14960   00039E  5D35               	subwf	find_volume@i& (0+255),w,b
 14961   0003A0  A0D8               	btfss	status,0,c
 14962   0003A2  EFD5  F001         	goto	u18501
 14963   0003A6  EFD7  F001         	goto	u18500
 14964   0003AA                     u18501:
 14965   0003AA  EF7B  F001         	goto	l15320
 14966   0003AE                     u18500:
 14967   0003AE                     l15334:
 14968                           
 14969                           ; BSR set to: 1
 14970                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 14971   0003AE  0E04               	movlw	4
 14972   0003B0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 14973   0003B2  A4D8               	btfss	status,2,c
 14974   0003B4  EFDE  F001         	goto	u18511
 14975   0003B8  EFE0  F001         	goto	u18510
 14976   0003BC                     u18511:
 14977   0003BC  EFE3  F001         	goto	l15340
 14978   0003C0                     u18510:
 14979   0003C0                     
 14980                           ; BSR set to: 1
 14981   0003C0  0E01               	movlw	1
 14982   0003C2  EF68  F007         	goto	l1211
 14983   0003C6                     l15340:
 14984                           
 14985                           ; BSR set to: 1
 14986                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 14987   0003C6  0E01               	movlw	1
 14988   0003C8  6537               	cpfsgt	find_volume@fmt& (0+255),b
 14989   0003CA  EFE9  F001         	goto	u18521
 14990   0003CE  EFEB  F001         	goto	u18520
 14991   0003D2                     u18521:
 14992   0003D2  EFEE  F001         	goto	l15346
 14993   0003D6                     u18520:
 14994   0003D6                     l15342:
 14995   0003D6  0E0D               	movlw	13
 14996   0003D8  EF68  F007         	goto	l1211
 14997   0003DC                     l15346:
 14998                           
 14999                           ; BSR set to: 1
 15000                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 15001   0003DC  0E3E               	movlw	62
 15002   0003DE  2538               	addwf	find_volume@fs& (0+255),w,b
 15003   0003E0  0100               	movlb	0	; () banked
 15004   0003E2  6F60               	movwf	ld_word@ptr& (0+255),b
 15005   0003E4  0E00               	movlw	0
 15006   0003E6  0101               	movlb	1	; () banked
 15007   0003E8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15008   0003EA  0100               	movlb	0	; () banked
 15009   0003EC  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15010   0003EE  ECB5  F044         	call	_ld_word	;wreg free
 15011   0003F2  0E02               	movlw	2
 15012   0003F4  0100               	movlb	0	; () banked
 15013   0003F6  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 15014   0003F8  1160               	iorwf	?_ld_word& (0+255),w,b
 15015   0003FA  B4D8               	btfsc	status,2,c
 15016   0003FC  EF02  F002         	goto	u18531
 15017   000400  EF04  F002         	goto	u18530
 15018   000404                     u18531:
 15019   000404  EF06  F002         	goto	l15352
 15020   000408                     u18530:
 15021   000408  EFEB  F001         	goto	l15342
 15022   00040C                     l15352:
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 15026   00040C  0E49               	movlw	73
 15027   00040E  0101               	movlb	1	; () banked
 15028   000410  2538               	addwf	find_volume@fs& (0+255),w,b
 15029   000412  0100               	movlb	0	; () banked
 15030   000414  6F60               	movwf	ld_word@ptr& (0+255),b
 15031   000416  0E00               	movlw	0
 15032   000418  0101               	movlb	1	; () banked
 15033   00041A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15034   00041C  0100               	movlb	0	; () banked
 15035   00041E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15036   000420  ECB5  F044         	call	_ld_word	;wreg free
 15037   000424  0100               	movlb	0	; () banked
 15038   000426  C060  F12D         	movff	?_ld_word,find_volume@fasize
 15039   00042A  C061  F12E         	movff	?_ld_word+1,find_volume@fasize+1
 15040   00042E  0101               	movlb	1	; () banked
 15041   000430  6B2F               	clrf	(find_volume@fasize+2)& (0+255),b
 15042   000432  6B30               	clrf	(find_volume@fasize+3)& (0+255),b
 15043   000434                     
 15044                           ; BSR set to: 1
 15045                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 15046   000434  512D               	movf	find_volume@fasize& (0+255),w,b
 15047   000436  112E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 15048   000438  112F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 15049   00043A  1130               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 15050   00043C  A4D8               	btfss	status,2,c
 15051   00043E  EF23  F002         	goto	u18541
 15052   000442  EF25  F002         	goto	u18540
 15053   000446                     u18541:
 15054   000446  EF38  F002         	goto	l15358
 15055   00044A                     u18540:
 15056   00044A                     
 15057                           ; BSR set to: 1
 15058   00044A  0E57               	movlw	87
 15059   00044C  2538               	addwf	find_volume@fs& (0+255),w,b
 15060   00044E  0100               	movlb	0	; () banked
 15061   000450  6F60               	movwf	ld_dword@ptr& (0+255),b
 15062   000452  0E00               	movlw	0
 15063   000454  0101               	movlb	1	; () banked
 15064   000456  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15065   000458  0100               	movlb	0	; () banked
 15066   00045A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 15067   00045C  EC91  F03E         	call	_ld_dword	;wreg free
 15068   000460  C060  F12D         	movff	?_ld_dword,find_volume@fasize
 15069   000464  C061  F12E         	movff	?_ld_dword+1,find_volume@fasize+1
 15070   000468  C062  F12F         	movff	?_ld_dword+2,find_volume@fasize+2
 15071   00046C  C063  F130         	movff	?_ld_dword+3,find_volume@fasize+3
 15072   000470                     l15358:
 15073                           
 15074                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 15075   000470  0101               	movlb	1	; () banked
 15076   000472  EE20 F01B          	lfsr	2,27
 15077   000476  5138               	movf	find_volume@fs& (0+255),w,b
 15078   000478  26D9               	addwf	fsr2l,f,c
 15079   00047A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15080   00047C  22DA               	addwfc	fsr2h,f,c
 15081   00047E  0060  F4B7  FFDE   	movff	find_volume@fasize,postinc2
 15082   000484  0060  F4BB  FFDE   	movff	find_volume@fasize+1,postinc2
 15083   00048A  0060  F4BF  FFDE   	movff	find_volume@fasize+2,postinc2
 15084   000490  0060  F4C3  FFDE   	movff	find_volume@fasize+3,postinc2
 15085   000496                     
 15086                           ; BSR set to: 1
 15087                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 15088   000496  EE20 F043          	lfsr	2,67
 15089   00049A  5138               	movf	find_volume@fs& (0+255),w,b
 15090   00049C  26D9               	addwf	fsr2l,f,c
 15091   00049E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15092   0004A0  22DA               	addwfc	fsr2h,f,c
 15093   0004A2  EE10 F002          	lfsr	1,2
 15094   0004A6  5138               	movf	find_volume@fs& (0+255),w,b
 15095   0004A8  26E1               	addwf	fsr1l,f,c
 15096   0004AA  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15097   0004AC  22E2               	addwfc	fsr1h,f,c
 15098   0004AE  006F FF7F FFE7     	movff	indf2,indf1
 15099   0004B4                     
 15100                           ; BSR set to: 1
 15101                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 15102   0004B4  EE20 F002          	lfsr	2,2
 15103   0004B8  5138               	movf	find_volume@fs& (0+255),w,b
 15104   0004BA  26D9               	addwf	fsr2l,f,c
 15105   0004BC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15106   0004BE  22DA               	addwfc	fsr2h,f,c
 15107   0004C0  04DE               	decf	postinc2,w,c
 15108   0004C2  B4D8               	btfsc	status,2,c
 15109   0004C4  EF66  F002         	goto	u18551
 15110   0004C8  EF68  F002         	goto	u18550
 15111   0004CC                     u18551:
 15112   0004CC  EF79  F002         	goto	l15370
 15113   0004D0                     u18550:
 15114   0004D0                     
 15115                           ; BSR set to: 1
 15116   0004D0  EE20 F002          	lfsr	2,2
 15117   0004D4  5138               	movf	find_volume@fs& (0+255),w,b
 15118   0004D6  26D9               	addwf	fsr2l,f,c
 15119   0004D8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15120   0004DA  22DA               	addwfc	fsr2h,f,c
 15121   0004DC  0E02               	movlw	2
 15122   0004DE  18DE               	xorwf	postinc2,w,c
 15123   0004E0  B4D8               	btfsc	status,2,c
 15124   0004E2  EF75  F002         	goto	u18561
 15125   0004E6  EF77  F002         	goto	u18560
 15126   0004EA                     u18561:
 15127   0004EA  EF79  F002         	goto	l15370
 15128   0004EE                     u18560:
 15129   0004EE  EFEB  F001         	goto	l15342
 15130   0004F2                     l15370:
 15131                           
 15132                           ; BSR set to: 1
 15133                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 15134   0004F2  C12D  F060         	movff	find_volume@fasize,___lmul@multiplier
 15135   0004F6  C12E  F061         	movff	find_volume@fasize+1,___lmul@multiplier+1
 15136   0004FA  C12F  F062         	movff	find_volume@fasize+2,___lmul@multiplier+2
 15137   0004FE  C130  F063         	movff	find_volume@fasize+3,___lmul@multiplier+3
 15138   000502  EE20 F002          	lfsr	2,2
 15139   000506  5138               	movf	find_volume@fs& (0+255),w,b
 15140   000508  26D9               	addwf	fsr2l,f,c
 15141   00050A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15142   00050C  22DA               	addwfc	fsr2h,f,c
 15143   00050E  50DF               	movf	indf2,w,c
 15144   000510  0100               	movlb	0	; () banked
 15145   000512  6FDF               	movwf	??_find_volume& (0+255),b
 15146   000514  51DF               	movf	??_find_volume& (0+255),w,b
 15147   000516  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15148   000518  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15149   00051A  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15150   00051C  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15151   00051E  EC07  F042         	call	___lmul	;wreg free
 15152   000522  C060  F12D         	movff	?___lmul,find_volume@fasize
 15153   000526  C061  F12E         	movff	?___lmul+1,find_volume@fasize+1
 15154   00052A  C062  F12F         	movff	?___lmul+2,find_volume@fasize+2
 15155   00052E  C063  F130         	movff	?___lmul+3,find_volume@fasize+3
 15156   000532                     
 15157                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 15158   000532  0101               	movlb	1	; () banked
 15159   000534  EE20 F040          	lfsr	2,64
 15160   000538  5138               	movf	find_volume@fs& (0+255),w,b
 15161   00053A  26D9               	addwf	fsr2l,f,c
 15162   00053C  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15163   00053E  22DA               	addwfc	fsr2h,f,c
 15164   000540  50DF               	movf	indf2,w,c
 15165   000542  0100               	movlb	0	; () banked
 15166   000544  6FDF               	movwf	??_find_volume& (0+255),b
 15167   000546  6BE0               	clrf	(??_find_volume+1)& (0+255),b
 15168   000548  0101               	movlb	1	; () banked
 15169   00054A  EE20 F009          	lfsr	2,9
 15170   00054E  5138               	movf	find_volume@fs& (0+255),w,b
 15171   000550  26D9               	addwf	fsr2l,f,c
 15172   000552  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15173   000554  22DA               	addwfc	fsr2h,f,c
 15174   000556  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 15175   00055C  0060  F383  FFDD   	movff	??_find_volume+1,postdec2
 15176   000562                     
 15177                           ; BSR set to: 1
 15178                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 15179   000562  EE20 F009          	lfsr	2,9
 15180   000566  5138               	movf	find_volume@fs& (0+255),w,b
 15181   000568  26D9               	addwf	fsr2l,f,c
 15182   00056A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15183   00056C  22DA               	addwfc	fsr2h,f,c
 15184   00056E  50DE               	movf	postinc2,w,c
 15185   000570  10DE               	iorwf	postinc2,w,c
 15186   000572  B4D8               	btfsc	status,2,c
 15187   000574  EFBE  F002         	goto	u18571
 15188   000578  EFC0  F002         	goto	u18570
 15189   00057C                     u18571:
 15190   00057C  EFEB  F001         	goto	l15342
 15191   000580                     u18570:
 15192   000580                     
 15193                           ; BSR set to: 1
 15194   000580  EE20 F009          	lfsr	2,9
 15195   000584  5138               	movf	find_volume@fs& (0+255),w,b
 15196   000586  26D9               	addwf	fsr2l,f,c
 15197   000588  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15198   00058A  22DA               	addwfc	fsr2h,f,c
 15199   00058C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15200   000592  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 15201   000598  EE20 F009          	lfsr	2,9
 15202   00059C  5138               	movf	find_volume@fs& (0+255),w,b
 15203   00059E  26D9               	addwf	fsr2l,f,c
 15204   0005A0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15205   0005A2  22DA               	addwfc	fsr2h,f,c
 15206   0005A4  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 15207   0005AA  006F FF74  F0E2    	movff	postdec2,??_find_volume+3
 15208   0005B0  0EFF               	movlw	255
 15209   0005B2  0100               	movlb	0	; () banked
 15210   0005B4  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 15211   0005B6  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 15212   0005B8  0EFF               	movlw	255
 15213   0005BA  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 15214   0005BC  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 15215   0005BE  51DF               	movf	??_find_volume& (0+255),w,b
 15216   0005C0  15E3               	andwf	(??_find_volume+4)& (0+255),w,b
 15217   0005C2  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 15218   0005C4  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 15219   0005C6  15E4               	andwf	(??_find_volume+5)& (0+255),w,b
 15220   0005C8  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 15221   0005CA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 15222   0005CC  11E6               	iorwf	(??_find_volume+7)& (0+255),w,b
 15223   0005CE  B4D8               	btfsc	status,2,c
 15224   0005D0  EFEC  F002         	goto	u18581
 15225   0005D4  EFEE  F002         	goto	u18580
 15226   0005D8                     u18581:
 15227   0005D8  EFF0  F002         	goto	l15382
 15228   0005DC                     u18580:
 15229   0005DC  EFEB  F001         	goto	l15342
 15230   0005E0                     l15382:
 15231                           
 15232                           ; BSR set to: 0
 15233                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 15234   0005E0  0E44               	movlw	68
 15235   0005E2  0101               	movlb	1	; () banked
 15236   0005E4  2538               	addwf	find_volume@fs& (0+255),w,b
 15237   0005E6  0100               	movlb	0	; () banked
 15238   0005E8  6F60               	movwf	ld_word@ptr& (0+255),b
 15239   0005EA  0E00               	movlw	0
 15240   0005EC  0101               	movlb	1	; () banked
 15241   0005EE  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15242   0005F0  0100               	movlb	0	; () banked
 15243   0005F2  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15244   0005F4  ECB5  F044         	call	_ld_word	;wreg free
 15245   0005F8  0101               	movlb	1	; () banked
 15246   0005FA  EE20 F007          	lfsr	2,7
 15247   0005FE  5138               	movf	find_volume@fs& (0+255),w,b
 15248   000600  26D9               	addwf	fsr2l,f,c
 15249   000602  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15250   000604  22DA               	addwfc	fsr2h,f,c
 15251   000606  0100               	movlb	0	; () banked
 15252   000608  0060  F183  FFDE   	movff	?_ld_word,postinc2
 15253   00060E  0060  F187  FFDD   	movff	?_ld_word+1,postdec2
 15254   000614                     
 15255                           ; BSR set to: 0
 15256                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 15257   000614  0101               	movlb	1	; () banked
 15258   000616  EE20 F007          	lfsr	2,7
 15259   00061A  5138               	movf	find_volume@fs& (0+255),w,b
 15260   00061C  26D9               	addwf	fsr2l,f,c
 15261   00061E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15262   000620  22DA               	addwfc	fsr2h,f,c
 15263   000622  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15264   000628  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 15265   00062E  0E0F               	movlw	15
 15266   000630  0100               	movlb	0	; () banked
 15267   000632  17DF               	andwf	??_find_volume& (0+255),f,b
 15268   000634  0E00               	movlw	0
 15269   000636  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 15270   000638  51DF               	movf	??_find_volume& (0+255),w,b
 15271   00063A  11E0               	iorwf	(??_find_volume+1)& (0+255),w,b
 15272   00063C  B4D8               	btfsc	status,2,c
 15273   00063E  EF23  F003         	goto	u18591
 15274   000642  EF25  F003         	goto	u18590
 15275   000646                     u18591:
 15276   000646  EF27  F003         	goto	l15390
 15277   00064A                     u18590:
 15278   00064A  EFEB  F001         	goto	l15342
 15279   00064E                     l15390:
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 15283   00064E  0E46               	movlw	70
 15284   000650  0101               	movlb	1	; () banked
 15285   000652  2538               	addwf	find_volume@fs& (0+255),w,b
 15286   000654  0100               	movlb	0	; () banked
 15287   000656  6F60               	movwf	ld_word@ptr& (0+255),b
 15288   000658  0E00               	movlw	0
 15289   00065A  0101               	movlb	1	; () banked
 15290   00065C  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15291   00065E  0100               	movlb	0	; () banked
 15292   000660  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15293   000662  ECB5  F044         	call	_ld_word	;wreg free
 15294   000666  0100               	movlb	0	; () banked
 15295   000668  C060  F124         	movff	?_ld_word,find_volume@tsect
 15296   00066C  C061  F125         	movff	?_ld_word+1,find_volume@tsect+1
 15297   000670  0101               	movlb	1	; () banked
 15298   000672  6B26               	clrf	(find_volume@tsect+2)& (0+255),b
 15299   000674  6B27               	clrf	(find_volume@tsect+3)& (0+255),b
 15300   000676                     
 15301                           ; BSR set to: 1
 15302                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 15303   000676  5124               	movf	find_volume@tsect& (0+255),w,b
 15304   000678  1125               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 15305   00067A  1126               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 15306   00067C  1127               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 15307   00067E  A4D8               	btfss	status,2,c
 15308   000680  EF44  F003         	goto	u18601
 15309   000684  EF46  F003         	goto	u18600
 15310   000688                     u18601:
 15311   000688  EF59  F003         	goto	l1245
 15312   00068C                     u18600:
 15313   00068C                     
 15314                           ; BSR set to: 1
 15315   00068C  0E53               	movlw	83
 15316   00068E  2538               	addwf	find_volume@fs& (0+255),w,b
 15317   000690  0100               	movlb	0	; () banked
 15318   000692  6F60               	movwf	ld_dword@ptr& (0+255),b
 15319   000694  0E00               	movlw	0
 15320   000696  0101               	movlb	1	; () banked
 15321   000698  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15322   00069A  0100               	movlb	0	; () banked
 15323   00069C  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 15324   00069E  EC91  F03E         	call	_ld_dword	;wreg free
 15325   0006A2  C060  F124         	movff	?_ld_dword,find_volume@tsect
 15326   0006A6  C061  F125         	movff	?_ld_dword+1,find_volume@tsect+1
 15327   0006AA  C062  F126         	movff	?_ld_dword+2,find_volume@tsect+2
 15328   0006AE  C063  F127         	movff	?_ld_dword+3,find_volume@tsect+3
 15329   0006B2                     l1245:
 15330                           
 15331                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 15332   0006B2  0E41               	movlw	65
 15333   0006B4  0101               	movlb	1	; () banked
 15334   0006B6  2538               	addwf	find_volume@fs& (0+255),w,b
 15335   0006B8  0100               	movlb	0	; () banked
 15336   0006BA  6F60               	movwf	ld_word@ptr& (0+255),b
 15337   0006BC  0E00               	movlw	0
 15338   0006BE  0101               	movlb	1	; () banked
 15339   0006C0  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15340   0006C2  0100               	movlb	0	; () banked
 15341   0006C4  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15342   0006C6  ECB5  F044         	call	_ld_word	;wreg free
 15343   0006CA  C060  F122         	movff	?_ld_word,find_volume@nrsv
 15344   0006CE  C061  F123         	movff	?_ld_word+1,find_volume@nrsv+1
 15345   0006D2                     
 15346                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 15347   0006D2  0101               	movlb	1	; () banked
 15348   0006D4  5122               	movf	find_volume@nrsv& (0+255),w,b
 15349   0006D6  1123               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 15350   0006D8  A4D8               	btfss	status,2,c
 15351   0006DA  EF71  F003         	goto	u18611
 15352   0006DE  EF73  F003         	goto	u18610
 15353   0006E2                     u18611:
 15354   0006E2  EF75  F003         	goto	l15402
 15355   0006E6                     u18610:
 15356   0006E6  EFEB  F001         	goto	l15342
 15357   0006EA                     l15402:
 15358                           
 15359                           ; BSR set to: 1
 15360                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 15361   0006EA  EE20 F007          	lfsr	2,7
 15362   0006EE  5138               	movf	find_volume@fs& (0+255),w,b
 15363   0006F0  26D9               	addwf	fsr2l,f,c
 15364   0006F2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15365   0006F4  22DA               	addwfc	fsr2h,f,c
 15366   0006F6  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15367   0006FC  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 15368   000702  0E04               	movlw	4
 15369   000704  0100               	movlb	0	; () banked
 15370   000706  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15371   000708                     u18625:
 15372   000708  90D8               	bcf	status,0,c
 15373   00070A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 15374   00070C  33DF               	rrcf	??_find_volume& (0+255),f,b
 15375   00070E  2FE1               	decfsz	(??_find_volume+2)& (0+255),f,b
 15376   000710  EF84  F003         	goto	u18625
 15377   000714  0101               	movlb	1	; () banked
 15378   000716  5122               	movf	find_volume@nrsv& (0+255),w,b
 15379   000718  0100               	movlb	0	; () banked
 15380   00071A  25DF               	addwf	??_find_volume& (0+255),w,b
 15381   00071C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15382   00071E  0101               	movlb	1	; () banked
 15383   000720  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 15384   000722  0100               	movlb	0	; () banked
 15385   000724  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 15386   000726  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 15387   000728  6BE4               	clrf	(??_find_volume+5)& (0+255),b
 15388   00072A  B0D8               	btfsc	status,0,c
 15389   00072C  2BE4               	incf	(??_find_volume+5)& (0+255),f,b
 15390   00072E  6BE5               	clrf	(??_find_volume+6)& (0+255),b
 15391   000730  0101               	movlb	1	; () banked
 15392   000732  512D               	movf	find_volume@fasize& (0+255),w,b
 15393   000734  0100               	movlb	0	; () banked
 15394   000736  25E2               	addwf	(??_find_volume+3)& (0+255),w,b
 15395   000738  0101               	movlb	1	; () banked
 15396   00073A  6F1C               	movwf	find_volume@sysect& (0+255),b
 15397   00073C  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 15398   00073E  0100               	movlb	0	; () banked
 15399   000740  21E3               	addwfc	(??_find_volume+4)& (0+255),w,b
 15400   000742  0101               	movlb	1	; () banked
 15401   000744  6F1D               	movwf	(find_volume@sysect+1)& (0+255),b
 15402   000746  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 15403   000748  0100               	movlb	0	; () banked
 15404   00074A  21E4               	addwfc	(??_find_volume+5)& (0+255),w,b
 15405   00074C  0101               	movlb	1	; () banked
 15406   00074E  6F1E               	movwf	(find_volume@sysect+2)& (0+255),b
 15407   000750  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 15408   000752  0100               	movlb	0	; () banked
 15409   000754  21E5               	addwfc	(??_find_volume+6)& (0+255),w,b
 15410   000756  0101               	movlb	1	; () banked
 15411   000758  6F1F               	movwf	(find_volume@sysect+3)& (0+255),b
 15412   00075A                     
 15413                           ; BSR set to: 1
 15414                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 15415   00075A  511C               	movf	find_volume@sysect& (0+255),w,b
 15416   00075C  5D24               	subwf	find_volume@tsect& (0+255),w,b
 15417   00075E  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 15418   000760  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 15419   000762  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 15420   000764  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 15421   000766  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 15422   000768  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 15423   00076A  B0D8               	btfsc	status,0,c
 15424   00076C  EFBA  F003         	goto	u18631
 15425   000770  EFBC  F003         	goto	u18630
 15426   000774                     u18631:
 15427   000774  EFBE  F003         	goto	l15410
 15428   000778                     u18630:
 15429   000778  EFEB  F001         	goto	l15342
 15430   00077C                     l15410:
 15431                           
 15432                           ; BSR set to: 1
 15433                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 15434   00077C  511C               	movf	find_volume@sysect& (0+255),w,b
 15435   00077E  5D24               	subwf	find_volume@tsect& (0+255),w,b
 15436   000780  0100               	movlb	0	; () banked
 15437   000782  6F60               	movwf	___lldiv@dividend& (0+255),b
 15438   000784  0101               	movlb	1	; () banked
 15439   000786  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 15440   000788  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 15441   00078A  0100               	movlb	0	; () banked
 15442   00078C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 15443   00078E  0101               	movlb	1	; () banked
 15444   000790  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 15445   000792  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 15446   000794  0100               	movlb	0	; () banked
 15447   000796  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 15448   000798  0101               	movlb	1	; () banked
 15449   00079A  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 15450   00079C  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 15451   00079E  0100               	movlb	0	; () banked
 15452   0007A0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 15453   0007A2  0101               	movlb	1	; () banked
 15454   0007A4  EE20 F009          	lfsr	2,9
 15455   0007A8  5138               	movf	find_volume@fs& (0+255),w,b
 15456   0007AA  26D9               	addwf	fsr2l,f,c
 15457   0007AC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15458   0007AE  22DA               	addwfc	fsr2h,f,c
 15459   0007B0  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15460   0007B6  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 15461   0007BC  C0DF  F064         	movff	??_find_volume,___lldiv@divisor
 15462   0007C0  C0E0  F065         	movff	??_find_volume+1,___lldiv@divisor+1
 15463   0007C4  0100               	movlb	0	; () banked
 15464   0007C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 15465   0007C8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 15466   0007CA  EC43  F03F         	call	___lldiv	;wreg free
 15467   0007CE  C060  F129         	movff	?___lldiv,find_volume@nclst
 15468   0007D2  C061  F12A         	movff	?___lldiv+1,find_volume@nclst+1
 15469   0007D6  C062  F12B         	movff	?___lldiv+2,find_volume@nclst+2
 15470   0007DA  C063  F12C         	movff	?___lldiv+3,find_volume@nclst+3
 15471   0007DE                     
 15472                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 15473   0007DE  0101               	movlb	1	; () banked
 15474   0007E0  5129               	movf	find_volume@nclst& (0+255),w,b
 15475   0007E2  112A               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 15476   0007E4  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 15477   0007E6  112C               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 15478   0007E8  A4D8               	btfss	status,2,c
 15479   0007EA  EFF9  F003         	goto	u18641
 15480   0007EE  EFFB  F003         	goto	u18640
 15481   0007F2                     u18641:
 15482   0007F2  EFFD  F003         	goto	l15418
 15483   0007F6                     u18640:
 15484   0007F6  EFEB  F001         	goto	l15342
 15485   0007FA                     l15418:
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 15489   0007FA  0E00               	movlw	0
 15490   0007FC  6F37               	movwf	find_volume@fmt& (0+255),b
 15491   0007FE                     
 15492                           ; BSR set to: 1
 15493                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 15494   0007FE  0EF6               	movlw	246
 15495   000800  5D29               	subwf	find_volume@nclst& (0+255),w,b
 15496   000802  0EFF               	movlw	255
 15497   000804  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 15498   000806  0EFF               	movlw	255
 15499   000808  592B               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 15500   00080A  0E0F               	movlw	15
 15501   00080C  592C               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 15502   00080E  B0D8               	btfsc	status,0,c
 15503   000810  EF0C  F004         	goto	u18651
 15504   000814  EF0E  F004         	goto	u18650
 15505   000818                     u18651:
 15506   000818  EF10  F004         	goto	l15424
 15507   00081C                     u18650:
 15508   00081C                     
 15509                           ; BSR set to: 1
 15510   00081C  0E03               	movlw	3
 15511   00081E  6F37               	movwf	find_volume@fmt& (0+255),b
 15512   000820                     l15424:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 15516   000820  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 15517   000822  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 15518   000824  E109               	bnz	u18661
 15519   000826  0EF6               	movlw	246
 15520   000828  5D29               	subwf	find_volume@nclst& (0+255),w,b
 15521   00082A  0EFF               	movlw	255
 15522   00082C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 15523   00082E  B0D8               	btfsc	status,0,c
 15524   000830  EF1C  F004         	goto	u18661
 15525   000834  EF1E  F004         	goto	u18660
 15526   000838                     u18661:
 15527   000838  EF20  F004         	goto	l15428
 15528   00083C                     u18660:
 15529   00083C                     
 15530                           ; BSR set to: 1
 15531   00083C  0E02               	movlw	2
 15532   00083E  6F37               	movwf	find_volume@fmt& (0+255),b
 15533   000840                     l15428:
 15534                           
 15535                           ; BSR set to: 1
 15536                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 15537   000840  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 15538   000842  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 15539   000844  E109               	bnz	u18671
 15540   000846  0EF6               	movlw	246
 15541   000848  5D29               	subwf	find_volume@nclst& (0+255),w,b
 15542   00084A  0E0F               	movlw	15
 15543   00084C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 15544   00084E  B0D8               	btfsc	status,0,c
 15545   000850  EF2C  F004         	goto	u18671
 15546   000854  EF2E  F004         	goto	u18670
 15547   000858                     u18671:
 15548   000858  EF30  F004         	goto	l1251
 15549   00085C                     u18670:
 15550   00085C                     
 15551                           ; BSR set to: 1
 15552   00085C  0E01               	movlw	1
 15553   00085E  6F37               	movwf	find_volume@fmt& (0+255),b
 15554   000860                     l1251:
 15555                           
 15556                           ; BSR set to: 1
 15557                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 15558   000860  5137               	movf	find_volume@fmt& (0+255),w,b
 15559   000862  A4D8               	btfss	status,2,c
 15560   000864  EF36  F004         	goto	u18681
 15561   000868  EF38  F004         	goto	u18680
 15562   00086C                     u18681:
 15563   00086C  EF3A  F004         	goto	l15436
 15564   000870                     u18680:
 15565   000870  EFEB  F001         	goto	l15342
 15566   000874                     l15436:
 15567                           
 15568                           ; BSR set to: 1
 15569                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 15570   000874  0E02               	movlw	2
 15571   000876  2529               	addwf	find_volume@nclst& (0+255),w,b
 15572   000878  0100               	movlb	0	; () banked
 15573   00087A  6FDF               	movwf	??_find_volume& (0+255),b
 15574   00087C  0E00               	movlw	0
 15575   00087E  0101               	movlb	1	; () banked
 15576   000880  212A               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 15577   000882  0100               	movlb	0	; () banked
 15578   000884  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 15579   000886  0E00               	movlw	0
 15580   000888  0101               	movlb	1	; () banked
 15581   00088A  212B               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 15582   00088C  0100               	movlb	0	; () banked
 15583   00088E  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15584   000890  0E00               	movlw	0
 15585   000892  0101               	movlb	1	; () banked
 15586   000894  212C               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 15587   000896  0100               	movlb	0	; () banked
 15588   000898  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15589   00089A  0101               	movlb	1	; () banked
 15590   00089C  EE20 F017          	lfsr	2,23
 15591   0008A0  5138               	movf	find_volume@fs& (0+255),w,b
 15592   0008A2  26D9               	addwf	fsr2l,f,c
 15593   0008A4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15594   0008A6  22DA               	addwfc	fsr2h,f,c
 15595   0008A8  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 15596   0008AE  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 15597   0008B4  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 15598   0008BA  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 15599                           
 15600                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 15601   0008C0  EE20 F01F          	lfsr	2,31
 15602   0008C4  5138               	movf	find_volume@fs& (0+255),w,b
 15603   0008C6  26D9               	addwf	fsr2l,f,c
 15604   0008C8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15605   0008CA  22DA               	addwfc	fsr2h,f,c
 15606   0008CC  0060  F4C7  FFDE   	movff	find_volume@bsect,postinc2
 15607   0008D2  0060  F4CB  FFDE   	movff	find_volume@bsect+1,postinc2
 15608   0008D8  0060  F4CF  FFDE   	movff	find_volume@bsect+2,postinc2
 15609   0008DE  0060  F4D3  FFDE   	movff	find_volume@bsect+3,postinc2
 15610                           
 15611                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 15612   0008E4  5122               	movf	find_volume@nrsv& (0+255),w,b
 15613   0008E6  2531               	addwf	find_volume@bsect& (0+255),w,b
 15614   0008E8  0100               	movlb	0	; () banked
 15615   0008EA  6FDF               	movwf	??_find_volume& (0+255),b
 15616   0008EC  0101               	movlb	1	; () banked
 15617   0008EE  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 15618   0008F0  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 15619   0008F2  0100               	movlb	0	; () banked
 15620   0008F4  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 15621   0008F6  0E00               	movlw	0
 15622   0008F8  0101               	movlb	1	; () banked
 15623   0008FA  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 15624   0008FC  0100               	movlb	0	; () banked
 15625   0008FE  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15626   000900  0E00               	movlw	0
 15627   000902  0101               	movlb	1	; () banked
 15628   000904  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 15629   000906  0100               	movlb	0	; () banked
 15630   000908  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15631   00090A  0101               	movlb	1	; () banked
 15632   00090C  EE20 F023          	lfsr	2,35
 15633   000910  5138               	movf	find_volume@fs& (0+255),w,b
 15634   000912  26D9               	addwf	fsr2l,f,c
 15635   000914  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15636   000916  22DA               	addwfc	fsr2h,f,c
 15637   000918  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 15638   00091E  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 15639   000924  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 15640   00092A  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 15641                           
 15642                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 15643   000930  511C               	movf	find_volume@sysect& (0+255),w,b
 15644   000932  2531               	addwf	find_volume@bsect& (0+255),w,b
 15645   000934  0100               	movlb	0	; () banked
 15646   000936  6FDF               	movwf	??_find_volume& (0+255),b
 15647   000938  0101               	movlb	1	; () banked
 15648   00093A  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 15649   00093C  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 15650   00093E  0100               	movlb	0	; () banked
 15651   000940  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 15652   000942  0101               	movlb	1	; () banked
 15653   000944  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 15654   000946  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 15655   000948  0100               	movlb	0	; () banked
 15656   00094A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15657   00094C  0101               	movlb	1	; () banked
 15658   00094E  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 15659   000950  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 15660   000952  0100               	movlb	0	; () banked
 15661   000954  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15662   000956  0101               	movlb	1	; () banked
 15663   000958  EE20 F02B          	lfsr	2,43
 15664   00095C  5138               	movf	find_volume@fs& (0+255),w,b
 15665   00095E  26D9               	addwf	fsr2l,f,c
 15666   000960  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15667   000962  22DA               	addwfc	fsr2h,f,c
 15668   000964  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 15669   00096A  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 15670   000970  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 15671   000976  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 15672   00097C                     
 15673                           ; BSR set to: 1
 15674                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 15675   00097C  0E03               	movlw	3
 15676   00097E  1937               	xorwf	find_volume@fmt& (0+255),w,b
 15677   000980  A4D8               	btfss	status,2,c
 15678   000982  EFC5  F004         	goto	u18691
 15679   000986  EFC7  F004         	goto	u18690
 15680   00098A                     u18691:
 15681   00098A  EF36  F005         	goto	l15456
 15682   00098E                     u18690:
 15683   00098E                     
 15684                           ; BSR set to: 1
 15685                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 15686   00098E  0E5D               	movlw	93
 15687   000990  2538               	addwf	find_volume@fs& (0+255),w,b
 15688   000992  0100               	movlb	0	; () banked
 15689   000994  6F60               	movwf	ld_word@ptr& (0+255),b
 15690   000996  0E00               	movlw	0
 15691   000998  0101               	movlb	1	; () banked
 15692   00099A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15693   00099C  0100               	movlb	0	; () banked
 15694   00099E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 15695   0009A0  ECB5  F044         	call	_ld_word	;wreg free
 15696   0009A4  0100               	movlb	0	; () banked
 15697   0009A6  5160               	movf	?_ld_word& (0+255),w,b
 15698   0009A8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 15699   0009AA  B4D8               	btfsc	status,2,c
 15700   0009AC  EFDA  F004         	goto	u18701
 15701   0009B0  EFDC  F004         	goto	u18700
 15702   0009B4                     u18701:
 15703   0009B4  EFDE  F004         	goto	l15446
 15704   0009B8                     u18700:
 15705   0009B8  EFEB  F001         	goto	l15342
 15706   0009BC                     l15446:
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 15710   0009BC  0101               	movlb	1	; () banked
 15711   0009BE  EE20 F007          	lfsr	2,7
 15712   0009C2  5138               	movf	find_volume@fs& (0+255),w,b
 15713   0009C4  26D9               	addwf	fsr2l,f,c
 15714   0009C6  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15715   0009C8  22DA               	addwfc	fsr2h,f,c
 15716   0009CA  50DE               	movf	postinc2,w,c
 15717   0009CC  10DE               	iorwf	postinc2,w,c
 15718   0009CE  B4D8               	btfsc	status,2,c
 15719   0009D0  EFEC  F004         	goto	u18711
 15720   0009D4  EFEE  F004         	goto	u18710
 15721   0009D8                     u18711:
 15722   0009D8  EFF0  F004         	goto	l15452
 15723   0009DC                     u18710:
 15724   0009DC  EFEB  F001         	goto	l15342
 15725   0009E0                     l15452:
 15726                           
 15727                           ; BSR set to: 1
 15728                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 15729   0009E0  0E5F               	movlw	95
 15730   0009E2  2538               	addwf	find_volume@fs& (0+255),w,b
 15731   0009E4  0100               	movlb	0	; () banked
 15732   0009E6  6F60               	movwf	ld_dword@ptr& (0+255),b
 15733   0009E8  0E00               	movlw	0
 15734   0009EA  0101               	movlb	1	; () banked
 15735   0009EC  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15736   0009EE  0100               	movlb	0	; () banked
 15737   0009F0  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 15738   0009F2  EC91  F03E         	call	_ld_dword	;wreg free
 15739   0009F6  0101               	movlb	1	; () banked
 15740   0009F8  EE20 F027          	lfsr	2,39
 15741   0009FC  5138               	movf	find_volume@fs& (0+255),w,b
 15742   0009FE  26D9               	addwf	fsr2l,f,c
 15743   000A00  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15744   000A02  22DA               	addwfc	fsr2h,f,c
 15745   000A04  0100               	movlb	0	; () banked
 15746   000A06  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 15747   000A0C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 15748   000A12  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 15749   000A18  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 15750   000A1E                     
 15751                           ; BSR set to: 0
 15752                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 15753   000A1E  0101               	movlb	1	; () banked
 15754   000A20  EE20 F017          	lfsr	2,23
 15755   000A24  5138               	movf	find_volume@fs& (0+255),w,b
 15756   000A26  26D9               	addwf	fsr2l,f,c
 15757   000A28  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15758   000A2A  22DA               	addwfc	fsr2h,f,c
 15759   000A2C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15760   000A32  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 15761   000A38  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 15762   000A3E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 15763   000A44  0E02               	movlw	2
 15764   000A46                     u18725:
 15765   000A46  90D8               	bcf	status,0,c
 15766   000A48  0100               	movlb	0	; () banked
 15767   000A4A  37DF               	rlcf	??_find_volume& (0+255),f,b
 15768   000A4C  37E0               	rlcf	(??_find_volume+1)& (0+255),f,b
 15769   000A4E  37E1               	rlcf	(??_find_volume+2)& (0+255),f,b
 15770   000A50  37E2               	rlcf	(??_find_volume+3)& (0+255),f,b
 15771   000A52  2EE8               	decfsz	wreg,f,c
 15772   000A54  EF23  F005         	goto	u18725
 15773   000A58  C0DF  F116         	movff	??_find_volume,find_volume@szbfat
 15774   000A5C  C0E0  F117         	movff	??_find_volume+1,find_volume@szbfat+1
 15775   000A60  C0E1  F118         	movff	??_find_volume+2,find_volume@szbfat+2
 15776   000A64  C0E2  F119         	movff	??_find_volume+3,find_volume@szbfat+3
 15777                           
 15778                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 15779   000A68  EF03  F006         	goto	l1256
 15780   000A6C                     l15456:
 15781                           
 15782                           ; BSR set to: 1
 15783                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 15784   000A6C  EE20 F007          	lfsr	2,7
 15785   000A70  5138               	movf	find_volume@fs& (0+255),w,b
 15786   000A72  26D9               	addwf	fsr2l,f,c
 15787   000A74  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15788   000A76  22DA               	addwfc	fsr2h,f,c
 15789   000A78  50DE               	movf	postinc2,w,c
 15790   000A7A  10DE               	iorwf	postinc2,w,c
 15791   000A7C  A4D8               	btfss	status,2,c
 15792   000A7E  EF43  F005         	goto	u18731
 15793   000A82  EF45  F005         	goto	u18730
 15794   000A86                     u18731:
 15795   000A86  EF47  F005         	goto	l15462
 15796   000A8A                     u18730:
 15797   000A8A  EFEB  F001         	goto	l15342
 15798   000A8E                     l15462:
 15799                           
 15800                           ; BSR set to: 1
 15801                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 15802   000A8E  EE20 F023          	lfsr	2,35
 15803   000A92  5138               	movf	find_volume@fs& (0+255),w,b
 15804   000A94  26D9               	addwf	fsr2l,f,c
 15805   000A96  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15806   000A98  22DA               	addwfc	fsr2h,f,c
 15807   000A9A  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15808   000AA0  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 15809   000AA6  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 15810   000AAC  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 15811   000AB2  512D               	movf	find_volume@fasize& (0+255),w,b
 15812   000AB4  0100               	movlb	0	; () banked
 15813   000AB6  25DF               	addwf	??_find_volume& (0+255),w,b
 15814   000AB8  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 15815   000ABA  0101               	movlb	1	; () banked
 15816   000ABC  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 15817   000ABE  0100               	movlb	0	; () banked
 15818   000AC0  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 15819   000AC2  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 15820   000AC4  0101               	movlb	1	; () banked
 15821   000AC6  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 15822   000AC8  0100               	movlb	0	; () banked
 15823   000ACA  21E1               	addwfc	(??_find_volume+2)& (0+255),w,b
 15824   000ACC  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 15825   000ACE  0101               	movlb	1	; () banked
 15826   000AD0  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 15827   000AD2  0100               	movlb	0	; () banked
 15828   000AD4  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 15829   000AD6  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 15830   000AD8  0101               	movlb	1	; () banked
 15831   000ADA  EE20 F027          	lfsr	2,39
 15832   000ADE  5138               	movf	find_volume@fs& (0+255),w,b
 15833   000AE0  26D9               	addwf	fsr2l,f,c
 15834   000AE2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15835   000AE4  22DA               	addwfc	fsr2h,f,c
 15836   000AE6  0060  F38F  FFDE   	movff	??_find_volume+4,postinc2
 15837   000AEC  0060  F393  FFDE   	movff	??_find_volume+5,postinc2
 15838   000AF2  0060  F397  FFDE   	movff	??_find_volume+6,postinc2
 15839   000AF8  0060  F39B  FFDE   	movff	??_find_volume+7,postinc2
 15840   000AFE                     
 15841                           ; BSR set to: 1
 15842                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 15843   000AFE  0E02               	movlw	2
 15844   000B00  1937               	xorwf	find_volume@fmt& (0+255),w,b
 15845   000B02  B4D8               	btfsc	status,2,c
 15846   000B04  EF86  F005         	goto	u18741
 15847   000B08  EF88  F005         	goto	u18740
 15848   000B0C                     u18741:
 15849   000B0C  EFE0  F005         	goto	l15468
 15850   000B10                     u18740:
 15851   000B10                     
 15852                           ; BSR set to: 1
 15853   000B10  EE20 F017          	lfsr	2,23
 15854   000B14  5138               	movf	find_volume@fs& (0+255),w,b
 15855   000B16  26D9               	addwf	fsr2l,f,c
 15856   000B18  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15857   000B1A  22DA               	addwfc	fsr2h,f,c
 15858   000B1C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15859   000B22  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 15860   000B28  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 15861   000B2E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 15862   000B34  0E01               	movlw	1
 15863   000B36  0100               	movlb	0	; () banked
 15864   000B38  15DF               	andwf	??_find_volume& (0+255),w,b
 15865   000B3A  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 15866   000B3C  0E00               	movlw	0
 15867   000B3E  15E0               	andwf	(??_find_volume+1)& (0+255),w,b
 15868   000B40  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 15869   000B42  0E00               	movlw	0
 15870   000B44  15E1               	andwf	(??_find_volume+2)& (0+255),w,b
 15871   000B46  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 15872   000B48  0E00               	movlw	0
 15873   000B4A  15E2               	andwf	(??_find_volume+3)& (0+255),w,b
 15874   000B4C  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 15875   000B4E  0101               	movlb	1	; () banked
 15876   000B50  EE20 F017          	lfsr	2,23
 15877   000B54  5138               	movf	find_volume@fs& (0+255),w,b
 15878   000B56  26D9               	addwf	fsr2l,f,c
 15879   000B58  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15880   000B5A  22DA               	addwfc	fsr2h,f,c
 15881   000B5C  006F FF78  F060    	movff	postinc2,___lmul@multiplier
 15882   000B62  006F FF78  F061    	movff	postinc2,___lmul@multiplier+1
 15883   000B68  006F FF78  F062    	movff	postinc2,___lmul@multiplier+2
 15884   000B6E  006F FF78  F063    	movff	postinc2,___lmul@multiplier+3
 15885   000B74  0E03               	movlw	3
 15886   000B76  0100               	movlb	0	; () banked
 15887   000B78  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15888   000B7A  0E00               	movlw	0
 15889   000B7C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15890   000B7E  0E00               	movlw	0
 15891   000B80  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15892   000B82  0E00               	movlw	0
 15893   000B84  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15894   000B86  EC07  F042         	call	___lmul	;wreg free
 15895   000B8A  0100               	movlb	0	; () banked
 15896   000B8C  90D8               	bcf	status,0,c
 15897   000B8E  3363               	rrcf	(?___lmul+3)& (0+255),f,b
 15898   000B90  3362               	rrcf	(?___lmul+2)& (0+255),f,b
 15899   000B92  3361               	rrcf	(?___lmul+1)& (0+255),f,b
 15900   000B94  3360               	rrcf	?___lmul& (0+255),f,b
 15901   000B96  51E3               	movf	(??_find_volume+4)& (0+255),w,b
 15902   000B98  2560               	addwf	?___lmul& (0+255),w,b
 15903   000B9A  0101               	movlb	1	; () banked
 15904   000B9C  6F16               	movwf	find_volume@szbfat& (0+255),b
 15905   000B9E  0100               	movlb	0	; () banked
 15906   000BA0  51E4               	movf	(??_find_volume+5)& (0+255),w,b
 15907   000BA2  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 15908   000BA4  0101               	movlb	1	; () banked
 15909   000BA6  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 15910   000BA8  0100               	movlb	0	; () banked
 15911   000BAA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 15912   000BAC  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 15913   000BAE  0101               	movlb	1	; () banked
 15914   000BB0  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 15915   000BB2  0100               	movlb	0	; () banked
 15916   000BB4  51E6               	movf	(??_find_volume+7)& (0+255),w,b
 15917   000BB6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 15918   000BB8  0101               	movlb	1	; () banked
 15919   000BBA  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 15920   000BBC  EF03  F006         	goto	l1256
 15921   000BC0                     l15468:
 15922                           
 15923                           ; BSR set to: 1
 15924   000BC0  EE20 F017          	lfsr	2,23
 15925   000BC4  5138               	movf	find_volume@fs& (0+255),w,b
 15926   000BC6  26D9               	addwf	fsr2l,f,c
 15927   000BC8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15928   000BCA  22DA               	addwfc	fsr2h,f,c
 15929   000BCC  006F FF78  F0DF    	movff	postinc2,??_find_volume
 15930   000BD2  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 15931   000BD8  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 15932   000BDE  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 15933   000BE4  90D8               	bcf	status,0,c
 15934   000BE6  0100               	movlb	0	; () banked
 15935   000BE8  35DF               	rlcf	??_find_volume& (0+255),w,b
 15936   000BEA  0101               	movlb	1	; () banked
 15937   000BEC  6F16               	movwf	find_volume@szbfat& (0+255),b
 15938   000BEE  0100               	movlb	0	; () banked
 15939   000BF0  35E0               	rlcf	(??_find_volume+1)& (0+255),w,b
 15940   000BF2  0101               	movlb	1	; () banked
 15941   000BF4  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 15942   000BF6  0100               	movlb	0	; () banked
 15943   000BF8  35E1               	rlcf	(??_find_volume+2)& (0+255),w,b
 15944   000BFA  0101               	movlb	1	; () banked
 15945   000BFC  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 15946   000BFE  0100               	movlb	0	; () banked
 15947   000C00  35E2               	rlcf	(??_find_volume+3)& (0+255),w,b
 15948   000C02  0101               	movlb	1	; () banked
 15949   000C04  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 15950   000C06                     l1256:
 15951                           
 15952                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 15953   000C06  0EFF               	movlw	255
 15954   000C08  0101               	movlb	1	; () banked
 15955   000C0A  2516               	addwf	find_volume@szbfat& (0+255),w,b
 15956   000C0C  0100               	movlb	0	; () banked
 15957   000C0E  6FDF               	movwf	??_find_volume& (0+255),b
 15958   000C10  0E01               	movlw	1
 15959   000C12  0101               	movlb	1	; () banked
 15960   000C14  2117               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 15961   000C16  0100               	movlb	0	; () banked
 15962   000C18  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 15963   000C1A  0E00               	movlw	0
 15964   000C1C  0101               	movlb	1	; () banked
 15965   000C1E  2118               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 15966   000C20  0100               	movlb	0	; () banked
 15967   000C22  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 15968   000C24  0E00               	movlw	0
 15969   000C26  0101               	movlb	1	; () banked
 15970   000C28  2119               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 15971   000C2A  0100               	movlb	0	; () banked
 15972   000C2C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 15973   000C2E  0E0A               	movlw	10
 15974   000C30  EF1F  F006         	goto	u18750
 15975   000C34                     u18755:
 15976   000C34  90D8               	bcf	status,0,c
 15977   000C36  33E2               	rrcf	(??_find_volume+3)& (0+255),f,b
 15978   000C38  33E1               	rrcf	(??_find_volume+2)& (0+255),f,b
 15979   000C3A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 15980   000C3C  33DF               	rrcf	??_find_volume& (0+255),f,b
 15981   000C3E                     u18750:
 15982   000C3E  2EE8               	decfsz	wreg,f,c
 15983   000C40  EF1A  F006         	goto	u18755
 15984   000C44  0101               	movlb	1	; () banked
 15985   000C46  EE20 F01B          	lfsr	2,27
 15986   000C4A  5138               	movf	find_volume@fs& (0+255),w,b
 15987   000C4C  26D9               	addwf	fsr2l,f,c
 15988   000C4E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 15989   000C50  22DA               	addwfc	fsr2h,f,c
 15990   000C52  0100               	movlb	0	; () banked
 15991   000C54  51DF               	movf	??_find_volume& (0+255),w,b
 15992   000C56  5CDE               	subwf	postinc2,w,c
 15993   000C58  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 15994   000C5A  58DE               	subwfb	postinc2,w,c
 15995   000C5C  51E1               	movf	(??_find_volume+2)& (0+255),w,b
 15996   000C5E  58DE               	subwfb	postinc2,w,c
 15997   000C60  51E2               	movf	(??_find_volume+3)& (0+255),w,b
 15998   000C62  58DE               	subwfb	postinc2,w,c
 15999   000C64  B0D8               	btfsc	status,0,c
 16000   000C66  EF37  F006         	goto	u18761
 16001   000C6A  EF39  F006         	goto	u18760
 16002   000C6E                     u18761:
 16003   000C6E  EF3B  F006         	goto	l15474
 16004   000C72                     u18760:
 16005   000C72  EFEB  F001         	goto	l15342
 16006   000C76                     l15474:
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 16010   000C76  0101               	movlb	1	; () banked
 16011   000C78  EE20 F00F          	lfsr	2,15
 16012   000C7C  5138               	movf	find_volume@fs& (0+255),w,b
 16013   000C7E  26D9               	addwf	fsr2l,f,c
 16014   000C80  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16015   000C82  22DA               	addwfc	fsr2h,f,c
 16016   000C84  0EFF               	movlw	255
 16017   000C86  6EDE               	movwf	postinc2,c
 16018   000C88  0EFF               	movlw	255
 16019   000C8A  6EDE               	movwf	postinc2,c
 16020   000C8C  0EFF               	movlw	255
 16021   000C8E  6EDE               	movwf	postinc2,c
 16022   000C90  0EFF               	movlw	255
 16023   000C92  6EDD               	movwf	postdec2,c
 16024   000C94  52DD               	movf	postdec2,f,c
 16025   000C96  52DD               	movf	postdec2,f,c
 16026   000C98  EE10 F00B          	lfsr	1,11
 16027   000C9C  5138               	movf	find_volume@fs& (0+255),w,b
 16028   000C9E  26E1               	addwf	fsr1l,f,c
 16029   000CA0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16030   000CA2  22E2               	addwfc	fsr1h,f,c
 16031   000CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 16032   000CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 16033   000CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 16034   000CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 16035   000CBC                     
 16036                           ; BSR set to: 1
 16037                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 16038   000CBC  EE20 F004          	lfsr	2,4
 16039   000CC0  5138               	movf	find_volume@fs& (0+255),w,b
 16040   000CC2  26D9               	addwf	fsr2l,f,c
 16041   000CC4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16042   000CC6  22DA               	addwfc	fsr2h,f,c
 16043   000CC8  0E80               	movlw	128
 16044   000CCA  6EDF               	movwf	indf2,c
 16045   000CCC                     
 16046                           ; BSR set to: 1
 16047                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 16048   000CCC  0E03               	movlw	3
 16049   000CCE  1937               	xorwf	find_volume@fmt& (0+255),w,b
 16050   000CD0  A4D8               	btfss	status,2,c
 16051   000CD2  EF6D  F006         	goto	u18771
 16052   000CD6  EF6F  F006         	goto	u18770
 16053   000CDA                     u18771:
 16054   000CDA  EF44  F007         	goto	l15494
 16055   000CDE                     u18770:
 16056   000CDE                     
 16057                           ; BSR set to: 1
 16058   000CDE  0E63               	movlw	99
 16059   000CE0  2538               	addwf	find_volume@fs& (0+255),w,b
 16060   000CE2  0100               	movlb	0	; () banked
 16061   000CE4  6F60               	movwf	ld_word@ptr& (0+255),b
 16062   000CE6  0E00               	movlw	0
 16063   000CE8  0101               	movlb	1	; () banked
 16064   000CEA  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16065   000CEC  0100               	movlb	0	; () banked
 16066   000CEE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16067   000CF0  ECB5  F044         	call	_ld_word	;wreg free
 16068   000CF4  0100               	movlb	0	; () banked
 16069   000CF6  0560               	decf	?_ld_word& (0+255),w,b
 16070   000CF8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 16071   000CFA  A4D8               	btfss	status,2,c
 16072   000CFC  EF82  F006         	goto	u18781
 16073   000D00  EF84  F006         	goto	u18780
 16074   000D04                     u18781:
 16075   000D04  EF44  F007         	goto	l15494
 16076   000D08                     u18780:
 16077   000D08                     
 16078                           ; BSR set to: 0
 16079   000D08  C138  F0C8         	movff	find_volume@fs,move_window@fs
 16080   000D0C  C139  F0C9         	movff	find_volume@fs+1,move_window@fs+1
 16081   000D10  0E01               	movlw	1
 16082   000D12  0101               	movlb	1	; () banked
 16083   000D14  2531               	addwf	find_volume@bsect& (0+255),w,b
 16084   000D16  0100               	movlb	0	; () banked
 16085   000D18  6FCA               	movwf	move_window@sector& (0+255),b
 16086   000D1A  0E00               	movlw	0
 16087   000D1C  0101               	movlb	1	; () banked
 16088   000D1E  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16089   000D20  0100               	movlb	0	; () banked
 16090   000D22  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 16091   000D24  0E00               	movlw	0
 16092   000D26  0101               	movlb	1	; () banked
 16093   000D28  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16094   000D2A  0100               	movlb	0	; () banked
 16095   000D2C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 16096   000D2E  0E00               	movlw	0
 16097   000D30  0101               	movlb	1	; () banked
 16098   000D32  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16099   000D34  0100               	movlb	0	; () banked
 16100   000D36  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 16101   000D38  ECBF  F03D         	call	_move_window	;wreg free
 16102   000D3C  0900               	iorlw	0
 16103   000D3E  A4D8               	btfss	status,2,c
 16104   000D40  EFA4  F006         	goto	u18791
 16105   000D44  EFA6  F006         	goto	u18790
 16106   000D48                     u18791:
 16107   000D48  EF44  F007         	goto	l15494
 16108   000D4C                     u18790:
 16109   000D4C                     
 16110                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 16111   000D4C  0101               	movlb	1	; () banked
 16112   000D4E  EE20 F004          	lfsr	2,4
 16113   000D52  5138               	movf	find_volume@fs& (0+255),w,b
 16114   000D54  26D9               	addwf	fsr2l,f,c
 16115   000D56  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16116   000D58  22DA               	addwfc	fsr2h,f,c
 16117   000D5A  6ADF               	clrf	indf2,c
 16118   000D5C                     
 16119                           ; BSR set to: 1
 16120                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 16121   000D5C  0E31               	movlw	49
 16122   000D5E  2538               	addwf	find_volume@fs& (0+255),w,b
 16123   000D60  0100               	movlb	0	; () banked
 16124   000D62  6F60               	movwf	ld_word@ptr& (0+255),b
 16125   000D64  0E02               	movlw	2
 16126   000D66  0101               	movlb	1	; () banked
 16127   000D68  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16128   000D6A  0100               	movlb	0	; () banked
 16129   000D6C  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 16130   000D6E  ECB5  F044         	call	_ld_word	;wreg free
 16131   000D72  0E55               	movlw	85
 16132   000D74  0100               	movlb	0	; () banked
 16133   000D76  1960               	xorwf	?_ld_word& (0+255),w,b
 16134   000D78  E107               	bnz	u18801
 16135   000D7A  0EAA               	movlw	170
 16136   000D7C  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 16137   000D7E  A4D8               	btfss	status,2,c
 16138   000D80  EFC4  F006         	goto	u18801
 16139   000D84  EFC6  F006         	goto	u18800
 16140   000D88                     u18801:
 16141   000D88  EF44  F007         	goto	l15494
 16142   000D8C                     u18800:
 16143   000D8C                     
 16144                           ; BSR set to: 0
 16145   000D8C  0E33               	movlw	51
 16146   000D8E  0101               	movlb	1	; () banked
 16147   000D90  2538               	addwf	find_volume@fs& (0+255),w,b
 16148   000D92  0100               	movlb	0	; () banked
 16149   000D94  6F60               	movwf	ld_dword@ptr& (0+255),b
 16150   000D96  0E00               	movlw	0
 16151   000D98  0101               	movlb	1	; () banked
 16152   000D9A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16153   000D9C  0100               	movlb	0	; () banked
 16154   000D9E  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16155   000DA0  EC91  F03E         	call	_ld_dword	;wreg free
 16156   000DA4  0E52               	movlw	82
 16157   000DA6  0100               	movlb	0	; () banked
 16158   000DA8  1960               	xorwf	?_ld_dword& (0+255),w,b
 16159   000DAA  E10D               	bnz	u18811
 16160   000DAC  0E52               	movlw	82
 16161   000DAE  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 16162   000DB0  E10A               	bnz	u18811
 16163   000DB2  0E61               	movlw	97
 16164   000DB4  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 16165   000DB6  E107               	bnz	u18811
 16166   000DB8  0E41               	movlw	65
 16167   000DBA  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 16168   000DBC  A4D8               	btfss	status,2,c
 16169   000DBE  EFE3  F006         	goto	u18811
 16170   000DC2  EFE5  F006         	goto	u18810
 16171   000DC6                     u18811:
 16172   000DC6  EF44  F007         	goto	l15494
 16173   000DCA                     u18810:
 16174   000DCA                     
 16175                           ; BSR set to: 0
 16176   000DCA  0E17               	movlw	23
 16177   000DCC  0101               	movlb	1	; () banked
 16178   000DCE  2538               	addwf	find_volume@fs& (0+255),w,b
 16179   000DD0  0100               	movlb	0	; () banked
 16180   000DD2  6F60               	movwf	ld_dword@ptr& (0+255),b
 16181   000DD4  0E02               	movlw	2
 16182   000DD6  0101               	movlb	1	; () banked
 16183   000DD8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16184   000DDA  0100               	movlb	0	; () banked
 16185   000DDC  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16186   000DDE  EC91  F03E         	call	_ld_dword	;wreg free
 16187   000DE2  0E72               	movlw	114
 16188   000DE4  0100               	movlb	0	; () banked
 16189   000DE6  1960               	xorwf	?_ld_dword& (0+255),w,b
 16190   000DE8  E10D               	bnz	u18821
 16191   000DEA  0E72               	movlw	114
 16192   000DEC  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 16193   000DEE  E10A               	bnz	u18821
 16194   000DF0  0E41               	movlw	65
 16195   000DF2  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 16196   000DF4  E107               	bnz	u18821
 16197   000DF6  0E61               	movlw	97
 16198   000DF8  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 16199   000DFA  A4D8               	btfss	status,2,c
 16200   000DFC  EF02  F007         	goto	u18821
 16201   000E00  EF04  F007         	goto	u18820
 16202   000E04                     u18821:
 16203   000E04  EF44  F007         	goto	l15494
 16204   000E08                     u18820:
 16205   000E08                     
 16206                           ; BSR set to: 0
 16207                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 16208   000E08  0E1B               	movlw	27
 16209   000E0A  0101               	movlb	1	; () banked
 16210   000E0C  2538               	addwf	find_volume@fs& (0+255),w,b
 16211   000E0E  0100               	movlb	0	; () banked
 16212   000E10  6F60               	movwf	ld_dword@ptr& (0+255),b
 16213   000E12  0E02               	movlw	2
 16214   000E14  0101               	movlb	1	; () banked
 16215   000E16  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16216   000E18  0100               	movlb	0	; () banked
 16217   000E1A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16218   000E1C  EC91  F03E         	call	_ld_dword	;wreg free
 16219   000E20  0101               	movlb	1	; () banked
 16220   000E22  EE20 F00F          	lfsr	2,15
 16221   000E26  5138               	movf	find_volume@fs& (0+255),w,b
 16222   000E28  26D9               	addwf	fsr2l,f,c
 16223   000E2A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16224   000E2C  22DA               	addwfc	fsr2h,f,c
 16225   000E2E  0100               	movlb	0	; () banked
 16226   000E30  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 16227   000E36  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 16228   000E3C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 16229   000E42  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 16230                           
 16231                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 16232   000E48  0E1F               	movlw	31
 16233   000E4A  0101               	movlb	1	; () banked
 16234   000E4C  2538               	addwf	find_volume@fs& (0+255),w,b
 16235   000E4E  0100               	movlb	0	; () banked
 16236   000E50  6F60               	movwf	ld_dword@ptr& (0+255),b
 16237   000E52  0E02               	movlw	2
 16238   000E54  0101               	movlb	1	; () banked
 16239   000E56  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16240   000E58  0100               	movlb	0	; () banked
 16241   000E5A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 16242   000E5C  EC91  F03E         	call	_ld_dword	;wreg free
 16243   000E60  0101               	movlb	1	; () banked
 16244   000E62  EE20 F00B          	lfsr	2,11
 16245   000E66  5138               	movf	find_volume@fs& (0+255),w,b
 16246   000E68  26D9               	addwf	fsr2l,f,c
 16247   000E6A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16248   000E6C  22DA               	addwfc	fsr2h,f,c
 16249   000E6E  0100               	movlb	0	; () banked
 16250   000E70  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 16251   000E76  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 16252   000E7C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 16253   000E82  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 16254   000E88                     l15494:
 16255                           
 16256                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 16257   000E88  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 16258   000E8E  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 16259   000E94  0060  F4DF  FFDF   	movff	find_volume@fmt,indf2
 16260   000E9A                     
 16261                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 16262   000E9A  0101               	movlb	1	; () banked
 16263   000E9C  4BC0               	infsnz	_Fsid& (0+255),f,b
 16264   000E9E  2BC1               	incf	(_Fsid+1)& (0+255),f,b
 16265   000EA0  EE20 F005          	lfsr	2,5
 16266   000EA4  5138               	movf	find_volume@fs& (0+255),w,b
 16267   000EA6  26D9               	addwf	fsr2l,f,c
 16268   000EA8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16269   000EAA  22DA               	addwfc	fsr2h,f,c
 16270   000EAC  0060  F703  FFDE   	movff	_Fsid,postinc2
 16271   000EB2  0060  F707  FFDD   	movff	_Fsid+1,postdec2
 16272   000EB8                     
 16273                           ; BSR set to: 1
 16274                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 16275   000EB8  EE20 F013          	lfsr	2,19
 16276   000EBC  5138               	movf	find_volume@fs& (0+255),w,b
 16277   000EBE  26D9               	addwf	fsr2l,f,c
 16278   000EC0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 16279   000EC2  22DA               	addwfc	fsr2h,f,c
 16280   000EC4  6ADE               	clrf	postinc2,c
 16281   000EC6  6ADE               	clrf	postinc2,c
 16282   000EC8  6ADE               	clrf	postinc2,c
 16283   000ECA  6ADD               	clrf	postdec2,c
 16284   000ECC  EF8A  F000         	goto	l15260
 16285   000ED0                     l1211:
 16286   000ED0  0012               	return		;funcret
 16287   000ED2                     __end_of_find_volume:
 16288                           	callstack 0
 16289                           
 16290 ;; *************** function _ld_dword *****************
 16291 ;; Defined at:
 16292 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 16295 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;  rv              4    9[BANK0 ] unsigned long 
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  4    0[BANK0 ] unsigned long 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16309 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16310 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16311 ;;Total ram usage:       13 bytes
 16312 ;; Hardware stack levels used: 1
 16313 ;; Hardware stack levels required when called: 5
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		_get_fat
 16318 ;;		_put_fat
 16319 ;;		_find_volume
 16320 ;;		_f_open
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           	psect	text52
 16325   007D22                     __ptext52:
 16326                           	callstack 0
 16327   007D22                     _ld_dword:
 16328                           	callstack 21
 16329   007D22                     
 16330                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 16331   007D22  0100               	movlb	0	; () banked
 16332   007D24  EE20 F003          	lfsr	2,3
 16333   007D28  5160               	movf	ld_dword@ptr& (0+255),w,b
 16334   007D2A  26D9               	addwf	fsr2l,f,c
 16335   007D2C  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 16336   007D2E  22DA               	addwfc	fsr2h,f,c
 16337   007D30  50DF               	movf	indf2,w,c
 16338   007D32  6F64               	movwf	??_ld_dword& (0+255),b
 16339   007D34  5164               	movf	??_ld_dword& (0+255),w,b
 16340   007D36  6F69               	movwf	ld_dword@rv& (0+255),b
 16341   007D38  6B6A               	clrf	(ld_dword@rv+1)& (0+255),b
 16342   007D3A  6B6B               	clrf	(ld_dword@rv+2)& (0+255),b
 16343   007D3C  6B6C               	clrf	(ld_dword@rv+3)& (0+255),b
 16344                           
 16345                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 16346   007D3E  EE20 F002          	lfsr	2,2
 16347   007D42  5160               	movf	ld_dword@ptr& (0+255),w,b
 16348   007D44  26D9               	addwf	fsr2l,f,c
 16349   007D46  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 16350   007D48  22DA               	addwfc	fsr2h,f,c
 16351   007D4A  50DF               	movf	indf2,w,c
 16352   007D4C  6F64               	movwf	??_ld_dword& (0+255),b
 16353   007D4E  5164               	movf	??_ld_dword& (0+255),w,b
 16354   007D50  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 16355   007D54  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 16356   007D58  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 16357   007D5C  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 16358   007D5E  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 16359   007D60  6F69               	movwf	ld_dword@rv& (0+255),b
 16360   007D62  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 16361   007D64  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 16362   007D66  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 16363   007D68  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 16364   007D6A  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 16365   007D6C  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 16366                           
 16367                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 16368   007D6E  EE20 F001          	lfsr	2,1
 16369   007D72  5160               	movf	ld_dword@ptr& (0+255),w,b
 16370   007D74  26D9               	addwf	fsr2l,f,c
 16371   007D76  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 16372   007D78  22DA               	addwfc	fsr2h,f,c
 16373   007D7A  50DF               	movf	indf2,w,c
 16374   007D7C  6F64               	movwf	??_ld_dword& (0+255),b
 16375   007D7E  5164               	movf	??_ld_dword& (0+255),w,b
 16376   007D80  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 16377   007D84  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 16378   007D88  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 16379   007D8C  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 16380   007D8E  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 16381   007D90  6F69               	movwf	ld_dword@rv& (0+255),b
 16382   007D92  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 16383   007D94  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 16384   007D96  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 16385   007D98  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 16386   007D9A  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 16387   007D9C  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 16388                           
 16389                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 16390   007D9E  0060  F183  FFD9   	movff	ld_dword@ptr,fsr2l
 16391   007DA4  0060  F187  FFDA   	movff	ld_dword@ptr+1,fsr2h
 16392   007DAA  50DF               	movf	indf2,w,c
 16393   007DAC  6F64               	movwf	??_ld_dword& (0+255),b
 16394   007DAE  5164               	movf	??_ld_dword& (0+255),w,b
 16395   007DB0  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 16396   007DB4  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 16397   007DB8  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 16398   007DBC  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 16399   007DBE  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 16400   007DC0  6F69               	movwf	ld_dword@rv& (0+255),b
 16401   007DC2  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 16402   007DC4  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 16403   007DC6  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 16404   007DC8  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 16405   007DCA  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 16406   007DCC  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 16407   007DCE                     
 16408                           ; BSR set to: 0
 16409                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 16410   007DCE  C069  F060         	movff	ld_dword@rv,?_ld_dword
 16411   007DD2  C06A  F061         	movff	ld_dword@rv+1,?_ld_dword+1
 16412   007DD6  C06B  F062         	movff	ld_dword@rv+2,?_ld_dword+2
 16413   007DDA  C06C  F063         	movff	ld_dword@rv+3,?_ld_dword+3
 16414   007DDE                     
 16415                           ; BSR set to: 0
 16416   007DDE  0012               	return		;funcret
 16417   007DE0                     __end_of_ld_dword:
 16418                           	callstack 0
 16419                           
 16420 ;; *************** function _get_ldnumber *****************
 16421 ;; Defined at:
 16422 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;  path            2    0[BANK0 ] PTR PTR const unsigned c
 16425 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 16426 ;;		 -> f_mount@rp(2), 
 16427 ;; Auto vars:     Size  Location     Type
 16428 ;;  tp              2   11[BANK0 ] PTR const unsigned char 
 16429 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
 16430 ;;  vol             2    9[BANK0 ] int 
 16431 ;;  tt              2    7[BANK0 ] PTR const unsigned char 
 16432 ;;		 -> STR_11(9), STR_10(1), STR_8(9), STR_7(1), 
 16433 ;;  i               2    4[BANK0 ] int 
 16434 ;;  tc              1    6[BANK0 ] unsigned char 
 16435 ;; Return value:  Size  Location     Type
 16436 ;;                  2    0[BANK0 ] int 
 16437 ;; Registers used:
 16438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16439 ;; Tracked objects:
 16440 ;;		On entry : 0/0
 16441 ;;		On exit  : 0/0
 16442 ;;		Unchanged: 0/0
 16443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16445 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16447 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16448 ;;Total ram usage:       13 bytes
 16449 ;; Hardware stack levels used: 1
 16450 ;; Hardware stack levels required when called: 5
 16451 ;; This function calls:
 16452 ;;		Nothing
 16453 ;; This function is called by:
 16454 ;;		_find_volume
 16455 ;;		_f_mount
 16456 ;;		_f_chdrive
 16457 ;; This function uses a non-reentrant model
 16458 ;;
 16459                           
 16460                           	psect	text53
 16461   006802                     __ptext53:
 16462                           	callstack 0
 16463   006802                     _get_ldnumber:
 16464                           	callstack 22
 16465   006802                     
 16466                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 16467   006802  0100               	movlb	0	; () banked
 16468   006804  6969               	setf	get_ldnumber@vol& (0+255),b
 16469   006806  696A               	setf	(get_ldnumber@vol+1)& (0+255),b
 16470   006808                     
 16471                           ; BSR set to: 0
 16472                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 16473   006808  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 16474   00680E  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 16475   006814  006F FF78  F06B    	movff	postinc2,get_ldnumber@tp
 16476   00681A  006F FF74  F06C    	movff	postdec2,get_ldnumber@tp+1
 16477   006820  C06B  F067         	movff	get_ldnumber@tp,get_ldnumber@tt
 16478   006824  C06C  F068         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 16479   006828                     
 16480                           ; BSR set to: 0
 16481                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 16482   006828  516B               	movf	get_ldnumber@tp& (0+255),w,b
 16483   00682A  116C               	iorwf	(get_ldnumber@tp+1)& (0+255),w,b
 16484   00682C  A4D8               	btfss	status,2,c
 16485   00682E  EF1B  F034         	goto	u17861
 16486   006832  EF1D  F034         	goto	u17860
 16487   006836                     u17861:
 16488   006836  EF21  F034         	goto	l14962
 16489   00683A                     u17860:
 16490   00683A                     
 16491                           ; BSR set to: 0
 16492   00683A  6960               	setf	?_get_ldnumber& (0+255),b
 16493   00683C  6961               	setf	(?_get_ldnumber+1)& (0+255),b
 16494   00683E  EFB9  F034         	goto	l1186
 16495   006842                     l14962:
 16496                           
 16497                           ; BSR set to: 0
 16498   006842  0060  F19F  FFF6   	movff	get_ldnumber@tt,tblptrl
 16499   006848  0060  F1A3  FFF7   	movff	get_ldnumber@tt+1,tblptrh
 16500   00684E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16501   00684E  6AF8               	clrf	tblptru,c
 16502   006850                     	endif
 16503   006850                     	if	0	;tblptru may be non-zero
 16504   006850                     	endif
 16505   006850  0008               	tblrd		*
 16506   006852  006F FFD4  F066    	movff	tablat,get_ldnumber@tc
 16507   006858                     
 16508                           ; BSR set to: 0
 16509   006858  4B67               	infsnz	get_ldnumber@tt& (0+255),f,b
 16510   00685A  2B68               	incf	(get_ldnumber@tt+1)& (0+255),f,b
 16511   00685C                     
 16512                           ; BSR set to: 0
 16513   00685C  0E20               	movlw	32
 16514   00685E  6566               	cpfsgt	get_ldnumber@tc& (0+255),b
 16515   006860  EF34  F034         	goto	u17871
 16516   006864  EF36  F034         	goto	u17870
 16517   006868                     u17871:
 16518   006868  EF3F  F034         	goto	l14974
 16519   00686C                     u17870:
 16520   00686C                     
 16521                           ; BSR set to: 0
 16522   00686C  0E3A               	movlw	58
 16523   00686E  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 16524   006870  A4D8               	btfss	status,2,c
 16525   006872  EF3D  F034         	goto	u17881
 16526   006876  EF3F  F034         	goto	u17880
 16527   00687A                     u17881:
 16528   00687A  EF21  F034         	goto	l14962
 16529   00687E                     u17880:
 16530   00687E                     l14974:
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 16534   00687E  0E3A               	movlw	58
 16535   006880  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 16536   006882  A4D8               	btfss	status,2,c
 16537   006884  EF46  F034         	goto	u17891
 16538   006888  EF48  F034         	goto	u17890
 16539   00688C                     u17891:
 16540   00688C  EFB2  F034         	goto	l1195
 16541   006890                     u17890:
 16542   006890                     
 16543                           ; BSR set to: 0
 16544                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 16545   006890  0E00               	movlw	0
 16546   006892  6F65               	movwf	(get_ldnumber@i+1)& (0+255),b
 16547   006894  0E01               	movlw	1
 16548   006896  6F64               	movwf	get_ldnumber@i& (0+255),b
 16549   006898                     
 16550                           ; BSR set to: 0
 16551                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 16552   006898  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 16553   00689E  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 16554   0068A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16555   0068A4  6AF8               	clrf	tblptru,c
 16556   0068A6                     	endif
 16557   0068A6                     	if	0	;tblptru may be non-zero
 16558   0068A6                     	endif
 16559   0068A6  0E2F               	movlw	47
 16560   0068A8  0008               	tblrd		*
 16561   0068AA  64F5               	cpfsgt	tablat,c
 16562   0068AC  EF5A  F034         	goto	u17901
 16563   0068B0  EF5C  F034         	goto	u17900
 16564   0068B4                     u17901:
 16565   0068B4  EF8F  F034         	goto	l14986
 16566   0068B8                     u17900:
 16567   0068B8                     
 16568                           ; BSR set to: 0
 16569   0068B8  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 16570   0068BE  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 16571   0068C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16572   0068C4  6AF8               	clrf	tblptru,c
 16573   0068C6                     	endif
 16574   0068C6                     	if	0	;tblptru may be non-zero
 16575   0068C6                     	endif
 16576   0068C6  0E3A               	movlw	58
 16577   0068C8  0008               	tblrd		*
 16578   0068CA  60F5               	cpfslt	tablat,c
 16579   0068CC  EF6A  F034         	goto	u17911
 16580   0068D0  EF6C  F034         	goto	u17910
 16581   0068D4                     u17911:
 16582   0068D4  EF8F  F034         	goto	l14986
 16583   0068D8                     u17910:
 16584   0068D8                     
 16585                           ; BSR set to: 0
 16586   0068D8  0E02               	movlw	2
 16587   0068DA  256B               	addwf	get_ldnumber@tp& (0+255),w,b
 16588   0068DC  6F62               	movwf	??_get_ldnumber& (0+255),b
 16589   0068DE  0E00               	movlw	0
 16590   0068E0  216C               	addwfc	(get_ldnumber@tp+1)& (0+255),w,b
 16591   0068E2  6F63               	movwf	(??_get_ldnumber+1)& (0+255),b
 16592   0068E4  5167               	movf	get_ldnumber@tt& (0+255),w,b
 16593   0068E6  1962               	xorwf	??_get_ldnumber& (0+255),w,b
 16594   0068E8  E107               	bnz	u17921
 16595   0068EA  5168               	movf	(get_ldnumber@tt+1)& (0+255),w,b
 16596   0068EC  1963               	xorwf	(??_get_ldnumber+1)& (0+255),w,b
 16597   0068EE  A4D8               	btfss	status,2,c
 16598   0068F0  EF7C  F034         	goto	u17921
 16599   0068F4  EF7E  F034         	goto	u17920
 16600   0068F8                     u17921:
 16601   0068F8  EF8F  F034         	goto	l14986
 16602   0068FC                     u17920:
 16603   0068FC                     
 16604                           ; BSR set to: 0
 16605                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 16606   0068FC  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 16607   006902  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 16608   006908                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16609   006908  6AF8               	clrf	tblptru,c
 16610   00690A                     	endif
 16611   00690A                     	if	0	;tblptru may be non-zero
 16612   00690A                     	endif
 16613   00690A  0008               	tblrd		*
 16614   00690C  006F FFD4  F062    	movff	tablat,??_get_ldnumber
 16615   006912  0ED0               	movlw	208
 16616   006914  2562               	addwf	??_get_ldnumber& (0+255),w,b
 16617   006916  6F64               	movwf	get_ldnumber@i& (0+255),b
 16618   006918  6B65               	clrf	(get_ldnumber@i+1)& (0+255),b
 16619   00691A  0EFF               	movlw	255
 16620   00691C  2365               	addwfc	(get_ldnumber@i+1)& (0+255),f,b
 16621   00691E                     l14986:
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 16625   00691E  BF65               	btfsc	(get_ldnumber@i+1)& (0+255),7,b
 16626   006920  EF9C  F034         	goto	u17930
 16627   006924  5165               	movf	(get_ldnumber@i+1)& (0+255),w,b
 16628   006926  E106               	bnz	u17931
 16629   006928  0564               	decf	get_ldnumber@i& (0+255),w,b
 16630   00692A  B0D8               	btfsc	status,0,c
 16631   00692C  EF9A  F034         	goto	u17931
 16632   006930  EF9C  F034         	goto	u17930
 16633   006934                     u17931:
 16634   006934  EFAC  F034         	goto	l14992
 16635   006938                     u17930:
 16636   006938                     
 16637                           ; BSR set to: 0
 16638                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 16639   006938  C064  F069         	movff	get_ldnumber@i,get_ldnumber@vol
 16640   00693C  C065  F06A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 16641   006940                     
 16642                           ; BSR set to: 0
 16643                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 16644   006940  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 16645   006946  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 16646   00694C  0060  F19F  FFDE   	movff	get_ldnumber@tt,postinc2
 16647   006952  0060  F1A3  FFDD   	movff	get_ldnumber@tt+1,postdec2
 16648   006958                     l14992:
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 16652   006958  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 16653   00695C  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 16654   006960  EFB9  F034         	goto	l1186
 16655   006964                     l1195:
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 16659   006964  C04C  F069         	movff	_CurrVol,get_ldnumber@vol
 16660   006968  6B6A               	clrf	(get_ldnumber@vol+1)& (0+255),b
 16661                           
 16662                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 16663   00696A  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 16664   00696E  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 16665   006972                     l1186:
 16666                           
 16667                           ; BSR set to: 0
 16668   006972  0012               	return		;funcret
 16669   006974                     __end_of_get_ldnumber:
 16670                           	callstack 0
 16671                           
 16672 ;; *************** function _disk_status *****************
 16673 ;; Defined at:
 16674 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  pdrv            1    wreg     unsigned char 
 16677 ;; Auto vars:     Size  Location     Type
 16678 ;;  pdrv            1    0[BANK0 ] unsigned char 
 16679 ;;  stat            1    1[BANK0 ] unsigned char 
 16680 ;; Return value:  Size  Location     Type
 16681 ;;                  1    wreg      unsigned char 
 16682 ;; Registers used:
 16683 ;;		wreg, status,2, status,0, cstack
 16684 ;; Tracked objects:
 16685 ;;		On entry : 0/0
 16686 ;;		On exit  : 0/0
 16687 ;;		Unchanged: 0/0
 16688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16693 ;;Total ram usage:        2 bytes
 16694 ;; Hardware stack levels used: 1
 16695 ;; Hardware stack levels required when called: 6
 16696 ;; This function calls:
 16697 ;;		_SD_SPI_IsMediaInitialized
 16698 ;;		_SD_SPI_IsMediaPresent
 16699 ;;		_SD_SPI_IsWriteProtected
 16700 ;; This function is called by:
 16701 ;;		_find_volume
 16702 ;;		_validate
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text54
 16707   0082C0                     __ptext54:
 16708                           	callstack 0
 16709   0082C0                     _disk_status:
 16710                           	callstack 21
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;incstack = 0
 16714                           ;disk_status@pdrv stored from wreg
 16715   0082C0  0100               	movlb	0	; () banked
 16716   0082C2  6F60               	movwf	disk_status@pdrv& (0+255),b
 16717   0082C4                     
 16718                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 16719   0082C4  0E01               	movlw	1
 16720   0082C6  0100               	movlb	0	; () banked
 16721   0082C8  6F61               	movwf	disk_status@stat& (0+255),b
 16722                           
 16723                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 16724   0082CA  EF90  F041         	goto	l14250
 16725   0082CE                     l14236:
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 16729   0082CE  EC86  F046         	call	_SD_SPI_IsMediaPresent	;wreg free
 16730   0082D2  0900               	iorlw	0
 16731   0082D4  A4D8               	btfss	status,2,c
 16732   0082D6  EF6F  F041         	goto	u16541
 16733   0082DA  EF71  F041         	goto	u16540
 16734   0082DE                     u16541:
 16735   0082DE  EF76  F041         	goto	l14240
 16736   0082E2                     u16540:
 16737   0082E2                     
 16738                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 16739   0082E2  0E02               	movlw	2
 16740   0082E4  0100               	movlb	0	; () banked
 16741   0082E6  6F61               	movwf	disk_status@stat& (0+255),b
 16742                           
 16743                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 16744   0082E8  EF82  F041         	goto	l14244
 16745   0082EC                     l14240:
 16746   0082EC  EC50  F046         	call	_SD_SPI_IsMediaInitialized	;wreg free
 16747   0082F0  06E8               	decf	wreg,f,c
 16748   0082F2  A4D8               	btfss	status,2,c
 16749   0082F4  EF7E  F041         	goto	u16551
 16750   0082F8  EF80  F041         	goto	u16550
 16751   0082FC                     u16551:
 16752   0082FC  EF82  F041         	goto	l14244
 16753   008300                     u16550:
 16754   008300                     
 16755                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 16756   008300  0100               	movlb	0	; () banked
 16757   008302  9161               	bcf	disk_status@stat& (0+255),0,b
 16758   008304                     l14244:
 16759                           
 16760                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 16761   008304  EC84  F046         	call	_SD_SPI_IsWriteProtected	;wreg free
 16762   008308  06E8               	decf	wreg,f,c
 16763   00830A  A4D8               	btfss	status,2,c
 16764   00830C  EF8A  F041         	goto	u16561
 16765   008310  EF8C  F041         	goto	u16560
 16766   008314                     u16561:
 16767   008314  EF97  F041         	goto	l14252
 16768   008318                     u16560:
 16769   008318                     
 16770                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 16771   008318  0100               	movlb	0	; () banked
 16772   00831A  8561               	bsf	disk_status@stat& (0+255),2,b
 16773   00831C  EF97  F041         	goto	l14252
 16774   008320                     l14250:
 16775                           
 16776                           ; BSR set to: 0
 16777   008320  5160               	movf	disk_status@pdrv& (0+255),w,b
 16778                           
 16779                           ; Switch size 1, requested type "simple"
 16780                           ; Number of cases is 1, Range of values is 0 to 0
 16781                           ; switch strategies available:
 16782                           ; Name         Instructions Cycles
 16783                           ; simple_byte            4     3 (average)
 16784                           ;	Chosen strategy is simple_byte
 16785   008322  0A00               	xorlw	0	; case 0
 16786   008324  B4D8               	btfsc	status,2,c
 16787   008326  EF67  F041         	goto	l14236
 16788   00832A  EF97  F041         	goto	l14252
 16789   00832E                     l14252:
 16790                           
 16791                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 16792   00832E  0100               	movlb	0	; () banked
 16793   008330  5161               	movf	disk_status@stat& (0+255),w,b
 16794   008332                     
 16795                           ; BSR set to: 0
 16796   008332  0012               	return		;funcret
 16797   008334                     __end_of_disk_status:
 16798                           	callstack 0
 16799                           
 16800 ;; *************** function _SD_SPI_IsWriteProtected *****************
 16801 ;; Defined at:
 16802 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;		None
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;		None
 16807 ;; Return value:  Size  Location     Type
 16808 ;;                  1    wreg      _Bool 
 16809 ;; Registers used:
 16810 ;;		wreg
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;Total ram usage:        0 bytes
 16821 ;; Hardware stack levels used: 1
 16822 ;; Hardware stack levels required when called: 5
 16823 ;; This function calls:
 16824 ;;		Nothing
 16825 ;; This function is called by:
 16826 ;;		_disk_status
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           	psect	text55
 16831   008D08                     __ptext55:
 16832                           	callstack 0
 16833   008D08                     _SD_SPI_IsWriteProtected:
 16834                           	callstack 21
 16835   008D08                     
 16836                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 16837   008D08  0E00               	movlw	0
 16838   008D0A  0012               	return		;funcret
 16839   008D0C                     __end_of_SD_SPI_IsWriteProtected:
 16840                           	callstack 0
 16841                           
 16842 ;; *************** function _SD_SPI_IsMediaPresent *****************
 16843 ;; Defined at:
 16844 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;		None
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;		None
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  1    wreg      _Bool 
 16851 ;; Registers used:
 16852 ;;		wreg
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16862 ;;Total ram usage:        0 bytes
 16863 ;; Hardware stack levels used: 1
 16864 ;; Hardware stack levels required when called: 5
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_disk_status
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text56
 16873   008D0C                     __ptext56:
 16874                           	callstack 0
 16875   008D0C                     _SD_SPI_IsMediaPresent:
 16876                           	callstack 21
 16877   008D0C                     
 16878                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 16879   008D0C  0E01               	movlw	1
 16880   008D0E  0012               	return		;funcret
 16881   008D10                     __end_of_SD_SPI_IsMediaPresent:
 16882                           	callstack 0
 16883                           
 16884 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 16885 ;; Defined at:
 16886 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 16887 ;; Parameters:    Size  Location     Type
 16888 ;;		None
 16889 ;; Auto vars:     Size  Location     Type
 16890 ;;		None
 16891 ;; Return value:  Size  Location     Type
 16892 ;;                  1    wreg      _Bool 
 16893 ;; Registers used:
 16894 ;;		wreg, status,2
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;Total ram usage:        0 bytes
 16905 ;; Hardware stack levels used: 1
 16906 ;; Hardware stack levels required when called: 5
 16907 ;; This function calls:
 16908 ;;		Nothing
 16909 ;; This function is called by:
 16910 ;;		_disk_status
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text57
 16915   008CA0                     __ptext57:
 16916                           	callstack 0
 16917   008CA0                     _SD_SPI_IsMediaInitialized:
 16918                           	callstack 21
 16919   008CA0                     
 16920                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 16921   008CA0  5052               	movf	(_mediaInformation+3)^0,w,c
 16922   008CA2  A4D8               	btfss	status,2,c
 16923   008CA4  EF56  F046         	goto	u16191
 16924   008CA8  EF59  F046         	goto	u16190
 16925   008CAC                     u16191:
 16926   008CAC  0E01               	movlw	1
 16927   008CAE  EF5A  F046         	goto	u16200
 16928   008CB2                     u16190:
 16929   008CB2  0E00               	movlw	0
 16930   008CB4                     u16200:
 16931   008CB4  0012               	return		;funcret
 16932   008CB6                     __end_of_SD_SPI_IsMediaInitialized:
 16933                           	callstack 0
 16934                           
 16935 ;; *************** function _disk_initialize *****************
 16936 ;; Defined at:
 16937 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;  pdrv            1    wreg     unsigned char 
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;  pdrv            1   84[BANK0 ] unsigned char 
 16942 ;;  stat            1   85[BANK0 ] unsigned char 
 16943 ;; Return value:  Size  Location     Type
 16944 ;;                  1    wreg      unsigned char 
 16945 ;; Registers used:
 16946 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16947 ;; Tracked objects:
 16948 ;;		On entry : 0/0
 16949 ;;		On exit  : 0/0
 16950 ;;		Unchanged: 0/0
 16951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16956 ;;Total ram usage:        2 bytes
 16957 ;; Hardware stack levels used: 1
 16958 ;; Hardware stack levels required when called: 8
 16959 ;; This function calls:
 16960 ;;		_SD_SPI_MediaInitialize
 16961 ;; This function is called by:
 16962 ;;		_find_volume
 16963 ;; This function uses a non-reentrant model
 16964 ;;
 16965                           
 16966                           	psect	text58
 16967   0088E0                     __ptext58:
 16968                           	callstack 0
 16969   0088E0                     _disk_initialize:
 16970                           	callstack 19
 16971                           
 16972                           ;incstack = 0
 16973                           ;disk_initialize@pdrv stored from wreg
 16974   0088E0  0100               	movlb	0	; () banked
 16975   0088E2  6FB4               	movwf	disk_initialize@pdrv& (0+255),b
 16976   0088E4                     
 16977                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 16978   0088E4  0E01               	movlw	1
 16979   0088E6  0100               	movlb	0	; () banked
 16980   0088E8  6FB5               	movwf	disk_initialize@stat& (0+255),b
 16981                           
 16982                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 16983   0088EA  EF8B  F044         	goto	l14684
 16984   0088EE                     l14676:
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 16988   0088EE  EC92  F00B         	call	_SD_SPI_MediaInitialize	;wreg free
 16989   0088F2  06E8               	decf	wreg,f,c
 16990   0088F4  A4D8               	btfss	status,2,c
 16991   0088F6  EF7F  F044         	goto	u17371
 16992   0088FA  EF81  F044         	goto	u17370
 16993   0088FE                     u17371:
 16994   0088FE  EF86  F044         	goto	l14680
 16995   008902                     u17370:
 16996   008902                     
 16997                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 16998   008902  0E00               	movlw	0
 16999   008904  0100               	movlb	0	; () banked
 17000   008906  6FB5               	movwf	disk_initialize@stat& (0+255),b
 17001                           
 17002                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 17003   008908  EF92  F044         	goto	l14686
 17004   00890C                     l14680:
 17005                           
 17006                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 17007   00890C  0E01               	movlw	1
 17008   00890E  0100               	movlb	0	; () banked
 17009   008910  6FB5               	movwf	disk_initialize@stat& (0+255),b
 17010   008912  EF92  F044         	goto	l14686
 17011   008916                     l14684:
 17012                           
 17013                           ; BSR set to: 0
 17014   008916  51B4               	movf	disk_initialize@pdrv& (0+255),w,b
 17015                           
 17016                           ; Switch size 1, requested type "simple"
 17017                           ; Number of cases is 1, Range of values is 0 to 0
 17018                           ; switch strategies available:
 17019                           ; Name         Instructions Cycles
 17020                           ; simple_byte            4     3 (average)
 17021                           ;	Chosen strategy is simple_byte
 17022   008918  0A00               	xorlw	0	; case 0
 17023   00891A  B4D8               	btfsc	status,2,c
 17024   00891C  EF77  F044         	goto	l14676
 17025   008920  EF92  F044         	goto	l14686
 17026   008924                     l14686:
 17027                           
 17028                           ; BSR set to: 0
 17029                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 17030   008924  51B5               	movf	disk_initialize@stat& (0+255),w,b
 17031   008926                     
 17032                           ; BSR set to: 0
 17033   008926  0012               	return		;funcret
 17034   008928                     __end_of_disk_initialize:
 17035                           	callstack 0
 17036                           
 17037 ;; *************** function _SD_SPI_MediaInitialize *****************
 17038 ;; Defined at:
 17039 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17040 ;; Parameters:    Size  Location     Type
 17041 ;;		None
 17042 ;; Auto vars:     Size  Location     Type
 17043 ;;  CSDResponse    20   45[BANK0 ] unsigned char [20]
 17044 ;;  response        5   77[BANK0 ] struct .
 17045 ;;  c_size          4   73[BANK0 ] unsigned long 
 17046 ;;  timeout         2   82[BANK0 ] unsigned short 
 17047 ;;  count           1   72[BANK0 ] unsigned char 
 17048 ;;  block_len       1   71[BANK0 ] unsigned char 
 17049 ;;  index           1   70[BANK0 ] unsigned char 
 17050 ;;  c_size_mult     1   69[BANK0 ] unsigned char 
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      _Bool 
 17053 ;; Registers used:
 17054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17061 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17062 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17063 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;Total ram usage:       50 bytes
 17065 ;; Hardware stack levels used: 1
 17066 ;; Hardware stack levels required when called: 7
 17067 ;; This function calls:
 17068 ;;		_SDFAST_open
 17069 ;;		_SDSLOW_open
 17070 ;;		_SD_SPI_DelayMilliseconds
 17071 ;;		_SD_SendCmd
 17072 ;;		_SPI1_Close
 17073 ;;		_SPI1_ExchangeByte
 17074 ;;		___lmul
 17075 ;; This function is called by:
 17076 ;;		_disk_initialize
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text59
 17081   001724                     __ptext59:
 17082                           	callstack 0
 17083   001724                     _SD_SPI_MediaInitialize:
 17084                           	callstack 19
 17085   001724                     
 17086                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 17087   001724  0E00               	movlw	0
 17088   001726  6E52               	movwf	(_mediaInformation+3)^0,c
 17089                           
 17090                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 17091   001728  0E00               	movlw	0
 17092   00172A  6E4F               	movwf	_mediaInformation^0,c
 17093                           
 17094                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 17095   00172C  0E00               	movlw	0
 17096   00172E  6E53               	movwf	(_mediaInformation+4)^0,c
 17097   001730  0E00               	movlw	0
 17098   001732  6E54               	movwf	(_mediaInformation+5)^0,c
 17099   001734  0E00               	movlw	0
 17100   001736  6E55               	movwf	(_mediaInformation+6)^0,c
 17101   001738  0E00               	movlw	0
 17102   00173A  6E56               	movwf	(_mediaInformation+7)^0,c
 17103                           
 17104                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 17105   00173C  0E00               	movlw	0
 17106   00173E  6E57               	movwf	(_mediaInformation+8)^0,c
 17107   001740  8ABA               	bsf	186,5,c	;volatile
 17108   001742                     
 17109                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 17110   001742  0EAF               	movlw	low (_spiMaster+22)
 17111   001744  6EF6               	movwf	tblptrl,c
 17112   001746  0EFF               	movlw	high (_spiMaster+22)
 17113   001748  6EF7               	movwf	tblptrh,c
 17114   00174A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17115   00174A  6AF8               	clrf	tblptru,c
 17116   00174C                     	endif
 17117   00174C                     	if	0	;tblptru may be non-zero
 17118   00174C                     	endif
 17119   00174C  0009               	tblrd		*+
 17120   00174E  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17121   001754  0009               	tblrd		*+
 17122   001756  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17123   00175C  D802               	call	u16578
 17124   00175E  EFBB  F00B         	goto	u16579
 17125   001762                     u16578:
 17126   001762  0005               	push	
 17127   001764  6EFA               	movwf	pclath,c
 17128   001766  0100               	movlb	0	; () banked
 17129   001768  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17130   00176A  6EFD               	movwf	tosl,c
 17131   00176C  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17132   00176E  6EFE               	movwf	tosh,c
 17133   001770  6AFF               	clrf	tosu,c
 17134   001772  50FA               	movf	pclath,w,c
 17135   001774  0012               	return		;indir
 17136   001776                     u16579:
 17137   001776  0900               	iorlw	0
 17138   001778  A4D8               	btfss	status,2,c
 17139   00177A  EFC1  F00B         	goto	u16581
 17140   00177E  EFC3  F00B         	goto	u16580
 17141   001782                     u16581:
 17142   001782  EFC6  F00B         	goto	l14266
 17143   001786                     u16580:
 17144   001786                     l14262:
 17145                           
 17146                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 17147   001786  0E00               	movlw	0
 17148   001788  EF9F  F00F         	goto	l1611
 17149   00178C                     l14266:
 17150                           
 17151                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 17152   00178C  0E1E               	movlw	30
 17153   00178E  EC9A  F041         	call	_SD_SPI_DelayMilliseconds
 17154   001792                     
 17155                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 17156   001792  0E00               	movlw	0
 17157   001794  0100               	movlb	0	; () banked
 17158   001796  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 17159   001798  0E64               	movlw	100
 17160   00179A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 17161   00179C                     l14270:
 17162                           
 17163                           ; BSR set to: 0
 17164   00179C  8ABA               	bsf	186,5,c	;volatile
 17165   00179E                     
 17166                           ; BSR set to: 0
 17167                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 17168   00179E  0E9D               	movlw	low (_spiMaster+4)
 17169   0017A0  6EF6               	movwf	tblptrl,c
 17170   0017A2  0EFF               	movlw	high (_spiMaster+4)
 17171   0017A4  6EF7               	movwf	tblptrh,c
 17172   0017A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17173   0017A6  6AF8               	clrf	tblptru,c
 17174   0017A8                     	endif
 17175   0017A8                     	if	0	;tblptru may be non-zero
 17176   0017A8                     	endif
 17177   0017A8  0009               	tblrd		*+
 17178   0017AA  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17179   0017B0  0009               	tblrd		*+
 17180   0017B2  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17181   0017B8  D802               	call	u16598
 17182   0017BA  EFE9  F00B         	goto	u16599
 17183   0017BE                     u16598:
 17184   0017BE  0005               	push	
 17185   0017C0  6EFA               	movwf	pclath,c
 17186   0017C2  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17187   0017C4  6EFD               	movwf	tosl,c
 17188   0017C6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17189   0017C8  6EFE               	movwf	tosh,c
 17190   0017CA  6AFF               	clrf	tosu,c
 17191   0017CC  50FA               	movf	pclath,w,c
 17192   0017CE  0EFF               	movlw	255
 17193   0017D0  0012               	return		;indir
 17194   0017D2                     u16599:
 17195   0017D2  9ABA               	bcf	186,5,c	;volatile
 17196   0017D4                     
 17197                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 17198   0017D4  0100               	movlb	0	; () banked
 17199   0017D6  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 17200   0017D8  A0D8               	btfss	status,0,c
 17201   0017DA  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 17202   0017DC                     
 17203                           ; BSR set to: 0
 17204                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 17205   0017DC  0E00               	movlw	0
 17206   0017DE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17207   0017E0  0E00               	movlw	0
 17208   0017E2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17209   0017E4  0E00               	movlw	0
 17210   0017E6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17211   0017E8  0E00               	movlw	0
 17212   0017EA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17213   0017EC  0E00               	movlw	0
 17214   0017EE  EC82  F01C         	call	_SD_SendCmd
 17215   0017F2  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17216   0017F6  0E04               	movlw	4
 17217   0017F8                     u16601:
 17218   0017F8  006F FFAF FFDB     	movff	plusw0,plusw2
 17219   0017FE  06E8               	decf	wreg,f,c
 17220   001800  E2FB               	bc	u16601
 17221   001802                     
 17222                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 17223   001802  0100               	movlb	0	; () banked
 17224   001804  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 17225   001806  B4D8               	btfsc	status,2,c
 17226   001808  EF08  F00C         	goto	u16611
 17227   00180C  EF0A  F00C         	goto	u16610
 17228   001810                     u16611:
 17229   001810  EF13  F00C         	goto	l14284
 17230   001814                     u16610:
 17231   001814                     
 17232                           ; BSR set to: 0
 17233   001814  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17234   001816  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17235   001818  A4D8               	btfss	status,2,c
 17236   00181A  EF11  F00C         	goto	u16621
 17237   00181E  EF13  F00C         	goto	u16620
 17238   001822                     u16621:
 17239   001822  EFCE  F00B         	goto	l14270
 17240   001826                     u16620:
 17241   001826                     l14284:
 17242                           
 17243                           ; BSR set to: 0
 17244                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 17245   001826  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17246   001828  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17247   00182A  A4D8               	btfss	status,2,c
 17248   00182C  EF1A  F00C         	goto	u16631
 17249   001830  EF1C  F00C         	goto	u16630
 17250   001834                     u16631:
 17251   001834  EF80  F00C         	goto	l14308
 17252   001838                     u16630:
 17253   001838                     
 17254                           ; BSR set to: 0
 17255   001838  8ABA               	bsf	186,5,c	;volatile
 17256   00183A                     
 17257                           ; BSR set to: 0
 17258                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 17259   00183A  0E9D               	movlw	low (_spiMaster+4)
 17260   00183C  6EF6               	movwf	tblptrl,c
 17261   00183E  0EFF               	movlw	high (_spiMaster+4)
 17262   001840  6EF7               	movwf	tblptrh,c
 17263   001842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17264   001842  6AF8               	clrf	tblptru,c
 17265   001844                     	endif
 17266   001844                     	if	0	;tblptru may be non-zero
 17267   001844                     	endif
 17268   001844  0009               	tblrd		*+
 17269   001846  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17270   00184C  0009               	tblrd		*+
 17271   00184E  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17272   001854  D802               	call	u16648
 17273   001856  EF37  F00C         	goto	u16649
 17274   00185A                     u16648:
 17275   00185A  0005               	push	
 17276   00185C  6EFA               	movwf	pclath,c
 17277   00185E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17278   001860  6EFD               	movwf	tosl,c
 17279   001862  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17280   001864  6EFE               	movwf	tosh,c
 17281   001866  6AFF               	clrf	tosu,c
 17282   001868  50FA               	movf	pclath,w,c
 17283   00186A  0EFF               	movlw	255
 17284   00186C  0012               	return		;indir
 17285   00186E                     u16649:
 17286   00186E  9ABA               	bcf	186,5,c	;volatile
 17287   001870                     
 17288                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 17289   001870  0E00               	movlw	0
 17290   001872  0100               	movlb	0	; () banked
 17291   001874  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17292   001876  0E00               	movlw	0
 17293   001878  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17294   00187A  0E00               	movlw	0
 17295   00187C  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17296   00187E  0E00               	movlw	0
 17297   001880  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17298   001882  0E05               	movlw	5
 17299   001884  EC82  F01C         	call	_SD_SendCmd
 17300   001888                     
 17301                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 17302   001888  0E00               	movlw	0
 17303   00188A  0100               	movlb	0	; () banked
 17304   00188C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17305   00188E  0E00               	movlw	0
 17306   001890  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17307   001892  0E00               	movlw	0
 17308   001894  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17309   001896  0E00               	movlw	0
 17310   001898  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17311   00189A  0E00               	movlw	0
 17312   00189C  EC82  F01C         	call	_SD_SendCmd
 17313   0018A0  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17314   0018A4  0E04               	movlw	4
 17315   0018A6                     u16651:
 17316   0018A6  006F FFAF FFDB     	movff	plusw0,plusw2
 17317   0018AC  06E8               	decf	wreg,f,c
 17318   0018AE  E2FB               	bc	u16651
 17319   0018B0                     
 17320                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 17321   0018B0  0100               	movlb	0	; () banked
 17322   0018B2  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 17323   0018B4  B4D8               	btfsc	status,2,c
 17324   0018B6  EF5F  F00C         	goto	u16661
 17325   0018BA  EF61  F00C         	goto	u16660
 17326   0018BE                     u16661:
 17327   0018BE  EF80  F00C         	goto	l14308
 17328   0018C2                     u16660:
 17329   0018C2                     
 17330                           ; BSR set to: 0
 17331                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 17332   0018C2  0E02               	movlw	2
 17333   0018C4  6E4F               	movwf	_mediaInformation^0,c
 17334   0018C6                     
 17335                           ; BSR set to: 0
 17336   0018C6  8ABA               	bsf	186,5,c	;volatile
 17337   0018C8                     
 17338                           ; BSR set to: 0
 17339                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 17340   0018C8  0E99               	movlw	low _spiMaster
 17341   0018CA  6EF6               	movwf	tblptrl,c
 17342   0018CC                     	if	1	;There is more than 1 active tblptr byte
 17343   0018CC  0EFF               	movlw	high _spiMaster
 17344   0018CE  6EF7               	movwf	tblptrh,c
 17345   0018D0                     	endif
 17346   0018D0                     	if	1	;There are 3 active tblptr bytes
 17347   0018D0  0E00               	movlw	low (_spiMaster shr (0+16))
 17348   0018D2  6EF8               	movwf	tblptru,c
 17349   0018D4                     	endif
 17350   0018D4  0009               	tblrd		*+
 17351   0018D6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17352   0018DC  0009               	tblrd		*+
 17353   0018DE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17354   0018E4  D802               	call	u16678
 17355   0018E6  EF7E  F00C         	goto	u16679
 17356   0018EA                     u16678:
 17357   0018EA  0005               	push	
 17358   0018EC  6EFA               	movwf	pclath,c
 17359   0018EE  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17360   0018F0  6EFD               	movwf	tosl,c
 17361   0018F2  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17362   0018F4  6EFE               	movwf	tosh,c
 17363   0018F6  6AFF               	clrf	tosu,c
 17364   0018F8  50FA               	movf	pclath,w,c
 17365   0018FA  0012               	return		;indir
 17366   0018FC                     u16679:
 17367   0018FC  EFC3  F00B         	goto	l14262
 17368   001900                     l14308:
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 17372   001900  0EAA               	movlw	170
 17373   001902  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17374   001904  0E01               	movlw	1
 17375   001906  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17376   001908  0E00               	movlw	0
 17377   00190A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17378   00190C  0E00               	movlw	0
 17379   00190E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17380   001910  0E02               	movlw	2
 17381   001912  EC82  F01C         	call	_SD_SendCmd
 17382   001916  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17383   00191A  0E04               	movlw	4
 17384   00191C                     u16681:
 17385   00191C  006F FFAF FFDB     	movff	plusw0,plusw2
 17386   001922  06E8               	decf	wreg,f,c
 17387   001924  E2FB               	bc	u16681
 17388   001926                     
 17389                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 17390   001926  EE20  F0AE         	lfsr	2,SD_SPI_MediaInitialize@response+1
 17391   00192A  0EFF               	movlw	255
 17392   00192C  14DE               	andwf	postinc2,w,c
 17393   00192E  0100               	movlb	0	; () banked
 17394   001930  6F82               	movwf	??_SD_SPI_MediaInitialize& (0+255),b
 17395   001932  0E0F               	movlw	15
 17396   001934  14DE               	andwf	postinc2,w,c
 17397   001936  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 17398   001938  0E00               	movlw	0
 17399   00193A  14DE               	andwf	postinc2,w,c
 17400   00193C  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 17401   00193E  0E00               	movlw	0
 17402   001940  14DE               	andwf	postinc2,w,c
 17403   001942  6F85               	movwf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 17404   001944  0EAA               	movlw	170
 17405   001946  1982               	xorwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17406   001948  E108               	bnz	u16691
 17407   00194A  0583               	decf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17408   00194C  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 17409   00194E  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 17410   001950  A4D8               	btfss	status,2,c
 17411   001952  EFAD  F00C         	goto	u16691
 17412   001956  EFAF  F00C         	goto	u16690
 17413   00195A                     u16691:
 17414   00195A  EF2B  F00D         	goto	l14344
 17415   00195E                     u16690:
 17416   00195E                     
 17417                           ; BSR set to: 0
 17418   00195E  B5AD               	btfsc	SD_SPI_MediaInitialize@response& (0+255),2,b
 17419   001960  EFB4  F00C         	goto	u16701
 17420   001964  EFB6  F00C         	goto	u16700
 17421   001968                     u16701:
 17422   001968  EF2B  F00D         	goto	l14344
 17423   00196C                     u16700:
 17424   00196C                     
 17425                           ; BSR set to: 0
 17426   00196C  0E00               	movlw	0
 17427   00196E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17428   001970  0E00               	movlw	0
 17429   001972  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17430   001974  0E00               	movlw	0
 17431   001976  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17432   001978  0E00               	movlw	0
 17433   00197A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17434   00197C  0E10               	movlw	16
 17435   00197E  EC82  F01C         	call	_SD_SendCmd
 17436   001982                     
 17437                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 17438   001982  0E00               	movlw	0
 17439   001984  0100               	movlb	0	; () banked
 17440   001986  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 17441   001988  0E00               	movlw	0
 17442   00198A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 17443   00198C                     l14322:
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 17447   00198C  0E00               	movlw	0
 17448   00198E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17449   001990  0E00               	movlw	0
 17450   001992  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17451   001994  0E00               	movlw	0
 17452   001996  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17453   001998  0E00               	movlw	0
 17454   00199A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17455   00199C  0E0F               	movlw	15
 17456   00199E  EC82  F01C         	call	_SD_SendCmd
 17457                           
 17458                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 17459   0019A2  0E00               	movlw	0
 17460   0019A4  0100               	movlb	0	; () banked
 17461   0019A6  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17462   0019A8  0E00               	movlw	0
 17463   0019AA  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17464   0019AC  0E00               	movlw	0
 17465   0019AE  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17466   0019B0  0E40               	movlw	64
 17467   0019B2  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17468   0019B4  0E12               	movlw	18
 17469   0019B6  EC82  F01C         	call	_SD_SendCmd
 17470   0019BA  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17471   0019BE  0E04               	movlw	4
 17472   0019C0                     u16711:
 17473   0019C0  006F FFAF FFDB     	movff	plusw0,plusw2
 17474   0019C6  06E8               	decf	wreg,f,c
 17475   0019C8  E2FB               	bc	u16711
 17476   0019CA                     
 17477                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 17478   0019CA  0100               	movlb	0	; () banked
 17479   0019CC  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 17480   0019CE  A4D8               	btfss	status,2,c
 17481   0019D0  EFEC  F00C         	goto	u16721
 17482   0019D4  EFEE  F00C         	goto	u16720
 17483   0019D8                     u16721:
 17484   0019D8  EFF0  F00C         	goto	l14328
 17485   0019DC                     u16720:
 17486   0019DC  EFFC  F00C         	goto	l14332
 17487   0019E0                     l14328:
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 17491   0019E0  4BB2               	infsnz	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 17492   0019E2  2BB3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 17493   0019E4                     
 17494                           ; BSR set to: 0
 17495   0019E4  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17496   0019E6  E106               	bnz	u16731
 17497   0019E8  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17498   0019EA  A4D8               	btfss	status,2,c
 17499   0019EC  EFFA  F00C         	goto	u16731
 17500   0019F0  EFFC  F00C         	goto	u16730
 17501   0019F4                     u16731:
 17502   0019F4  EFC6  F00C         	goto	l14322
 17503   0019F8                     u16730:
 17504   0019F8                     l14332:
 17505                           
 17506                           ; BSR set to: 0
 17507                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 17508   0019F8  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17509   0019FA  E106               	bnz	u16741
 17510   0019FC  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17511   0019FE  A4D8               	btfss	status,2,c
 17512   001A00  EF04  F00D         	goto	u16741
 17513   001A04  EF06  F00D         	goto	u16740
 17514   001A08                     u16741:
 17515   001A08  EF08  F00D         	goto	l14336
 17516   001A0C                     u16740:
 17517   001A0C                     
 17518                           ; BSR set to: 0
 17519                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 17520   001A0C  0E02               	movlw	2
 17521   001A0E  6E4F               	movwf	_mediaInformation^0,c
 17522   001A10                     l14336:
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 17526   001A10  0E00               	movlw	0
 17527   001A12  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17528   001A14  0E00               	movlw	0
 17529   001A16  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17530   001A18  0E00               	movlw	0
 17531   001A1A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17532   001A1C  0E00               	movlw	0
 17533   001A1E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17534   001A20  0E10               	movlw	16
 17535   001A22  EC82  F01C         	call	_SD_SendCmd
 17536   001A26  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17537   001A2A  0E04               	movlw	4
 17538   001A2C                     u16751:
 17539   001A2C  006F FFAF FFDB     	movff	plusw0,plusw2
 17540   001A32  06E8               	decf	wreg,f,c
 17541   001A34  E2FB               	bc	u16751
 17542   001A36                     
 17543                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 17544   001A36  0100               	movlb	0	; () banked
 17545   001A38  ADB1               	btfss	(SD_SPI_MediaInitialize@response+4)& (0+255),6,b
 17546   001A3A  EF21  F00D         	goto	u16761
 17547   001A3E  EF23  F00D         	goto	u16760
 17548   001A42                     u16761:
 17549   001A42  EF27  F00D         	goto	l14342
 17550   001A46                     u16760:
 17551   001A46                     
 17552                           ; BSR set to: 0
 17553                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 17554   001A46  0E01               	movlw	1
 17555   001A48  6E57               	movwf	(_mediaInformation+8)^0,c
 17556                           
 17557                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 17558   001A4A  EF69  F00D         	goto	l1648
 17559   001A4E                     l14342:
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 17563   001A4E  0E00               	movlw	0
 17564   001A50  6E57               	movwf	(_mediaInformation+8)^0,c
 17565   001A52  EF69  F00D         	goto	l1648
 17566   001A56                     l14344:
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 17570   001A56  0E01               	movlw	1
 17571   001A58  EC9A  F041         	call	_SD_SPI_DelayMilliseconds
 17572   001A5C  9ABA               	bcf	186,5,c	;volatile
 17573   001A5E                     
 17574                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 17575   001A5E  0E00               	movlw	0
 17576   001A60  6E57               	movwf	(_mediaInformation+8)^0,c
 17577   001A62                     
 17578                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 17579   001A62  0E1F               	movlw	31
 17580   001A64  0100               	movlb	0	; () banked
 17581   001A66  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 17582   001A68  69B2               	setf	SD_SPI_MediaInitialize@timeout& (0+255),b
 17583   001A6A                     l14352:
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 17587   001A6A  0E00               	movlw	0
 17588   001A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17589   001A6E  0E00               	movlw	0
 17590   001A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17591   001A72  0E00               	movlw	0
 17592   001A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17593   001A76  0E00               	movlw	0
 17594   001A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17595   001A7A  0E01               	movlw	1
 17596   001A7C  EC82  F01C         	call	_SD_SendCmd
 17597   001A80  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17598   001A84  0E04               	movlw	4
 17599   001A86                     u16771:
 17600   001A86  006F FFAF FFDB     	movff	plusw0,plusw2
 17601   001A8C  06E8               	decf	wreg,f,c
 17602   001A8E  E2FB               	bc	u16771
 17603   001A90                     
 17604                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 17605   001A90  0100               	movlb	0	; () banked
 17606   001A92  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 17607   001A94  A0D8               	btfss	status,0,c
 17608   001A96  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 17609   001A98                     
 17610                           ; BSR set to: 0
 17611                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 17612   001A98  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 17613   001A9A  B4D8               	btfsc	status,2,c
 17614   001A9C  EF52  F00D         	goto	u16781
 17615   001AA0  EF54  F00D         	goto	u16780
 17616   001AA4                     u16781:
 17617   001AA4  EF5D  F00D         	goto	l14360
 17618   001AA8                     u16780:
 17619   001AA8                     
 17620                           ; BSR set to: 0
 17621   001AA8  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17622   001AAA  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17623   001AAC  A4D8               	btfss	status,2,c
 17624   001AAE  EF5B  F00D         	goto	u16791
 17625   001AB2  EF5D  F00D         	goto	u16790
 17626   001AB6                     u16791:
 17627   001AB6  EF35  F00D         	goto	l14352
 17628   001ABA                     u16790:
 17629   001ABA                     l14360:
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 17633   001ABA  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17634   001ABC  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17635   001ABE  A4D8               	btfss	status,2,c
 17636   001AC0  EF64  F00D         	goto	u16801
 17637   001AC4  EF66  F00D         	goto	u16800
 17638   001AC8                     u16801:
 17639   001AC8  EF69  F00D         	goto	l1648
 17640   001ACC                     u16800:
 17641   001ACC                     
 17642                           ; BSR set to: 0
 17643                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 17644   001ACC  0E02               	movlw	2
 17645   001ACE  6E4F               	movwf	_mediaInformation^0,c
 17646   001AD0                     
 17647                           ; BSR set to: 0
 17648   001AD0  8ABA               	bsf	186,5,c	;volatile
 17649   001AD2                     l1648:
 17650                           
 17651                           ; BSR set to: 0
 17652   001AD2  8ABA               	bsf	186,5,c	;volatile
 17653   001AD4                     
 17654                           ; BSR set to: 0
 17655                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 17656   001AD4  0E99               	movlw	low _spiMaster
 17657   001AD6  6EF6               	movwf	tblptrl,c
 17658   001AD8                     	if	1	;There is more than 1 active tblptr byte
 17659   001AD8  0EFF               	movlw	high _spiMaster
 17660   001ADA  6EF7               	movwf	tblptrh,c
 17661   001ADC                     	endif
 17662   001ADC                     	if	1	;There are 3 active tblptr bytes
 17663   001ADC  0E00               	movlw	low (_spiMaster shr (0+16))
 17664   001ADE  6EF8               	movwf	tblptru,c
 17665   001AE0                     	endif
 17666   001AE0  0009               	tblrd		*+
 17667   001AE2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17668   001AE8  0009               	tblrd		*+
 17669   001AEA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17670   001AF0  D802               	call	u16818
 17671   001AF2  EF84  F00D         	goto	u16819
 17672   001AF6                     u16818:
 17673   001AF6  0005               	push	
 17674   001AF8  6EFA               	movwf	pclath,c
 17675   001AFA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17676   001AFC  6EFD               	movwf	tosl,c
 17677   001AFE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17678   001B00  6EFE               	movwf	tosh,c
 17679   001B02  6AFF               	clrf	tosu,c
 17680   001B04  50FA               	movf	pclath,w,c
 17681   001B06  0012               	return		;indir
 17682   001B08                     u16819:
 17683   001B08                     
 17684                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 17685   001B08  0E9B               	movlw	low (_spiMaster+2)
 17686   001B0A  6EF6               	movwf	tblptrl,c
 17687   001B0C  0EFF               	movlw	high (_spiMaster+2)
 17688   001B0E  6EF7               	movwf	tblptrh,c
 17689   001B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17690   001B10  6AF8               	clrf	tblptru,c
 17691   001B12                     	endif
 17692   001B12                     	if	0	;tblptru may be non-zero
 17693   001B12                     	endif
 17694   001B12  0009               	tblrd		*+
 17695   001B14  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17696   001B1A  0009               	tblrd		*+
 17697   001B1C  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17698   001B22  D802               	call	u16828
 17699   001B24  EF9E  F00D         	goto	u16829
 17700   001B28                     u16828:
 17701   001B28  0005               	push	
 17702   001B2A  6EFA               	movwf	pclath,c
 17703   001B2C  0100               	movlb	0	; () banked
 17704   001B2E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17705   001B30  6EFD               	movwf	tosl,c
 17706   001B32  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17707   001B34  6EFE               	movwf	tosh,c
 17708   001B36  6AFF               	clrf	tosu,c
 17709   001B38  50FA               	movf	pclath,w,c
 17710   001B3A  0012               	return		;indir
 17711   001B3C                     u16829:
 17712   001B3C  0900               	iorlw	0
 17713   001B3E  A4D8               	btfss	status,2,c
 17714   001B40  EFA4  F00D         	goto	u16831
 17715   001B44  EFA6  F00D         	goto	u16830
 17716   001B48                     u16831:
 17717   001B48  EFA8  F00D         	goto	l1651
 17718   001B4C                     u16830:
 17719   001B4C  EFC3  F00B         	goto	l14262
 17720   001B50                     l1651:
 17721   001B50  9ABA               	bcf	186,5,c	;volatile
 17722   001B52                     
 17723                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 17724   001B52  0E00               	movlw	0
 17725   001B54  0100               	movlb	0	; () banked
 17726   001B56  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 17727   001B58  0E14               	movlw	20
 17728   001B5A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 17729   001B5C                     l14376:
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 17733   001B5C  0E00               	movlw	0
 17734   001B5E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 17735   001B60  0E00               	movlw	0
 17736   001B62  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 17737   001B64  0E00               	movlw	0
 17738   001B66  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 17739   001B68  0E00               	movlw	0
 17740   001B6A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 17741   001B6C  0E03               	movlw	3
 17742   001B6E  EC82  F01C         	call	_SD_SendCmd
 17743   001B72  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 17744   001B76  0E04               	movlw	4
 17745   001B78                     u16841:
 17746   001B78  006F FFAF FFDB     	movff	plusw0,plusw2
 17747   001B7E  06E8               	decf	wreg,f,c
 17748   001B80  E2FB               	bc	u16841
 17749   001B82                     
 17750                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 17751   001B82  0100               	movlb	0	; () banked
 17752   001B84  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 17753   001B86  A0D8               	btfss	status,0,c
 17754   001B88  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 17755   001B8A                     
 17756                           ; BSR set to: 0
 17757                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 17758   001B8A  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 17759   001B8C  B4D8               	btfsc	status,2,c
 17760   001B8E  EFCB  F00D         	goto	u16851
 17761   001B92  EFCD  F00D         	goto	u16850
 17762   001B96                     u16851:
 17763   001B96  EFD6  F00D         	goto	l14384
 17764   001B9A                     u16850:
 17765   001B9A                     
 17766                           ; BSR set to: 0
 17767   001B9A  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17768   001B9C  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17769   001B9E  A4D8               	btfss	status,2,c
 17770   001BA0  EFD4  F00D         	goto	u16861
 17771   001BA4  EFD6  F00D         	goto	u16860
 17772   001BA8                     u16861:
 17773   001BA8  EFAE  F00D         	goto	l14376
 17774   001BAC                     u16860:
 17775   001BAC                     l14384:
 17776                           
 17777                           ; BSR set to: 0
 17778                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 17779   001BAC  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 17780   001BAE  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 17781   001BB0  A4D8               	btfss	status,2,c
 17782   001BB2  EFDD  F00D         	goto	u16871
 17783   001BB6  EFDF  F00D         	goto	u16870
 17784   001BBA                     u16871:
 17785   001BBA  EFFE  F00D         	goto	l14396
 17786   001BBE                     u16870:
 17787   001BBE                     
 17788                           ; BSR set to: 0
 17789                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 17790   001BBE  0E02               	movlw	2
 17791   001BC0  6E4F               	movwf	_mediaInformation^0,c
 17792   001BC2                     
 17793                           ; BSR set to: 0
 17794   001BC2  8ABA               	bsf	186,5,c	;volatile
 17795   001BC4                     
 17796                           ; BSR set to: 0
 17797                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 17798   001BC4  0E99               	movlw	low _spiMaster
 17799   001BC6  6EF6               	movwf	tblptrl,c
 17800   001BC8                     	if	1	;There is more than 1 active tblptr byte
 17801   001BC8  0EFF               	movlw	high _spiMaster
 17802   001BCA  6EF7               	movwf	tblptrh,c
 17803   001BCC                     	endif
 17804   001BCC                     	if	1	;There are 3 active tblptr bytes
 17805   001BCC  0E00               	movlw	low (_spiMaster shr (0+16))
 17806   001BCE  6EF8               	movwf	tblptru,c
 17807   001BD0                     	endif
 17808   001BD0  0009               	tblrd		*+
 17809   001BD2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17810   001BD8  0009               	tblrd		*+
 17811   001BDA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17812   001BE0  D802               	call	u16888
 17813   001BE2  EFFC  F00D         	goto	u16889
 17814   001BE6                     u16888:
 17815   001BE6  0005               	push	
 17816   001BE8  6EFA               	movwf	pclath,c
 17817   001BEA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17818   001BEC  6EFD               	movwf	tosl,c
 17819   001BEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17820   001BF0  6EFE               	movwf	tosh,c
 17821   001BF2  6AFF               	clrf	tosu,c
 17822   001BF4  50FA               	movf	pclath,w,c
 17823   001BF6  0012               	return		;indir
 17824   001BF8                     u16889:
 17825   001BF8  EFC3  F00B         	goto	l14262
 17826   001BFC                     l14396:
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 17830   001BFC  0E00               	movlw	0
 17831   001BFE  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 17832                           
 17833                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 17834   001C00  0E00               	movlw	0
 17835   001C02  6FA8               	movwf	SD_SPI_MediaInitialize@count& (0+255),b
 17836   001C04                     l14402:
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 17840   001C04  51A6               	movf	SD_SPI_MediaInitialize@index& (0+255),w,b
 17841   001C06  0F8D               	addlw	low SD_SPI_MediaInitialize@CSDResponse
 17842   001C08  6ED9               	movwf	fsr2l,c
 17843   001C0A  6ADA               	clrf	fsr2h,c
 17844   001C0C  0E9D               	movlw	low (_spiMaster+4)
 17845   001C0E  6EF6               	movwf	tblptrl,c
 17846   001C10  0EFF               	movlw	high (_spiMaster+4)
 17847   001C12  6EF7               	movwf	tblptrh,c
 17848   001C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17849   001C14  6AF8               	clrf	tblptru,c
 17850   001C16                     	endif
 17851   001C16                     	if	0	;tblptru may be non-zero
 17852   001C16                     	endif
 17853   001C16  0009               	tblrd		*+
 17854   001C18  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 17855   001C1E  0009               	tblrd		*+
 17856   001C20  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 17857   001C26  D802               	call	u16898
 17858   001C28  EF20  F00E         	goto	u16899
 17859   001C2C                     u16898:
 17860   001C2C  0005               	push	
 17861   001C2E  6EFA               	movwf	pclath,c
 17862   001C30  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17863   001C32  6EFD               	movwf	tosl,c
 17864   001C34  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17865   001C36  6EFE               	movwf	tosh,c
 17866   001C38  6AFF               	clrf	tosu,c
 17867   001C3A  50FA               	movf	pclath,w,c
 17868   001C3C  0EFF               	movlw	255
 17869   001C3E  0012               	return		;indir
 17870   001C40                     u16899:
 17871   001C40  6EDF               	movwf	indf2,c
 17872   001C42                     
 17873                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 17874   001C42  0100               	movlb	0	; () banked
 17875   001C44  2BA6               	incf	SD_SPI_MediaInitialize@index& (0+255),f,b
 17876   001C46                     
 17877                           ; BSR set to: 0
 17878                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 17879   001C46  51A8               	movf	SD_SPI_MediaInitialize@count& (0+255),w,b
 17880   001C48  A4D8               	btfss	status,2,c
 17881   001C4A  EF29  F00E         	goto	u16901
 17882   001C4E  EF2B  F00E         	goto	u16900
 17883   001C52                     u16901:
 17884   001C52  EF36  F00E         	goto	l14412
 17885   001C56                     u16900:
 17886   001C56                     
 17887                           ; BSR set to: 0
 17888   001C56  0EFE               	movlw	254
 17889   001C58  198D               	xorwf	SD_SPI_MediaInitialize@CSDResponse& (0+255),w,b
 17890   001C5A  A4D8               	btfss	status,2,c
 17891   001C5C  EF32  F00E         	goto	u16911
 17892   001C60  EF34  F00E         	goto	u16910
 17893   001C64                     u16911:
 17894   001C64  EF36  F00E         	goto	l14412
 17895   001C68                     u16910:
 17896   001C68                     
 17897                           ; BSR set to: 0
 17898                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 17899   001C68  0E00               	movlw	0
 17900   001C6A  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 17901   001C6C                     l14412:
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 17905   001C6C  2BA8               	incf	SD_SPI_MediaInitialize@count& (0+255),f,b
 17906   001C6E                     
 17907                           ; BSR set to: 0
 17908   001C6E  0E13               	movlw	19
 17909   001C70  65A8               	cpfsgt	SD_SPI_MediaInitialize@count& (0+255),b
 17910   001C72  EF3D  F00E         	goto	u16921
 17911   001C76  EF3F  F00E         	goto	u16920
 17912   001C7A                     u16921:
 17913   001C7A  EF02  F00E         	goto	l14402
 17914   001C7E                     u16920:
 17915   001C7E                     
 17916                           ; BSR set to: 0
 17917                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 17918   001C7E  0E02               	movlw	2
 17919   001C80  6E51               	movwf	(_mediaInformation+2)^0,c
 17920   001C82  0E00               	movlw	0
 17921   001C84  6E50               	movwf	(_mediaInformation+1)^0,c
 17922   001C86                     
 17923                           ; BSR set to: 0
 17924                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 17925   001C86  C08D  F082         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 17926   001C8A  0EC0               	movlw	192
 17927   001C8C  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 17928   001C8E  B4D8               	btfsc	status,2,c
 17929   001C90  EF4C  F00E         	goto	u16931
 17930   001C94  EF4E  F00E         	goto	u16930
 17931   001C98                     u16931:
 17932   001C98  EF94  F00E         	goto	l14422
 17933   001C9C                     u16930:
 17934   001C9C                     
 17935                           ; BSR set to: 0
 17936                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 17937   001C9C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 17938   001C9E  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 17939   001CA0  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 17940   001CA2  C094  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 17941   001CA6  0E3F               	movlw	63
 17942   001CA8  1784               	andwf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 17943   001CAA  C084  F085         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 17944   001CAE  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 17945   001CB0  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 17946   001CB2  6B88               	clrf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 17947   001CB4  C086  F088         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 17948   001CB8  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 17949   001CBC  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 17950   001CBE  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 17951   001CC0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17952   001CC2  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 17953   001CC4  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 17954   001CC6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17955   001CC8  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 17956   001CCA  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 17957   001CCC  0E00               	movlw	0
 17958   001CCE  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 17959   001CD0  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 17960   001CD2  0E00               	movlw	0
 17961   001CD4  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 17962   001CD6  6F8C               	movwf	(??_SD_SPI_MediaInitialize+10)& (0+255),b
 17963   001CD8  5196               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)& (0+255),w,b
 17964   001CDA  1189               	iorwf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 17965   001CDC  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 17966   001CDE  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 17967   001CE0  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 17968   001CE2  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 17969   001CE4  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 17970   001CE6  518C               	movf	(??_SD_SPI_MediaInitialize+10)& (0+255),w,b
 17971   001CE8  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 17972                           
 17973                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 17974   001CEA  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 17975   001CEE  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 17976   001CF2  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 17977   001CF6  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 17978   001CFA  0E0A               	movlw	10
 17979   001CFC                     u16945:
 17980   001CFC  90D8               	bcf	status,0,c
 17981   001CFE  3782               	rlcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 17982   001D00  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 17983   001D02  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 17984   001D04  3785               	rlcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 17985   001D06  2EE8               	decfsz	wreg,f,c
 17986   001D08  EF7E  F00E         	goto	u16945
 17987   001D0C  0EFF               	movlw	255
 17988   001D0E  2582               	addwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 17989   001D10  6E53               	movwf	(_mediaInformation+4)^0,c
 17990   001D12  0E03               	movlw	3
 17991   001D14  2183               	addwfc	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 17992   001D16  6E54               	movwf	(_mediaInformation+5)^0,c
 17993   001D18  0E00               	movlw	0
 17994   001D1A  2184               	addwfc	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 17995   001D1C  6E55               	movwf	(_mediaInformation+6)^0,c
 17996   001D1E  0E00               	movlw	0
 17997   001D20  2185               	addwfc	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 17998   001D22  6E56               	movwf	(_mediaInformation+7)^0,c
 17999                           
 18000                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 18001   001D24  EF44  F00F         	goto	l14428
 18002   001D28                     l14422:
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 18006   001D28  5194               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)& (0+255),w,b
 18007   001D2A  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 18008   001D2C  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 18009   001D2E  C093  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 18010   001D32  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 18011   001D34  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 18012   001D36  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 18013   001D38  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 18014   001D3C  C084  F086         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 18015   001D40  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 18016   001D42  6B84               	clrf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 18017   001D44  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18018   001D46  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 18019   001D48  6F88               	movwf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 18020   001D4A  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18021   001D4C  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 18022   001D4E  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 18023   001D50  0E00               	movlw	0
 18024   001D52  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 18025   001D54  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 18026   001D56  0E00               	movlw	0
 18027   001D58  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 18028   001D5A  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 18029   001D5C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 18030   001D5E  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 18031   001D60  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 18032   001D62  5189               	movf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 18033   001D64  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 18034   001D66  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 18035   001D68  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 18036   001D6A  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 18037   001D6C  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 18038                           
 18039                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 18040   001D6E  0EC0               	movlw	192
 18041   001D70  17A9               	andwf	SD_SPI_MediaInitialize@c_size& (0+255),f,b
 18042   001D72  0EFF               	movlw	255
 18043   001D74  17AA               	andwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),f,b
 18044   001D76  0E03               	movlw	3
 18045   001D78  17AB               	andwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),f,b
 18046   001D7A  0E00               	movlw	0
 18047   001D7C  17AC               	andwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),f,b
 18048                           
 18049                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 18050   001D7E  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 18051   001D82  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 18052   001D86  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 18053   001D8A  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 18054   001D8E  0E07               	movlw	7
 18055   001D90  EFCF  F00E         	goto	u16950
 18056   001D94                     u16955:
 18057   001D94  90D8               	bcf	status,0,c
 18058   001D96  3385               	rrcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 18059   001D98  3384               	rrcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 18060   001D9A  3383               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 18061   001D9C  3382               	rrcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18062   001D9E                     u16950:
 18063   001D9E  2EE8               	decfsz	wreg,f,c
 18064   001DA0  EFCA  F00E         	goto	u16955
 18065   001DA4  C082  F0A9         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 18066   001DA8  C083  F0AA         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 18067   001DAC  C084  F0AB         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 18068   001DB0  C085  F0AC         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 18069                           
 18070                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 18071   001DB4  C096  F082         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 18072   001DB8  0E03               	movlw	3
 18073   001DBA  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18074   001DBC  6B83               	clrf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 18075   001DBE  AF97               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)& (0+255),7,b
 18076   001DC0  D001               	bra	u16965
 18077   001DC2  2B83               	incf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 18078   001DC4                     u16965:
 18079   001DC4  3183               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18080   001DC6  3582               	rlcf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18081   001DC8  6FA5               	movwf	SD_SPI_MediaInitialize@c_size_mult& (0+255),b
 18082                           
 18083                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 18084   001DCA  5192               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)& (0+255),w,b
 18085   001DCC  0B0F               	andlw	15
 18086   001DCE  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 18087                           
 18088                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 18089   001DD0  C0A7  F082         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 18090   001DD4  0EF7               	movlw	-9
 18091   001DD6  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18092   001DD8  0E01               	movlw	1
 18093   001DDA  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 18094   001DDC  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18095   001DDE  EFF3  F00E         	goto	u16974
 18096   001DE2                     u16975:
 18097   001DE2  90D8               	bcf	status,0,c
 18098   001DE4  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 18099   001DE6                     u16974:
 18100   001DE6  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 18101   001DE8  EFF1  F00E         	goto	u16975
 18102   001DEC  0100               	movlb	0	; () banked
 18103   001DEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18104   001DF0  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 18105   001DF2                     
 18106                           ; BSR set to: 0
 18107                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 18108   001DF2  0E01               	movlw	1
 18109   001DF4  25A9               	addwf	SD_SPI_MediaInitialize@c_size& (0+255),w,b
 18110   001DF6  6F60               	movwf	___lmul@multiplier& (0+255),b
 18111   001DF8  0E00               	movlw	0
 18112   001DFA  21AA               	addwfc	(SD_SPI_MediaInitialize@c_size+1)& (0+255),w,b
 18113   001DFC  6F61               	movwf	(___lmul@multiplier+1)& (0+255),b
 18114   001DFE  0E00               	movlw	0
 18115   001E00  21AB               	addwfc	(SD_SPI_MediaInitialize@c_size+2)& (0+255),w,b
 18116   001E02  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18117   001E04  0E00               	movlw	0
 18118   001E06  21AC               	addwfc	(SD_SPI_MediaInitialize@c_size+3)& (0+255),w,b
 18119   001E08  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18120   001E0A  C0A5  F082         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 18121   001E0E  0E02               	movlw	2
 18122   001E10  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18123   001E12  0E01               	movlw	1
 18124   001E14  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 18125   001E16  0E00               	movlw	0
 18126   001E18  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 18127   001E1A  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 18128   001E1C  EF13  F00F         	goto	u16984
 18129   001E20                     u16985:
 18130   001E20  90D8               	bcf	status,0,c
 18131   001E22  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 18132   001E24  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 18133   001E26                     u16984:
 18134   001E26  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 18135   001E28  EF10  F00F         	goto	u16985
 18136   001E2C  C083  F064         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 18137   001E30  C084  F065         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 18138   001E34  0100               	movlb	0	; () banked
 18139   001E36  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18140   001E38  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18141   001E3A  EC07  F042         	call	___lmul
 18142   001E3E  C060  F0A1         	movff	?___lmul,_SD_SPI_MediaInitialize$6394
 18143   001E42  C061  F0A2         	movff	?___lmul+1,_SD_SPI_MediaInitialize$6394+1
 18144   001E46  C062  F0A3         	movff	?___lmul+2,_SD_SPI_MediaInitialize$6394+2
 18145   001E4A  C063  F0A4         	movff	?___lmul+3,_SD_SPI_MediaInitialize$6394+3
 18146   001E4E                     
 18147                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 18148   001E4E  C0A1  F060         	movff	_SD_SPI_MediaInitialize$6394,___lmul@multiplier
 18149   001E52  C0A2  F061         	movff	_SD_SPI_MediaInitialize$6394+1,___lmul@multiplier+1
 18150   001E56  C0A3  F062         	movff	_SD_SPI_MediaInitialize$6394+2,___lmul@multiplier+2
 18151   001E5A  C0A4  F063         	movff	_SD_SPI_MediaInitialize$6394+3,___lmul@multiplier+3
 18152   001E5E  0100               	movlb	0	; () banked
 18153   001E60  51A7               	movf	SD_SPI_MediaInitialize@block_len& (0+255),w,b
 18154   001E62  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18155   001E64  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18156   001E66  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18157   001E68  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18158   001E6A  EC07  F042         	call	___lmul	;wreg free
 18159   001E6E  0EFF               	movlw	255
 18160   001E70  0100               	movlb	0	; () banked
 18161   001E72  2560               	addwf	?___lmul& (0+255),w,b
 18162   001E74  6E53               	movwf	(_mediaInformation+4)^0,c
 18163   001E76  0EFF               	movlw	255
 18164   001E78  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18165   001E7A  6E54               	movwf	(_mediaInformation+5)^0,c
 18166   001E7C  0EFF               	movlw	255
 18167   001E7E  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18168   001E80  6E55               	movwf	(_mediaInformation+6)^0,c
 18169   001E82  0EFF               	movlw	255
 18170   001E84  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18171   001E86  6E56               	movwf	(_mediaInformation+7)^0,c
 18172   001E88                     l14428:
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 18176   001E88  0E00               	movlw	0
 18177   001E8A  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 18178   001E8C  0E00               	movlw	0
 18179   001E8E  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 18180   001E90  0E00               	movlw	0
 18181   001E92  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 18182   001E94  0E00               	movlw	0
 18183   001E96  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 18184   001E98  0E11               	movlw	17
 18185   001E9A  EC82  F01C         	call	_SD_SendCmd
 18186   001E9E                     
 18187                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 18188   001E9E  C050  F06B         	movff	_mediaInformation+1,SD_SendCmd@address
 18189   001EA2  C051  F06C         	movff	_mediaInformation+2,SD_SendCmd@address+1
 18190   001EA6  0100               	movlb	0	; () banked
 18191   001EA8  6B6D               	clrf	(SD_SendCmd@address+2)& (0+255),b
 18192   001EAA  6B6E               	clrf	(SD_SendCmd@address+3)& (0+255),b
 18193   001EAC  0E07               	movlw	7
 18194   001EAE  EC82  F01C         	call	_SD_SendCmd
 18195   001EB2  8ABA               	bsf	186,5,c	;volatile
 18196   001EB4                     
 18197                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 18198   001EB4  504F               	movf	_mediaInformation^0,w,c
 18199   001EB6  A4D8               	btfss	status,2,c
 18200   001EB8  EF60  F00F         	goto	u16991
 18201   001EBC  EF62  F00F         	goto	u16990
 18202   001EC0                     u16991:
 18203   001EC0  EF82  F00F         	goto	l14444
 18204   001EC4                     u16990:
 18205   001EC4                     
 18206                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 18207   001EC4  0E01               	movlw	1
 18208   001EC6  6E52               	movwf	(_mediaInformation+3)^0,c
 18209   001EC8                     
 18210                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 18211   001EC8  0E99               	movlw	low _spiMaster
 18212   001ECA  6EF6               	movwf	tblptrl,c
 18213   001ECC                     	if	1	;There is more than 1 active tblptr byte
 18214   001ECC  0EFF               	movlw	high _spiMaster
 18215   001ECE  6EF7               	movwf	tblptrh,c
 18216   001ED0                     	endif
 18217   001ED0                     	if	1	;There are 3 active tblptr bytes
 18218   001ED0  0E00               	movlw	low (_spiMaster shr (0+16))
 18219   001ED2  6EF8               	movwf	tblptru,c
 18220   001ED4                     	endif
 18221   001ED4  0009               	tblrd		*+
 18222   001ED6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18223   001EDC  0009               	tblrd		*+
 18224   001EDE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18225   001EE4  D802               	call	u17008
 18226   001EE6  EF7F  F00F         	goto	u17009
 18227   001EEA                     u17008:
 18228   001EEA  0005               	push	
 18229   001EEC  6EFA               	movwf	pclath,c
 18230   001EEE  0100               	movlb	0	; () banked
 18231   001EF0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18232   001EF2  6EFD               	movwf	tosl,c
 18233   001EF4  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18234   001EF6  6EFE               	movwf	tosh,c
 18235   001EF8  6AFF               	clrf	tosu,c
 18236   001EFA  50FA               	movf	pclath,w,c
 18237   001EFC  0012               	return		;indir
 18238   001EFE                     u17009:
 18239   001EFE                     
 18240                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 18241   001EFE  0E01               	movlw	1
 18242   001F00  EF9F  F00F         	goto	l1611
 18243   001F04                     l14444:
 18244                           
 18245                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 18246   001F04  0E99               	movlw	low _spiMaster
 18247   001F06  6EF6               	movwf	tblptrl,c
 18248   001F08                     	if	1	;There is more than 1 active tblptr byte
 18249   001F08  0EFF               	movlw	high _spiMaster
 18250   001F0A  6EF7               	movwf	tblptrh,c
 18251   001F0C                     	endif
 18252   001F0C                     	if	1	;There are 3 active tblptr bytes
 18253   001F0C  0E00               	movlw	low (_spiMaster shr (0+16))
 18254   001F0E  6EF8               	movwf	tblptru,c
 18255   001F10                     	endif
 18256   001F10  0009               	tblrd		*+
 18257   001F12  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 18258   001F18  0009               	tblrd		*+
 18259   001F1A  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 18260   001F20  D802               	call	u17018
 18261   001F22  EF9D  F00F         	goto	u17019
 18262   001F26                     u17018:
 18263   001F26  0005               	push	
 18264   001F28  6EFA               	movwf	pclath,c
 18265   001F2A  0100               	movlb	0	; () banked
 18266   001F2C  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 18267   001F2E  6EFD               	movwf	tosl,c
 18268   001F30  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 18269   001F32  6EFE               	movwf	tosh,c
 18270   001F34  6AFF               	clrf	tosu,c
 18271   001F36  50FA               	movf	pclath,w,c
 18272   001F38  0012               	return		;indir
 18273   001F3A                     u17019:
 18274   001F3A  EFC3  F00B         	goto	l14262
 18275   001F3E                     l1611:
 18276   001F3E  0012               	return		;funcret
 18277   001F40                     __end_of_SD_SPI_MediaInitialize:
 18278                           	callstack 0
 18279                           
 18280 ;; *************** function ___lmul *****************
 18281 ;; Defined at:
 18282 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 18283 ;; Parameters:    Size  Location     Type
 18284 ;;  multiplier      4    0[BANK0 ] unsigned long 
 18285 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 18286 ;; Auto vars:     Size  Location     Type
 18287 ;;  product         4    8[BANK0 ] unsigned long 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  4    0[BANK0 ] unsigned long 
 18290 ;; Registers used:
 18291 ;;		wreg, status,2, status,0
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18297 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18300 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18301 ;;Total ram usage:       12 bytes
 18302 ;; Hardware stack levels used: 1
 18303 ;; Hardware stack levels required when called: 5
 18304 ;; This function calls:
 18305 ;;		Nothing
 18306 ;; This function is called by:
 18307 ;;		_clst2sect
 18308 ;;		_find_volume
 18309 ;;		_SD_SPI_MediaInitialize
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           	psect	text60
 18314   00840E                     __ptext60:
 18315                           	callstack 0
 18316   00840E                     ___lmul:
 18317                           	callstack 22
 18318   00840E  0E00               	movlw	0
 18319   008410  0100               	movlb	0	; () banked
 18320   008412  6F68               	movwf	___lmul@product& (0+255),b
 18321   008414  0E00               	movlw	0
 18322   008416  6F69               	movwf	(___lmul@product+1)& (0+255),b
 18323   008418  0E00               	movlw	0
 18324   00841A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 18325   00841C  0E00               	movlw	0
 18326   00841E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 18327   008420                     l13920:
 18328                           
 18329                           ; BSR set to: 0
 18330   008420  A160               	btfss	___lmul@multiplier& (0+255),0,b
 18331   008422  EF15  F042         	goto	u15921
 18332   008426  EF17  F042         	goto	u15920
 18333   00842A                     u15921:
 18334   00842A  EF1F  F042         	goto	l13924
 18335   00842E                     u15920:
 18336   00842E                     
 18337                           ; BSR set to: 0
 18338   00842E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 18339   008430  2768               	addwf	___lmul@product& (0+255),f,b
 18340   008432  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 18341   008434  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 18342   008436  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 18343   008438  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 18344   00843A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 18345   00843C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 18346   00843E                     l13924:
 18347                           
 18348                           ; BSR set to: 0
 18349   00843E  90D8               	bcf	status,0,c
 18350   008440  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 18351   008442  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 18352   008444  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 18353   008446  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 18354   008448                     
 18355                           ; BSR set to: 0
 18356   008448  90D8               	bcf	status,0,c
 18357   00844A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 18358   00844C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 18359   00844E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 18360   008450  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 18361   008452  5160               	movf	___lmul@multiplier& (0+255),w,b
 18362   008454  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 18363   008456  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 18364   008458  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 18365   00845A  A4D8               	btfss	status,2,c
 18366   00845C  EF32  F042         	goto	u15931
 18367   008460  EF34  F042         	goto	u15930
 18368   008464                     u15931:
 18369   008464  EF10  F042         	goto	l13920
 18370   008468                     u15930:
 18371   008468                     
 18372                           ; BSR set to: 0
 18373   008468  C068  F060         	movff	___lmul@product,?___lmul
 18374   00846C  C069  F061         	movff	___lmul@product+1,?___lmul+1
 18375   008470  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 18376   008474  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 18377   008478                     
 18378                           ; BSR set to: 0
 18379   008478  0012               	return		;funcret
 18380   00847A                     __end_of___lmul:
 18381                           	callstack 0
 18382                           
 18383 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 18384 ;; Defined at:
 18385 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  milliseconds    1    wreg     unsigned char 
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;  milliseconds    1    3[BANK0 ] unsigned char 
 18390 ;;  timeout         2    4[BANK0 ] unsigned short 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  1    wreg      void 
 18393 ;; Registers used:
 18394 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18401 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;Total ram usage:        5 bytes
 18405 ;; Hardware stack levels used: 1
 18406 ;; Hardware stack levels required when called: 6
 18407 ;; This function calls:
 18408 ;;		_SPI1_ExchangeByte
 18409 ;; This function is called by:
 18410 ;;		_SD_SPI_MediaInitialize
 18411 ;; This function uses a non-reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text61
 18415   008334                     __ptext61:
 18416                           	callstack 0
 18417   008334                     _SD_SPI_DelayMilliseconds:
 18418                           	callstack 19
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;incstack = 0
 18422                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 18423   008334  0100               	movlb	0	; () banked
 18424   008336  6F63               	movwf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),b
 18425   008338                     
 18426                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 18427   008338  0100               	movlb	0	; () banked
 18428   00833A  5163               	movf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),w,b
 18429   00833C  0D32               	mullw	50
 18430   00833E  006F FFCC  F064    	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 18431   008344  006F FFD0  F065    	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 18432   00834A                     
 18433                           ; BSR set to: 0
 18434   00834A  8ABA               	bsf	186,5,c	;volatile
 18435   00834C  EFC2  F041         	goto	l14232
 18436   008350                     l14230:
 18437                           
 18438                           ; BSR set to: 0
 18439                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 18440   008350  0E9D               	movlw	low (_spiMaster+4)
 18441   008352  6EF6               	movwf	tblptrl,c
 18442   008354  0EFF               	movlw	high (_spiMaster+4)
 18443   008356  6EF7               	movwf	tblptrh,c
 18444   008358                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18445   008358  6AF8               	clrf	tblptru,c
 18446   00835A                     	endif
 18447   00835A                     	if	0	;tblptru may be non-zero
 18448   00835A                     	endif
 18449   00835A  0009               	tblrd		*+
 18450   00835C  006F FFD4  F061    	movff	tablat,??_SD_SPI_DelayMilliseconds
 18451   008362  0009               	tblrd		*+
 18452   008364  006F FFD4  F062    	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 18453   00836A  D802               	call	u16528
 18454   00836C  EFC2  F041         	goto	u16529
 18455   008370                     u16528:
 18456   008370  0005               	push	
 18457   008372  6EFA               	movwf	pclath,c
 18458   008374  5161               	movf	??_SD_SPI_DelayMilliseconds& (0+255),w,b
 18459   008376  6EFD               	movwf	tosl,c
 18460   008378  5162               	movf	(??_SD_SPI_DelayMilliseconds+1)& (0+255),w,b
 18461   00837A  6EFE               	movwf	tosh,c
 18462   00837C  6AFF               	clrf	tosu,c
 18463   00837E  50FA               	movf	pclath,w,c
 18464   008380  0EFF               	movlw	255
 18465   008382  0012               	return		;indir
 18466   008384                     u16529:
 18467   008384                     l14232:
 18468                           
 18469                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 18470   008384  0100               	movlb	0	; () banked
 18471   008386  0764               	decf	SD_SPI_DelayMilliseconds@timeout& (0+255),f,b
 18472   008388  A0D8               	btfss	status,0,c
 18473   00838A  0765               	decf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),f,b
 18474   00838C  2964               	incf	SD_SPI_DelayMilliseconds@timeout& (0+255),w,b
 18475   00838E  E106               	bnz	u16531
 18476   008390  2965               	incf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),w,b
 18477   008392  A4D8               	btfss	status,2,c
 18478   008394  EFCE  F041         	goto	u16531
 18479   008398  EFD0  F041         	goto	u16530
 18480   00839C                     u16531:
 18481   00839C  EFA8  F041         	goto	l14230
 18482   0083A0                     u16530:
 18483   0083A0                     
 18484                           ; BSR set to: 0
 18485   0083A0  0012               	return		;funcret
 18486   0083A2                     __end_of_SD_SPI_DelayMilliseconds:
 18487                           	callstack 0
 18488                           
 18489 ;; *************** function _check_fs *****************
 18490 ;; Defined at:
 18491 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 18492 ;; Parameters:    Size  Location     Type
 18493 ;;  fs              2  115[BANK0 ] PTR struct .
 18494 ;;		 -> FatFs(563), NULL(0), 
 18495 ;;  sect            4  117[BANK0 ] unsigned long 
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  1    wreg      unsigned char 
 18500 ;; Registers used:
 18501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18507 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18511 ;;Total ram usage:        7 bytes
 18512 ;; Hardware stack levels used: 1
 18513 ;; Hardware stack levels required when called: 12
 18514 ;; This function calls:
 18515 ;;		_ld_word
 18516 ;;		_mem_cmp
 18517 ;;		_move_window
 18518 ;; This function is called by:
 18519 ;;		_find_volume
 18520 ;; This function uses a non-reentrant model
 18521 ;;
 18522                           
 18523                           	psect	text62
 18524   006AE4                     __ptext62:
 18525                           	callstack 0
 18526   006AE4                     _check_fs:
 18527                           	callstack 15
 18528   006AE4                     
 18529                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 18530   006AE4  0100               	movlb	0	; () banked
 18531   006AE6  EE20 F003          	lfsr	2,3
 18532   006AEA  51D3               	movf	check_fs@fs& (0+255),w,b
 18533   006AEC  26D9               	addwf	fsr2l,f,c
 18534   006AEE  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 18535   006AF0  22DA               	addwfc	fsr2h,f,c
 18536   006AF2  6ADF               	clrf	indf2,c
 18537   006AF4  EE20 F02F          	lfsr	2,47
 18538   006AF8  51D3               	movf	check_fs@fs& (0+255),w,b
 18539   006AFA  26D9               	addwf	fsr2l,f,c
 18540   006AFC  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 18541   006AFE  22DA               	addwfc	fsr2h,f,c
 18542   006B00  0EFF               	movlw	255
 18543   006B02  6EDE               	movwf	postinc2,c
 18544   006B04  0EFF               	movlw	255
 18545   006B06  6EDE               	movwf	postinc2,c
 18546   006B08  0EFF               	movlw	255
 18547   006B0A  6EDE               	movwf	postinc2,c
 18548   006B0C  0EFF               	movlw	255
 18549   006B0E  6EDD               	movwf	postdec2,c
 18550   006B10                     
 18551                           ; BSR set to: 0
 18552                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 18553   006B10  C0D3  F0C8         	movff	check_fs@fs,move_window@fs
 18554   006B14  C0D4  F0C9         	movff	check_fs@fs+1,move_window@fs+1
 18555   006B18  C0D5  F0CA         	movff	check_fs@sect,move_window@sector
 18556   006B1C  C0D6  F0CB         	movff	check_fs@sect+1,move_window@sector+1
 18557   006B20  C0D7  F0CC         	movff	check_fs@sect+2,move_window@sector+2
 18558   006B24  C0D8  F0CD         	movff	check_fs@sect+3,move_window@sector+3
 18559   006B28  ECBF  F03D         	call	_move_window
 18560   006B2C  0900               	iorlw	0
 18561   006B2E  B4D8               	btfsc	status,2,c
 18562   006B30  EF9C  F035         	goto	u17941
 18563   006B34  EF9E  F035         	goto	u17940
 18564   006B38                     u17941:
 18565   006B38  EFA1  F035         	goto	l15004
 18566   006B3C                     u17940:
 18567   006B3C  0E04               	movlw	4
 18568   006B3E  EF21  F036         	goto	l1201
 18569   006B42                     l15004:
 18570                           
 18571                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 18572   006B42  0E31               	movlw	49
 18573   006B44  0100               	movlb	0	; () banked
 18574   006B46  25D3               	addwf	check_fs@fs& (0+255),w,b
 18575   006B48  6F60               	movwf	ld_word@ptr& (0+255),b
 18576   006B4A  0E02               	movlw	2
 18577   006B4C  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 18578   006B4E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 18579   006B50  ECB5  F044         	call	_ld_word	;wreg free
 18580   006B54  0E55               	movlw	85
 18581   006B56  0100               	movlb	0	; () banked
 18582   006B58  1960               	xorwf	?_ld_word& (0+255),w,b
 18583   006B5A  E109               	bnz	u17950
 18584   006B5C  0EAA               	movlw	170
 18585   006B5E  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 18586   006B60  B4D8               	btfsc	status,2,c
 18587   006B62  EFB5  F035         	goto	u17951
 18588   006B66  EFB7  F035         	goto	u17950
 18589   006B6A                     u17951:
 18590   006B6A  EFBA  F035         	goto	l15010
 18591   006B6E                     u17950:
 18592   006B6E                     
 18593                           ; BSR set to: 0
 18594   006B6E  0E03               	movlw	3
 18595   006B70  EF21  F036         	goto	l1201
 18596   006B74                     l15010:
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 18600   006B74  EE20 F033          	lfsr	2,51
 18601   006B78  51D3               	movf	check_fs@fs& (0+255),w,b
 18602   006B7A  26D9               	addwf	fsr2l,f,c
 18603   006B7C  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 18604   006B7E  22DA               	addwfc	fsr2h,f,c
 18605   006B80  0EE9               	movlw	233
 18606   006B82  18DE               	xorwf	postinc2,w,c
 18607   006B84  B4D8               	btfsc	status,2,c
 18608   006B86  EFC7  F035         	goto	u17961
 18609   006B8A  EFC9  F035         	goto	u17960
 18610   006B8E                     u17961:
 18611   006B8E  EFE7  F035         	goto	l15016
 18612   006B92                     u17960:
 18613   006B92                     
 18614                           ; BSR set to: 0
 18615   006B92  EE20 F033          	lfsr	2,51
 18616   006B96  51D3               	movf	check_fs@fs& (0+255),w,b
 18617   006B98  26D9               	addwf	fsr2l,f,c
 18618   006B9A  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 18619   006B9C  22DA               	addwfc	fsr2h,f,c
 18620   006B9E  0EEB               	movlw	235
 18621   006BA0  18DE               	xorwf	postinc2,w,c
 18622   006BA2  B4D8               	btfsc	status,2,c
 18623   006BA4  EFD6  F035         	goto	u17971
 18624   006BA8  EFD8  F035         	goto	u17970
 18625   006BAC                     u17971:
 18626   006BAC  EFE7  F035         	goto	l15016
 18627   006BB0                     u17970:
 18628   006BB0                     
 18629                           ; BSR set to: 0
 18630   006BB0  EE20 F033          	lfsr	2,51
 18631   006BB4  51D3               	movf	check_fs@fs& (0+255),w,b
 18632   006BB6  26D9               	addwf	fsr2l,f,c
 18633   006BB8  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 18634   006BBA  22DA               	addwfc	fsr2h,f,c
 18635   006BBC  0EE8               	movlw	232
 18636   006BBE  18DE               	xorwf	postinc2,w,c
 18637   006BC0  A4D8               	btfss	status,2,c
 18638   006BC2  EFE5  F035         	goto	u17981
 18639   006BC6  EFE7  F035         	goto	u17980
 18640   006BCA                     u17981:
 18641   006BCA  EF20  F036         	goto	l15028
 18642   006BCE                     u17980:
 18643   006BCE                     l15016:
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 18647   006BCE  0E69               	movlw	105
 18648   006BD0  25D3               	addwf	check_fs@fs& (0+255),w,b
 18649   006BD2  6F60               	movwf	mem_cmp@dst& (0+255),b
 18650   006BD4  0E00               	movlw	0
 18651   006BD6  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 18652   006BD8  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 18653   006BDA  0EFA               	movlw	low STR_3
 18654   006BDC  6F62               	movwf	mem_cmp@src& (0+255),b
 18655   006BDE  0EFF               	movlw	high STR_3
 18656   006BE0  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 18657   006BE2  0E00               	movlw	0
 18658   006BE4  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 18659   006BE6  0E03               	movlw	3
 18660   006BE8  6F64               	movwf	mem_cmp@cnt& (0+255),b
 18661   006BEA  EC96  F03F         	call	_mem_cmp	;wreg free
 18662   006BEE  0100               	movlb	0	; () banked
 18663   006BF0  5160               	movf	?_mem_cmp& (0+255),w,b
 18664   006BF2  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 18665   006BF4  A4D8               	btfss	status,2,c
 18666   006BF6  EFFF  F035         	goto	u17991
 18667   006BFA  EF01  F036         	goto	u17990
 18668   006BFE                     u17991:
 18669   006BFE  EF04  F036         	goto	l15022
 18670   006C02                     u17990:
 18671   006C02                     l15018:
 18672                           
 18673                           ; BSR set to: 0
 18674   006C02  0E00               	movlw	0
 18675   006C04  EF21  F036         	goto	l1201
 18676   006C08                     l15022:
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 18680   006C08  0E85               	movlw	133
 18681   006C0A  25D3               	addwf	check_fs@fs& (0+255),w,b
 18682   006C0C  6F60               	movwf	mem_cmp@dst& (0+255),b
 18683   006C0E  0E00               	movlw	0
 18684   006C10  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 18685   006C12  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 18686   006C14  0EF4               	movlw	low STR_5
 18687   006C16  6F62               	movwf	mem_cmp@src& (0+255),b
 18688   006C18  0EFF               	movlw	high STR_5
 18689   006C1A  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 18690   006C1C  0E00               	movlw	0
 18691   006C1E  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 18692   006C20  0E05               	movlw	5
 18693   006C22  6F64               	movwf	mem_cmp@cnt& (0+255),b
 18694   006C24  EC96  F03F         	call	_mem_cmp	;wreg free
 18695   006C28  0100               	movlb	0	; () banked
 18696   006C2A  5160               	movf	?_mem_cmp& (0+255),w,b
 18697   006C2C  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 18698   006C2E  A4D8               	btfss	status,2,c
 18699   006C30  EF1C  F036         	goto	u18001
 18700   006C34  EF1E  F036         	goto	u18000
 18701   006C38                     u18001:
 18702   006C38  EF20  F036         	goto	l15028
 18703   006C3C                     u18000:
 18704   006C3C  EF01  F036         	goto	l15018
 18705   006C40                     l15028:
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 18709   006C40  0E02               	movlw	2
 18710   006C42                     l1201:
 18711   006C42  0012               	return		;funcret
 18712   006C44                     __end_of_check_fs:
 18713                           	callstack 0
 18714                           
 18715 ;; *************** function _move_window *****************
 18716 ;; Defined at:
 18717 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;  fs              2  104[BANK0 ] PTR struct .
 18720 ;;		 -> FatFs(563), NULL(0), 
 18721 ;;  sector          4  106[BANK0 ] unsigned long 
 18722 ;; Auto vars:     Size  Location     Type
 18723 ;;  res             1  114[BANK0 ] enum E68
 18724 ;; Return value:  Size  Location     Type
 18725 ;;                  1    wreg      enum E68
 18726 ;; Registers used:
 18727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18728 ;; Tracked objects:
 18729 ;;		On entry : 0/0
 18730 ;;		On exit  : 0/0
 18731 ;;		Unchanged: 0/0
 18732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18733 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18735 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18736 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18737 ;;Total ram usage:       11 bytes
 18738 ;; Hardware stack levels used: 1
 18739 ;; Hardware stack levels required when called: 11
 18740 ;; This function calls:
 18741 ;;		_disk_read
 18742 ;;		_sync_window
 18743 ;; This function is called by:
 18744 ;;		_get_fat
 18745 ;;		_put_fat
 18746 ;;		_dir_alloc
 18747 ;;		_dir_find
 18748 ;;		_dir_register
 18749 ;;		_check_fs
 18750 ;;		_find_volume
 18751 ;;		_f_open
 18752 ;;		_f_sync
 18753 ;; This function uses a non-reentrant model
 18754 ;;
 18755                           
 18756                           	psect	text63
 18757   007B7E                     __ptext63:
 18758                           	callstack 0
 18759   007B7E                     _move_window:
 18760                           	callstack 15
 18761   007B7E                     
 18762                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 18763   007B7E  0E00               	movlw	0
 18764   007B80  0100               	movlb	0	; () banked
 18765   007B82  6FD2               	movwf	move_window@res& (0+255),b
 18766   007B84                     
 18767                           ; BSR set to: 0
 18768                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 18769   007B84  EE20 F02F          	lfsr	2,47
 18770   007B88  51C8               	movf	move_window@fs& (0+255),w,b
 18771   007B8A  26D9               	addwf	fsr2l,f,c
 18772   007B8C  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 18773   007B8E  22DA               	addwfc	fsr2h,f,c
 18774   007B90  51CA               	movf	move_window@sector& (0+255),w,b
 18775   007B92  18DE               	xorwf	postinc2,w,c
 18776   007B94  E10F               	bnz	u15890
 18777   007B96  51CB               	movf	(move_window@sector+1)& (0+255),w,b
 18778   007B98  18DE               	xorwf	postinc2,w,c
 18779   007B9A  E10C               	bnz	u15890
 18780   007B9C  51CC               	movf	(move_window@sector+2)& (0+255),w,b
 18781   007B9E  18DE               	xorwf	postinc2,w,c
 18782   007BA0  E109               	bnz	u15890
 18783   007BA2  51CD               	movf	(move_window@sector+3)& (0+255),w,b
 18784   007BA4  18DE               	xorwf	postinc2,w,c
 18785   007BA6  B4D8               	btfsc	status,2,c
 18786   007BA8  EFD8  F03D         	goto	u15891
 18787   007BAC  EFDA  F03D         	goto	u15890
 18788   007BB0                     u15891:
 18789   007BB0  EF27  F03E         	goto	l13914
 18790   007BB4                     u15890:
 18791   007BB4                     
 18792                           ; BSR set to: 0
 18793                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 18794   007BB4  C0C8  F0B5         	movff	move_window@fs,sync_window@fs
 18795   007BB8  C0C9  F0B6         	movff	move_window@fs+1,sync_window@fs+1
 18796   007BBC  EC8B  F031         	call	_sync_window	;wreg free
 18797   007BC0  0100               	movlb	0	; () banked
 18798   007BC2  6FD2               	movwf	move_window@res& (0+255),b
 18799   007BC4                     
 18800                           ; BSR set to: 0
 18801                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 18802   007BC4  51D2               	movf	move_window@res& (0+255),w,b
 18803   007BC6  A4D8               	btfss	status,2,c
 18804   007BC8  EFE8  F03D         	goto	u15901
 18805   007BCC  EFEA  F03D         	goto	u15900
 18806   007BD0                     u15901:
 18807   007BD0  EF27  F03E         	goto	l13914
 18808   007BD4                     u15900:
 18809   007BD4                     
 18810                           ; BSR set to: 0
 18811                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 18812   007BD4  0E33               	movlw	51
 18813   007BD6  25C8               	addwf	move_window@fs& (0+255),w,b
 18814   007BD8  6FA8               	movwf	disk_read@buff& (0+255),b
 18815   007BDA  0E00               	movlw	0
 18816   007BDC  21C9               	addwfc	(move_window@fs+1)& (0+255),w,b
 18817   007BDE  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
 18818   007BE0  C0CA  F0AA         	movff	move_window@sector,disk_read@sector
 18819   007BE4  C0CB  F0AB         	movff	move_window@sector+1,disk_read@sector+1
 18820   007BE8  C0CC  F0AC         	movff	move_window@sector+2,disk_read@sector+2
 18821   007BEC  C0CD  F0AD         	movff	move_window@sector+3,disk_read@sector+3
 18822   007BF0  0E00               	movlw	0
 18823   007BF2  6FAF               	movwf	(disk_read@count+1)& (0+255),b
 18824   007BF4  0E01               	movlw	1
 18825   007BF6  6FAE               	movwf	disk_read@count& (0+255),b
 18826   007BF8  EE20 F001          	lfsr	2,1
 18827   007BFC  51C8               	movf	move_window@fs& (0+255),w,b
 18828   007BFE  26D9               	addwf	fsr2l,f,c
 18829   007C00  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 18830   007C02  22DA               	addwfc	fsr2h,f,c
 18831   007C04  50DF               	movf	indf2,w,c
 18832   007C06  EC71  F042         	call	_disk_read
 18833   007C0A  0900               	iorlw	0
 18834   007C0C  B4D8               	btfsc	status,2,c
 18835   007C0E  EF0B  F03E         	goto	u15911
 18836   007C12  EF0D  F03E         	goto	u15910
 18837   007C16                     u15911:
 18838   007C16  EF14  F03E         	goto	l13912
 18839   007C1A                     u15910:
 18840   007C1A                     
 18841                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 18842   007C1A  0100               	movlb	0	; () banked
 18843   007C1C  69CA               	setf	move_window@sector& (0+255),b
 18844   007C1E  69CB               	setf	(move_window@sector+1)& (0+255),b
 18845   007C20  69CC               	setf	(move_window@sector+2)& (0+255),b
 18846   007C22  69CD               	setf	(move_window@sector+3)& (0+255),b
 18847   007C24                     
 18848                           ; BSR set to: 0
 18849                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 18850   007C24  0E01               	movlw	1
 18851   007C26  6FD2               	movwf	move_window@res& (0+255),b
 18852   007C28                     l13912:
 18853                           
 18854                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 18855   007C28  0100               	movlb	0	; () banked
 18856   007C2A  EE20 F02F          	lfsr	2,47
 18857   007C2E  51C8               	movf	move_window@fs& (0+255),w,b
 18858   007C30  26D9               	addwf	fsr2l,f,c
 18859   007C32  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 18860   007C34  22DA               	addwfc	fsr2h,f,c
 18861   007C36  0060  F32B  FFDE   	movff	move_window@sector,postinc2
 18862   007C3C  0060  F32F  FFDE   	movff	move_window@sector+1,postinc2
 18863   007C42  0060  F333  FFDE   	movff	move_window@sector+2,postinc2
 18864   007C48  0060  F337  FFDE   	movff	move_window@sector+3,postinc2
 18865   007C4E                     l13914:
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 18869   007C4E  51D2               	movf	move_window@res& (0+255),w,b
 18870   007C50                     
 18871                           ; BSR set to: 0
 18872   007C50  0012               	return		;funcret
 18873   007C52                     __end_of_move_window:
 18874                           	callstack 0
 18875                           
 18876 ;; *************** function _sync_window *****************
 18877 ;; Defined at:
 18878 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 18879 ;; Parameters:    Size  Location     Type
 18880 ;;  fs              2   85[BANK0 ] PTR struct .
 18881 ;;		 -> FatFs(563), NULL(0), 
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;  res             1  103[BANK0 ] enum E68
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      enum E68
 18886 ;; Registers used:
 18887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18888 ;; Tracked objects:
 18889 ;;		On entry : 0/0
 18890 ;;		On exit  : 0/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18895 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18896 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18897 ;;Total ram usage:       19 bytes
 18898 ;; Hardware stack levels used: 1
 18899 ;; Hardware stack levels required when called: 10
 18900 ;; This function calls:
 18901 ;;		_disk_write
 18902 ;; This function is called by:
 18903 ;;		_move_window
 18904 ;;		_sync_fs
 18905 ;;		_dir_clear
 18906 ;; This function uses a non-reentrant model
 18907 ;;
 18908                           
 18909                           	psect	text64
 18910   006316                     __ptext64:
 18911                           	callstack 0
 18912   006316                     _sync_window:
 18913                           	callstack 15
 18914   006316                     
 18915                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 18916   006316  0E00               	movlw	0
 18917   006318  0100               	movlb	0	; () banked
 18918   00631A  6FC7               	movwf	sync_window@res& (0+255),b
 18919   00631C                     
 18920                           ; BSR set to: 0
 18921                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 18922   00631C  EE20 F003          	lfsr	2,3
 18923   006320  51B5               	movf	sync_window@fs& (0+255),w,b
 18924   006322  26D9               	addwf	fsr2l,f,c
 18925   006324  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18926   006326  22DA               	addwfc	fsr2h,f,c
 18927   006328  50DF               	movf	indf2,w,c
 18928   00632A  B4D8               	btfsc	status,2,c
 18929   00632C  EF9A  F031         	goto	u15851
 18930   006330  EF9C  F031         	goto	u15850
 18931   006334                     u15851:
 18932   006334  EF6D  F032         	goto	l898
 18933   006338                     u15850:
 18934   006338                     
 18935                           ; BSR set to: 0
 18936                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 18937   006338  0E33               	movlw	51
 18938   00633A  25B5               	addwf	sync_window@fs& (0+255),w,b
 18939   00633C  6FAB               	movwf	disk_write@buff& (0+255),b
 18940   00633E  0E00               	movlw	0
 18941   006340  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 18942   006342  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 18943   006344  EE20 F02F          	lfsr	2,47
 18944   006348  51B5               	movf	sync_window@fs& (0+255),w,b
 18945   00634A  26D9               	addwf	fsr2l,f,c
 18946   00634C  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18947   00634E  22DA               	addwfc	fsr2h,f,c
 18948   006350  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 18949   006356  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 18950   00635C  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 18951   006362  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 18952   006368  0E00               	movlw	0
 18953   00636A  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 18954   00636C  0E01               	movlw	1
 18955   00636E  6FB1               	movwf	disk_write@count& (0+255),b
 18956   006370  EE20 F001          	lfsr	2,1
 18957   006374  51B5               	movf	sync_window@fs& (0+255),w,b
 18958   006376  26D9               	addwf	fsr2l,f,c
 18959   006378  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18960   00637A  22DA               	addwfc	fsr2h,f,c
 18961   00637C  50DF               	movf	indf2,w,c
 18962   00637E  EC3D  F042         	call	_disk_write
 18963   006382  0900               	iorlw	0
 18964   006384  A4D8               	btfss	status,2,c
 18965   006386  EFC7  F031         	goto	u15861
 18966   00638A  EFC9  F031         	goto	u15860
 18967   00638E                     u15861:
 18968   00638E  EF6A  F032         	goto	l13854
 18969   006392                     u15860:
 18970   006392                     
 18971                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 18972   006392  0100               	movlb	0	; () banked
 18973   006394  EE20 F003          	lfsr	2,3
 18974   006398  51B5               	movf	sync_window@fs& (0+255),w,b
 18975   00639A  26D9               	addwf	fsr2l,f,c
 18976   00639C  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18977   00639E  22DA               	addwfc	fsr2h,f,c
 18978   0063A0  6ADF               	clrf	indf2,c
 18979   0063A2                     
 18980                           ; BSR set to: 0
 18981                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 18982   0063A2  EE20 F01B          	lfsr	2,27
 18983   0063A6  51B5               	movf	sync_window@fs& (0+255),w,b
 18984   0063A8  26D9               	addwf	fsr2l,f,c
 18985   0063AA  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18986   0063AC  22DA               	addwfc	fsr2h,f,c
 18987   0063AE  EE10 F023          	lfsr	1,35
 18988   0063B2  51B5               	movf	sync_window@fs& (0+255),w,b
 18989   0063B4  26E1               	addwf	fsr1l,f,c
 18990   0063B6  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 18991   0063B8  22E2               	addwfc	fsr1h,f,c
 18992   0063BA  006F FF98  F0BB    	movff	postinc1,??_sync_window+4
 18993   0063C0  006F FF98  F0BC    	movff	postinc1,??_sync_window+5
 18994   0063C6  006F FF98  F0BD    	movff	postinc1,??_sync_window+6
 18995   0063CC  006F FF98  F0BE    	movff	postinc1,??_sync_window+7
 18996   0063D2  EE10 F02F          	lfsr	1,47
 18997   0063D6  51B5               	movf	sync_window@fs& (0+255),w,b
 18998   0063D8  26E1               	addwf	fsr1l,f,c
 18999   0063DA  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 19000   0063DC  22E2               	addwfc	fsr1h,f,c
 19001   0063DE  006F FF98  F0BF    	movff	postinc1,??_sync_window+8
 19002   0063E4  006F FF98  F0C0    	movff	postinc1,??_sync_window+9
 19003   0063EA  006F FF98  F0C1    	movff	postinc1,??_sync_window+10
 19004   0063F0  006F FF98  F0C2    	movff	postinc1,??_sync_window+11
 19005   0063F6  51BB               	movf	(??_sync_window+4)& (0+255),w,b
 19006   0063F8  5DBF               	subwf	(??_sync_window+8)& (0+255),w,b
 19007   0063FA  6FC3               	movwf	(??_sync_window+12)& (0+255),b
 19008   0063FC  51BC               	movf	(??_sync_window+5)& (0+255),w,b
 19009   0063FE  59C0               	subwfb	(??_sync_window+9)& (0+255),w,b
 19010   006400  6FC4               	movwf	(??_sync_window+13)& (0+255),b
 19011   006402  51BD               	movf	(??_sync_window+6)& (0+255),w,b
 19012   006404  59C1               	subwfb	(??_sync_window+10)& (0+255),w,b
 19013   006406  6FC5               	movwf	(??_sync_window+14)& (0+255),b
 19014   006408  51BE               	movf	(??_sync_window+7)& (0+255),w,b
 19015   00640A  59C2               	subwfb	(??_sync_window+11)& (0+255),w,b
 19016   00640C  6FC6               	movwf	(??_sync_window+15)& (0+255),b
 19017   00640E  50DE               	movf	postinc2,w,c
 19018   006410  5DC3               	subwf	(??_sync_window+12)& (0+255),w,b
 19019   006412  50DE               	movf	postinc2,w,c
 19020   006414  59C4               	subwfb	(??_sync_window+13)& (0+255),w,b
 19021   006416  50DE               	movf	postinc2,w,c
 19022   006418  59C5               	subwfb	(??_sync_window+14)& (0+255),w,b
 19023   00641A  50DE               	movf	postinc2,w,c
 19024   00641C  59C6               	subwfb	(??_sync_window+15)& (0+255),w,b
 19025   00641E  B0D8               	btfsc	status,0,c
 19026   006420  EF14  F032         	goto	u15871
 19027   006424  EF16  F032         	goto	u15870
 19028   006428                     u15871:
 19029   006428  EF6D  F032         	goto	l898
 19030   00642C                     u15870:
 19031   00642C                     
 19032                           ; BSR set to: 0
 19033                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 19034   00642C  EE20 F002          	lfsr	2,2
 19035   006430  51B5               	movf	sync_window@fs& (0+255),w,b
 19036   006432  26D9               	addwf	fsr2l,f,c
 19037   006434  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 19038   006436  22DA               	addwfc	fsr2h,f,c
 19039   006438  0E02               	movlw	2
 19040   00643A  18DE               	xorwf	postinc2,w,c
 19041   00643C  A4D8               	btfss	status,2,c
 19042   00643E  EF23  F032         	goto	u15881
 19043   006442  EF25  F032         	goto	u15880
 19044   006446                     u15881:
 19045   006446  EF6D  F032         	goto	l898
 19046   00644A                     u15880:
 19047   00644A                     
 19048                           ; BSR set to: 0
 19049   00644A  0E33               	movlw	51
 19050   00644C  25B5               	addwf	sync_window@fs& (0+255),w,b
 19051   00644E  6FAB               	movwf	disk_write@buff& (0+255),b
 19052   006450  0E00               	movlw	0
 19053   006452  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 19054   006454  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 19055   006456  EE20 F01B          	lfsr	2,27
 19056   00645A  51B5               	movf	sync_window@fs& (0+255),w,b
 19057   00645C  26D9               	addwf	fsr2l,f,c
 19058   00645E  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 19059   006460  22DA               	addwfc	fsr2h,f,c
 19060   006462  006F FF78  F0B7    	movff	postinc2,??_sync_window
 19061   006468  006F FF78  F0B8    	movff	postinc2,??_sync_window+1
 19062   00646E  006F FF78  F0B9    	movff	postinc2,??_sync_window+2
 19063   006474  006F FF78  F0BA    	movff	postinc2,??_sync_window+3
 19064   00647A  EE20 F02F          	lfsr	2,47
 19065   00647E  51B5               	movf	sync_window@fs& (0+255),w,b
 19066   006480  26D9               	addwf	fsr2l,f,c
 19067   006482  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 19068   006484  22DA               	addwfc	fsr2h,f,c
 19069   006486  006F FF78  F0BB    	movff	postinc2,??_sync_window+4
 19070   00648C  006F FF78  F0BC    	movff	postinc2,??_sync_window+5
 19071   006492  006F FF78  F0BD    	movff	postinc2,??_sync_window+6
 19072   006498  006F FF78  F0BE    	movff	postinc2,??_sync_window+7
 19073   00649E  51B7               	movf	??_sync_window& (0+255),w,b
 19074   0064A0  25BB               	addwf	(??_sync_window+4)& (0+255),w,b
 19075   0064A2  6FAD               	movwf	disk_write@sector& (0+255),b
 19076   0064A4  51B8               	movf	(??_sync_window+1)& (0+255),w,b
 19077   0064A6  21BC               	addwfc	(??_sync_window+5)& (0+255),w,b
 19078   0064A8  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 19079   0064AA  51B9               	movf	(??_sync_window+2)& (0+255),w,b
 19080   0064AC  21BD               	addwfc	(??_sync_window+6)& (0+255),w,b
 19081   0064AE  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 19082   0064B0  51BA               	movf	(??_sync_window+3)& (0+255),w,b
 19083   0064B2  21BE               	addwfc	(??_sync_window+7)& (0+255),w,b
 19084   0064B4  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 19085   0064B6  0E00               	movlw	0
 19086   0064B8  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 19087   0064BA  0E01               	movlw	1
 19088   0064BC  6FB1               	movwf	disk_write@count& (0+255),b
 19089   0064BE  EE20 F001          	lfsr	2,1
 19090   0064C2  51B5               	movf	sync_window@fs& (0+255),w,b
 19091   0064C4  26D9               	addwf	fsr2l,f,c
 19092   0064C6  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 19093   0064C8  22DA               	addwfc	fsr2h,f,c
 19094   0064CA  50DF               	movf	indf2,w,c
 19095   0064CC  EC3D  F042         	call	_disk_write
 19096   0064D0  EF6D  F032         	goto	l898
 19097   0064D4                     l13854:
 19098                           
 19099                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 19100   0064D4  0E01               	movlw	1
 19101   0064D6  0100               	movlb	0	; () banked
 19102   0064D8  6FC7               	movwf	sync_window@res& (0+255),b
 19103   0064DA                     l898:
 19104                           
 19105                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 19106   0064DA  0100               	movlb	0	; () banked
 19107   0064DC  51C7               	movf	sync_window@res& (0+255),w,b
 19108   0064DE                     
 19109                           ; BSR set to: 0
 19110   0064DE  0012               	return		;funcret
 19111   0064E0                     __end_of_sync_window:
 19112                           	callstack 0
 19113                           
 19114 ;; *************** function _disk_write *****************
 19115 ;; Defined at:
 19116 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;  pdrv            1    wreg     unsigned char 
 19119 ;;  buff            2   75[BANK0 ] PTR const unsigned char 
 19120 ;;		 -> pb$buf(64), Fil$buf(512), send_status_ok@buf(4), STR_9(12), 
 19121 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 19122 ;;		 -> f_putc@pb(70), FatFs$win(512), NULL(0), 
 19123 ;;  sector          4   77[BANK0 ] unsigned long 
 19124 ;;  count           2   81[BANK0 ] unsigned int 
 19125 ;; Auto vars:     Size  Location     Type
 19126 ;;  pdrv            1   83[BANK0 ] unsigned char 
 19127 ;;  res             1   84[BANK0 ] enum E12
 19128 ;; Return value:  Size  Location     Type
 19129 ;;                  1    wreg      enum E12
 19130 ;; Registers used:
 19131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19132 ;; Tracked objects:
 19133 ;;		On entry : 0/0
 19134 ;;		On exit  : 0/0
 19135 ;;		Unchanged: 0/0
 19136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19140 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19141 ;;Total ram usage:       10 bytes
 19142 ;; Hardware stack levels used: 1
 19143 ;; Hardware stack levels required when called: 9
 19144 ;; This function calls:
 19145 ;;		_SD_SPI_SectorWrite
 19146 ;; This function is called by:
 19147 ;;		_sync_window
 19148 ;;		_sync_fs
 19149 ;;		_dir_clear
 19150 ;;		_f_write
 19151 ;;		_f_sync
 19152 ;;		_f_read
 19153 ;; This function uses a non-reentrant model
 19154 ;;
 19155                           
 19156                           	psect	text65
 19157   00847A                     __ptext65:
 19158                           	callstack 0
 19159   00847A                     _disk_write:
 19160                           	callstack 19
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;incstack = 0
 19164                           ;disk_write@pdrv stored from wreg
 19165   00847A  0100               	movlb	0	; () banked
 19166   00847C  6FB3               	movwf	disk_write@pdrv& (0+255),b
 19167   00847E                     
 19168                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 19169   00847E  0E04               	movlw	4
 19170   008480  0100               	movlb	0	; () banked
 19171   008482  6FB4               	movwf	disk_write@res& (0+255),b
 19172                           
 19173                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 19174   008484  EF68  F042         	goto	l13818
 19175   008488                     l13810:
 19176                           
 19177                           ; BSR set to: 0
 19178                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 19179   008488  C0AD  F090         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 19180   00848C  C0AE  F091         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 19181   008490  C0AF  F092         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 19182   008494  C0B0  F093         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 19183   008498  C0AB  F094         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 19184   00849C  C0AC  F095         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 19185   0084A0  C0B1  F096         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 19186   0084A4  C0B2  F097         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 19187   0084A8  ECCE  F036         	call	_SD_SPI_SectorWrite	;wreg free
 19188   0084AC  06E8               	decf	wreg,f,c
 19189   0084AE  A4D8               	btfss	status,2,c
 19190   0084B0  EF5C  F042         	goto	u15831
 19191   0084B4  EF5E  F042         	goto	u15830
 19192   0084B8                     u15831:
 19193   0084B8  EF63  F042         	goto	l13814
 19194   0084BC                     u15830:
 19195   0084BC                     
 19196                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 19197   0084BC  0E00               	movlw	0
 19198   0084BE  0100               	movlb	0	; () banked
 19199   0084C0  6FB4               	movwf	disk_write@res& (0+255),b
 19200                           
 19201                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 19202   0084C2  EF6F  F042         	goto	l13820
 19203   0084C6                     l13814:
 19204                           
 19205                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 19206   0084C6  0E01               	movlw	1
 19207   0084C8  0100               	movlb	0	; () banked
 19208   0084CA  6FB4               	movwf	disk_write@res& (0+255),b
 19209   0084CC  EF6F  F042         	goto	l13820
 19210   0084D0                     l13818:
 19211                           
 19212                           ; BSR set to: 0
 19213   0084D0  51B3               	movf	disk_write@pdrv& (0+255),w,b
 19214                           
 19215                           ; Switch size 1, requested type "simple"
 19216                           ; Number of cases is 1, Range of values is 0 to 0
 19217                           ; switch strategies available:
 19218                           ; Name         Instructions Cycles
 19219                           ; simple_byte            4     3 (average)
 19220                           ;	Chosen strategy is simple_byte
 19221   0084D2  0A00               	xorlw	0	; case 0
 19222   0084D4  B4D8               	btfsc	status,2,c
 19223   0084D6  EF44  F042         	goto	l13810
 19224   0084DA  EF6F  F042         	goto	l13820
 19225   0084DE                     l13820:
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 19229   0084DE  51B4               	movf	disk_write@res& (0+255),w,b
 19230   0084E0                     
 19231                           ; BSR set to: 0
 19232   0084E0  0012               	return		;funcret
 19233   0084E2                     __end_of_disk_write:
 19234                           	callstack 0
 19235                           
 19236 ;; *************** function _SD_SPI_SectorWrite *****************
 19237 ;; Defined at:
 19238 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19239 ;; Parameters:    Size  Location     Type
 19240 ;;  sector_addre    4   48[BANK0 ] unsigned long 
 19241 ;;  buffer          2   52[BANK0 ] PTR const unsigned char 
 19242 ;;		 -> pb$buf(64), Fil$buf(512), send_status_ok@buf(4), STR_9(12), 
 19243 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 19244 ;;		 -> f_putc@pb(70), FatFs$win(512), NULL(0), 
 19245 ;;  sector_count    2   54[BANK0 ] unsigned short 
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;  info           13   62[BANK0 ] struct SD_ASYNC_IO
 19248 ;;  i               2   60[BANK0 ] unsigned short 
 19249 ;;  status          1   59[BANK0 ] unsigned char 
 19250 ;;  result          1   58[BANK0 ] _Bool 
 19251 ;; Return value:  Size  Location     Type
 19252 ;;                  1    wreg      _Bool 
 19253 ;; Registers used:
 19254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19255 ;; Tracked objects:
 19256 ;;		On entry : 0/0
 19257 ;;		On exit  : 0/0
 19258 ;;		Unchanged: 0/0
 19259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19261 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19263 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19264 ;;Total ram usage:       27 bytes
 19265 ;; Hardware stack levels used: 1
 19266 ;; Hardware stack levels required when called: 8
 19267 ;; This function calls:
 19268 ;;		_SDFAST_open
 19269 ;;		_SDSLOW_open
 19270 ;;		_SD_SPI_AsyncWriteTasks
 19271 ;;		_SPI1_Close
 19272 ;; This function is called by:
 19273 ;;		_disk_write
 19274 ;; This function uses a non-reentrant model
 19275 ;;
 19276                           
 19277                           	psect	text66
 19278   006D9C                     __ptext66:
 19279                           	callstack 0
 19280   006D9C                     _SD_SPI_SectorWrite:
 19281                           	callstack 19
 19282   006D9C                     
 19283                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 19284   006D9C  0E00               	movlw	0
 19285   006D9E  0100               	movlb	0	; () banked
 19286   006DA0  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 19287                           
 19288                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 19289   006DA2  0E00               	movlw	0
 19290   006DA4  6F9D               	movwf	(SD_SPI_SectorWrite@i+1)& (0+255),b
 19291   006DA6  0E00               	movlw	0
 19292   006DA8  6F9C               	movwf	SD_SPI_SectorWrite@i& (0+255),b
 19293   006DAA  EF62  F037         	goto	l13626
 19294   006DAE                     l13598:
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 19298   006DAE  0E02               	movlw	2
 19299   006DB0  6F9F               	movwf	(SD_SPI_SectorWrite@info+1)& (0+255),b
 19300   006DB2  0E00               	movlw	0
 19301   006DB4  6F9E               	movwf	SD_SPI_SectorWrite@info& (0+255),b
 19302                           
 19303                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 19304   006DB6  0E00               	movlw	0
 19305   006DB8  6FA0               	movwf	(SD_SPI_SectorWrite@info+2)& (0+255),b
 19306   006DBA  0E02               	movlw	2
 19307   006DBC  6FA1               	movwf	(SD_SPI_SectorWrite@info+3)& (0+255),b
 19308   006DBE  0E00               	movlw	0
 19309   006DC0  6FA2               	movwf	(SD_SPI_SectorWrite@info+4)& (0+255),b
 19310   006DC2  0E00               	movlw	0
 19311   006DC4  6FA3               	movwf	(SD_SPI_SectorWrite@info+5)& (0+255),b
 19312   006DC6                     
 19313                           ; BSR set to: 0
 19314                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 19315   006DC6  C09C  F098         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 19316   006DCA  C09D  F099         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 19317   006DCE  0E09               	movlw	9
 19318   006DD0                     u15495:
 19319   006DD0  90D8               	bcf	status,0,c
 19320   006DD2  3798               	rlcf	??_SD_SPI_SectorWrite& (0+255),f,b
 19321   006DD4  3799               	rlcf	(??_SD_SPI_SectorWrite+1)& (0+255),f,b
 19322   006DD6  2EE8               	decfsz	wreg,f,c
 19323   006DD8  EFE8  F036         	goto	u15495
 19324   006DDC  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 19325   006DDE  2594               	addwf	SD_SPI_SectorWrite@buffer& (0+255),w,b
 19326   006DE0  6FA4               	movwf	(SD_SPI_SectorWrite@info+6)& (0+255),b
 19327   006DE2  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 19328   006DE4  2195               	addwfc	(SD_SPI_SectorWrite@buffer+1)& (0+255),w,b
 19329   006DE6  6FA5               	movwf	(SD_SPI_SectorWrite@info+7)& (0+255),b
 19330   006DE8                     
 19331                           ; BSR set to: 0
 19332                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 19333   006DE8  519C               	movf	SD_SPI_SectorWrite@i& (0+255),w,b
 19334   006DEA  2590               	addwf	SD_SPI_SectorWrite@sector_address& (0+255),w,b
 19335   006DEC  6FA6               	movwf	(SD_SPI_SectorWrite@info+8)& (0+255),b
 19336   006DEE  519D               	movf	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 19337   006DF0  2191               	addwfc	(SD_SPI_SectorWrite@sector_address+1)& (0+255),w,b
 19338   006DF2  6FA7               	movwf	(SD_SPI_SectorWrite@info+9)& (0+255),b
 19339   006DF4  0E00               	movlw	0
 19340   006DF6  2192               	addwfc	(SD_SPI_SectorWrite@sector_address+2)& (0+255),w,b
 19341   006DF8  6FA8               	movwf	(SD_SPI_SectorWrite@info+10)& (0+255),b
 19342   006DFA  0E00               	movlw	0
 19343   006DFC  2193               	addwfc	(SD_SPI_SectorWrite@sector_address+3)& (0+255),w,b
 19344   006DFE  6FA9               	movwf	(SD_SPI_SectorWrite@info+11)& (0+255),b
 19345                           
 19346                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 19347   006E00  0E01               	movlw	1
 19348   006E02  6FAA               	movwf	(SD_SPI_SectorWrite@info+12)& (0+255),b
 19349   006E04                     
 19350                           ; BSR set to: 0
 19351                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 19352   006E04  0E9B               	movlw	low (_spiMaster+2)
 19353   006E06  6EF6               	movwf	tblptrl,c
 19354   006E08  0EFF               	movlw	high (_spiMaster+2)
 19355   006E0A  6EF7               	movwf	tblptrh,c
 19356   006E0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19357   006E0C  6AF8               	clrf	tblptru,c
 19358   006E0E                     	endif
 19359   006E0E                     	if	0	;tblptru may be non-zero
 19360   006E0E                     	endif
 19361   006E0E  0009               	tblrd		*+
 19362   006E10  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 19363   006E16  0009               	tblrd		*+
 19364   006E18  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 19365   006E1E  D802               	call	u15508
 19366   006E20  EF1B  F037         	goto	u15509
 19367   006E24                     u15508:
 19368   006E24  0005               	push	
 19369   006E26  6EFA               	movwf	pclath,c
 19370   006E28  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 19371   006E2A  6EFD               	movwf	tosl,c
 19372   006E2C  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 19373   006E2E  6EFE               	movwf	tosh,c
 19374   006E30  6AFF               	clrf	tosu,c
 19375   006E32  50FA               	movf	pclath,w,c
 19376   006E34  0012               	return		;indir
 19377   006E36                     u15509:
 19378   006E36  0900               	iorlw	0
 19379   006E38  A4D8               	btfss	status,2,c
 19380   006E3A  EF21  F037         	goto	u15511
 19381   006E3E  EF23  F037         	goto	u15510
 19382   006E42                     u15511:
 19383   006E42  EF26  F037         	goto	l1581
 19384   006E46                     u15510:
 19385   006E46                     
 19386                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 19387   006E46  0E00               	movlw	0
 19388   006E48  EF6E  F037         	goto	l1580
 19389   006E4C                     l1581:
 19390   006E4C  9ABA               	bcf	186,5,c	;volatile
 19391   006E4E                     l13610:
 19392                           
 19393                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 19394   006E4E  0E9E               	movlw	low SD_SPI_SectorWrite@info
 19395   006E50  0100               	movlb	0	; () banked
 19396   006E52  6F82               	movwf	SD_SPI_AsyncWriteTasks@info& (0+255),b
 19397   006E54  EC97  F013         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 19398   006E58  0100               	movlb	0	; () banked
 19399   006E5A  6F9B               	movwf	SD_SPI_SectorWrite@status& (0+255),b
 19400   006E5C                     
 19401                           ; BSR set to: 0
 19402                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 19403   006E5C  519B               	movf	SD_SPI_SectorWrite@status& (0+255),w,b
 19404   006E5E  A4D8               	btfss	status,2,c
 19405   006E60  EF34  F037         	goto	u15521
 19406   006E64  EF36  F037         	goto	u15520
 19407   006E68                     u15521:
 19408   006E68  EF3A  F037         	goto	l13618
 19409   006E6C                     u15520:
 19410   006E6C                     
 19411                           ; BSR set to: 0
 19412                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 19413   006E6C  0E01               	movlw	1
 19414   006E6E  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 19415                           
 19416                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 19417   006E70  EF44  F037         	goto	l1589
 19418   006E74                     l13618:
 19419                           
 19420                           ; BSR set to: 0
 19421   006E74  299B               	incf	SD_SPI_SectorWrite@status& (0+255),w,b
 19422   006E76  A4D8               	btfss	status,2,c
 19423   006E78  EF40  F037         	goto	u15531
 19424   006E7C  EF42  F037         	goto	u15530
 19425   006E80                     u15531:
 19426   006E80  EF27  F037         	goto	l13610
 19427   006E84                     u15530:
 19428   006E84                     
 19429                           ; BSR set to: 0
 19430                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 19431   006E84  0E00               	movlw	0
 19432   006E86  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 19433   006E88                     l1589:
 19434                           
 19435                           ; BSR set to: 0
 19436   006E88  8ABA               	bsf	186,5,c	;volatile
 19437   006E8A                     
 19438                           ; BSR set to: 0
 19439                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 19440   006E8A  0E99               	movlw	low _spiMaster
 19441   006E8C  6EF6               	movwf	tblptrl,c
 19442   006E8E                     	if	1	;There is more than 1 active tblptr byte
 19443   006E8E  0EFF               	movlw	high _spiMaster
 19444   006E90  6EF7               	movwf	tblptrh,c
 19445   006E92                     	endif
 19446   006E92                     	if	1	;There are 3 active tblptr bytes
 19447   006E92  0E00               	movlw	low (_spiMaster shr (0+16))
 19448   006E94  6EF8               	movwf	tblptru,c
 19449   006E96                     	endif
 19450   006E96  0009               	tblrd		*+
 19451   006E98  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 19452   006E9E  0009               	tblrd		*+
 19453   006EA0  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 19454   006EA6  D802               	call	u15548
 19455   006EA8  EF5F  F037         	goto	u15549
 19456   006EAC                     u15548:
 19457   006EAC  0005               	push	
 19458   006EAE  6EFA               	movwf	pclath,c
 19459   006EB0  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 19460   006EB2  6EFD               	movwf	tosl,c
 19461   006EB4  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 19462   006EB6  6EFE               	movwf	tosh,c
 19463   006EB8  6AFF               	clrf	tosu,c
 19464   006EBA  50FA               	movf	pclath,w,c
 19465   006EBC  0012               	return		;indir
 19466   006EBE                     u15549:
 19467   006EBE                     
 19468                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 19469   006EBE  0100               	movlb	0	; () banked
 19470   006EC0  4B9C               	infsnz	SD_SPI_SectorWrite@i& (0+255),f,b
 19471   006EC2  2B9D               	incf	(SD_SPI_SectorWrite@i+1)& (0+255),f,b
 19472   006EC4                     l13626:
 19473                           
 19474                           ; BSR set to: 0
 19475   006EC4  5196               	movf	SD_SPI_SectorWrite@sector_count& (0+255),w,b
 19476   006EC6  5D9C               	subwf	SD_SPI_SectorWrite@i& (0+255),w,b
 19477   006EC8  5197               	movf	(SD_SPI_SectorWrite@sector_count+1)& (0+255),w,b
 19478   006ECA  599D               	subwfb	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 19479   006ECC  A0D8               	btfss	status,0,c
 19480   006ECE  EF6B  F037         	goto	u15551
 19481   006ED2  EF6D  F037         	goto	u15550
 19482   006ED6                     u15551:
 19483   006ED6  EFD7  F036         	goto	l13598
 19484   006EDA                     u15550:
 19485   006EDA                     
 19486                           ; BSR set to: 0
 19487                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 19488   006EDA  519A               	movf	SD_SPI_SectorWrite@result& (0+255),w,b
 19489   006EDC                     l1580:
 19490   006EDC  0012               	return		;funcret
 19491   006EDE                     __end_of_SD_SPI_SectorWrite:
 19492                           	callstack 0
 19493                           
 19494 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 19495 ;; Defined at:
 19496 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19497 ;; Parameters:    Size  Location     Type
 19498 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 19499 ;;		 -> SD_SPI_SectorWrite@info(13), 
 19500 ;; Auto vars:     Size  Location     Type
 19501 ;;  response        5   39[BANK0 ] struct .
 19502 ;;  preEraseBloc    4   44[BANK0 ] unsigned long 
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      unsigned char 
 19505 ;; Registers used:
 19506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19512 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19513 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19514 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19515 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;Total ram usage:       14 bytes
 19517 ;; Hardware stack levels used: 1
 19518 ;; Hardware stack levels required when called: 7
 19519 ;; This function calls:
 19520 ;;		_SD_SendCmd
 19521 ;;		_SPI1_ExchangeBlock
 19522 ;;		_SPI1_ExchangeByte
 19523 ;; This function is called by:
 19524 ;;		_SD_SPI_SectorWrite
 19525 ;; This function uses a non-reentrant model
 19526 ;;
 19527                           
 19528                           	psect	text67
 19529   00272E                     __ptext67:
 19530                           	callstack 0
 19531   00272E                     _SD_SPI_AsyncWriteTasks:
 19532                           	callstack 19
 19533   00272E                     
 19534                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 19535   00272E  EFD8  F016         	goto	l13584
 19536   002732                     l13398:
 19537                           
 19538                           ; BSR set to: 0
 19539                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 19540   002732  0E00               	movlw	0
 19541   002734  EFF9  F016         	goto	l1717
 19542   002738                     l13402:
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 19546   002738  0E02               	movlw	2
 19547   00273A  6E52               	movwf	(_mediaInformation+3)^0,c
 19548                           
 19549                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 19550   00273C  0E02               	movlw	2
 19551   00273E  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 19552   002740  0E00               	movlw	0
 19553   002742  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 19554   002744                     
 19555                           ; BSR set to: 0
 19556                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 19557   002744  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 19558   002746  6ED9               	movwf	fsr2l,c
 19559   002748  6ADA               	clrf	fsr2h,c
 19560   00274A  EE10  F02D         	lfsr	1,_ioInfo
 19561   00274E  0E0C               	movlw	12
 19562   002750                     u15131:
 19563   002750  006F FF6F FFE3     	movff	plusw2,plusw1
 19564   002756  06E8               	decf	wreg,f,c
 19565   002758  E2FB               	bc	u15131
 19566   00275A                     
 19567                           ; BSR set to: 0
 19568                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 19569   00275A  5032               	movf	(_ioInfo+5)^0,w,c
 19570   00275C  1031               	iorwf	(_ioInfo+4)^0,w,c
 19571   00275E  E108               	bnz	u15141
 19572   002760  042F               	decf	(_ioInfo+2)^0,w,c
 19573   002762  0E02               	movlw	2
 19574   002764  5830               	subwfb	(_ioInfo+3)^0,w,c
 19575   002766  B0D8               	btfsc	status,0,c
 19576   002768  EFB8  F013         	goto	u15141
 19577   00276C  EFBA  F013         	goto	u15140
 19578   002770                     u15141:
 19579   002770  EFBE  F013         	goto	l13410
 19580   002774                     u15140:
 19581   002774                     
 19582                           ; BSR set to: 0
 19583                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 19584   002774  0E0A               	movlw	10
 19585   002776  6E49               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 19586                           
 19587                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 19588   002778  EF13  F014         	goto	l13424
 19589   00277C                     l13410:
 19590                           
 19591                           ; BSR set to: 0
 19592                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 19593   00277C  0E0B               	movlw	11
 19594   00277E  6E49               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 19595   002780                     
 19596                           ; BSR set to: 0
 19597                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 19598   002780  C02F  F083         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 19599   002784  C030  F084         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 19600   002788  C031  F085         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 19601   00278C  C032  F086         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 19602   002790  0E0A               	movlw	10
 19603   002792  EFD0  F013         	goto	u15150
 19604   002796                     u15155:
 19605   002796  90D8               	bcf	status,0,c
 19606   002798  3386               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),f,b
 19607   00279A  3385               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),f,b
 19608   00279C  3384               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),f,b
 19609   00279E  3383               	rrcf	??_SD_SPI_AsyncWriteTasks& (0+255),f,b
 19610   0027A0                     u15150:
 19611   0027A0  2EE8               	decfsz	wreg,f,c
 19612   0027A2  EFCB  F013         	goto	u15155
 19613   0027A6  C083  F08C         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 19614   0027AA  C084  F08D         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 19615   0027AE  C085  F08E         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 19616   0027B2  C086  F08F         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 19617   0027B6                     
 19618                           ; BSR set to: 0
 19619                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 19620   0027B6  518C               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),w,b
 19621   0027B8  118D               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),w,b
 19622   0027BA  118E               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),w,b
 19623   0027BC  118F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),w,b
 19624   0027BE  A4D8               	btfss	status,2,c
 19625   0027C0  EFE4  F013         	goto	u15161
 19626   0027C4  EFE6  F013         	goto	u15160
 19627   0027C8                     u15161:
 19628   0027C8  EFEC  F013         	goto	l13418
 19629   0027CC                     u15160:
 19630   0027CC                     
 19631                           ; BSR set to: 0
 19632                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 19633   0027CC  0E01               	movlw	1
 19634   0027CE  278C               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),f,b
 19635   0027D0  0E00               	movlw	0
 19636   0027D2  238D               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),f,b
 19637   0027D4  238E               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),f,b
 19638   0027D6  238F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),f,b
 19639   0027D8                     l13418:
 19640                           
 19641                           ; BSR set to: 0
 19642                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 19643   0027D8  0E00               	movlw	0
 19644   0027DA  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 19645   0027DC  0E00               	movlw	0
 19646   0027DE  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 19647   0027E0  0E00               	movlw	0
 19648   0027E2  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 19649   0027E4  0E00               	movlw	0
 19650   0027E6  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 19651   0027E8  0E0F               	movlw	15
 19652   0027EA  EC82  F01C         	call	_SD_SendCmd
 19653   0027EE  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 19654   0027F2  0E04               	movlw	4
 19655   0027F4                     u15171:
 19656   0027F4  006F FFAF FFDB     	movff	plusw0,plusw2
 19657   0027FA  06E8               	decf	wreg,f,c
 19658   0027FC  E2FB               	bc	u15171
 19659   0027FE                     
 19660                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 19661   0027FE  0100               	movlb	0	; () banked
 19662   002800  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 19663   002802  A4D8               	btfss	status,2,c
 19664   002804  EF06  F014         	goto	u15181
 19665   002808  EF08  F014         	goto	u15180
 19666   00280C                     u15181:
 19667   00280C  EF13  F014         	goto	l13424
 19668   002810                     u15180:
 19669   002810                     
 19670                           ; BSR set to: 0
 19671                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 19672   002810  C08C  F06B         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 19673   002814  C08D  F06C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 19674   002818  C08E  F06D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 19675   00281C  C08F  F06E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 19676   002820  0E13               	movlw	19
 19677   002822  EC82  F01C         	call	_SD_SendCmd
 19678   002826                     l13424:
 19679                           
 19680                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 19681   002826  5057               	movf	(_mediaInformation+8)^0,w,c
 19682   002828  A4D8               	btfss	status,2,c
 19683   00282A  EF19  F014         	goto	u15191
 19684   00282E  EF1B  F014         	goto	u15190
 19685   002832                     u15191:
 19686   002832  EF24  F014         	goto	l13428
 19687   002836                     u15190:
 19688   002836                     
 19689                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 19690   002836  0E09               	movlw	9
 19691   002838                     u15205:
 19692   002838  90D8               	bcf	status,0,c
 19693   00283A  3635               	rlcf	(_ioInfo+8)^0,f,c
 19694   00283C  3636               	rlcf	(_ioInfo+9)^0,f,c
 19695   00283E  3637               	rlcf	(_ioInfo+10)^0,f,c
 19696   002840  3638               	rlcf	(_ioInfo+11)^0,f,c
 19697   002842  2EE8               	decfsz	wreg,f,c
 19698   002844  EF1C  F014         	goto	u15205
 19699   002848                     l13428:
 19700                           
 19701                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 19702   002848  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 19703   00284C  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 19704   002850  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 19705   002854  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 19706   002858  5049               	movf	SD_SPI_AsyncWriteTasks@command^0,w,c
 19707   00285A  EC82  F01C         	call	_SD_SendCmd
 19708   00285E  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 19709   002862  0E04               	movlw	4
 19710   002864                     u15211:
 19711   002864  006F FFAF FFDB     	movff	plusw0,plusw2
 19712   00286A  06E8               	decf	wreg,f,c
 19713   00286C  E2FB               	bc	u15211
 19714   00286E                     
 19715                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 19716   00286E  0100               	movlb	0	; () banked
 19717   002870  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 19718   002872  B4D8               	btfsc	status,2,c
 19719   002874  EF3E  F014         	goto	u15221
 19720   002878  EF40  F014         	goto	u15220
 19721   00287C                     u15221:
 19722   00287C  EF4A  F014         	goto	l13440
 19723   002880                     u15220:
 19724   002880                     
 19725                           ; BSR set to: 0
 19726                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 19727   002880  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 19728   002882  6ED9               	movwf	fsr2l,c
 19729   002884  6ADA               	clrf	fsr2h,c
 19730   002886  0E0C               	movlw	12
 19731   002888  26D9               	addwf	fsr2l,f,c
 19732   00288A  0EFF               	movlw	255
 19733   00288C  6EDF               	movwf	indf2,c
 19734   00288E                     l13434:
 19735                           
 19736                           ; BSR set to: 0
 19737                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 19738   00288E  0EFF               	movlw	255
 19739   002890  EFF9  F016         	goto	l1717
 19740   002894                     l13440:
 19741                           
 19742                           ; BSR set to: 0
 19743                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 19744   002894  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 19745   002896  6ED9               	movwf	fsr2l,c
 19746   002898  6ADA               	clrf	fsr2h,c
 19747   00289A  0E0C               	movlw	12
 19748   00289C  26D9               	addwf	fsr2l,f,c
 19749   00289E  0E02               	movlw	2
 19750   0028A0  6EDF               	movwf	indf2,c
 19751   0028A2                     l13442:
 19752                           
 19753                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 19754   0028A2  0E02               	movlw	2
 19755   0028A4  EFF9  F016         	goto	l1717
 19756   0028A8                     l13446:
 19757                           
 19758                           ; BSR set to: 0
 19759                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 19760   0028A8  0E02               	movlw	2
 19761   0028AA  1843               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 19762   0028AC  1042               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 19763   0028AE  A4D8               	btfss	status,2,c
 19764   0028B0  EF5C  F014         	goto	u15231
 19765   0028B4  EF5E  F014         	goto	u15230
 19766   0028B8                     u15231:
 19767   0028B8  EF9D  F014         	goto	l13454
 19768   0028BC                     u15230:
 19769   0028BC                     
 19770                           ; BSR set to: 0
 19771                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 19772   0028BC  0E0B               	movlw	11
 19773   0028BE  1849               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 19774   0028C0  A4D8               	btfss	status,2,c
 19775   0028C2  EF65  F014         	goto	u15241
 19776   0028C6  EF67  F014         	goto	u15240
 19777   0028CA                     u15241:
 19778   0028CA  EF83  F014         	goto	l13452
 19779   0028CE                     u15240:
 19780   0028CE                     
 19781                           ; BSR set to: 0
 19782                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 19783   0028CE  0E9D               	movlw	low (_spiMaster+4)
 19784   0028D0  6EF6               	movwf	tblptrl,c
 19785   0028D2  0EFF               	movlw	high (_spiMaster+4)
 19786   0028D4  6EF7               	movwf	tblptrh,c
 19787   0028D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19788   0028D6  6AF8               	clrf	tblptru,c
 19789   0028D8                     	endif
 19790   0028D8                     	if	0	;tblptru may be non-zero
 19791   0028D8                     	endif
 19792   0028D8  0009               	tblrd		*+
 19793   0028DA  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19794   0028E0  0009               	tblrd		*+
 19795   0028E2  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19796   0028E8  D802               	call	u15258
 19797   0028EA  EF81  F014         	goto	u15259
 19798   0028EE                     u15258:
 19799   0028EE  0005               	push	
 19800   0028F0  6EFA               	movwf	pclath,c
 19801   0028F2  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19802   0028F4  6EFD               	movwf	tosl,c
 19803   0028F6  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19804   0028F8  6EFE               	movwf	tosh,c
 19805   0028FA  6AFF               	clrf	tosu,c
 19806   0028FC  50FA               	movf	pclath,w,c
 19807   0028FE  0EFC               	movlw	252
 19808   002900  0012               	return		;indir
 19809   002902                     u15259:
 19810                           
 19811                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 19812   002902  EF9D  F014         	goto	l13454
 19813   002906                     l13452:
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 19817   002906  0E9D               	movlw	low (_spiMaster+4)
 19818   002908  6EF6               	movwf	tblptrl,c
 19819   00290A  0EFF               	movlw	high (_spiMaster+4)
 19820   00290C  6EF7               	movwf	tblptrh,c
 19821   00290E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19822   00290E  6AF8               	clrf	tblptru,c
 19823   002910                     	endif
 19824   002910                     	if	0	;tblptru may be non-zero
 19825   002910                     	endif
 19826   002910  0009               	tblrd		*+
 19827   002912  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19828   002918  0009               	tblrd		*+
 19829   00291A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19830   002920  D802               	call	u15268
 19831   002922  EF9D  F014         	goto	u15269
 19832   002926                     u15268:
 19833   002926  0005               	push	
 19834   002928  6EFA               	movwf	pclath,c
 19835   00292A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19836   00292C  6EFD               	movwf	tosl,c
 19837   00292E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19838   002930  6EFE               	movwf	tosh,c
 19839   002932  6AFF               	clrf	tosu,c
 19840   002934  50FA               	movf	pclath,w,c
 19841   002936  0EFE               	movlw	254
 19842   002938  0012               	return		;indir
 19843   00293A                     u15269:
 19844   00293A                     l13454:
 19845                           
 19846                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 19847   00293A  0100               	movlb	0	; () banked
 19848   00293C  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 19849   00293E  6ED9               	movwf	fsr2l,c
 19850   002940  6ADA               	clrf	fsr2h,c
 19851   002942  006F FF78  F02D    	movff	postinc2,_ioInfo
 19852   002948  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 19853   00294E                     
 19854                           ; BSR set to: 0
 19855                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 19856   00294E  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 19857   002950  6ED9               	movwf	fsr2l,c
 19858   002952  6ADA               	clrf	fsr2h,c
 19859   002954  0E06               	movlw	6
 19860   002956  26D9               	addwf	fsr2l,f,c
 19861   002958  006F FF78  F033    	movff	postinc2,_ioInfo+6
 19862   00295E  006F FF74  F034    	movff	postdec2,_ioInfo+7
 19863   002964                     
 19864                           ; BSR set to: 0
 19865                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 19866   002964  502D               	movf	_ioInfo^0,w,c
 19867   002966  6F83               	movwf	??_SD_SPI_AsyncWriteTasks& (0+255),b
 19868   002968  502E               	movf	(_ioInfo+1)^0,w,c
 19869   00296A  6F84               	movwf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),b
 19870   00296C  6B85               	clrf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),b
 19871   00296E  6B86               	clrf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),b
 19872   002970  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19873   002972  5E2F               	subwf	(_ioInfo+2)^0,f,c
 19874   002974  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19875   002976  5A30               	subwfb	(_ioInfo+3)^0,f,c
 19876   002978  5185               	movf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),w,b
 19877   00297A  5A31               	subwfb	(_ioInfo+4)^0,f,c
 19878   00297C  5186               	movf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),w,b
 19879   00297E  5A32               	subwfb	(_ioInfo+5)^0,f,c
 19880   002980                     
 19881                           ; BSR set to: 0
 19882                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 19883   002980  502D               	movf	_ioInfo^0,w,c
 19884   002982  5E42               	subwf	SD_SPI_AsyncWriteTasks@blockCounter^0,f,c
 19885   002984  502E               	movf	(_ioInfo+1)^0,w,c
 19886   002986  5A43               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,f,c
 19887   002988                     
 19888                           ; BSR set to: 0
 19889                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 19890   002988  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 19891   00298C  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 19892   002990  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 19893   002994  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 19894   002998  0E9F               	movlw	low (_spiMaster+6)
 19895   00299A  6EF6               	movwf	tblptrl,c
 19896   00299C  0EFF               	movlw	high (_spiMaster+6)
 19897   00299E  6EF7               	movwf	tblptrh,c
 19898   0029A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19899   0029A0  6AF8               	clrf	tblptru,c
 19900   0029A2                     	endif
 19901   0029A2                     	if	0	;tblptru may be non-zero
 19902   0029A2                     	endif
 19903   0029A2  0009               	tblrd		*+
 19904   0029A4  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19905   0029AA  0009               	tblrd		*+
 19906   0029AC  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19907   0029B2  D802               	call	u15278
 19908   0029B4  EFE5  F014         	goto	u15279
 19909   0029B8                     u15278:
 19910   0029B8  0005               	push	
 19911   0029BA  6EFA               	movwf	pclath,c
 19912   0029BC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19913   0029BE  6EFD               	movwf	tosl,c
 19914   0029C0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19915   0029C2  6EFE               	movwf	tosh,c
 19916   0029C4  6AFF               	clrf	tosu,c
 19917   0029C6  50FA               	movf	pclath,w,c
 19918   0029C8  0012               	return		;indir
 19919   0029CA                     u15279:
 19920   0029CA                     
 19921                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 19922   0029CA  5042               	movf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 19923   0029CC  1043               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 19924   0029CE  A4D8               	btfss	status,2,c
 19925   0029D0  EFEC  F014         	goto	u15281
 19926   0029D4  EFEE  F014         	goto	u15280
 19927   0029D8                     u15281:
 19928   0029D8  EF51  F014         	goto	l13442
 19929   0029DC                     u15280:
 19930   0029DC                     
 19931                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 19932   0029DC  0E02               	movlw	2
 19933   0029DE  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 19934   0029E0  0E00               	movlw	0
 19935   0029E2  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 19936   0029E4                     
 19937                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 19938   0029E4  0E9D               	movlw	low (_spiMaster+4)
 19939   0029E6  6EF6               	movwf	tblptrl,c
 19940   0029E8  0EFF               	movlw	high (_spiMaster+4)
 19941   0029EA  6EF7               	movwf	tblptrh,c
 19942   0029EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19943   0029EC  6AF8               	clrf	tblptru,c
 19944   0029EE                     	endif
 19945   0029EE                     	if	0	;tblptru may be non-zero
 19946   0029EE                     	endif
 19947   0029EE  0009               	tblrd		*+
 19948   0029F0  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19949   0029F6  0009               	tblrd		*+
 19950   0029F8  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19951   0029FE  D802               	call	u15298
 19952   002A00  EF0D  F015         	goto	u15299
 19953   002A04                     u15298:
 19954   002A04  0005               	push	
 19955   002A06  6EFA               	movwf	pclath,c
 19956   002A08  0100               	movlb	0	; () banked
 19957   002A0A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19958   002A0C  6EFD               	movwf	tosl,c
 19959   002A0E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19960   002A10  6EFE               	movwf	tosh,c
 19961   002A12  6AFF               	clrf	tosu,c
 19962   002A14  50FA               	movf	pclath,w,c
 19963   002A16  0EFF               	movlw	255
 19964   002A18  0012               	return		;indir
 19965   002A1A                     u15299:
 19966   002A1A                     
 19967                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 19968   002A1A  0E9D               	movlw	low (_spiMaster+4)
 19969   002A1C  6EF6               	movwf	tblptrl,c
 19970   002A1E  0EFF               	movlw	high (_spiMaster+4)
 19971   002A20  6EF7               	movwf	tblptrh,c
 19972   002A22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19973   002A22  6AF8               	clrf	tblptru,c
 19974   002A24                     	endif
 19975   002A24                     	if	0	;tblptru may be non-zero
 19976   002A24                     	endif
 19977   002A24  0009               	tblrd		*+
 19978   002A26  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19979   002A2C  0009               	tblrd		*+
 19980   002A2E  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19981   002A34  D802               	call	u15308
 19982   002A36  EF28  F015         	goto	u15309
 19983   002A3A                     u15308:
 19984   002A3A  0005               	push	
 19985   002A3C  6EFA               	movwf	pclath,c
 19986   002A3E  0100               	movlb	0	; () banked
 19987   002A40  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 19988   002A42  6EFD               	movwf	tosl,c
 19989   002A44  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 19990   002A46  6EFE               	movwf	tosh,c
 19991   002A48  6AFF               	clrf	tosu,c
 19992   002A4A  50FA               	movf	pclath,w,c
 19993   002A4C  0EFF               	movlw	255
 19994   002A4E  0012               	return		;indir
 19995   002A50                     u15309:
 19996   002A50                     
 19997                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 19998   002A50  0E9D               	movlw	low (_spiMaster+4)
 19999   002A52  6EF6               	movwf	tblptrl,c
 20000   002A54  0EFF               	movlw	high (_spiMaster+4)
 20001   002A56  6EF7               	movwf	tblptrh,c
 20002   002A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20003   002A58  6AF8               	clrf	tblptru,c
 20004   002A5A                     	endif
 20005   002A5A                     	if	0	;tblptru may be non-zero
 20006   002A5A                     	endif
 20007   002A5A  0009               	tblrd		*+
 20008   002A5C  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20009   002A62  0009               	tblrd		*+
 20010   002A64  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20011   002A6A  D802               	call	u15318
 20012   002A6C  EF43  F015         	goto	u15319
 20013   002A70                     u15318:
 20014   002A70  0005               	push	
 20015   002A72  6EFA               	movwf	pclath,c
 20016   002A74  0100               	movlb	0	; () banked
 20017   002A76  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20018   002A78  6EFD               	movwf	tosl,c
 20019   002A7A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20020   002A7C  6EFE               	movwf	tosh,c
 20021   002A7E  6AFF               	clrf	tosu,c
 20022   002A80  50FA               	movf	pclath,w,c
 20023   002A82  0EFF               	movlw	255
 20024   002A84  0012               	return		;indir
 20025   002A86                     u15319:
 20026   002A86  0B1F               	andlw	31
 20027   002A88  0A05               	xorlw	5
 20028   002A8A  B4D8               	btfsc	status,2,c
 20029   002A8C  EF4A  F015         	goto	u15321
 20030   002A90  EF4C  F015         	goto	u15320
 20031   002A94                     u15321:
 20032   002A94  EF57  F015         	goto	l13480
 20033   002A98                     u15320:
 20034   002A98                     
 20035                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 20036   002A98  0100               	movlb	0	; () banked
 20037   002A9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20038   002A9C  6ED9               	movwf	fsr2l,c
 20039   002A9E  6ADA               	clrf	fsr2h,c
 20040   002AA0  0E0C               	movlw	12
 20041   002AA2  26D9               	addwf	fsr2l,f,c
 20042   002AA4  0EFE               	movlw	254
 20043   002AA6  6EDF               	movwf	indf2,c
 20044   002AA8                     l13476:
 20045                           
 20046                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 20047   002AA8  0E03               	movlw	3
 20048   002AAA  EFF9  F016         	goto	l1717
 20049   002AAE                     l13480:
 20050                           
 20051                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 20052   002AAE  0100               	movlb	0	; () banked
 20053   002AB0  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20054   002AB2  6ED9               	movwf	fsr2l,c
 20055   002AB4  6ADA               	clrf	fsr2h,c
 20056   002AB6  0E0C               	movlw	12
 20057   002AB8  26D9               	addwf	fsr2l,f,c
 20058   002ABA  0E03               	movlw	3
 20059   002ABC  6EDF               	movwf	indf2,c
 20060   002ABE                     
 20061                           ; BSR set to: 0
 20062                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 20063   002ABE  0E00               	movlw	0
 20064   002AC0  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 20065   002AC2  0E00               	movlw	0
 20066   002AC4  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 20067   002AC6  0E0A               	movlw	10
 20068   002AC8  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 20069   002ACA  0E00               	movlw	0
 20070   002ACC  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 20071   002ACE  EF54  F015         	goto	l13476
 20072   002AD2                     l13492:
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 20076   002AD2  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 20077   002AD4  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 20078   002AD6  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 20079   002AD8  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 20080   002ADA  B4D8               	btfsc	status,2,c
 20081   002ADC  EF72  F015         	goto	u15331
 20082   002AE0  EF74  F015         	goto	u15330
 20083   002AE4                     u15331:
 20084   002AE4  EF44  F016         	goto	l13540
 20085   002AE8                     u15330:
 20086   002AE8                     
 20087                           ; BSR set to: 0
 20088                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 20089   002AE8  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 20090   002AEA  0E00               	movlw	0
 20091   002AEC  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 20092   002AEE  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 20093   002AF0  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 20094   002AF2                     
 20095                           ; BSR set to: 0
 20096                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 20097   002AF2  0E9D               	movlw	low (_spiMaster+4)
 20098   002AF4  6EF6               	movwf	tblptrl,c
 20099   002AF6  0EFF               	movlw	high (_spiMaster+4)
 20100   002AF8  6EF7               	movwf	tblptrh,c
 20101   002AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20102   002AFA  6AF8               	clrf	tblptru,c
 20103   002AFC                     	endif
 20104   002AFC                     	if	0	;tblptru may be non-zero
 20105   002AFC                     	endif
 20106   002AFC  0009               	tblrd		*+
 20107   002AFE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20108   002B04  0009               	tblrd		*+
 20109   002B06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20110   002B0C  D802               	call	u15348
 20111   002B0E  EF93  F015         	goto	u15349
 20112   002B12                     u15348:
 20113   002B12  0005               	push	
 20114   002B14  6EFA               	movwf	pclath,c
 20115   002B16  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20116   002B18  6EFD               	movwf	tosl,c
 20117   002B1A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20118   002B1C  6EFE               	movwf	tosh,c
 20119   002B1E  6AFF               	clrf	tosu,c
 20120   002B20  50FA               	movf	pclath,w,c
 20121   002B22  0EFF               	movlw	255
 20122   002B24  0012               	return		;indir
 20123   002B26                     u15349:
 20124   002B26                     
 20125                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 20126   002B26  0E9D               	movlw	low (_spiMaster+4)
 20127   002B28  6EF6               	movwf	tblptrl,c
 20128   002B2A  0EFF               	movlw	high (_spiMaster+4)
 20129   002B2C  6EF7               	movwf	tblptrh,c
 20130   002B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20131   002B2E  6AF8               	clrf	tblptru,c
 20132   002B30                     	endif
 20133   002B30                     	if	0	;tblptru may be non-zero
 20134   002B30                     	endif
 20135   002B30  0009               	tblrd		*+
 20136   002B32  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20137   002B38  0009               	tblrd		*+
 20138   002B3A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20139   002B40  D802               	call	u15358
 20140   002B42  EFAE  F015         	goto	u15359
 20141   002B46                     u15358:
 20142   002B46  0005               	push	
 20143   002B48  6EFA               	movwf	pclath,c
 20144   002B4A  0100               	movlb	0	; () banked
 20145   002B4C  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20146   002B4E  6EFD               	movwf	tosl,c
 20147   002B50  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20148   002B52  6EFE               	movwf	tosh,c
 20149   002B54  6AFF               	clrf	tosu,c
 20150   002B56  50FA               	movf	pclath,w,c
 20151   002B58  0EFF               	movlw	255
 20152   002B5A  0012               	return		;indir
 20153   002B5C                     u15359:
 20154   002B5C  6E4A               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 20155   002B5E                     
 20156                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 20157   002B5E  504A               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 20158   002B60  B4D8               	btfsc	status,2,c
 20159   002B62  EFB5  F015         	goto	u15361
 20160   002B66  EFB7  F015         	goto	u15360
 20161   002B6A                     u15361:
 20162   002B6A  EF54  F015         	goto	l13476
 20163   002B6E                     u15360:
 20164   002B6E                     
 20165                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 20166   002B6E  502F               	movf	(_ioInfo+2)^0,w,c
 20167   002B70  1030               	iorwf	(_ioInfo+3)^0,w,c
 20168   002B72  1031               	iorwf	(_ioInfo+4)^0,w,c
 20169   002B74  1032               	iorwf	(_ioInfo+5)^0,w,c
 20170   002B76  A4D8               	btfss	status,2,c
 20171   002B78  EFC0  F015         	goto	u15371
 20172   002B7C  EFC2  F015         	goto	u15370
 20173   002B80                     u15371:
 20174   002B80  EF3A  F016         	goto	l13528
 20175   002B84                     u15370:
 20176   002B84                     
 20177                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 20178   002B84  0E00               	movlw	0
 20179   002B86  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 20180   002B88  0E00               	movlw	0
 20181   002B8A  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 20182   002B8C  0E0A               	movlw	10
 20183   002B8E  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 20184   002B90  0E00               	movlw	0
 20185   002B92  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 20186   002B94                     
 20187                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 20188   002B94  0E0B               	movlw	11
 20189   002B96  1849               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 20190   002B98  A4D8               	btfss	status,2,c
 20191   002B9A  EFD1  F015         	goto	u15381
 20192   002B9E  EFD3  F015         	goto	u15380
 20193   002BA2                     u15381:
 20194   002BA2  EF13  F016         	goto	l1738
 20195   002BA6                     u15380:
 20196   002BA6                     
 20197                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 20198   002BA6  0E9D               	movlw	low (_spiMaster+4)
 20199   002BA8  6EF6               	movwf	tblptrl,c
 20200   002BAA  0EFF               	movlw	high (_spiMaster+4)
 20201   002BAC  6EF7               	movwf	tblptrh,c
 20202   002BAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20203   002BAE  6AF8               	clrf	tblptru,c
 20204   002BB0                     	endif
 20205   002BB0                     	if	0	;tblptru may be non-zero
 20206   002BB0                     	endif
 20207   002BB0  0009               	tblrd		*+
 20208   002BB2  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20209   002BB8  0009               	tblrd		*+
 20210   002BBA  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20211   002BC0  D802               	call	u15398
 20212   002BC2  EFEE  F015         	goto	u15399
 20213   002BC6                     u15398:
 20214   002BC6  0005               	push	
 20215   002BC8  6EFA               	movwf	pclath,c
 20216   002BCA  0100               	movlb	0	; () banked
 20217   002BCC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20218   002BCE  6EFD               	movwf	tosl,c
 20219   002BD0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20220   002BD2  6EFE               	movwf	tosh,c
 20221   002BD4  6AFF               	clrf	tosu,c
 20222   002BD6  50FA               	movf	pclath,w,c
 20223   002BD8  0EFD               	movlw	253
 20224   002BDA  0012               	return		;indir
 20225   002BDC                     u15399:
 20226                           
 20227                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 20228   002BDC  0E9D               	movlw	low (_spiMaster+4)
 20229   002BDE  6EF6               	movwf	tblptrl,c
 20230   002BE0  0EFF               	movlw	high (_spiMaster+4)
 20231   002BE2  6EF7               	movwf	tblptrh,c
 20232   002BE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20233   002BE4  6AF8               	clrf	tblptru,c
 20234   002BE6                     	endif
 20235   002BE6                     	if	0	;tblptru may be non-zero
 20236   002BE6                     	endif
 20237   002BE6  0009               	tblrd		*+
 20238   002BE8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20239   002BEE  0009               	tblrd		*+
 20240   002BF0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20241   002BF6  D802               	call	u15408
 20242   002BF8  EF09  F016         	goto	u15409
 20243   002BFC                     u15408:
 20244   002BFC  0005               	push	
 20245   002BFE  6EFA               	movwf	pclath,c
 20246   002C00  0100               	movlb	0	; () banked
 20247   002C02  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20248   002C04  6EFD               	movwf	tosl,c
 20249   002C06  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20250   002C08  6EFE               	movwf	tosh,c
 20251   002C0A  6AFF               	clrf	tosu,c
 20252   002C0C  50FA               	movf	pclath,w,c
 20253   002C0E  0EFF               	movlw	255
 20254   002C10  0012               	return		;indir
 20255   002C12                     u15409:
 20256   002C12                     
 20257                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 20258   002C12  0100               	movlb	0	; () banked
 20259   002C14  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20260   002C16  6ED9               	movwf	fsr2l,c
 20261   002C18  6ADA               	clrf	fsr2h,c
 20262   002C1A  0E0C               	movlw	12
 20263   002C1C  26D9               	addwf	fsr2l,f,c
 20264   002C1E  0E04               	movlw	4
 20265   002C20  6EDF               	movwf	indf2,c
 20266   002C22  EF54  F015         	goto	l13476
 20267   002C26                     l1738:
 20268   002C26  8ABA               	bsf	186,5,c	;volatile
 20269   002C28                     
 20270                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 20271   002C28  0E9D               	movlw	low (_spiMaster+4)
 20272   002C2A  6EF6               	movwf	tblptrl,c
 20273   002C2C  0EFF               	movlw	high (_spiMaster+4)
 20274   002C2E  6EF7               	movwf	tblptrh,c
 20275   002C30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20276   002C30  6AF8               	clrf	tblptru,c
 20277   002C32                     	endif
 20278   002C32                     	if	0	;tblptru may be non-zero
 20279   002C32                     	endif
 20280   002C32  0009               	tblrd		*+
 20281   002C34  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20282   002C3A  0009               	tblrd		*+
 20283   002C3C  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20284   002C42  D802               	call	u15418
 20285   002C44  EF2F  F016         	goto	u15419
 20286   002C48                     u15418:
 20287   002C48  0005               	push	
 20288   002C4A  6EFA               	movwf	pclath,c
 20289   002C4C  0100               	movlb	0	; () banked
 20290   002C4E  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20291   002C50  6EFD               	movwf	tosl,c
 20292   002C52  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20293   002C54  6EFE               	movwf	tosh,c
 20294   002C56  6AFF               	clrf	tosu,c
 20295   002C58  50FA               	movf	pclath,w,c
 20296   002C5A  0EFF               	movlw	255
 20297   002C5C  0012               	return		;indir
 20298   002C5E                     u15419:
 20299   002C5E                     
 20300                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 20301   002C5E  0100               	movlb	0	; () banked
 20302   002C60  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20303   002C62  6ED9               	movwf	fsr2l,c
 20304   002C64  6ADA               	clrf	fsr2h,c
 20305   002C66  0E0C               	movlw	12
 20306   002C68  26D9               	addwf	fsr2l,f,c
 20307   002C6A  6ADF               	clrf	indf2,c
 20308   002C6C                     l13522:
 20309                           
 20310                           ; BSR set to: 0
 20311                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 20312   002C6C  0E01               	movlw	1
 20313   002C6E  6E52               	movwf	(_mediaInformation+3)^0,c
 20314   002C70  EF99  F013         	goto	l13398
 20315   002C74                     l13528:
 20316                           
 20317                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 20318   002C74  0100               	movlb	0	; () banked
 20319   002C76  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20320   002C78  6ED9               	movwf	fsr2l,c
 20321   002C7A  6ADA               	clrf	fsr2h,c
 20322   002C7C  0E0C               	movlw	12
 20323   002C7E  26D9               	addwf	fsr2l,f,c
 20324   002C80  0E02               	movlw	2
 20325   002C82  6EDF               	movwf	indf2,c
 20326   002C84  EF51  F014         	goto	l13442
 20327   002C88                     l13540:
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 20331   002C88  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20332   002C8A  6ED9               	movwf	fsr2l,c
 20333   002C8C  6ADA               	clrf	fsr2h,c
 20334   002C8E  0E0C               	movlw	12
 20335   002C90  26D9               	addwf	fsr2l,f,c
 20336   002C92  0EFE               	movlw	254
 20337   002C94  6EDF               	movwf	indf2,c
 20338   002C96  EF54  F015         	goto	l13476
 20339   002C9A                     l13546:
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 20343   002C9A  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 20344   002C9C  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 20345   002C9E  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 20346   002CA0  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 20347   002CA2  B4D8               	btfsc	status,2,c
 20348   002CA4  EF56  F016         	goto	u15421
 20349   002CA8  EF58  F016         	goto	u15420
 20350   002CAC                     u15421:
 20351   002CAC  EFA5  F016         	goto	l13568
 20352   002CB0                     u15420:
 20353   002CB0                     
 20354                           ; BSR set to: 0
 20355                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 20356   002CB0  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 20357   002CB2  0E00               	movlw	0
 20358   002CB4  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 20359   002CB6  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 20360   002CB8  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 20361   002CBA                     
 20362                           ; BSR set to: 0
 20363                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 20364   002CBA  0E9D               	movlw	low (_spiMaster+4)
 20365   002CBC  6EF6               	movwf	tblptrl,c
 20366   002CBE  0EFF               	movlw	high (_spiMaster+4)
 20367   002CC0  6EF7               	movwf	tblptrh,c
 20368   002CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20369   002CC2  6AF8               	clrf	tblptru,c
 20370   002CC4                     	endif
 20371   002CC4                     	if	0	;tblptru may be non-zero
 20372   002CC4                     	endif
 20373   002CC4  0009               	tblrd		*+
 20374   002CC6  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20375   002CCC  0009               	tblrd		*+
 20376   002CCE  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20377   002CD4  D802               	call	u15438
 20378   002CD6  EF77  F016         	goto	u15439
 20379   002CDA                     u15438:
 20380   002CDA  0005               	push	
 20381   002CDC  6EFA               	movwf	pclath,c
 20382   002CDE  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20383   002CE0  6EFD               	movwf	tosl,c
 20384   002CE2  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20385   002CE4  6EFE               	movwf	tosh,c
 20386   002CE6  6AFF               	clrf	tosu,c
 20387   002CE8  50FA               	movf	pclath,w,c
 20388   002CEA  0EFF               	movlw	255
 20389   002CEC  0012               	return		;indir
 20390   002CEE                     u15439:
 20391   002CEE  6E4A               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 20392   002CF0                     
 20393                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 20394   002CF0  504A               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 20395   002CF2  B4D8               	btfsc	status,2,c
 20396   002CF4  EF7E  F016         	goto	u15441
 20397   002CF8  EF80  F016         	goto	u15440
 20398   002CFC                     u15441:
 20399   002CFC  EF54  F015         	goto	l13476
 20400   002D00                     u15440:
 20401   002D00  8ABA               	bsf	186,5,c	;volatile
 20402   002D02                     
 20403                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 20404   002D02  0E9D               	movlw	low (_spiMaster+4)
 20405   002D04  6EF6               	movwf	tblptrl,c
 20406   002D06  0EFF               	movlw	high (_spiMaster+4)
 20407   002D08  6EF7               	movwf	tblptrh,c
 20408   002D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20409   002D0A  6AF8               	clrf	tblptru,c
 20410   002D0C                     	endif
 20411   002D0C                     	if	0	;tblptru may be non-zero
 20412   002D0C                     	endif
 20413   002D0C  0009               	tblrd		*+
 20414   002D0E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20415   002D14  0009               	tblrd		*+
 20416   002D16  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20417   002D1C  D802               	call	u15458
 20418   002D1E  EF9C  F016         	goto	u15459
 20419   002D22                     u15458:
 20420   002D22  0005               	push	
 20421   002D24  6EFA               	movwf	pclath,c
 20422   002D26  0100               	movlb	0	; () banked
 20423   002D28  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20424   002D2A  6EFD               	movwf	tosl,c
 20425   002D2C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20426   002D2E  6EFE               	movwf	tosh,c
 20427   002D30  6AFF               	clrf	tosu,c
 20428   002D32  50FA               	movf	pclath,w,c
 20429   002D34  0EFF               	movlw	255
 20430   002D36  0012               	return		;indir
 20431   002D38                     u15459:
 20432   002D38                     
 20433                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 20434   002D38  0100               	movlb	0	; () banked
 20435   002D3A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20436   002D3C  6ED9               	movwf	fsr2l,c
 20437   002D3E  6ADA               	clrf	fsr2h,c
 20438   002D40  0E0C               	movlw	12
 20439   002D42  26D9               	addwf	fsr2l,f,c
 20440   002D44  6ADF               	clrf	indf2,c
 20441   002D46  EF36  F016         	goto	l13522
 20442   002D4A                     l13568:
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 20446   002D4A  0E00               	movlw	0
 20447   002D4C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 20448   002D4E  0E00               	movlw	0
 20449   002D50  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 20450   002D52  0E00               	movlw	0
 20451   002D54  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 20452   002D56  0E00               	movlw	0
 20453   002D58  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 20454   002D5A  0E05               	movlw	5
 20455   002D5C  EC82  F01C         	call	_SD_SendCmd
 20456   002D60  8ABA               	bsf	186,5,c	;volatile
 20457   002D62                     
 20458                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 20459   002D62  0E9D               	movlw	low (_spiMaster+4)
 20460   002D64  6EF6               	movwf	tblptrl,c
 20461   002D66  0EFF               	movlw	high (_spiMaster+4)
 20462   002D68  6EF7               	movwf	tblptrh,c
 20463   002D6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20464   002D6A  6AF8               	clrf	tblptru,c
 20465   002D6C                     	endif
 20466   002D6C                     	if	0	;tblptru may be non-zero
 20467   002D6C                     	endif
 20468   002D6C  0009               	tblrd		*+
 20469   002D6E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 20470   002D74  0009               	tblrd		*+
 20471   002D76  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 20472   002D7C  D802               	call	u15468
 20473   002D7E  EFCC  F016         	goto	u15469
 20474   002D82                     u15468:
 20475   002D82  0005               	push	
 20476   002D84  6EFA               	movwf	pclath,c
 20477   002D86  0100               	movlb	0	; () banked
 20478   002D88  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 20479   002D8A  6EFD               	movwf	tosl,c
 20480   002D8C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 20481   002D8E  6EFE               	movwf	tosh,c
 20482   002D90  6AFF               	clrf	tosu,c
 20483   002D92  50FA               	movf	pclath,w,c
 20484   002D94  0EFF               	movlw	255
 20485   002D96  0012               	return		;indir
 20486   002D98                     u15469:
 20487   002D98                     
 20488                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 20489   002D98  0100               	movlb	0	; () banked
 20490   002D9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20491   002D9C  6ED9               	movwf	fsr2l,c
 20492   002D9E  6ADA               	clrf	fsr2h,c
 20493   002DA0  0E0C               	movlw	12
 20494   002DA2  26D9               	addwf	fsr2l,f,c
 20495   002DA4  0EFF               	movlw	255
 20496   002DA6  6EDF               	movwf	indf2,c
 20497   002DA8                     l13576:
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 20501   002DA8  0E01               	movlw	1
 20502   002DAA  6E52               	movwf	(_mediaInformation+3)^0,c
 20503   002DAC  EF47  F014         	goto	l13434
 20504   002DB0                     l13584:
 20505   002DB0  0100               	movlb	0	; () banked
 20506   002DB2  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 20507   002DB4  6ED9               	movwf	fsr2l,c
 20508   002DB6  6ADA               	clrf	fsr2h,c
 20509   002DB8  0E0C               	movlw	12
 20510   002DBA  26D9               	addwf	fsr2l,f,c
 20511   002DBC  50DF               	movf	indf2,w,c
 20512                           
 20513                           ; Switch size 1, requested type "simple"
 20514                           ; Number of cases is 6, Range of values is 0 to 254
 20515                           ; switch strategies available:
 20516                           ; Name         Instructions Cycles
 20517                           ; simple_byte           19    10 (average)
 20518                           ;	Chosen strategy is simple_byte
 20519   002DBE  0A00               	xorlw	0	; case 0
 20520   002DC0  B4D8               	btfsc	status,2,c
 20521   002DC2  EF99  F013         	goto	l13398
 20522   002DC6  0A01               	xorlw	1	; case 1
 20523   002DC8  B4D8               	btfsc	status,2,c
 20524   002DCA  EF9C  F013         	goto	l13402
 20525   002DCE  0A03               	xorlw	3	; case 2
 20526   002DD0  B4D8               	btfsc	status,2,c
 20527   002DD2  EF54  F014         	goto	l13446
 20528   002DD6  0A01               	xorlw	1	; case 3
 20529   002DD8  B4D8               	btfsc	status,2,c
 20530   002DDA  EF69  F015         	goto	l13492
 20531   002DDE  0A07               	xorlw	7	; case 4
 20532   002DE0  B4D8               	btfsc	status,2,c
 20533   002DE2  EF4D  F016         	goto	l13546
 20534   002DE6  0AFA               	xorlw	250	; case 254
 20535   002DE8  B4D8               	btfsc	status,2,c
 20536   002DEA  EFA5  F016         	goto	l13568
 20537   002DEE  EFD4  F016         	goto	l13576
 20538   002DF2                     l1717:
 20539   002DF2  0012               	return		;funcret
 20540   002DF4                     __end_of_SD_SPI_AsyncWriteTasks:
 20541                           	callstack 0
 20542                           
 20543 ;; *************** function _disk_read *****************
 20544 ;; Defined at:
 20545 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 20546 ;; Parameters:    Size  Location     Type
 20547 ;;  pdrv            1    wreg     unsigned char 
 20548 ;;  buff            2   72[BANK0 ] PTR unsigned char 
 20549 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 20550 ;;		 -> NULL(0), 
 20551 ;;  sector          4   74[BANK0 ] unsigned long 
 20552 ;;  count           2   78[BANK0 ] unsigned int 
 20553 ;; Auto vars:     Size  Location     Type
 20554 ;;  pdrv            1   80[BANK0 ] unsigned char 
 20555 ;;  res             1   81[BANK0 ] enum E12
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  1    wreg      enum E12
 20558 ;; Registers used:
 20559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20565 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20568 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20569 ;;Total ram usage:       10 bytes
 20570 ;; Hardware stack levels used: 1
 20571 ;; Hardware stack levels required when called: 9
 20572 ;; This function calls:
 20573 ;;		_SD_SPI_SectorRead
 20574 ;; This function is called by:
 20575 ;;		_move_window
 20576 ;;		_f_open
 20577 ;;		_f_write
 20578 ;;		_f_read
 20579 ;; This function uses a non-reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text68
 20583   0084E2                     __ptext68:
 20584                           	callstack 0
 20585   0084E2                     _disk_read:
 20586                           	callstack 19
 20587                           
 20588                           ;incstack = 0
 20589                           ;disk_read@pdrv stored from wreg
 20590   0084E2  0100               	movlb	0	; () banked
 20591   0084E4  6FB0               	movwf	disk_read@pdrv& (0+255),b
 20592   0084E6                     
 20593                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 20594   0084E6  0E04               	movlw	4
 20595   0084E8  0100               	movlb	0	; () banked
 20596   0084EA  6FB1               	movwf	disk_read@res& (0+255),b
 20597                           
 20598                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 20599   0084EC  EF9C  F042         	goto	l13834
 20600   0084F0                     l13826:
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 20604   0084F0  C0AA  F08D         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 20605   0084F4  C0AB  F08E         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 20606   0084F8  C0AC  F08F         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 20607   0084FC  C0AD  F090         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 20608   008500  C0A8  F091         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 20609   008504  C0A9  F092         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 20610   008508  C0AE  F093         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 20611   00850C  C0AF  F094         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 20612   008510  EC6F  F037         	call	_SD_SPI_SectorRead
 20613   008514  06E8               	decf	wreg,f,c
 20614   008516  A4D8               	btfss	status,2,c
 20615   008518  EF90  F042         	goto	u15841
 20616   00851C  EF92  F042         	goto	u15840
 20617   008520                     u15841:
 20618   008520  EF97  F042         	goto	l13830
 20619   008524                     u15840:
 20620   008524                     
 20621                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 20622   008524  0E00               	movlw	0
 20623   008526  0100               	movlb	0	; () banked
 20624   008528  6FB1               	movwf	disk_read@res& (0+255),b
 20625                           
 20626                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 20627   00852A  EFA3  F042         	goto	l13836
 20628   00852E                     l13830:
 20629                           
 20630                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 20631   00852E  0E01               	movlw	1
 20632   008530  0100               	movlb	0	; () banked
 20633   008532  6FB1               	movwf	disk_read@res& (0+255),b
 20634   008534  EFA3  F042         	goto	l13836
 20635   008538                     l13834:
 20636                           
 20637                           ; BSR set to: 0
 20638   008538  51B0               	movf	disk_read@pdrv& (0+255),w,b
 20639                           
 20640                           ; Switch size 1, requested type "simple"
 20641                           ; Number of cases is 1, Range of values is 0 to 0
 20642                           ; switch strategies available:
 20643                           ; Name         Instructions Cycles
 20644                           ; simple_byte            4     3 (average)
 20645                           ;	Chosen strategy is simple_byte
 20646   00853A  0A00               	xorlw	0	; case 0
 20647   00853C  B4D8               	btfsc	status,2,c
 20648   00853E  EF78  F042         	goto	l13826
 20649   008542  EFA3  F042         	goto	l13836
 20650   008546                     l13836:
 20651                           
 20652                           ; BSR set to: 0
 20653                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 20654   008546  51B1               	movf	disk_read@res& (0+255),w,b
 20655   008548                     
 20656                           ; BSR set to: 0
 20657   008548  0012               	return		;funcret
 20658   00854A                     __end_of_disk_read:
 20659                           	callstack 0
 20660                           
 20661 ;; *************** function _SD_SPI_SectorRead *****************
 20662 ;; Defined at:
 20663 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;  sector_addre    4   45[BANK0 ] unsigned long 
 20666 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 20667 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 20668 ;;		 -> NULL(0), 
 20669 ;;  sector_count    2   51[BANK0 ] unsigned short 
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;  info           13   59[BANK0 ] struct SD_ASYNC_IO
 20672 ;;  i               2   57[BANK0 ] unsigned short 
 20673 ;;  status          1   56[BANK0 ] unsigned char 
 20674 ;;  result          1   55[BANK0 ] _Bool 
 20675 ;; Return value:  Size  Location     Type
 20676 ;;                  1    wreg      _Bool 
 20677 ;; Registers used:
 20678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20679 ;; Tracked objects:
 20680 ;;		On entry : 0/0
 20681 ;;		On exit  : 0/0
 20682 ;;		Unchanged: 0/0
 20683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20684 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20685 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20687 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20688 ;;Total ram usage:       27 bytes
 20689 ;; Hardware stack levels used: 1
 20690 ;; Hardware stack levels required when called: 8
 20691 ;; This function calls:
 20692 ;;		_SDFAST_open
 20693 ;;		_SDSLOW_open
 20694 ;;		_SD_SPI_AsyncReadTasks
 20695 ;;		_SPI1_Close
 20696 ;; This function is called by:
 20697 ;;		_disk_read
 20698 ;; This function uses a non-reentrant model
 20699 ;;
 20700                           
 20701                           	psect	text69
 20702   006EDE                     __ptext69:
 20703                           	callstack 0
 20704   006EDE                     _SD_SPI_SectorRead:
 20705                           	callstack 19
 20706   006EDE                     
 20707                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 20708   006EDE  0E00               	movlw	0
 20709   006EE0  0100               	movlb	0	; () banked
 20710   006EE2  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 20711                           
 20712                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 20713   006EE4  0E00               	movlw	0
 20714   006EE6  6F9A               	movwf	(SD_SPI_SectorRead@i+1)& (0+255),b
 20715   006EE8  0E00               	movlw	0
 20716   006EEA  6F99               	movwf	SD_SPI_SectorRead@i& (0+255),b
 20717   006EEC  EF03  F038         	goto	l13802
 20718   006EF0                     l13774:
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 20722   006EF0  0E02               	movlw	2
 20723   006EF2  6F9C               	movwf	(SD_SPI_SectorRead@info+1)& (0+255),b
 20724   006EF4  0E00               	movlw	0
 20725   006EF6  6F9B               	movwf	SD_SPI_SectorRead@info& (0+255),b
 20726                           
 20727                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 20728   006EF8  0E00               	movlw	0
 20729   006EFA  6F9D               	movwf	(SD_SPI_SectorRead@info+2)& (0+255),b
 20730   006EFC  0E02               	movlw	2
 20731   006EFE  6F9E               	movwf	(SD_SPI_SectorRead@info+3)& (0+255),b
 20732   006F00  0E00               	movlw	0
 20733   006F02  6F9F               	movwf	(SD_SPI_SectorRead@info+4)& (0+255),b
 20734   006F04  0E00               	movlw	0
 20735   006F06  6FA0               	movwf	(SD_SPI_SectorRead@info+5)& (0+255),b
 20736   006F08                     
 20737                           ; BSR set to: 0
 20738                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 20739   006F08  C099  F095         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 20740   006F0C  C09A  F096         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 20741   006F10  0E09               	movlw	9
 20742   006F12                     u15765:
 20743   006F12  90D8               	bcf	status,0,c
 20744   006F14  3795               	rlcf	??_SD_SPI_SectorRead& (0+255),f,b
 20745   006F16  3796               	rlcf	(??_SD_SPI_SectorRead+1)& (0+255),f,b
 20746   006F18  2EE8               	decfsz	wreg,f,c
 20747   006F1A  EF89  F037         	goto	u15765
 20748   006F1E  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 20749   006F20  2591               	addwf	SD_SPI_SectorRead@buffer& (0+255),w,b
 20750   006F22  6FA1               	movwf	(SD_SPI_SectorRead@info+6)& (0+255),b
 20751   006F24  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 20752   006F26  2192               	addwfc	(SD_SPI_SectorRead@buffer+1)& (0+255),w,b
 20753   006F28  6FA2               	movwf	(SD_SPI_SectorRead@info+7)& (0+255),b
 20754   006F2A                     
 20755                           ; BSR set to: 0
 20756                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 20757   006F2A  5199               	movf	SD_SPI_SectorRead@i& (0+255),w,b
 20758   006F2C  258D               	addwf	SD_SPI_SectorRead@sector_address& (0+255),w,b
 20759   006F2E  6FA3               	movwf	(SD_SPI_SectorRead@info+8)& (0+255),b
 20760   006F30  519A               	movf	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 20761   006F32  218E               	addwfc	(SD_SPI_SectorRead@sector_address+1)& (0+255),w,b
 20762   006F34  6FA4               	movwf	(SD_SPI_SectorRead@info+9)& (0+255),b
 20763   006F36  0E00               	movlw	0
 20764   006F38  218F               	addwfc	(SD_SPI_SectorRead@sector_address+2)& (0+255),w,b
 20765   006F3A  6FA5               	movwf	(SD_SPI_SectorRead@info+10)& (0+255),b
 20766   006F3C  0E00               	movlw	0
 20767   006F3E  2190               	addwfc	(SD_SPI_SectorRead@sector_address+3)& (0+255),w,b
 20768   006F40  6FA6               	movwf	(SD_SPI_SectorRead@info+11)& (0+255),b
 20769                           
 20770                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 20771   006F42  0E01               	movlw	1
 20772   006F44  6FA7               	movwf	(SD_SPI_SectorRead@info+12)& (0+255),b
 20773   006F46                     
 20774                           ; BSR set to: 0
 20775                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 20776   006F46  0E9B               	movlw	low (_spiMaster+2)
 20777   006F48  6EF6               	movwf	tblptrl,c
 20778   006F4A  0EFF               	movlw	high (_spiMaster+2)
 20779   006F4C  6EF7               	movwf	tblptrh,c
 20780   006F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20781   006F4E  6AF8               	clrf	tblptru,c
 20782   006F50                     	endif
 20783   006F50                     	if	0	;tblptru may be non-zero
 20784   006F50                     	endif
 20785   006F50  0009               	tblrd		*+
 20786   006F52  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 20787   006F58  0009               	tblrd		*+
 20788   006F5A  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 20789   006F60  D802               	call	u15778
 20790   006F62  EFBC  F037         	goto	u15779
 20791   006F66                     u15778:
 20792   006F66  0005               	push	
 20793   006F68  6EFA               	movwf	pclath,c
 20794   006F6A  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 20795   006F6C  6EFD               	movwf	tosl,c
 20796   006F6E  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 20797   006F70  6EFE               	movwf	tosh,c
 20798   006F72  6AFF               	clrf	tosu,c
 20799   006F74  50FA               	movf	pclath,w,c
 20800   006F76  0012               	return		;indir
 20801   006F78                     u15779:
 20802   006F78  0900               	iorlw	0
 20803   006F7A  A4D8               	btfss	status,2,c
 20804   006F7C  EFC2  F037         	goto	u15781
 20805   006F80  EFC4  F037         	goto	u15780
 20806   006F84                     u15781:
 20807   006F84  EFC7  F037         	goto	l1564
 20808   006F88                     u15780:
 20809   006F88                     
 20810                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 20811   006F88  0E00               	movlw	0
 20812   006F8A  EF0F  F038         	goto	l1563
 20813   006F8E                     l1564:
 20814   006F8E  9ABA               	bcf	186,5,c	;volatile
 20815   006F90                     l13786:
 20816                           
 20817                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 20818   006F90  0E9B               	movlw	low SD_SPI_SectorRead@info
 20819   006F92  0100               	movlb	0	; () banked
 20820   006F94  6F82               	movwf	SD_SPI_AsyncReadTasks@info& (0+255),b
 20821   006F96  EC93  F023         	call	_SD_SPI_AsyncReadTasks	;wreg free
 20822   006F9A  0100               	movlb	0	; () banked
 20823   006F9C  6F98               	movwf	SD_SPI_SectorRead@status& (0+255),b
 20824   006F9E                     
 20825                           ; BSR set to: 0
 20826                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 20827   006F9E  5198               	movf	SD_SPI_SectorRead@status& (0+255),w,b
 20828   006FA0  A4D8               	btfss	status,2,c
 20829   006FA2  EFD5  F037         	goto	u15791
 20830   006FA6  EFD7  F037         	goto	u15790
 20831   006FAA                     u15791:
 20832   006FAA  EFDB  F037         	goto	l13794
 20833   006FAE                     u15790:
 20834   006FAE                     
 20835                           ; BSR set to: 0
 20836                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 20837   006FAE  0E01               	movlw	1
 20838   006FB0  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 20839                           
 20840                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 20841   006FB2  EFE5  F037         	goto	l1572
 20842   006FB6                     l13794:
 20843                           
 20844                           ; BSR set to: 0
 20845   006FB6  2998               	incf	SD_SPI_SectorRead@status& (0+255),w,b
 20846   006FB8  A4D8               	btfss	status,2,c
 20847   006FBA  EFE1  F037         	goto	u15801
 20848   006FBE  EFE3  F037         	goto	u15800
 20849   006FC2                     u15801:
 20850   006FC2  EFC8  F037         	goto	l13786
 20851   006FC6                     u15800:
 20852   006FC6                     
 20853                           ; BSR set to: 0
 20854                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 20855   006FC6  0E00               	movlw	0
 20856   006FC8  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 20857   006FCA                     l1572:
 20858                           
 20859                           ; BSR set to: 0
 20860   006FCA  8ABA               	bsf	186,5,c	;volatile
 20861   006FCC                     
 20862                           ; BSR set to: 0
 20863                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 20864   006FCC  0E99               	movlw	low _spiMaster
 20865   006FCE  6EF6               	movwf	tblptrl,c
 20866   006FD0                     	if	1	;There is more than 1 active tblptr byte
 20867   006FD0  0EFF               	movlw	high _spiMaster
 20868   006FD2  6EF7               	movwf	tblptrh,c
 20869   006FD4                     	endif
 20870   006FD4                     	if	1	;There are 3 active tblptr bytes
 20871   006FD4  0E00               	movlw	low (_spiMaster shr (0+16))
 20872   006FD6  6EF8               	movwf	tblptru,c
 20873   006FD8                     	endif
 20874   006FD8  0009               	tblrd		*+
 20875   006FDA  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 20876   006FE0  0009               	tblrd		*+
 20877   006FE2  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 20878   006FE8  D802               	call	u15818
 20879   006FEA  EF00  F038         	goto	u15819
 20880   006FEE                     u15818:
 20881   006FEE  0005               	push	
 20882   006FF0  6EFA               	movwf	pclath,c
 20883   006FF2  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 20884   006FF4  6EFD               	movwf	tosl,c
 20885   006FF6  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 20886   006FF8  6EFE               	movwf	tosh,c
 20887   006FFA  6AFF               	clrf	tosu,c
 20888   006FFC  50FA               	movf	pclath,w,c
 20889   006FFE  0012               	return		;indir
 20890   007000                     u15819:
 20891   007000                     
 20892                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 20893   007000  0100               	movlb	0	; () banked
 20894   007002  4B99               	infsnz	SD_SPI_SectorRead@i& (0+255),f,b
 20895   007004  2B9A               	incf	(SD_SPI_SectorRead@i+1)& (0+255),f,b
 20896   007006                     l13802:
 20897                           
 20898                           ; BSR set to: 0
 20899   007006  5193               	movf	SD_SPI_SectorRead@sector_count& (0+255),w,b
 20900   007008  5D99               	subwf	SD_SPI_SectorRead@i& (0+255),w,b
 20901   00700A  5194               	movf	(SD_SPI_SectorRead@sector_count+1)& (0+255),w,b
 20902   00700C  599A               	subwfb	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 20903   00700E  A0D8               	btfss	status,0,c
 20904   007010  EF0C  F038         	goto	u15821
 20905   007014  EF0E  F038         	goto	u15820
 20906   007018                     u15821:
 20907   007018  EF78  F037         	goto	l13774
 20908   00701C                     u15820:
 20909   00701C                     
 20910                           ; BSR set to: 0
 20911                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 20912   00701C  5197               	movf	SD_SPI_SectorRead@result& (0+255),w,b
 20913   00701E                     l1563:
 20914   00701E  0012               	return		;funcret
 20915   007020                     __end_of_SD_SPI_SectorRead:
 20916                           	callstack 0
 20917                           
 20918 ;; *************** function _SPI1_Close *****************
 20919 ;; Defined at:
 20920 ;;		line 96 in file "mcc_generated_files/spi1.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;		None
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;		None
 20925 ;; Return value:  Size  Location     Type
 20926 ;;                  1    wreg      void 
 20927 ;; Registers used:
 20928 ;;		None
 20929 ;; Tracked objects:
 20930 ;;		On entry : 0/0
 20931 ;;		On exit  : 0/0
 20932 ;;		Unchanged: 0/0
 20933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20938 ;;Total ram usage:        0 bytes
 20939 ;; Hardware stack levels used: 1
 20940 ;; Hardware stack levels required when called: 5
 20941 ;; This function calls:
 20942 ;;		Nothing
 20943 ;; This function is called by:
 20944 ;;		_SD_SPI_SectorWrite
 20945 ;;		_SD_SPI_SectorRead
 20946 ;;		_SD_SPI_MediaInitialize
 20947 ;; This function uses a non-reentrant model
 20948 ;;
 20949                           
 20950                           	psect	text70
 20951   008CFA                     __ptext70:
 20952                           	callstack 0
 20953   008CFA                     _SPI1_Close:
 20954                           	callstack 21
 20955   008CFA                     
 20956                           ;mcc_generated_files/spi1.c: 98:     SPI1CON0bits.EN = 0;
 20957   008CFA  013D               	movlb	61	; () banked
 20958   008CFC  9F14               	bcf	20,7,b	;volatile
 20959   008CFE                     
 20960                           ; BSR set to: 61
 20961   008CFE  0012               	return		;funcret
 20962   008D00                     __end_of_SPI1_Close:
 20963                           	callstack 0
 20964                           
 20965 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 20966 ;; Defined at:
 20967 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 20970 ;;		 -> SD_SPI_SectorRead@info(13), 
 20971 ;; Auto vars:     Size  Location     Type
 20972 ;;  response        5   39[BANK0 ] struct .
 20973 ;;  bData           1   44[BANK0 ] unsigned char 
 20974 ;; Return value:  Size  Location     Type
 20975 ;;                  1    wreg      unsigned char 
 20976 ;; Registers used:
 20977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20978 ;; Tracked objects:
 20979 ;;		On entry : 0/0
 20980 ;;		On exit  : 0/0
 20981 ;;		Unchanged: 0/0
 20982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20983 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20984 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20986 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20987 ;;Total ram usage:       11 bytes
 20988 ;; Hardware stack levels used: 1
 20989 ;; Hardware stack levels required when called: 7
 20990 ;; This function calls:
 20991 ;;		_SD_SendCmd
 20992 ;;		_SPI1_ExchangeBlock
 20993 ;;		_SPI1_ExchangeByte
 20994 ;;		_memset
 20995 ;; This function is called by:
 20996 ;;		_SD_SPI_SectorRead
 20997 ;; This function uses a non-reentrant model
 20998 ;;
 20999                           
 21000                           	psect	text71
 21001   004726                     __ptext71:
 21002                           	callstack 0
 21003   004726                     _SD_SPI_AsyncReadTasks:
 21004                           	callstack 19
 21005   004726                     
 21006                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 21007   004726  EF9A  F025         	goto	l13770
 21008   00472A                     l13634:
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 21012   00472A  0E00               	movlw	0
 21013   00472C  EFBB  F025         	goto	l1678
 21014   004730                     l13638:
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 21018   004730  0E02               	movlw	2
 21019   004732  6E52               	movwf	(_mediaInformation+3)^0,c
 21020                           
 21021                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 21022   004734  0E02               	movlw	2
 21023   004736  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 21024   004738  0E00               	movlw	0
 21025   00473A  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 21026   00473C                     
 21027                           ; BSR set to: 0
 21028                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 21029   00473C  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21030   00473E  6ED9               	movwf	fsr2l,c
 21031   004740  6ADA               	clrf	fsr2h,c
 21032   004742  EE10  F02D         	lfsr	1,_ioInfo
 21033   004746  0E0C               	movlw	12
 21034   004748                     u15561:
 21035   004748  006F FF6F FFE3     	movff	plusw2,plusw1
 21036   00474E  06E8               	decf	wreg,f,c
 21037   004750  E2FB               	bc	u15561
 21038   004752                     
 21039                           ; BSR set to: 0
 21040                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 21041   004752  5057               	movf	(_mediaInformation+8)^0,w,c
 21042   004754  A4D8               	btfss	status,2,c
 21043   004756  EFAF  F023         	goto	u15571
 21044   00475A  EFB1  F023         	goto	u15570
 21045   00475E                     u15571:
 21046   00475E  EFBA  F023         	goto	l1680
 21047   004762                     u15570:
 21048   004762                     
 21049                           ; BSR set to: 0
 21050                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 21051   004762  0E09               	movlw	9
 21052   004764                     u15585:
 21053   004764  90D8               	bcf	status,0,c
 21054   004766  3635               	rlcf	(_ioInfo+8)^0,f,c
 21055   004768  3636               	rlcf	(_ioInfo+9)^0,f,c
 21056   00476A  3637               	rlcf	(_ioInfo+10)^0,f,c
 21057   00476C  3638               	rlcf	(_ioInfo+11)^0,f,c
 21058   00476E  2EE8               	decfsz	wreg,f,c
 21059   004770  EFB2  F023         	goto	u15585
 21060   004774                     l1680:
 21061                           
 21062                           ; BSR set to: 0
 21063                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 21064   004774  5032               	movf	(_ioInfo+5)^0,w,c
 21065   004776  1031               	iorwf	(_ioInfo+4)^0,w,c
 21066   004778  E108               	bnz	u15591
 21067   00477A  042F               	decf	(_ioInfo+2)^0,w,c
 21068   00477C  0E02               	movlw	2
 21069   00477E  5830               	subwfb	(_ioInfo+3)^0,w,c
 21070   004780  B0D8               	btfsc	status,0,c
 21071   004782  EFC5  F023         	goto	u15591
 21072   004786  EFC7  F023         	goto	u15590
 21073   00478A                     u15591:
 21074   00478A  EFDE  F023         	goto	l13650
 21075   00478E                     u15590:
 21076   00478E                     
 21077                           ; BSR set to: 0
 21078                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 21079   00478E  0E01               	movlw	1
 21080   004790  6E4B               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 21081   004792                     
 21082                           ; BSR set to: 0
 21083                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 21084   004792  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 21085   004796  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 21086   00479A  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 21087   00479E  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 21088   0047A2  0E08               	movlw	8
 21089   0047A4  EC82  F01C         	call	_SD_SendCmd
 21090   0047A8  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 21091   0047AC  0E04               	movlw	4
 21092   0047AE                     u15601:
 21093   0047AE  006F FFAF FFDB     	movff	plusw0,plusw2
 21094   0047B4  06E8               	decf	wreg,f,c
 21095   0047B6  E2FB               	bc	u15601
 21096                           
 21097                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 21098   0047B8  EFF3  F023         	goto	l13654
 21099   0047BC                     l13650:
 21100                           
 21101                           ; BSR set to: 0
 21102                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 21103   0047BC  0E00               	movlw	0
 21104   0047BE  6E4B               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 21105   0047C0                     
 21106                           ; BSR set to: 0
 21107                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 21108   0047C0  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 21109   0047C4  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 21110   0047C8  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 21111   0047CC  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 21112   0047D0  0E09               	movlw	9
 21113   0047D2  EC82  F01C         	call	_SD_SendCmd
 21114   0047D6  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 21115   0047DA  0E04               	movlw	4
 21116   0047DC                     u15611:
 21117   0047DC  006F FFAF FFDB     	movff	plusw0,plusw2
 21118   0047E2  06E8               	decf	wreg,f,c
 21119   0047E4  E2FB               	bc	u15611
 21120   0047E6                     l13654:
 21121                           
 21122                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 21123   0047E6  0100               	movlb	0	; () banked
 21124   0047E8  5187               	movf	SD_SPI_AsyncReadTasks@response& (0+255),w,b
 21125   0047EA  B4D8               	btfsc	status,2,c
 21126   0047EC  EFFA  F023         	goto	u15621
 21127   0047F0  EFFC  F023         	goto	u15620
 21128   0047F4                     u15621:
 21129   0047F4  EF06  F024         	goto	l13662
 21130   0047F8                     u15620:
 21131   0047F8                     
 21132                           ; BSR set to: 0
 21133                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 21134   0047F8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21135   0047FA  6ED9               	movwf	fsr2l,c
 21136   0047FC  6ADA               	clrf	fsr2h,c
 21137   0047FE  0E0C               	movlw	12
 21138   004800  26D9               	addwf	fsr2l,f,c
 21139   004802  0EFE               	movlw	254
 21140   004804  6EDF               	movwf	indf2,c
 21141   004806                     l13658:
 21142                           
 21143                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 21144   004806  0E01               	movlw	1
 21145   004808  EFBB  F025         	goto	l1678
 21146   00480C                     l13662:
 21147                           
 21148                           ; BSR set to: 0
 21149                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 21150   00480C  0E00               	movlw	0
 21151   00480E  0101               	movlb	1	; () banked
 21152   004810  6FB3               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 21153   004812  0E00               	movlw	0
 21154   004814  6FB4               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 21155   004816  0E04               	movlw	4
 21156   004818  6FB5               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 21157   00481A  0E00               	movlw	0
 21158   00481C  6FB6               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 21159   00481E                     
 21160                           ; BSR set to: 1
 21161                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 21162   00481E  0100               	movlb	0	; () banked
 21163   004820  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21164   004822  6ED9               	movwf	fsr2l,c
 21165   004824  6ADA               	clrf	fsr2h,c
 21166   004826  0E0C               	movlw	12
 21167   004828  26D9               	addwf	fsr2l,f,c
 21168   00482A  0E03               	movlw	3
 21169   00482C  6EDF               	movwf	indf2,c
 21170   00482E  EF03  F024         	goto	l13658
 21171   004832                     l13670:
 21172                           
 21173                           ; BSR set to: 0
 21174                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 21175   004832  0101               	movlb	1	; () banked
 21176   004834  51B3               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 21177   004836  11B4               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 21178   004838  11B5               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 21179   00483A  11B6               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 21180   00483C  B4D8               	btfsc	status,2,c
 21181   00483E  EF23  F024         	goto	u15631
 21182   004842  EF25  F024         	goto	u15630
 21183   004846                     u15631:
 21184   004846  EF6B  F024         	goto	l13698
 21185   00484A                     u15630:
 21186   00484A                     
 21187                           ; BSR set to: 1
 21188                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 21189   00484A  07B3               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 21190   00484C  0E00               	movlw	0
 21191   00484E  5BB4               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 21192   004850  5BB5               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 21193   004852  5BB6               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 21194   004854                     
 21195                           ; BSR set to: 1
 21196                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 21197   004854  0E9D               	movlw	low (_spiMaster+4)
 21198   004856  6EF6               	movwf	tblptrl,c
 21199   004858  0EFF               	movlw	high (_spiMaster+4)
 21200   00485A  6EF7               	movwf	tblptrh,c
 21201   00485C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21202   00485C  6AF8               	clrf	tblptru,c
 21203   00485E                     	endif
 21204   00485E                     	if	0	;tblptru may be non-zero
 21205   00485E                     	endif
 21206   00485E  0009               	tblrd		*+
 21207   004860  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21208   004866  0009               	tblrd		*+
 21209   004868  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21210   00486E  D802               	call	u15648
 21211   004870  EF45  F024         	goto	u15649
 21212   004874                     u15648:
 21213   004874  0005               	push	
 21214   004876  6EFA               	movwf	pclath,c
 21215   004878  0100               	movlb	0	; () banked
 21216   00487A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21217   00487C  6EFD               	movwf	tosl,c
 21218   00487E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21219   004880  6EFE               	movwf	tosh,c
 21220   004882  6AFF               	clrf	tosu,c
 21221   004884  50FA               	movf	pclath,w,c
 21222   004886  0EFF               	movlw	255
 21223   004888  0012               	return		;indir
 21224   00488A                     u15649:
 21225   00488A  0100               	movlb	0	; () banked
 21226   00488C  6F8C               	movwf	SD_SPI_AsyncReadTasks@bData& (0+255),b
 21227   00488E                     
 21228                           ; BSR set to: 0
 21229                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 21230   00488E  298C               	incf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 21231   004890  B4D8               	btfsc	status,2,c
 21232   004892  EF4D  F024         	goto	u15651
 21233   004896  EF4F  F024         	goto	u15650
 21234   00489A                     u15651:
 21235   00489A  EF03  F024         	goto	l13658
 21236   00489E                     u15650:
 21237   00489E                     
 21238                           ; BSR set to: 0
 21239                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 21240   00489E  0EFE               	movlw	254
 21241   0048A0  198C               	xorwf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 21242   0048A2  A4D8               	btfss	status,2,c
 21243   0048A4  EF56  F024         	goto	u15661
 21244   0048A8  EF58  F024         	goto	u15660
 21245   0048AC                     u15661:
 21246   0048AC  EF62  F024         	goto	l13688
 21247   0048B0                     u15660:
 21248   0048B0                     
 21249                           ; BSR set to: 0
 21250                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 21251   0048B0  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21252   0048B2  6ED9               	movwf	fsr2l,c
 21253   0048B4  6ADA               	clrf	fsr2h,c
 21254   0048B6  0E0C               	movlw	12
 21255   0048B8  26D9               	addwf	fsr2l,f,c
 21256   0048BA  0E02               	movlw	2
 21257   0048BC  6EDF               	movwf	indf2,c
 21258   0048BE                     l13682:
 21259                           
 21260                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 21261   0048BE  0E02               	movlw	2
 21262   0048C0  EFBB  F025         	goto	l1678
 21263   0048C4                     l13688:
 21264                           
 21265                           ; BSR set to: 0
 21266                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 21267   0048C4  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21268   0048C6  6ED9               	movwf	fsr2l,c
 21269   0048C8  6ADA               	clrf	fsr2h,c
 21270   0048CA  0E0C               	movlw	12
 21271   0048CC  26D9               	addwf	fsr2l,f,c
 21272   0048CE  0EFE               	movlw	254
 21273   0048D0  6EDF               	movwf	indf2,c
 21274   0048D2  EF03  F024         	goto	l13658
 21275   0048D6                     l13698:
 21276                           
 21277                           ; BSR set to: 1
 21278                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 21279   0048D6  0100               	movlb	0	; () banked
 21280   0048D8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21281   0048DA  6ED9               	movwf	fsr2l,c
 21282   0048DC  6ADA               	clrf	fsr2h,c
 21283   0048DE  0E0C               	movlw	12
 21284   0048E0  26D9               	addwf	fsr2l,f,c
 21285   0048E2  0EFE               	movlw	254
 21286   0048E4  6EDF               	movwf	indf2,c
 21287   0048E6  EF03  F024         	goto	l13658
 21288   0048EA                     l13704:
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 21292   0048EA  502F               	movf	(_ioInfo+2)^0,w,c
 21293   0048EC  1030               	iorwf	(_ioInfo+3)^0,w,c
 21294   0048EE  1031               	iorwf	(_ioInfo+4)^0,w,c
 21295   0048F0  1032               	iorwf	(_ioInfo+5)^0,w,c
 21296   0048F2  B4D8               	btfsc	status,2,c
 21297   0048F4  EF7E  F024         	goto	u15671
 21298   0048F8  EF80  F024         	goto	u15670
 21299   0048FC                     u15671:
 21300   0048FC  EF2D  F025         	goto	l13738
 21301   004900                     u15670:
 21302   004900                     
 21303                           ; BSR set to: 0
 21304                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 21305   004900  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21306   004902  6ED9               	movwf	fsr2l,c
 21307   004904  6ADA               	clrf	fsr2h,c
 21308   004906  006F FF78  F02D    	movff	postinc2,_ioInfo
 21309   00490C  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 21310   004912                     
 21311                           ; BSR set to: 0
 21312                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 21313   004912  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21314   004914  6ED9               	movwf	fsr2l,c
 21315   004916  6ADA               	clrf	fsr2h,c
 21316   004918  0E06               	movlw	6
 21317   00491A  26D9               	addwf	fsr2l,f,c
 21318   00491C  006F FF78  F033    	movff	postinc2,_ioInfo+6
 21319   004922  006F FF74  F034    	movff	postdec2,_ioInfo+7
 21320   004928                     
 21321                           ; BSR set to: 0
 21322                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 21323   004928  502D               	movf	_ioInfo^0,w,c
 21324   00492A  6F83               	movwf	??_SD_SPI_AsyncReadTasks& (0+255),b
 21325   00492C  502E               	movf	(_ioInfo+1)^0,w,c
 21326   00492E  6F84               	movwf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),b
 21327   004930  6B85               	clrf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),b
 21328   004932  6B86               	clrf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),b
 21329   004934  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21330   004936  5E2F               	subwf	(_ioInfo+2)^0,f,c
 21331   004938  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21332   00493A  5A30               	subwfb	(_ioInfo+3)^0,f,c
 21333   00493C  5185               	movf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),w,b
 21334   00493E  5A31               	subwfb	(_ioInfo+4)^0,f,c
 21335   004940  5186               	movf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),w,b
 21336   004942  5A32               	subwfb	(_ioInfo+5)^0,f,c
 21337   004944                     
 21338                           ; BSR set to: 0
 21339                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 21340   004944  502D               	movf	_ioInfo^0,w,c
 21341   004946  5E44               	subwf	SD_SPI_AsyncReadTasks@blockCounter^0,f,c
 21342   004948  502E               	movf	(_ioInfo+1)^0,w,c
 21343   00494A  5A45               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,f,c
 21344   00494C                     
 21345                           ; BSR set to: 0
 21346                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 21347   00494C  C033  F060         	movff	_ioInfo+6,memset@dest
 21348   004950  C034  F061         	movff	_ioInfo+7,memset@dest+1
 21349   004954  0E00               	movlw	0
 21350   004956  6F63               	movwf	(memset@c+1)& (0+255),b
 21351   004958  6962               	setf	memset@c& (0+255),b
 21352   00495A  C02D  F064         	movff	_ioInfo,memset@n
 21353   00495E  C02E  F065         	movff	_ioInfo+1,memset@n+1
 21354   004962  ECD8  F042         	call	_memset
 21355   004966                     
 21356                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 21357   004966  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 21358   00496A  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 21359   00496E  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 21360   004972  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 21361   004976  0E9F               	movlw	low (_spiMaster+6)
 21362   004978  6EF6               	movwf	tblptrl,c
 21363   00497A  0EFF               	movlw	high (_spiMaster+6)
 21364   00497C  6EF7               	movwf	tblptrh,c
 21365   00497E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21366   00497E  6AF8               	clrf	tblptru,c
 21367   004980                     	endif
 21368   004980                     	if	0	;tblptru may be non-zero
 21369   004980                     	endif
 21370   004980  0009               	tblrd		*+
 21371   004982  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21372   004988  0009               	tblrd		*+
 21373   00498A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21374   004990  D802               	call	u15688
 21375   004992  EFD5  F024         	goto	u15689
 21376   004996                     u15688:
 21377   004996  0005               	push	
 21378   004998  6EFA               	movwf	pclath,c
 21379   00499A  0100               	movlb	0	; () banked
 21380   00499C  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21381   00499E  6EFD               	movwf	tosl,c
 21382   0049A0  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21383   0049A2  6EFE               	movwf	tosh,c
 21384   0049A4  6AFF               	clrf	tosu,c
 21385   0049A6  50FA               	movf	pclath,w,c
 21386   0049A8  0012               	return		;indir
 21387   0049AA                     u15689:
 21388   0049AA                     
 21389                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 21390   0049AA  5044               	movf	SD_SPI_AsyncReadTasks@blockCounter^0,w,c
 21391   0049AC  1045               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,w,c
 21392   0049AE  A4D8               	btfss	status,2,c
 21393   0049B0  EFDC  F024         	goto	u15691
 21394   0049B4  EFDE  F024         	goto	u15690
 21395   0049B8                     u15691:
 21396   0049B8  EF5F  F024         	goto	l13682
 21397   0049BC                     u15690:
 21398   0049BC                     
 21399                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 21400   0049BC  0E9D               	movlw	low (_spiMaster+4)
 21401   0049BE  6EF6               	movwf	tblptrl,c
 21402   0049C0  0EFF               	movlw	high (_spiMaster+4)
 21403   0049C2  6EF7               	movwf	tblptrh,c
 21404   0049C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21405   0049C4  6AF8               	clrf	tblptru,c
 21406   0049C6                     	endif
 21407   0049C6                     	if	0	;tblptru may be non-zero
 21408   0049C6                     	endif
 21409   0049C6  0009               	tblrd		*+
 21410   0049C8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21411   0049CE  0009               	tblrd		*+
 21412   0049D0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21413   0049D6  D802               	call	u15708
 21414   0049D8  EFF9  F024         	goto	u15709
 21415   0049DC                     u15708:
 21416   0049DC  0005               	push	
 21417   0049DE  6EFA               	movwf	pclath,c
 21418   0049E0  0100               	movlb	0	; () banked
 21419   0049E2  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21420   0049E4  6EFD               	movwf	tosl,c
 21421   0049E6  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21422   0049E8  6EFE               	movwf	tosh,c
 21423   0049EA  6AFF               	clrf	tosu,c
 21424   0049EC  50FA               	movf	pclath,w,c
 21425   0049EE  0EFF               	movlw	255
 21426   0049F0  0012               	return		;indir
 21427   0049F2                     u15709:
 21428                           
 21429                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 21430   0049F2  0E9D               	movlw	low (_spiMaster+4)
 21431   0049F4  6EF6               	movwf	tblptrl,c
 21432   0049F6  0EFF               	movlw	high (_spiMaster+4)
 21433   0049F8  6EF7               	movwf	tblptrh,c
 21434   0049FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21435   0049FA  6AF8               	clrf	tblptru,c
 21436   0049FC                     	endif
 21437   0049FC                     	if	0	;tblptru may be non-zero
 21438   0049FC                     	endif
 21439   0049FC  0009               	tblrd		*+
 21440   0049FE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21441   004A04  0009               	tblrd		*+
 21442   004A06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21443   004A0C  D802               	call	u15718
 21444   004A0E  EF14  F025         	goto	u15719
 21445   004A12                     u15718:
 21446   004A12  0005               	push	
 21447   004A14  6EFA               	movwf	pclath,c
 21448   004A16  0100               	movlb	0	; () banked
 21449   004A18  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21450   004A1A  6EFD               	movwf	tosl,c
 21451   004A1C  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21452   004A1E  6EFE               	movwf	tosh,c
 21453   004A20  6AFF               	clrf	tosu,c
 21454   004A22  50FA               	movf	pclath,w,c
 21455   004A24  0EFF               	movlw	255
 21456   004A26  0012               	return		;indir
 21457   004A28                     u15719:
 21458   004A28                     
 21459                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 21460   004A28  502F               	movf	(_ioInfo+2)^0,w,c
 21461   004A2A  1030               	iorwf	(_ioInfo+3)^0,w,c
 21462   004A2C  1031               	iorwf	(_ioInfo+4)^0,w,c
 21463   004A2E  1032               	iorwf	(_ioInfo+5)^0,w,c
 21464   004A30  B4D8               	btfsc	status,2,c
 21465   004A32  EF1D  F025         	goto	u15721
 21466   004A36  EF1F  F025         	goto	u15720
 21467   004A3A                     u15721:
 21468   004A3A  EF27  F025         	goto	l13726
 21469   004A3E                     u15720:
 21470   004A3E                     
 21471                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 21472   004A3E  0100               	movlb	0	; () banked
 21473   004A40  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21474   004A42  6ED9               	movwf	fsr2l,c
 21475   004A44  6ADA               	clrf	fsr2h,c
 21476   004A46  0E0C               	movlw	12
 21477   004A48  26D9               	addwf	fsr2l,f,c
 21478   004A4A  0E03               	movlw	3
 21479   004A4C  6EDF               	movwf	indf2,c
 21480   004A4E                     l13726:
 21481                           
 21482                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 21483   004A4E  0E02               	movlw	2
 21484   004A50  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 21485   004A52  0E00               	movlw	0
 21486   004A54  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 21487   004A56  EF03  F024         	goto	l13658
 21488   004A5A                     l13738:
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 21492   004A5A  504B               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,w,c
 21493   004A5C  A4D8               	btfss	status,2,c
 21494   004A5E  EF33  F025         	goto	u15731
 21495   004A62  EF35  F025         	goto	u15730
 21496   004A66                     u15731:
 21497   004A66  EF40  F025         	goto	l13742
 21498   004A6A                     u15730:
 21499   004A6A                     
 21500                           ; BSR set to: 0
 21501                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 21502   004A6A  0E00               	movlw	0
 21503   004A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21504   004A6E  0E00               	movlw	0
 21505   004A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21506   004A72  0E00               	movlw	0
 21507   004A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21508   004A76  0E00               	movlw	0
 21509   004A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21510   004A7A  0E05               	movlw	5
 21511   004A7C  EC82  F01C         	call	_SD_SendCmd
 21512   004A80                     l13742:
 21513   004A80  8ABA               	bsf	186,5,c	;volatile
 21514   004A82                     
 21515                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 21516   004A82  0E9D               	movlw	low (_spiMaster+4)
 21517   004A84  6EF6               	movwf	tblptrl,c
 21518   004A86  0EFF               	movlw	high (_spiMaster+4)
 21519   004A88  6EF7               	movwf	tblptrh,c
 21520   004A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21521   004A8A  6AF8               	clrf	tblptru,c
 21522   004A8C                     	endif
 21523   004A8C                     	if	0	;tblptru may be non-zero
 21524   004A8C                     	endif
 21525   004A8C  0009               	tblrd		*+
 21526   004A8E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21527   004A94  0009               	tblrd		*+
 21528   004A96  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21529   004A9C  D802               	call	u15748
 21530   004A9E  EF5C  F025         	goto	u15749
 21531   004AA2                     u15748:
 21532   004AA2  0005               	push	
 21533   004AA4  6EFA               	movwf	pclath,c
 21534   004AA6  0100               	movlb	0	; () banked
 21535   004AA8  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21536   004AAA  6EFD               	movwf	tosl,c
 21537   004AAC  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21538   004AAE  6EFE               	movwf	tosh,c
 21539   004AB0  6AFF               	clrf	tosu,c
 21540   004AB2  50FA               	movf	pclath,w,c
 21541   004AB4  0EFF               	movlw	255
 21542   004AB6  0012               	return		;indir
 21543   004AB8                     u15749:
 21544   004AB8                     
 21545                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 21546   004AB8  0100               	movlb	0	; () banked
 21547   004ABA  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21548   004ABC  6ED9               	movwf	fsr2l,c
 21549   004ABE  6ADA               	clrf	fsr2h,c
 21550   004AC0  0E0C               	movlw	12
 21551   004AC2  26D9               	addwf	fsr2l,f,c
 21552   004AC4  6ADF               	clrf	indf2,c
 21553   004AC6                     
 21554                           ; BSR set to: 0
 21555                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 21556   004AC6  0E01               	movlw	1
 21557   004AC8  6E52               	movwf	(_mediaInformation+3)^0,c
 21558   004ACA  EF95  F023         	goto	l13634
 21559   004ACE                     l13754:
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 21563   004ACE  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21564   004AD0  6ED9               	movwf	fsr2l,c
 21565   004AD2  6ADA               	clrf	fsr2h,c
 21566   004AD4  0E0C               	movlw	12
 21567   004AD6  26D9               	addwf	fsr2l,f,c
 21568   004AD8  0EFF               	movlw	255
 21569   004ADA  6EDF               	movwf	indf2,c
 21570   004ADC                     
 21571                           ; BSR set to: 0
 21572   004ADC  0E00               	movlw	0
 21573   004ADE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21574   004AE0  0E00               	movlw	0
 21575   004AE2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21576   004AE4  0E00               	movlw	0
 21577   004AE6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21578   004AE8  0E00               	movlw	0
 21579   004AEA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21580   004AEC  0E05               	movlw	5
 21581   004AEE  EC82  F01C         	call	_SD_SendCmd
 21582   004AF2                     l13758:
 21583   004AF2  8ABA               	bsf	186,5,c	;volatile
 21584   004AF4                     
 21585                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 21586   004AF4  0E9D               	movlw	low (_spiMaster+4)
 21587   004AF6  6EF6               	movwf	tblptrl,c
 21588   004AF8  0EFF               	movlw	high (_spiMaster+4)
 21589   004AFA  6EF7               	movwf	tblptrh,c
 21590   004AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21591   004AFC  6AF8               	clrf	tblptru,c
 21592   004AFE                     	endif
 21593   004AFE                     	if	0	;tblptru may be non-zero
 21594   004AFE                     	endif
 21595   004AFE  0009               	tblrd		*+
 21596   004B00  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 21597   004B06  0009               	tblrd		*+
 21598   004B08  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 21599   004B0E  D802               	call	u15758
 21600   004B10  EF95  F025         	goto	u15759
 21601   004B14                     u15758:
 21602   004B14  0005               	push	
 21603   004B16  6EFA               	movwf	pclath,c
 21604   004B18  0100               	movlb	0	; () banked
 21605   004B1A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 21606   004B1C  6EFD               	movwf	tosl,c
 21607   004B1E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 21608   004B20  6EFE               	movwf	tosh,c
 21609   004B22  6AFF               	clrf	tosu,c
 21610   004B24  50FA               	movf	pclath,w,c
 21611   004B26  0EFF               	movlw	255
 21612   004B28  0012               	return		;indir
 21613   004B2A                     u15759:
 21614   004B2A                     
 21615                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 21616   004B2A  0E01               	movlw	1
 21617   004B2C  6E52               	movwf	(_mediaInformation+3)^0,c
 21618   004B2E                     
 21619                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 21620   004B2E  0EFF               	movlw	255
 21621   004B30  EFBB  F025         	goto	l1678
 21622   004B34                     l13770:
 21623   004B34  0100               	movlb	0	; () banked
 21624   004B36  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 21625   004B38  6ED9               	movwf	fsr2l,c
 21626   004B3A  6ADA               	clrf	fsr2h,c
 21627   004B3C  0E0C               	movlw	12
 21628   004B3E  26D9               	addwf	fsr2l,f,c
 21629   004B40  50DF               	movf	indf2,w,c
 21630                           
 21631                           ; Switch size 1, requested type "simple"
 21632                           ; Number of cases is 6, Range of values is 0 to 255
 21633                           ; switch strategies available:
 21634                           ; Name         Instructions Cycles
 21635                           ; simple_byte           19    10 (average)
 21636                           ;	Chosen strategy is simple_byte
 21637   004B42  0A00               	xorlw	0	; case 0
 21638   004B44  B4D8               	btfsc	status,2,c
 21639   004B46  EF95  F023         	goto	l13634
 21640   004B4A  0A01               	xorlw	1	; case 1
 21641   004B4C  B4D8               	btfsc	status,2,c
 21642   004B4E  EF98  F023         	goto	l13638
 21643   004B52  0A03               	xorlw	3	; case 2
 21644   004B54  B4D8               	btfsc	status,2,c
 21645   004B56  EF75  F024         	goto	l13704
 21646   004B5A  0A01               	xorlw	1	; case 3
 21647   004B5C  B4D8               	btfsc	status,2,c
 21648   004B5E  EF19  F024         	goto	l13670
 21649   004B62  0AFD               	xorlw	253	; case 254
 21650   004B64  B4D8               	btfsc	status,2,c
 21651   004B66  EF67  F025         	goto	l13754
 21652   004B6A  0A01               	xorlw	1	; case 255
 21653   004B6C  B4D8               	btfsc	status,2,c
 21654   004B6E  EF79  F025         	goto	l13758
 21655   004B72  EF79  F025         	goto	l13758
 21656   004B76                     l1678:
 21657   004B76  0012               	return		;funcret
 21658   004B78                     __end_of_SD_SPI_AsyncReadTasks:
 21659                           	callstack 0
 21660                           
 21661 ;; *************** function _memset *****************
 21662 ;; Defined at:
 21663 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 21664 ;; Parameters:    Size  Location     Type
 21665 ;;  dest            2    0[BANK0 ] PTR void 
 21666 ;;		 -> send_status_ok@buf(4), STR_9(12), Fil(546), FatFs(563), 
 21667 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21668 ;;		 -> NULL(0), 
 21669 ;;  c               2    2[BANK0 ] int 
 21670 ;;  n               2    4[BANK0 ] unsigned int 
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;  p               2    6[BANK0 ] PTR unsigned char 
 21673 ;;		 -> send_status_ok@buf(4), STR_9(12), Fil(546), FatFs(563), 
 21674 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21675 ;;		 -> NULL(0), 
 21676 ;; Return value:  Size  Location     Type
 21677 ;;                  2    0[BANK0 ] PTR void 
 21678 ;; Registers used:
 21679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21680 ;; Tracked objects:
 21681 ;;		On entry : 0/0
 21682 ;;		On exit  : 0/0
 21683 ;;		Unchanged: 0/0
 21684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21689 ;;Total ram usage:        8 bytes
 21690 ;; Hardware stack levels used: 1
 21691 ;; Hardware stack levels required when called: 5
 21692 ;; This function calls:
 21693 ;;		Nothing
 21694 ;; This function is called by:
 21695 ;;		_SD_SPI_AsyncReadTasks
 21696 ;; This function uses a non-reentrant model
 21697 ;;
 21698                           
 21699                           	psect	text72
 21700   0085B0                     __ptext72:
 21701                           	callstack 0
 21702   0085B0                     _memset:
 21703                           	callstack 20
 21704   0085B0  C060  F066         	movff	memset@dest,memset@p
 21705   0085B4  C061  F067         	movff	memset@dest+1,memset@p+1
 21706   0085B8  EFFA  F042         	goto	l13592
 21707   0085BC                     l13588:
 21708                           
 21709                           ; BSR set to: 0
 21710   0085BC  0060  F19B  FFF6   	movff	memset@p,tblptrl
 21711   0085C2  0060  F19F  FFF7   	movff	memset@p+1,tblptrh
 21712   0085C8  0E00               	movlw	low (__mediumconst shr (0+16))
 21713   0085CA  6EF8               	movwf	tblptru,c
 21714   0085CC  0E0F               	movlw	(high __ramtop+-1)
 21715   0085CE  64F7               	cpfsgt	tblptrh,c
 21716   0085D0  D005               	bra	u15477
 21717   0085D2  0060  F18B  FFF5   	movff	memset@c,tablat
 21718   0085D8  000C               	tblwt		*
 21719   0085DA  D009               	bra	u15470
 21720   0085DC                     u15477:
 21721   0085DC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21722   0085E2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21723   0085E8  0060  F18B  FFEF   	movff	memset@c,indf0
 21724   0085EE                     u15470:
 21725   0085EE  0100               	movlb	0	; () banked
 21726   0085F0  4B66               	infsnz	memset@p& (0+255),f,b
 21727   0085F2  2B67               	incf	(memset@p+1)& (0+255),f,b
 21728   0085F4                     l13592:
 21729   0085F4  0100               	movlb	0	; () banked
 21730   0085F6  0764               	decf	memset@n& (0+255),f,b
 21731   0085F8  A0D8               	btfss	status,0,c
 21732   0085FA  0765               	decf	(memset@n+1)& (0+255),f,b
 21733   0085FC  2964               	incf	memset@n& (0+255),w,b
 21734   0085FE  E106               	bnz	u15481
 21735   008600  2965               	incf	(memset@n+1)& (0+255),w,b
 21736   008602  A4D8               	btfss	status,2,c
 21737   008604  EF06  F043         	goto	u15481
 21738   008608  EF08  F043         	goto	u15480
 21739   00860C                     u15481:
 21740   00860C  EFDE  F042         	goto	l13588
 21741   008610                     u15480:
 21742   008610                     
 21743                           ; BSR set to: 0
 21744   008610  0012               	return		;funcret
 21745   008612                     __end_of_memset:
 21746                           	callstack 0
 21747                           
 21748 ;; *************** function _SPI1_ExchangeBlock *****************
 21749 ;; Defined at:
 21750 ;;		line 109 in file "mcc_generated_files/spi1.c"
 21751 ;; Parameters:    Size  Location     Type
 21752 ;;  block           2    0[BANK0 ] PTR void 
 21753 ;;		 -> send_status_ok@buf(4), STR_9(12), Fil(546), FatFs(563), 
 21754 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21755 ;;		 -> NULL(0), 
 21756 ;;  blockSize       2    2[BANK0 ] unsigned int 
 21757 ;; Auto vars:     Size  Location     Type
 21758 ;;  data            2    4[BANK0 ] PTR unsigned char 
 21759 ;;		 -> send_status_ok@buf(4), STR_9(12), Fil(546), FatFs(563), 
 21760 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21761 ;;		 -> NULL(0), 
 21762 ;; Return value:  Size  Location     Type
 21763 ;;                  1    wreg      void 
 21764 ;; Registers used:
 21765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21766 ;; Tracked objects:
 21767 ;;		On entry : 0/0
 21768 ;;		On exit  : 0/0
 21769 ;;		Unchanged: 0/0
 21770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21774 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21775 ;;Total ram usage:        6 bytes
 21776 ;; Hardware stack levels used: 1
 21777 ;; Hardware stack levels required when called: 5
 21778 ;; This function calls:
 21779 ;;		Nothing
 21780 ;; This function is called by:
 21781 ;;		_SD_SPI_AsyncWriteTasks
 21782 ;;		_SD_SPI_AsyncReadTasks
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786                           	psect	text73
 21787   007DE0                     __ptext73:
 21788                           	callstack 0
 21789   007DE0                     _SPI1_ExchangeBlock:
 21790                           	callstack 20
 21791   007DE0                     
 21792                           ;mcc_generated_files/spi1.c: 109: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 110: {;mcc_generated_files/spi1.c: 111:     uint8_t *data =
      +                           block;
 21793   007DE0  C060  F064         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 21794   007DE4  C061  F065         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 21795                           
 21796                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 21797   007DE8  EF34  F03F         	goto	l13386
 21798   007DEC                     l13378:
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;mcc_generated_files/spi1.c: 113:     {;mcc_generated_files/spi1.c: 114:         SPI1TCN
      +                          TL = 1;
 21802   007DEC  0E01               	movlw	1
 21803   007DEE  013D               	movlb	61	; () banked
 21804   007DF0  6F12               	movwf	18,b	;volatile
 21805   007DF2                     
 21806                           ; BSR set to: 61
 21807                           ;mcc_generated_files/spi1.c: 115:         SPI1TXB = *data;
 21808   007DF2  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 21809   007DF8  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 21810   007DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 21811   007E00  6EF8               	movwf	tblptru,c
 21812   007E02  0E0F               	movlw	(high __ramtop+-1)
 21813   007E04  64F7               	cpfsgt	tblptrh,c
 21814   007E06  D003               	bra	u15097
 21815   007E08  0008               	tblrd		*
 21816   007E0A  50F5               	movf	tablat,w,c
 21817   007E0C  D007               	bra	u15090
 21818   007E0E                     u15097:
 21819   007E0E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21820   007E14  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21821   007E1A  50EF               	movf	indf0,w,c
 21822   007E1C                     u15090:
 21823   007E1C  013D               	movlb	61	; () banked
 21824   007E1E  6F11               	movwf	17,b	;volatile
 21825   007E20                     l1921:
 21826   007E20  0139               	movlb	57	; () banked
 21827   007E22  A9A2               	btfss	162,4,b	;volatile
 21828   007E24  EF16  F03F         	goto	u15101
 21829   007E28  EF18  F03F         	goto	u15100
 21830   007E2C                     u15101:
 21831   007E2C  EF10  F03F         	goto	l1921
 21832   007E30                     u15100:
 21833   007E30                     
 21834                           ; BSR set to: 57
 21835                           ;mcc_generated_files/spi1.c: 117:         *data++ = SPI1RXB;
 21836   007E30  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 21837   007E36  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 21838   007E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 21839   007E3E  6EF8               	movwf	tblptru,c
 21840   007E40  0E0F               	movlw	(high __ramtop+-1)
 21841   007E42  64F7               	cpfsgt	tblptrh,c
 21842   007E44  D005               	bra	u15117
 21843   007E46  006F F443 FFF5     	movff	15632,tablat	;volatile
 21844   007E4C  000C               	tblwt		*
 21845   007E4E  D009               	bra	u15110
 21846   007E50                     u15117:
 21847   007E50  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21848   007E56  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21849   007E5C  006F F443 FFEF     	movff	15632,indf0	;volatile
 21850   007E62                     u15110:
 21851   007E62  0100               	movlb	0	; () banked
 21852   007E64  4B64               	infsnz	SPI1_ExchangeBlock@data& (0+255),f,b
 21853   007E66  2B65               	incf	(SPI1_ExchangeBlock@data+1)& (0+255),f,b
 21854   007E68                     l13386:
 21855                           
 21856                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 21857   007E68  0100               	movlb	0	; () banked
 21858   007E6A  0762               	decf	SPI1_ExchangeBlock@blockSize& (0+255),f,b
 21859   007E6C  A0D8               	btfss	status,0,c
 21860   007E6E  0763               	decf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),f,b
 21861   007E70  2962               	incf	SPI1_ExchangeBlock@blockSize& (0+255),w,b
 21862   007E72  E106               	bnz	u15121
 21863   007E74  2963               	incf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),w,b
 21864   007E76  A4D8               	btfss	status,2,c
 21865   007E78  EF40  F03F         	goto	u15121
 21866   007E7C  EF42  F03F         	goto	u15120
 21867   007E80                     u15121:
 21868   007E80  EFF6  F03E         	goto	l13378
 21869   007E84                     u15120:
 21870   007E84                     
 21871                           ; BSR set to: 0
 21872   007E84  0012               	return		;funcret
 21873   007E86                     __end_of_SPI1_ExchangeBlock:
 21874                           	callstack 0
 21875                           
 21876 ;; *************** function _SD_SendCmd *****************
 21877 ;; Defined at:
 21878 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21879 ;; Parameters:    Size  Location     Type
 21880 ;;  cmd             1    wreg     unsigned char 
 21881 ;;  address         4   11[BANK0 ] unsigned long 
 21882 ;; Auto vars:     Size  Location     Type
 21883 ;;  cmd             1   28[BANK0 ] unsigned char 
 21884 ;;  response        5   29[BANK0 ] struct .
 21885 ;;  address_byte    4   24[BANK0 ] unsigned char [4]
 21886 ;;  longTimeout     4   18[BANK0 ] unsigned long 
 21887 ;;  timeout         2   22[BANK0 ] unsigned short 
 21888 ;; Return value:  Size  Location     Type
 21889 ;;                  5   11[BANK0 ] struct .
 21890 ;; Registers used:
 21891 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21892 ;; Tracked objects:
 21893 ;;		On entry : 0/0
 21894 ;;		On exit  : 0/0
 21895 ;;		Unchanged: 0/0
 21896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21897 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21898 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21900 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21901 ;;Total ram usage:       23 bytes
 21902 ;; Hardware stack levels used: 1
 21903 ;; Hardware stack levels required when called: 6
 21904 ;; This function calls:
 21905 ;;		_SPI1_ExchangeByte
 21906 ;;		_memcpy
 21907 ;; This function is called by:
 21908 ;;		_SD_SPI_MediaInitialize
 21909 ;;		_SD_SPI_AsyncReadTasks
 21910 ;;		_SD_SPI_AsyncWriteTasks
 21911 ;; This function uses a non-reentrant model
 21912 ;;
 21913                           
 21914                           	psect	text74
 21915   003904                     __ptext74:
 21916                           	callstack 0
 21917   003904                     _SD_SendCmd:
 21918                           	callstack 19
 21919                           
 21920                           ; BSR set to: 0
 21921                           ;incstack = 0
 21922                           ;SD_SendCmd@cmd stored from wreg
 21923   003904  0100               	movlb	0	; () banked
 21924   003906  6F7C               	movwf	SD_SendCmd@cmd& (0+255),b
 21925   003908  9ABA               	bcf	186,5,c	;volatile
 21926   00390A                     
 21927                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 21928   00390A  0E78               	movlw	low SD_SendCmd@address_bytes
 21929   00390C  0100               	movlb	0	; () banked
 21930   00390E  6F60               	movwf	memcpy@d1& (0+255),b
 21931   003910  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 21932   003912  0E6B               	movlw	low SD_SendCmd@address
 21933   003914  6F62               	movwf	memcpy@s1& (0+255),b
 21934   003916  6B63               	clrf	(memcpy@s1+1)& (0+255),b
 21935   003918  0E00               	movlw	0
 21936   00391A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21937   00391C  0E04               	movlw	4
 21938   00391E  6F64               	movwf	memcpy@n& (0+255),b
 21939   003920  EC6A  F043         	call	_memcpy
 21940   003924                     
 21941                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 21942   003924  0E9D               	movlw	low (_spiMaster+4)
 21943   003926  6EF6               	movwf	tblptrl,c
 21944   003928  0EFF               	movlw	high (_spiMaster+4)
 21945   00392A  6EF7               	movwf	tblptrh,c
 21946   00392C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21947   00392C  6AF8               	clrf	tblptru,c
 21948   00392E                     	endif
 21949   00392E                     	if	0	;tblptru may be non-zero
 21950   00392E                     	endif
 21951   00392E  0009               	tblrd		*+
 21952   003930  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 21953   003936  0009               	tblrd		*+
 21954   003938  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 21955   00393E  D802               	call	u14848
 21956   003940  EFBA  F01C         	goto	u14849
 21957   003944                     u14848:
 21958   003944  0005               	push	
 21959   003946  6EFA               	movwf	pclath,c
 21960   003948  0100               	movlb	0	; () banked
 21961   00394A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 21962   00394C  6EFD               	movwf	tosl,c
 21963   00394E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 21964   003950  6EFE               	movwf	tosh,c
 21965   003952  6AFF               	clrf	tosu,c
 21966   003954  50FA               	movf	pclath,w,c
 21967   003956  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 21968   003958  0D04               	mullw	4
 21969   00395A  0E49               	movlw	low _sdmmc_cmdtable
 21970   00395C  24F3               	addwf	243,w,c
 21971   00395E  6EF6               	movwf	tblptrl,c
 21972   003960  0EFF               	movlw	high _sdmmc_cmdtable
 21973   003962  20F4               	addwfc	244,w,c
 21974   003964  6EF7               	movwf	tblptrh,c
 21975   003966                     	if	1	;There are 3 active tblptr bytes
 21976   003966  6AF8               	clrf	tblptru,c
 21977   003968  0E00               	movlw	low (__mediumconst shr (0+16))
 21978   00396A  22F8               	addwfc	tblptru,f,c
 21979   00396C                     	endif
 21980   00396C  0008               	tblrd		*
 21981   00396E  50F5               	movf	tablat,w,c
 21982   003970  0940               	iorlw	64
 21983   003972  0012               	return		;indir
 21984   003974                     u14849:
 21985   003974                     
 21986                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 21987   003974  0E9D               	movlw	low (_spiMaster+4)
 21988   003976  6EF6               	movwf	tblptrl,c
 21989   003978  0EFF               	movlw	high (_spiMaster+4)
 21990   00397A  6EF7               	movwf	tblptrh,c
 21991   00397C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21992   00397C  6AF8               	clrf	tblptru,c
 21993   00397E                     	endif
 21994   00397E                     	if	0	;tblptru may be non-zero
 21995   00397E                     	endif
 21996   00397E  0009               	tblrd		*+
 21997   003980  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 21998   003986  0009               	tblrd		*+
 21999   003988  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22000   00398E  D802               	call	u14858
 22001   003990  EFD5  F01C         	goto	u14859
 22002   003994                     u14858:
 22003   003994  0005               	push	
 22004   003996  6EFA               	movwf	pclath,c
 22005   003998  0100               	movlb	0	; () banked
 22006   00399A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22007   00399C  6EFD               	movwf	tosl,c
 22008   00399E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22009   0039A0  6EFE               	movwf	tosh,c
 22010   0039A2  6AFF               	clrf	tosu,c
 22011   0039A4  50FA               	movf	pclath,w,c
 22012   0039A6  517B               	movf	(SD_SendCmd@address_bytes+3)& (0+255),w,b
 22013   0039A8  0012               	return		;indir
 22014   0039AA                     u14859:
 22015   0039AA                     
 22016                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 22017   0039AA  0E9D               	movlw	low (_spiMaster+4)
 22018   0039AC  6EF6               	movwf	tblptrl,c
 22019   0039AE  0EFF               	movlw	high (_spiMaster+4)
 22020   0039B0  6EF7               	movwf	tblptrh,c
 22021   0039B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22022   0039B2  6AF8               	clrf	tblptru,c
 22023   0039B4                     	endif
 22024   0039B4                     	if	0	;tblptru may be non-zero
 22025   0039B4                     	endif
 22026   0039B4  0009               	tblrd		*+
 22027   0039B6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22028   0039BC  0009               	tblrd		*+
 22029   0039BE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22030   0039C4  D802               	call	u14868
 22031   0039C6  EFF0  F01C         	goto	u14869
 22032   0039CA                     u14868:
 22033   0039CA  0005               	push	
 22034   0039CC  6EFA               	movwf	pclath,c
 22035   0039CE  0100               	movlb	0	; () banked
 22036   0039D0  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22037   0039D2  6EFD               	movwf	tosl,c
 22038   0039D4  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22039   0039D6  6EFE               	movwf	tosh,c
 22040   0039D8  6AFF               	clrf	tosu,c
 22041   0039DA  50FA               	movf	pclath,w,c
 22042   0039DC  517A               	movf	(SD_SendCmd@address_bytes+2)& (0+255),w,b
 22043   0039DE  0012               	return		;indir
 22044   0039E0                     u14869:
 22045   0039E0                     
 22046                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 22047   0039E0  0E9D               	movlw	low (_spiMaster+4)
 22048   0039E2  6EF6               	movwf	tblptrl,c
 22049   0039E4  0EFF               	movlw	high (_spiMaster+4)
 22050   0039E6  6EF7               	movwf	tblptrh,c
 22051   0039E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22052   0039E8  6AF8               	clrf	tblptru,c
 22053   0039EA                     	endif
 22054   0039EA                     	if	0	;tblptru may be non-zero
 22055   0039EA                     	endif
 22056   0039EA  0009               	tblrd		*+
 22057   0039EC  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22058   0039F2  0009               	tblrd		*+
 22059   0039F4  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22060   0039FA  D802               	call	u14878
 22061   0039FC  EF0B  F01D         	goto	u14879
 22062   003A00                     u14878:
 22063   003A00  0005               	push	
 22064   003A02  6EFA               	movwf	pclath,c
 22065   003A04  0100               	movlb	0	; () banked
 22066   003A06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22067   003A08  6EFD               	movwf	tosl,c
 22068   003A0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22069   003A0C  6EFE               	movwf	tosh,c
 22070   003A0E  6AFF               	clrf	tosu,c
 22071   003A10  50FA               	movf	pclath,w,c
 22072   003A12  5179               	movf	(SD_SendCmd@address_bytes+1)& (0+255),w,b
 22073   003A14  0012               	return		;indir
 22074   003A16                     u14879:
 22075   003A16                     
 22076                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 22077   003A16  0E9D               	movlw	low (_spiMaster+4)
 22078   003A18  6EF6               	movwf	tblptrl,c
 22079   003A1A  0EFF               	movlw	high (_spiMaster+4)
 22080   003A1C  6EF7               	movwf	tblptrh,c
 22081   003A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22082   003A1E  6AF8               	clrf	tblptru,c
 22083   003A20                     	endif
 22084   003A20                     	if	0	;tblptru may be non-zero
 22085   003A20                     	endif
 22086   003A20  0009               	tblrd		*+
 22087   003A22  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22088   003A28  0009               	tblrd		*+
 22089   003A2A  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22090   003A30  D802               	call	u14888
 22091   003A32  EF26  F01D         	goto	u14889
 22092   003A36                     u14888:
 22093   003A36  0005               	push	
 22094   003A38  6EFA               	movwf	pclath,c
 22095   003A3A  0100               	movlb	0	; () banked
 22096   003A3C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22097   003A3E  6EFD               	movwf	tosl,c
 22098   003A40  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22099   003A42  6EFE               	movwf	tosh,c
 22100   003A44  6AFF               	clrf	tosu,c
 22101   003A46  50FA               	movf	pclath,w,c
 22102   003A48  5178               	movf	SD_SendCmd@address_bytes& (0+255),w,b
 22103   003A4A  0012               	return		;indir
 22104   003A4C                     u14889:
 22105   003A4C                     
 22106                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 22107   003A4C  0E9D               	movlw	low (_spiMaster+4)
 22108   003A4E  6EF6               	movwf	tblptrl,c
 22109   003A50  0EFF               	movlw	high (_spiMaster+4)
 22110   003A52  6EF7               	movwf	tblptrh,c
 22111   003A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22112   003A54  6AF8               	clrf	tblptru,c
 22113   003A56                     	endif
 22114   003A56                     	if	0	;tblptru may be non-zero
 22115   003A56                     	endif
 22116   003A56  0009               	tblrd		*+
 22117   003A58  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22118   003A5E  0009               	tblrd		*+
 22119   003A60  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22120   003A66  D802               	call	u14898
 22121   003A68  EF51  F01D         	goto	u14899
 22122   003A6C                     u14898:
 22123   003A6C  0005               	push	
 22124   003A6E  6EFA               	movwf	pclath,c
 22125   003A70  0100               	movlb	0	; () banked
 22126   003A72  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22127   003A74  6EFD               	movwf	tosl,c
 22128   003A76  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22129   003A78  6EFE               	movwf	tosh,c
 22130   003A7A  6AFF               	clrf	tosu,c
 22131   003A7C  50FA               	movf	pclath,w,c
 22132   003A7E  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 22133   003A80  0D04               	mullw	4
 22134   003A82  0E01               	movlw	1
 22135   003A84  26F3               	addwf	243,f,c
 22136   003A86  0E00               	movlw	0
 22137   003A88  22F4               	addwfc	244,f,c
 22138   003A8A  0E49               	movlw	low _sdmmc_cmdtable
 22139   003A8C  24F3               	addwf	243,w,c
 22140   003A8E  6EF6               	movwf	tblptrl,c
 22141   003A90  0EFF               	movlw	high _sdmmc_cmdtable
 22142   003A92  20F4               	addwfc	244,w,c
 22143   003A94  6EF7               	movwf	tblptrh,c
 22144   003A96                     	if	1	;There are 3 active tblptr bytes
 22145   003A96  6AF8               	clrf	tblptru,c
 22146   003A98  0E00               	movlw	low (__mediumconst shr (0+16))
 22147   003A9A  22F8               	addwfc	tblptru,f,c
 22148   003A9C                     	endif
 22149   003A9C  0008               	tblrd		*
 22150   003A9E  50F5               	movf	tablat,w,c
 22151   003AA0  0012               	return		;indir
 22152   003AA2                     u14899:
 22153   003AA2                     
 22154                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 22155   003AA2  0E05               	movlw	5
 22156   003AA4  0100               	movlb	0	; () banked
 22157   003AA6  197C               	xorwf	SD_SendCmd@cmd& (0+255),w,b
 22158   003AA8  A4D8               	btfss	status,2,c
 22159   003AAA  EF59  F01D         	goto	u14901
 22160   003AAE  EF5B  F01D         	goto	u14900
 22161   003AB2                     u14901:
 22162   003AB2  EF75  F01D         	goto	l13336
 22163   003AB6                     u14900:
 22164   003AB6                     
 22165                           ; BSR set to: 0
 22166                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22167   003AB6  0E9D               	movlw	low (_spiMaster+4)
 22168   003AB8  6EF6               	movwf	tblptrl,c
 22169   003ABA  0EFF               	movlw	high (_spiMaster+4)
 22170   003ABC  6EF7               	movwf	tblptrh,c
 22171   003ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22172   003ABE  6AF8               	clrf	tblptru,c
 22173   003AC0                     	endif
 22174   003AC0                     	if	0	;tblptru may be non-zero
 22175   003AC0                     	endif
 22176   003AC0  0009               	tblrd		*+
 22177   003AC2  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22178   003AC8  0009               	tblrd		*+
 22179   003ACA  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22180   003AD0  D802               	call	u14918
 22181   003AD2  EF75  F01D         	goto	u14919
 22182   003AD6                     u14918:
 22183   003AD6  0005               	push	
 22184   003AD8  6EFA               	movwf	pclath,c
 22185   003ADA  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22186   003ADC  6EFD               	movwf	tosl,c
 22187   003ADE  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22188   003AE0  6EFE               	movwf	tosh,c
 22189   003AE2  6AFF               	clrf	tosu,c
 22190   003AE4  50FA               	movf	pclath,w,c
 22191   003AE6  0EFF               	movlw	255
 22192   003AE8  0012               	return		;indir
 22193   003AEA                     u14919:
 22194   003AEA                     l13336:
 22195                           
 22196                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 22197   003AEA  0E00               	movlw	0
 22198   003AEC  0100               	movlb	0	; () banked
 22199   003AEE  6F77               	movwf	(SD_SendCmd@timeout+1)& (0+255),b
 22200   003AF0  0E14               	movlw	20
 22201   003AF2  6F76               	movwf	SD_SendCmd@timeout& (0+255),b
 22202   003AF4                     l13338:
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 22206   003AF4  0E9D               	movlw	low (_spiMaster+4)
 22207   003AF6  6EF6               	movwf	tblptrl,c
 22208   003AF8  0EFF               	movlw	high (_spiMaster+4)
 22209   003AFA  6EF7               	movwf	tblptrh,c
 22210   003AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22211   003AFC  6AF8               	clrf	tblptru,c
 22212   003AFE                     	endif
 22213   003AFE                     	if	0	;tblptru may be non-zero
 22214   003AFE                     	endif
 22215   003AFE  0009               	tblrd		*+
 22216   003B00  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22217   003B06  0009               	tblrd		*+
 22218   003B08  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22219   003B0E  D802               	call	u14928
 22220   003B10  EF94  F01D         	goto	u14929
 22221   003B14                     u14928:
 22222   003B14  0005               	push	
 22223   003B16  6EFA               	movwf	pclath,c
 22224   003B18  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22225   003B1A  6EFD               	movwf	tosl,c
 22226   003B1C  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22227   003B1E  6EFE               	movwf	tosh,c
 22228   003B20  6AFF               	clrf	tosu,c
 22229   003B22  50FA               	movf	pclath,w,c
 22230   003B24  0EFF               	movlw	255
 22231   003B26  0012               	return		;indir
 22232   003B28                     u14929:
 22233   003B28  0100               	movlb	0	; () banked
 22234   003B2A  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 22235   003B2C                     
 22236                           ; BSR set to: 0
 22237                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 22238   003B2C  0776               	decf	SD_SendCmd@timeout& (0+255),f,b
 22239   003B2E  A0D8               	btfss	status,0,c
 22240   003B30  0777               	decf	(SD_SendCmd@timeout+1)& (0+255),f,b
 22241   003B32                     
 22242                           ; BSR set to: 0
 22243                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 22244   003B32  297D               	incf	SD_SendCmd@response& (0+255),w,b
 22245   003B34  A4D8               	btfss	status,2,c
 22246   003B36  EF9F  F01D         	goto	u14931
 22247   003B3A  EFA1  F01D         	goto	u14930
 22248   003B3E                     u14931:
 22249   003B3E  EFAA  F01D         	goto	l13346
 22250   003B42                     u14930:
 22251   003B42                     
 22252                           ; BSR set to: 0
 22253   003B42  5176               	movf	SD_SendCmd@timeout& (0+255),w,b
 22254   003B44  1177               	iorwf	(SD_SendCmd@timeout+1)& (0+255),w,b
 22255   003B46  A4D8               	btfss	status,2,c
 22256   003B48  EFA8  F01D         	goto	u14941
 22257   003B4C  EFAA  F01D         	goto	u14940
 22258   003B50                     u14941:
 22259   003B50  EF7A  F01D         	goto	l13338
 22260   003B54                     u14940:
 22261   003B54                     l13346:
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 22265   003B54  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 22266   003B56  0D04               	mullw	4
 22267   003B58  0E02               	movlw	2
 22268   003B5A  26F3               	addwf	243,f,c
 22269   003B5C  0E00               	movlw	0
 22270   003B5E  22F4               	addwfc	244,f,c
 22271   003B60  0E49               	movlw	low _sdmmc_cmdtable
 22272   003B62  24F3               	addwf	243,w,c
 22273   003B64  6EF6               	movwf	tblptrl,c
 22274   003B66  0EFF               	movlw	high _sdmmc_cmdtable
 22275   003B68  20F4               	addwfc	244,w,c
 22276   003B6A  6EF7               	movwf	tblptrh,c
 22277   003B6C                     	if	1	;There are 3 active tblptr bytes
 22278   003B6C  6AF8               	clrf	tblptru,c
 22279   003B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 22280   003B70  22F8               	addwfc	tblptru,f,c
 22281   003B72                     	endif
 22282   003B72  0008               	tblrd		*
 22283   003B74  50F5               	movf	tablat,w,c
 22284   003B76  0A02               	xorlw	2
 22285   003B78  A4D8               	btfss	status,2,c
 22286   003B7A  EFC1  F01D         	goto	u14951
 22287   003B7E  EFC3  F01D         	goto	u14950
 22288   003B82                     u14951:
 22289   003B82  EFE3  F01D         	goto	l13352
 22290   003B86                     u14950:
 22291   003B86                     
 22292                           ; BSR set to: 0
 22293                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 22294   003B86  C07D  F07E         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 22295   003B8A                     
 22296                           ; BSR set to: 0
 22297                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 22298   003B8A  0E9D               	movlw	low (_spiMaster+4)
 22299   003B8C  6EF6               	movwf	tblptrl,c
 22300   003B8E  0EFF               	movlw	high (_spiMaster+4)
 22301   003B90  6EF7               	movwf	tblptrh,c
 22302   003B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22303   003B92  6AF8               	clrf	tblptru,c
 22304   003B94                     	endif
 22305   003B94                     	if	0	;tblptru may be non-zero
 22306   003B94                     	endif
 22307   003B94  0009               	tblrd		*+
 22308   003B96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22309   003B9C  0009               	tblrd		*+
 22310   003B9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22311   003BA4  D802               	call	u14968
 22312   003BA6  EFDF  F01D         	goto	u14969
 22313   003BAA                     u14968:
 22314   003BAA  0005               	push	
 22315   003BAC  6EFA               	movwf	pclath,c
 22316   003BAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22317   003BB0  6EFD               	movwf	tosl,c
 22318   003BB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22319   003BB4  6EFE               	movwf	tosh,c
 22320   003BB6  6AFF               	clrf	tosu,c
 22321   003BB8  50FA               	movf	pclath,w,c
 22322   003BBA  0EFF               	movlw	255
 22323   003BBC  0012               	return		;indir
 22324   003BBE                     u14969:
 22325   003BBE  0100               	movlb	0	; () banked
 22326   003BC0  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 22327                           
 22328                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 22329   003BC2  EFC5  F01E         	goto	l1762
 22330   003BC6                     l13352:
 22331                           
 22332                           ; BSR set to: 0
 22333   003BC6  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 22334   003BC8  0D04               	mullw	4
 22335   003BCA  0E02               	movlw	2
 22336   003BCC  26F3               	addwf	243,f,c
 22337   003BCE  0E00               	movlw	0
 22338   003BD0  22F4               	addwfc	244,f,c
 22339   003BD2  0E49               	movlw	low _sdmmc_cmdtable
 22340   003BD4  24F3               	addwf	243,w,c
 22341   003BD6  6EF6               	movwf	tblptrl,c
 22342   003BD8  0EFF               	movlw	high _sdmmc_cmdtable
 22343   003BDA  20F4               	addwfc	244,w,c
 22344   003BDC  6EF7               	movwf	tblptrh,c
 22345   003BDE                     	if	1	;There are 3 active tblptr bytes
 22346   003BDE  6AF8               	clrf	tblptru,c
 22347   003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 22348   003BE2  22F8               	addwfc	tblptru,f,c
 22349   003BE4                     	endif
 22350   003BE4  0008               	tblrd		*
 22351   003BE6  50F5               	movf	tablat,w,c
 22352   003BE8  06E8               	decf	wreg,f,c
 22353   003BEA  A4D8               	btfss	status,2,c
 22354   003BEC  EFFA  F01D         	goto	u14971
 22355   003BF0  EFFC  F01D         	goto	u14970
 22356   003BF4                     u14971:
 22357   003BF4  EF3C  F01E         	goto	l13366
 22358   003BF8                     u14970:
 22359   003BF8                     
 22360                           ; BSR set to: 0
 22361                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 22362   003BF8  0E00               	movlw	0
 22363   003BFA  6F72               	movwf	SD_SendCmd@longTimeout& (0+255),b
 22364   003BFC  0E00               	movlw	0
 22365   003BFE  6F73               	movwf	(SD_SendCmd@longTimeout+1)& (0+255),b
 22366   003C00  0E0A               	movlw	10
 22367   003C02  6F74               	movwf	(SD_SendCmd@longTimeout+2)& (0+255),b
 22368   003C04  0E00               	movlw	0
 22369   003C06  6F75               	movwf	(SD_SendCmd@longTimeout+3)& (0+255),b
 22370   003C08                     l13356:
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 22374   003C08  0E9D               	movlw	low (_spiMaster+4)
 22375   003C0A  6EF6               	movwf	tblptrl,c
 22376   003C0C  0EFF               	movlw	high (_spiMaster+4)
 22377   003C0E  6EF7               	movwf	tblptrh,c
 22378   003C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22379   003C10  6AF8               	clrf	tblptru,c
 22380   003C12                     	endif
 22381   003C12                     	if	0	;tblptru may be non-zero
 22382   003C12                     	endif
 22383   003C12  0009               	tblrd		*+
 22384   003C14  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22385   003C1A  0009               	tblrd		*+
 22386   003C1C  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22387   003C22  D802               	call	u14988
 22388   003C24  EF1E  F01E         	goto	u14989
 22389   003C28                     u14988:
 22390   003C28  0005               	push	
 22391   003C2A  6EFA               	movwf	pclath,c
 22392   003C2C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22393   003C2E  6EFD               	movwf	tosl,c
 22394   003C30  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22395   003C32  6EFE               	movwf	tosh,c
 22396   003C34  6AFF               	clrf	tosu,c
 22397   003C36  50FA               	movf	pclath,w,c
 22398   003C38  0EFF               	movlw	255
 22399   003C3A  0012               	return		;indir
 22400   003C3C                     u14989:
 22401   003C3C  0100               	movlb	0	; () banked
 22402   003C3E  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 22403   003C40                     
 22404                           ; BSR set to: 0
 22405                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 22406   003C40  0772               	decf	SD_SendCmd@longTimeout& (0+255),f,b
 22407   003C42  0E00               	movlw	0
 22408   003C44  5B73               	subwfb	(SD_SendCmd@longTimeout+1)& (0+255),f,b
 22409   003C46  5B74               	subwfb	(SD_SendCmd@longTimeout+2)& (0+255),f,b
 22410   003C48  5B75               	subwfb	(SD_SendCmd@longTimeout+3)& (0+255),f,b
 22411   003C4A                     
 22412                           ; BSR set to: 0
 22413                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 22414   003C4A  517D               	movf	SD_SendCmd@response& (0+255),w,b
 22415   003C4C  A4D8               	btfss	status,2,c
 22416   003C4E  EF2B  F01E         	goto	u14991
 22417   003C52  EF2D  F01E         	goto	u14990
 22418   003C56                     u14991:
 22419   003C56  EF38  F01E         	goto	l13364
 22420   003C5A                     u14990:
 22421   003C5A                     
 22422                           ; BSR set to: 0
 22423   003C5A  5172               	movf	SD_SendCmd@longTimeout& (0+255),w,b
 22424   003C5C  1173               	iorwf	(SD_SendCmd@longTimeout+1)& (0+255),w,b
 22425   003C5E  1174               	iorwf	(SD_SendCmd@longTimeout+2)& (0+255),w,b
 22426   003C60  1175               	iorwf	(SD_SendCmd@longTimeout+3)& (0+255),w,b
 22427   003C62  A4D8               	btfss	status,2,c
 22428   003C64  EF36  F01E         	goto	u15001
 22429   003C68  EF38  F01E         	goto	u15000
 22430   003C6C                     u15001:
 22431   003C6C  EF04  F01E         	goto	l13356
 22432   003C70                     u15000:
 22433   003C70                     l13364:
 22434                           
 22435                           ; BSR set to: 0
 22436                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 22437   003C70  0E00               	movlw	0
 22438   003C72  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 22439                           
 22440                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 22441   003C74  EFC5  F01E         	goto	l1762
 22442   003C78                     l13366:
 22443                           
 22444                           ; BSR set to: 0
 22445   003C78  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 22446   003C7A  0D04               	mullw	4
 22447   003C7C  0E02               	movlw	2
 22448   003C7E  26F3               	addwf	243,f,c
 22449   003C80  0E00               	movlw	0
 22450   003C82  22F4               	addwfc	244,f,c
 22451   003C84  0E49               	movlw	low _sdmmc_cmdtable
 22452   003C86  24F3               	addwf	243,w,c
 22453   003C88  6EF6               	movwf	tblptrl,c
 22454   003C8A  0EFF               	movlw	high _sdmmc_cmdtable
 22455   003C8C  20F4               	addwfc	244,w,c
 22456   003C8E  6EF7               	movwf	tblptrh,c
 22457   003C90                     	if	1	;There are 3 active tblptr bytes
 22458   003C90  6AF8               	clrf	tblptru,c
 22459   003C92  0E00               	movlw	low (__mediumconst shr (0+16))
 22460   003C94  22F8               	addwfc	tblptru,f,c
 22461   003C96                     	endif
 22462   003C96  0008               	tblrd		*
 22463   003C98  50F5               	movf	tablat,w,c
 22464   003C9A  0A04               	xorlw	4
 22465   003C9C  A4D8               	btfss	status,2,c
 22466   003C9E  EF53  F01E         	goto	u15011
 22467   003CA2  EF55  F01E         	goto	u15010
 22468   003CA6                     u15011:
 22469   003CA6  EFC5  F01E         	goto	l1762
 22470   003CAA                     u15010:
 22471   003CAA                     
 22472                           ; BSR set to: 0
 22473                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 22474   003CAA  0E9D               	movlw	low (_spiMaster+4)
 22475   003CAC  6EF6               	movwf	tblptrl,c
 22476   003CAE  0EFF               	movlw	high (_spiMaster+4)
 22477   003CB0  6EF7               	movwf	tblptrh,c
 22478   003CB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22479   003CB2  6AF8               	clrf	tblptru,c
 22480   003CB4                     	endif
 22481   003CB4                     	if	0	;tblptru may be non-zero
 22482   003CB4                     	endif
 22483   003CB4  0009               	tblrd		*+
 22484   003CB6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22485   003CBC  0009               	tblrd		*+
 22486   003CBE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22487   003CC4  D802               	call	u15028
 22488   003CC6  EF6F  F01E         	goto	u15029
 22489   003CCA                     u15028:
 22490   003CCA  0005               	push	
 22491   003CCC  6EFA               	movwf	pclath,c
 22492   003CCE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22493   003CD0  6EFD               	movwf	tosl,c
 22494   003CD2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22495   003CD4  6EFE               	movwf	tosh,c
 22496   003CD6  6AFF               	clrf	tosu,c
 22497   003CD8  50FA               	movf	pclath,w,c
 22498   003CDA  0EFF               	movlw	255
 22499   003CDC  0012               	return		;indir
 22500   003CDE                     u15029:
 22501   003CDE  0100               	movlb	0	; () banked
 22502   003CE0  6F81               	movwf	(SD_SendCmd@response+4)& (0+255),b
 22503                           
 22504                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 22505   003CE2  0E9D               	movlw	low (_spiMaster+4)
 22506   003CE4  6EF6               	movwf	tblptrl,c
 22507   003CE6  0EFF               	movlw	high (_spiMaster+4)
 22508   003CE8  6EF7               	movwf	tblptrh,c
 22509   003CEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22510   003CEA  6AF8               	clrf	tblptru,c
 22511   003CEC                     	endif
 22512   003CEC                     	if	0	;tblptru may be non-zero
 22513   003CEC                     	endif
 22514   003CEC  0009               	tblrd		*+
 22515   003CEE  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22516   003CF4  0009               	tblrd		*+
 22517   003CF6  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22518   003CFC  D802               	call	u15038
 22519   003CFE  EF8B  F01E         	goto	u15039
 22520   003D02                     u15038:
 22521   003D02  0005               	push	
 22522   003D04  6EFA               	movwf	pclath,c
 22523   003D06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22524   003D08  6EFD               	movwf	tosl,c
 22525   003D0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22526   003D0C  6EFE               	movwf	tosh,c
 22527   003D0E  6AFF               	clrf	tosu,c
 22528   003D10  50FA               	movf	pclath,w,c
 22529   003D12  0EFF               	movlw	255
 22530   003D14  0012               	return		;indir
 22531   003D16                     u15039:
 22532   003D16  0100               	movlb	0	; () banked
 22533   003D18  6F80               	movwf	(SD_SendCmd@response+3)& (0+255),b
 22534                           
 22535                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 22536   003D1A  0E9D               	movlw	low (_spiMaster+4)
 22537   003D1C  6EF6               	movwf	tblptrl,c
 22538   003D1E  0EFF               	movlw	high (_spiMaster+4)
 22539   003D20  6EF7               	movwf	tblptrh,c
 22540   003D22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22541   003D22  6AF8               	clrf	tblptru,c
 22542   003D24                     	endif
 22543   003D24                     	if	0	;tblptru may be non-zero
 22544   003D24                     	endif
 22545   003D24  0009               	tblrd		*+
 22546   003D26  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22547   003D2C  0009               	tblrd		*+
 22548   003D2E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22549   003D34  D802               	call	u15048
 22550   003D36  EFA7  F01E         	goto	u15049
 22551   003D3A                     u15048:
 22552   003D3A  0005               	push	
 22553   003D3C  6EFA               	movwf	pclath,c
 22554   003D3E  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22555   003D40  6EFD               	movwf	tosl,c
 22556   003D42  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22557   003D44  6EFE               	movwf	tosh,c
 22558   003D46  6AFF               	clrf	tosu,c
 22559   003D48  50FA               	movf	pclath,w,c
 22560   003D4A  0EFF               	movlw	255
 22561   003D4C  0012               	return		;indir
 22562   003D4E                     u15049:
 22563   003D4E  0100               	movlb	0	; () banked
 22564   003D50  6F7F               	movwf	(SD_SendCmd@response+2)& (0+255),b
 22565                           
 22566                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 22567   003D52  0E9D               	movlw	low (_spiMaster+4)
 22568   003D54  6EF6               	movwf	tblptrl,c
 22569   003D56  0EFF               	movlw	high (_spiMaster+4)
 22570   003D58  6EF7               	movwf	tblptrh,c
 22571   003D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22572   003D5A  6AF8               	clrf	tblptru,c
 22573   003D5C                     	endif
 22574   003D5C                     	if	0	;tblptru may be non-zero
 22575   003D5C                     	endif
 22576   003D5C  0009               	tblrd		*+
 22577   003D5E  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22578   003D64  0009               	tblrd		*+
 22579   003D66  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22580   003D6C  D802               	call	u15058
 22581   003D6E  EFC3  F01E         	goto	u15059
 22582   003D72                     u15058:
 22583   003D72  0005               	push	
 22584   003D74  6EFA               	movwf	pclath,c
 22585   003D76  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22586   003D78  6EFD               	movwf	tosl,c
 22587   003D7A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22588   003D7C  6EFE               	movwf	tosh,c
 22589   003D7E  6AFF               	clrf	tosu,c
 22590   003D80  50FA               	movf	pclath,w,c
 22591   003D82  0EFF               	movlw	255
 22592   003D84  0012               	return		;indir
 22593   003D86                     u15059:
 22594   003D86  0100               	movlb	0	; () banked
 22595   003D88  6F7E               	movwf	(SD_SendCmd@response+1)& (0+255),b
 22596   003D8A                     l1762:
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 22600   003D8A  0E9D               	movlw	low (_spiMaster+4)
 22601   003D8C  6EF6               	movwf	tblptrl,c
 22602   003D8E  0EFF               	movlw	high (_spiMaster+4)
 22603   003D90  6EF7               	movwf	tblptrh,c
 22604   003D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22605   003D92  6AF8               	clrf	tblptru,c
 22606   003D94                     	endif
 22607   003D94                     	if	0	;tblptru may be non-zero
 22608   003D94                     	endif
 22609   003D94  0009               	tblrd		*+
 22610   003D96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 22611   003D9C  0009               	tblrd		*+
 22612   003D9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 22613   003DA4  D802               	call	u15068
 22614   003DA6  EFDF  F01E         	goto	u15069
 22615   003DAA                     u15068:
 22616   003DAA  0005               	push	
 22617   003DAC  6EFA               	movwf	pclath,c
 22618   003DAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 22619   003DB0  6EFD               	movwf	tosl,c
 22620   003DB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 22621   003DB4  6EFE               	movwf	tosh,c
 22622   003DB6  6AFF               	clrf	tosu,c
 22623   003DB8  50FA               	movf	pclath,w,c
 22624   003DBA  0EFF               	movlw	255
 22625   003DBC  0012               	return		;indir
 22626   003DBE                     u15069:
 22627   003DBE                     
 22628                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 22629   003DBE  0100               	movlb	0	; () banked
 22630   003DC0  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 22631   003DC2  0D04               	mullw	4
 22632   003DC4  0E03               	movlw	3
 22633   003DC6  26F3               	addwf	243,f,c
 22634   003DC8  0E00               	movlw	0
 22635   003DCA  22F4               	addwfc	244,f,c
 22636   003DCC  0E49               	movlw	low _sdmmc_cmdtable
 22637   003DCE  24F3               	addwf	243,w,c
 22638   003DD0  6EF6               	movwf	tblptrl,c
 22639   003DD2  0EFF               	movlw	high _sdmmc_cmdtable
 22640   003DD4  20F4               	addwfc	244,w,c
 22641   003DD6  6EF7               	movwf	tblptrh,c
 22642   003DD8                     	if	1	;There are 3 active tblptr bytes
 22643   003DD8  6AF8               	clrf	tblptru,c
 22644   003DDA  0E00               	movlw	low (__mediumconst shr (0+16))
 22645   003DDC  22F8               	addwfc	tblptru,f,c
 22646   003DDE                     	endif
 22647   003DDE  0008               	tblrd		*
 22648   003DE0  50F5               	movf	tablat,w,c
 22649   003DE2  0900               	iorlw	0
 22650   003DE4  A4D8               	btfss	status,2,c
 22651   003DE6  EFF7  F01E         	goto	u15071
 22652   003DEA  EFF9  F01E         	goto	u15070
 22653   003DEE                     u15071:
 22654   003DEE  EFFA  F01E         	goto	l13372
 22655   003DF2                     u15070:
 22656   003DF2                     
 22657                           ; BSR set to: 0
 22658   003DF2  8ABA               	bsf	186,5,c	;volatile
 22659   003DF4                     l13372:
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 22663   003DF4  EE20  F07D         	lfsr	2,SD_SendCmd@response
 22664   003DF8  EE00  F06B         	lfsr	0,?_SD_SendCmd
 22665   003DFC  0E04               	movlw	4
 22666   003DFE                     u15081:
 22667   003DFE  006F FF6F FFEB     	movff	plusw2,plusw0
 22668   003E04  06E8               	decf	wreg,f,c
 22669   003E06  E2FB               	bc	u15081
 22670   003E08                     
 22671                           ; BSR set to: 0
 22672   003E08  0012               	return		;funcret
 22673   003E0A                     __end_of_SD_SendCmd:
 22674                           	callstack 0
 22675                           
 22676 ;; *************** function _memcpy *****************
 22677 ;; Defined at:
 22678 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22679 ;; Parameters:    Size  Location     Type
 22680 ;;  d1              2    0[BANK0 ] PTR void 
 22681 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 22682 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 22683 ;;  s1              2    2[BANK0 ] PTR const void 
 22684 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 22685 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 22686 ;;  n               2    4[BANK0 ] unsigned int 
 22687 ;; Auto vars:     Size  Location     Type
 22688 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 22689 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 22690 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 22691 ;;  d               2    7[BANK0 ] PTR unsigned char 
 22692 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 22693 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 22694 ;;  tmp             1    6[BANK0 ] unsigned char 
 22695 ;; Return value:  Size  Location     Type
 22696 ;;                  2    0[BANK0 ] PTR void 
 22697 ;; Registers used:
 22698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22699 ;; Tracked objects:
 22700 ;;		On entry : 0/0
 22701 ;;		On exit  : 0/0
 22702 ;;		Unchanged: 0/0
 22703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22704 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22705 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22707 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22708 ;;Total ram usage:       11 bytes
 22709 ;; Hardware stack levels used: 1
 22710 ;; Hardware stack levels required when called: 5
 22711 ;; This function calls:
 22712 ;;		Nothing
 22713 ;; This function is called by:
 22714 ;;		_can_send
 22715 ;;		_SD_SendCmd
 22716 ;;		_srb_push
 22717 ;;		_srb_pop
 22718 ;;		_srb_peek
 22719 ;;		_build_state_est_data_msg
 22720 ;;		_get_state_est_data
 22721 ;; This function uses a non-reentrant model
 22722 ;;
 22723                           
 22724                           	psect	text75
 22725   0086D4                     __ptext75:
 22726                           	callstack 0
 22727   0086D4                     _memcpy:
 22728                           	callstack 19
 22729   0086D4  C062  F069         	movff	memcpy@s1,memcpy@s
 22730   0086D8  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 22731   0086DC  C060  F067         	movff	memcpy@d1,memcpy@d
 22732   0086E0  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 22733   0086E4  EF89  F043         	goto	l13298
 22734   0086E8                     l13290:
 22735                           
 22736                           ; BSR set to: 0
 22737   0086E8  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 22738   0086EE  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 22739   0086F4  50DF               	movf	indf2,w,c
 22740   0086F6  6F66               	movwf	memcpy@tmp& (0+255),b
 22741   0086F8                     
 22742                           ; BSR set to: 0
 22743   0086F8  4B69               	infsnz	memcpy@s& (0+255),f,b
 22744   0086FA  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 22745   0086FC                     
 22746                           ; BSR set to: 0
 22747   0086FC  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 22748   008702  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 22749   008708  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 22750   00870E                     
 22751                           ; BSR set to: 0
 22752   00870E  4B67               	infsnz	memcpy@d& (0+255),f,b
 22753   008710  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 22754   008712                     l13298:
 22755   008712  0100               	movlb	0	; () banked
 22756   008714  0764               	decf	memcpy@n& (0+255),f,b
 22757   008716  A0D8               	btfss	status,0,c
 22758   008718  0765               	decf	(memcpy@n+1)& (0+255),f,b
 22759   00871A  2964               	incf	memcpy@n& (0+255),w,b
 22760   00871C  E106               	bnz	u14811
 22761   00871E  2965               	incf	(memcpy@n+1)& (0+255),w,b
 22762   008720  A4D8               	btfss	status,2,c
 22763   008722  EF95  F043         	goto	u14811
 22764   008726  EF97  F043         	goto	u14810
 22765   00872A                     u14811:
 22766   00872A  EF74  F043         	goto	l13290
 22767   00872E                     u14810:
 22768   00872E                     
 22769                           ; BSR set to: 0
 22770   00872E  0012               	return		;funcret
 22771   008730                     __end_of_memcpy:
 22772                           	callstack 0
 22773                           
 22774 ;; *************** function _SPI1_ExchangeByte *****************
 22775 ;; Defined at:
 22776 ;;		line 101 in file "mcc_generated_files/spi1.c"
 22777 ;; Parameters:    Size  Location     Type
 22778 ;;  data            1    wreg     unsigned char 
 22779 ;; Auto vars:     Size  Location     Type
 22780 ;;  data            1    0[BANK0 ] unsigned char 
 22781 ;; Return value:  Size  Location     Type
 22782 ;;                  1    wreg      unsigned char 
 22783 ;; Registers used:
 22784 ;;		wreg, status,2
 22785 ;; Tracked objects:
 22786 ;;		On entry : 0/0
 22787 ;;		On exit  : 0/0
 22788 ;;		Unchanged: 0/0
 22789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22794 ;;Total ram usage:        1 bytes
 22795 ;; Hardware stack levels used: 1
 22796 ;; Hardware stack levels required when called: 5
 22797 ;; This function calls:
 22798 ;;		Nothing
 22799 ;; This function is called by:
 22800 ;;		_SPI1_WriteBlock
 22801 ;;		_SPI1_ReadBlock
 22802 ;;		_SD_SendCmd
 22803 ;;		_SD_SPI_AsyncWriteTasks
 22804 ;;		_SD_SPI_AsyncReadTasks
 22805 ;;		_SD_SPI_DelayMilliseconds
 22806 ;;		_SD_SPI_MediaInitialize
 22807 ;; This function uses a non-reentrant model
 22808 ;;
 22809                           
 22810                           	psect	text76
 22811   008B42                     __ptext76:
 22812                           	callstack 0
 22813   008B42                     _SPI1_ExchangeByte:
 22814                           	callstack 20
 22815                           
 22816                           ; BSR set to: 0
 22817                           ;incstack = 0
 22818                           ;SPI1_ExchangeByte@data stored from wreg
 22819   008B42  0100               	movlb	0	; () banked
 22820   008B44  6F60               	movwf	SPI1_ExchangeByte@data& (0+255),b
 22821   008B46                     
 22822                           ;mcc_generated_files/spi1.c: 101: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 102: {;mcc_generated_files/spi1.c: 103:     SPI1TCNTL = 1;
 22823   008B46  0E01               	movlw	1
 22824   008B48  013D               	movlb	61	; () banked
 22825   008B4A  6F12               	movwf	18,b	;volatile
 22826   008B4C                     
 22827                           ; BSR set to: 61
 22828                           ;mcc_generated_files/spi1.c: 104:     SPI1TXB = data;
 22829   008B4C  0060  F183  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 22830   008B52                     l1913:
 22831   008B52  0139               	movlb	57	; () banked
 22832   008B54  A9A2               	btfss	162,4,b	;volatile
 22833   008B56  EFAF  F045         	goto	u14821
 22834   008B5A  EFB1  F045         	goto	u14820
 22835   008B5E                     u14821:
 22836   008B5E  EFA9  F045         	goto	l1913
 22837   008B62                     u14820:
 22838   008B62                     
 22839                           ; BSR set to: 57
 22840                           ;mcc_generated_files/spi1.c: 106:     return SPI1RXB;
 22841   008B62  013D               	movlb	61	; () banked
 22842   008B64  5110               	movf	16,w,b	;volatile
 22843   008B66                     
 22844                           ; BSR set to: 61
 22845   008B66  0012               	return		;funcret
 22846   008B68                     __end_of_SPI1_ExchangeByte:
 22847                           	callstack 0
 22848                           
 22849 ;; *************** function _SDFAST_open *****************
 22850 ;; Defined at:
 22851 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 22852 ;; Parameters:    Size  Location     Type
 22853 ;;		None
 22854 ;; Auto vars:     Size  Location     Type
 22855 ;;		None
 22856 ;; Return value:  Size  Location     Type
 22857 ;;                  1    wreg      _Bool 
 22858 ;; Registers used:
 22859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22860 ;; Tracked objects:
 22861 ;;		On entry : 0/0
 22862 ;;		On exit  : 0/0
 22863 ;;		Unchanged: 0/0
 22864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22869 ;;Total ram usage:        0 bytes
 22870 ;; Hardware stack levels used: 1
 22871 ;; Hardware stack levels required when called: 6
 22872 ;; This function calls:
 22873 ;;		_SPI1_Open
 22874 ;; This function is called by:
 22875 ;;		_spi_master_open
 22876 ;;		_SD_SPI_SectorWrite
 22877 ;;		_SD_SPI_SectorRead
 22878 ;;		_SD_SPI_MediaInitialize
 22879 ;; This function uses a non-reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text77
 22883   008CEA                     __ptext77:
 22884                           	callstack 0
 22885   008CEA                     _SDFAST_open:
 22886                           	callstack 20
 22887   008CEA                     
 22888                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 22889   008CEA  0E00               	movlw	0
 22890   008CEC  EC6A  F03C         	call	_SPI1_Open
 22891   008CF0  0012               	return		;funcret
 22892   008CF2                     __end_of_SDFAST_open:
 22893                           	callstack 0
 22894                           
 22895 ;; *************** function _SDSLOW_open *****************
 22896 ;; Defined at:
 22897 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;		None
 22900 ;; Auto vars:     Size  Location     Type
 22901 ;;		None
 22902 ;; Return value:  Size  Location     Type
 22903 ;;                  1    wreg      _Bool 
 22904 ;; Registers used:
 22905 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22906 ;; Tracked objects:
 22907 ;;		On entry : 0/0
 22908 ;;		On exit  : 0/0
 22909 ;;		Unchanged: 0/0
 22910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22915 ;;Total ram usage:        0 bytes
 22916 ;; Hardware stack levels used: 1
 22917 ;; Hardware stack levels required when called: 6
 22918 ;; This function calls:
 22919 ;;		_SPI1_Open
 22920 ;; This function is called by:
 22921 ;;		_spi_master_open
 22922 ;;		_SD_SPI_SectorWrite
 22923 ;;		_SD_SPI_SectorRead
 22924 ;;		_SD_SPI_MediaInitialize
 22925 ;; This function uses a non-reentrant model
 22926 ;;
 22927                           
 22928                           	psect	text78
 22929   008CF2                     __ptext78:
 22930                           	callstack 0
 22931   008CF2                     _SDSLOW_open:
 22932                           	callstack 20
 22933   008CF2                     
 22934                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 22935   008CF2  0E01               	movlw	1
 22936   008CF4  EC6A  F03C         	call	_SPI1_Open
 22937   008CF8  0012               	return		;funcret
 22938   008CFA                     __end_of_SDSLOW_open:
 22939                           	callstack 0
 22940                           
 22941 ;; *************** function _SPI1_Open *****************
 22942 ;; Defined at:
 22943 ;;		line 81 in file "mcc_generated_files/spi1.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  spi1UniqueCo    1    wreg     enum E358
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;  spi1UniqueCo    1    1[BANK0 ] enum E358
 22948 ;; Return value:  Size  Location     Type
 22949 ;;                  1    wreg      _Bool 
 22950 ;; Registers used:
 22951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22952 ;; Tracked objects:
 22953 ;;		On entry : 0/0
 22954 ;;		On exit  : 0/0
 22955 ;;		Unchanged: 0/0
 22956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22961 ;;Total ram usage:        2 bytes
 22962 ;; Hardware stack levels used: 1
 22963 ;; Hardware stack levels required when called: 5
 22964 ;; This function calls:
 22965 ;;		Nothing
 22966 ;; This function is called by:
 22967 ;;		_SDFAST_open
 22968 ;;		_SDSLOW_open
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           	psect	text79
 22973   0078D4                     __ptext79:
 22974                           	callstack 0
 22975   0078D4                     _SPI1_Open:
 22976                           	callstack 20
 22977                           
 22978                           ;incstack = 0
 22979                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 22980   0078D4  0100               	movlb	0	; () banked
 22981   0078D6  6F61               	movwf	SPI1_Open@spi1UniqueConfiguration& (0+255),b
 22982   0078D8                     
 22983                           ;mcc_generated_files/spi1.c: 81: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 82: {;mcc_generated_files/spi1.c: 83:     if(!SPI1CON0bits.EN
      +                          )
 22984   0078D8  013D               	movlb	61	; () banked
 22985   0078DA  BF14               	btfsc	20,7,b	;volatile
 22986   0078DC  EF72  F03C         	goto	u14831
 22987   0078E0  EF74  F03C         	goto	u14830
 22988   0078E4                     u14831:
 22989   0078E4  EFDF  F03C         	goto	l13314
 22990   0078E8                     u14830:
 22991   0078E8                     
 22992                           ; BSR set to: 61
 22993                           ;mcc_generated_files/spi1.c: 84:     {;mcc_generated_files/spi1.c: 85:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
 22994   0078E8  0100               	movlb	0	; () banked
 22995   0078EA  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 22996   0078EC  0D05               	mullw	5
 22997   0078EE  0EC1               	movlw	low _spi1_configuration
 22998   0078F0  24F3               	addwf	243,w,c
 22999   0078F2  6EF6               	movwf	tblptrl,c
 23000   0078F4  0EFF               	movlw	high _spi1_configuration
 23001   0078F6  20F4               	addwfc	244,w,c
 23002   0078F8  6EF7               	movwf	tblptrh,c
 23003   0078FA                     	if	1	;There are 3 active tblptr bytes
 23004   0078FA  6AF8               	clrf	tblptru,c
 23005   0078FC  0E00               	movlw	low (__mediumconst shr (0+16))
 23006   0078FE  22F8               	addwfc	tblptru,f,c
 23007   007900                     	endif
 23008   007900  0008               	tblrd		*
 23009   007902  006F FFD7 FD14     	movff	tablat,15636	;volatile
 23010                           
 23011                           ;mcc_generated_files/spi1.c: 86:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 23012   007908  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 23013   00790A  0D05               	mullw	5
 23014   00790C  0E01               	movlw	1
 23015   00790E  26F3               	addwf	243,f,c
 23016   007910  0E00               	movlw	0
 23017   007912  22F4               	addwfc	244,f,c
 23018   007914  0EC1               	movlw	low _spi1_configuration
 23019   007916  24F3               	addwf	243,w,c
 23020   007918  6EF6               	movwf	tblptrl,c
 23021   00791A  0EFF               	movlw	high _spi1_configuration
 23022   00791C  20F4               	addwfc	244,w,c
 23023   00791E  6EF7               	movwf	tblptrh,c
 23024   007920                     	if	1	;There are 3 active tblptr bytes
 23025   007920  6AF8               	clrf	tblptru,c
 23026   007922  0E00               	movlw	low (__mediumconst shr (0+16))
 23027   007924  22F8               	addwfc	tblptru,f,c
 23028   007926                     	endif
 23029   007926  0008               	tblrd		*
 23030   007928  006F FFD7 FD15     	movff	tablat,15637	;volatile
 23031                           
 23032                           ;mcc_generated_files/spi1.c: 87:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
 23033   00792E  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 23034   007930  0D05               	mullw	5
 23035   007932  0E02               	movlw	2
 23036   007934  26F3               	addwf	243,f,c
 23037   007936  0E00               	movlw	0
 23038   007938  22F4               	addwfc	244,f,c
 23039   00793A  0EC1               	movlw	low _spi1_configuration
 23040   00793C  24F3               	addwf	243,w,c
 23041   00793E  6EF6               	movwf	tblptrl,c
 23042   007940  0EFF               	movlw	high _spi1_configuration
 23043   007942  20F4               	addwfc	244,w,c
 23044   007944  6EF7               	movwf	tblptrh,c
 23045   007946                     	if	1	;There are 3 active tblptr bytes
 23046   007946  6AF8               	clrf	tblptru,c
 23047   007948  0E00               	movlw	low (__mediumconst shr (0+16))
 23048   00794A  22F8               	addwfc	tblptru,f,c
 23049   00794C                     	endif
 23050   00794C  0008               	tblrd		*
 23051   00794E  50F5               	movf	tablat,w,c
 23052   007950  0903               	iorlw	3
 23053   007952  013D               	movlb	61	; () banked
 23054   007954  6F16               	movwf	22,b	;volatile
 23055                           
 23056                           ;mcc_generated_files/spi1.c: 88:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
 23057   007956  0100               	movlb	0	; () banked
 23058   007958  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 23059   00795A  0D05               	mullw	5
 23060   00795C  0E03               	movlw	3
 23061   00795E  26F3               	addwf	243,f,c
 23062   007960  0E00               	movlw	0
 23063   007962  22F4               	addwfc	244,f,c
 23064   007964  0EC1               	movlw	low _spi1_configuration
 23065   007966  24F3               	addwf	243,w,c
 23066   007968  6EF6               	movwf	tblptrl,c
 23067   00796A  0EFF               	movlw	high _spi1_configuration
 23068   00796C  20F4               	addwfc	244,w,c
 23069   00796E  6EF7               	movwf	tblptrh,c
 23070   007970                     	if	1	;There are 3 active tblptr bytes
 23071   007970  6AF8               	clrf	tblptru,c
 23072   007972  0E00               	movlw	low (__mediumconst shr (0+16))
 23073   007974  22F8               	addwfc	tblptru,f,c
 23074   007976                     	endif
 23075   007976  0008               	tblrd		*
 23076   007978  006F FFD7 FD19     	movff	tablat,15641	;volatile
 23077                           
 23078                           ;mcc_generated_files/spi1.c: 89:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 23079   00797E  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 23080   007980  0D05               	mullw	5
 23081   007982  0E04               	movlw	4
 23082   007984  26F3               	addwf	243,f,c
 23083   007986  0E00               	movlw	0
 23084   007988  22F4               	addwfc	244,f,c
 23085   00798A  0EC1               	movlw	low _spi1_configuration
 23086   00798C  24F3               	addwf	243,w,c
 23087   00798E  6EF6               	movwf	tblptrl,c
 23088   007990  0EFF               	movlw	high _spi1_configuration
 23089   007992  20F4               	addwfc	244,w,c
 23090   007994  6EF7               	movwf	tblptrh,c
 23091   007996                     	if	1	;There are 3 active tblptr bytes
 23092   007996  6AF8               	clrf	tblptru,c
 23093   007998  0E00               	movlw	low (__mediumconst shr (0+16))
 23094   00799A  22F8               	addwfc	tblptru,f,c
 23095   00799C                     	endif
 23096   00799C  0008               	tblrd		*
 23097   00799E  006F FFD4  F060    	movff	tablat,??_SPI1_Open
 23098   0079A4  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 23099   0079A6  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 23100   0079A8  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 23101   0079AA  50C4               	movf	196,w,c	;volatile
 23102   0079AC  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 23103   0079AE  0BF7               	andlw	-9
 23104   0079B0  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 23105   0079B2  6EC4               	movwf	196,c	;volatile
 23106   0079B4                     
 23107                           ; BSR set to: 0
 23108                           ;mcc_generated_files/spi1.c: 90:         SPI1CON0bits.EN = 1;
 23109   0079B4  013D               	movlb	61	; () banked
 23110   0079B6  8F14               	bsf	20,7,b	;volatile
 23111   0079B8                     
 23112                           ; BSR set to: 61
 23113                           ;mcc_generated_files/spi1.c: 91:         return 1;
 23114   0079B8  0E01               	movlw	1
 23115   0079BA  EFE0  F03C         	goto	l1907
 23116   0079BE                     l13314:
 23117                           
 23118                           ; BSR set to: 61
 23119                           ;mcc_generated_files/spi1.c: 93:     return 0;
 23120   0079BE  0E00               	movlw	0
 23121   0079C0                     l1907:
 23122                           
 23123                           ; BSR set to: 61
 23124   0079C0  0012               	return		;funcret
 23125   0079C2                     __end_of_SPI1_Open:
 23126                           	callstack 0
 23127                           
 23128 ;; *************** function _mem_cmp *****************
 23129 ;; Defined at:
 23130 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 23131 ;; Parameters:    Size  Location     Type
 23132 ;;  dst             2    0[BANK0 ] PTR const void 
 23133 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 23134 ;;  src             2    2[BANK0 ] PTR const void 
 23135 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 23136 ;;		 -> STR_4(4), 
 23137 ;;  cnt             2    4[BANK0 ] unsigned int 
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;  r               2   12[BANK0 ] int 
 23140 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 23141 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 23142 ;;		 -> STR_4(4), 
 23143 ;;  d               2    8[BANK0 ] PTR const unsigned char 
 23144 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 23145 ;; Return value:  Size  Location     Type
 23146 ;;                  2    0[BANK0 ] int 
 23147 ;; Registers used:
 23148 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23149 ;; Tracked objects:
 23150 ;;		On entry : 0/0
 23151 ;;		On exit  : 0/0
 23152 ;;		Unchanged: 0/0
 23153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23154 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23155 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23157 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23158 ;;Total ram usage:       14 bytes
 23159 ;; Hardware stack levels used: 1
 23160 ;; Hardware stack levels required when called: 5
 23161 ;; This function calls:
 23162 ;;		Nothing
 23163 ;; This function is called by:
 23164 ;;		_dir_find
 23165 ;;		_check_fs
 23166 ;; This function uses a non-reentrant model
 23167 ;;
 23168                           
 23169                           	psect	text80
 23170   007F2C                     __ptext80:
 23171                           	callstack 0
 23172   007F2C                     _mem_cmp:
 23173                           	callstack 21
 23174   007F2C                     
 23175                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 23176   007F2C  C060  F068         	movff	mem_cmp@dst,mem_cmp@d
 23177   007F30  C061  F069         	movff	mem_cmp@dst+1,mem_cmp@d+1
 23178   007F34  C062  F06A         	movff	mem_cmp@src,mem_cmp@s
 23179   007F38  C063  F06B         	movff	mem_cmp@src+1,mem_cmp@s+1
 23180   007F3C                     l14464:
 23181                           
 23182                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 23183   007F3C  0060  F1A3  FFD9   	movff	mem_cmp@d,fsr2l
 23184   007F42  0060  F1A7  FFDA   	movff	mem_cmp@d+1,fsr2h
 23185   007F48  50DF               	movf	indf2,w,c
 23186   007F4A  0100               	movlb	0	; () banked
 23187   007F4C  6F66               	movwf	??_mem_cmp& (0+255),b
 23188   007F4E  0060  F1AB  FFF6   	movff	mem_cmp@s,tblptrl
 23189   007F54  0060  F1AF  FFF7   	movff	mem_cmp@s+1,tblptrh
 23190   007F5A  0E00               	movlw	low (__mediumconst shr (0+16))
 23191   007F5C  6EF8               	movwf	tblptru,c
 23192   007F5E  0E0F               	movlw	(high __ramtop+-1)
 23193   007F60  64F7               	cpfsgt	tblptrh,c
 23194   007F62  D003               	bra	u17027
 23195   007F64  0008               	tblrd		*
 23196   007F66  50F5               	movf	tablat,w,c
 23197   007F68  D007               	bra	u17020
 23198   007F6A                     u17027:
 23199   007F6A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23200   007F70  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23201   007F76  50EF               	movf	indf0,w,c
 23202   007F78                     u17020:
 23203   007F78  0100               	movlb	0	; () banked
 23204   007F7A  6F67               	movwf	(??_mem_cmp+1)& (0+255),b
 23205   007F7C  5167               	movf	(??_mem_cmp+1)& (0+255),w,b
 23206   007F7E  5D66               	subwf	??_mem_cmp& (0+255),w,b
 23207   007F80  6F6C               	movwf	mem_cmp@r& (0+255),b
 23208   007F82  6B6D               	clrf	(mem_cmp@r+1)& (0+255),b
 23209   007F84  A0D8               	btfss	status,0,c
 23210   007F86  076D               	decf	(mem_cmp@r+1)& (0+255),f,b
 23211   007F88                     
 23212                           ; BSR set to: 0
 23213   007F88  4B6A               	infsnz	mem_cmp@s& (0+255),f,b
 23214   007F8A  2B6B               	incf	(mem_cmp@s+1)& (0+255),f,b
 23215   007F8C                     
 23216                           ; BSR set to: 0
 23217   007F8C  4B68               	infsnz	mem_cmp@d& (0+255),f,b
 23218   007F8E  2B69               	incf	(mem_cmp@d+1)& (0+255),f,b
 23219   007F90                     
 23220                           ; BSR set to: 0
 23221                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 23222   007F90  0764               	decf	mem_cmp@cnt& (0+255),f,b
 23223   007F92  A0D8               	btfss	status,0,c
 23224   007F94  0765               	decf	(mem_cmp@cnt+1)& (0+255),f,b
 23225   007F96  5164               	movf	mem_cmp@cnt& (0+255),w,b
 23226   007F98  1165               	iorwf	(mem_cmp@cnt+1)& (0+255),w,b
 23227   007F9A  B4D8               	btfsc	status,2,c
 23228   007F9C  EFD2  F03F         	goto	u17031
 23229   007FA0  EFD4  F03F         	goto	u17030
 23230   007FA4                     u17031:
 23231   007FA4  EFDD  F03F         	goto	l878
 23232   007FA8                     u17030:
 23233   007FA8                     
 23234                           ; BSR set to: 0
 23235   007FA8  516C               	movf	mem_cmp@r& (0+255),w,b
 23236   007FAA  116D               	iorwf	(mem_cmp@r+1)& (0+255),w,b
 23237   007FAC  B4D8               	btfsc	status,2,c
 23238   007FAE  EFDB  F03F         	goto	u17041
 23239   007FB2  EFDD  F03F         	goto	u17040
 23240   007FB6                     u17041:
 23241   007FB6  EF9E  F03F         	goto	l14464
 23242   007FBA                     u17040:
 23243   007FBA                     l878:
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 23247   007FBA  C06C  F060         	movff	mem_cmp@r,?_mem_cmp
 23248   007FBE  C06D  F061         	movff	mem_cmp@r+1,?_mem_cmp+1
 23249   007FC2                     
 23250                           ; BSR set to: 0
 23251   007FC2  0012               	return		;funcret
 23252   007FC4                     __end_of_mem_cmp:
 23253                           	callstack 0
 23254                           
 23255 ;; *************** function _ld_word *****************
 23256 ;; Defined at:
 23257 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 23258 ;; Parameters:    Size  Location     Type
 23259 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 23260 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 23261 ;; Auto vars:     Size  Location     Type
 23262 ;;  rv              2    5[BANK0 ] unsigned short 
 23263 ;; Return value:  Size  Location     Type
 23264 ;;                  2    0[BANK0 ] unsigned short 
 23265 ;; Registers used:
 23266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23267 ;; Tracked objects:
 23268 ;;		On entry : 0/0
 23269 ;;		On exit  : 0/0
 23270 ;;		Unchanged: 0/0
 23271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23274 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23275 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23276 ;;Total ram usage:        7 bytes
 23277 ;; Hardware stack levels used: 1
 23278 ;; Hardware stack levels required when called: 5
 23279 ;; This function calls:
 23280 ;;		Nothing
 23281 ;; This function is called by:
 23282 ;;		_get_fat
 23283 ;;		_ld_clust
 23284 ;;		_check_fs
 23285 ;;		_find_volume
 23286 ;; This function uses a non-reentrant model
 23287 ;;
 23288                           
 23289                           	psect	text81
 23290   00896A                     __ptext81:
 23291                           	callstack 0
 23292   00896A                     _ld_word:
 23293                           	callstack 21
 23294   00896A                     
 23295                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 23296   00896A  0100               	movlb	0	; () banked
 23297   00896C  EE20 F001          	lfsr	2,1
 23298   008970  5160               	movf	ld_word@ptr& (0+255),w,b
 23299   008972  26D9               	addwf	fsr2l,f,c
 23300   008974  5161               	movf	(ld_word@ptr+1)& (0+255),w,b
 23301   008976  22DA               	addwfc	fsr2h,f,c
 23302   008978  50DF               	movf	indf2,w,c
 23303   00897A  6F62               	movwf	??_ld_word& (0+255),b
 23304   00897C  5162               	movf	??_ld_word& (0+255),w,b
 23305   00897E  6F65               	movwf	ld_word@rv& (0+255),b
 23306   008980  6B66               	clrf	(ld_word@rv+1)& (0+255),b
 23307                           
 23308                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 23309   008982  0060  F183  FFD9   	movff	ld_word@ptr,fsr2l
 23310   008988  0060  F187  FFDA   	movff	ld_word@ptr+1,fsr2h
 23311   00898E  50DF               	movf	indf2,w,c
 23312   008990  6F62               	movwf	??_ld_word& (0+255),b
 23313   008992  5165               	movf	ld_word@rv& (0+255),w,b
 23314   008994  6F63               	movwf	(??_ld_word+1)& (0+255),b
 23315   008996  5162               	movf	??_ld_word& (0+255),w,b
 23316   008998  6F65               	movwf	ld_word@rv& (0+255),b
 23317   00899A  C063  F066         	movff	??_ld_word+1,ld_word@rv+1
 23318   00899E                     
 23319                           ; BSR set to: 0
 23320                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 23321   00899E  C065  F060         	movff	ld_word@rv,?_ld_word
 23322   0089A2  C066  F061         	movff	ld_word@rv+1,?_ld_word+1
 23323   0089A6                     
 23324                           ; BSR set to: 0
 23325   0089A6  0012               	return		;funcret
 23326   0089A8                     __end_of_ld_word:
 23327                           	callstack 0
 23328                           
 23329 ;; *************** function ___lldiv *****************
 23330 ;; Defined at:
 23331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 23332 ;; Parameters:    Size  Location     Type
 23333 ;;  dividend        4    0[BANK0 ] unsigned long 
 23334 ;;  divisor         4    4[BANK0 ] unsigned long 
 23335 ;; Auto vars:     Size  Location     Type
 23336 ;;  quotient        4    8[BANK0 ] unsigned long 
 23337 ;;  counter         1   12[BANK0 ] unsigned char 
 23338 ;; Return value:  Size  Location     Type
 23339 ;;                  4    0[BANK0 ] unsigned long 
 23340 ;; Registers used:
 23341 ;;		wreg, status,2, status,0
 23342 ;; Tracked objects:
 23343 ;;		On entry : 0/0
 23344 ;;		On exit  : 0/0
 23345 ;;		Unchanged: 0/0
 23346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23348 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23350 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23351 ;;Total ram usage:       13 bytes
 23352 ;; Hardware stack levels used: 1
 23353 ;; Hardware stack levels required when called: 5
 23354 ;; This function calls:
 23355 ;;		Nothing
 23356 ;; This function is called by:
 23357 ;;		_find_volume
 23358 ;;		_f_printf
 23359 ;; This function uses a non-reentrant model
 23360 ;;
 23361                           
 23362                           	psect	text82
 23363   007E86                     __ptext82:
 23364                           	callstack 0
 23365   007E86                     ___lldiv:
 23366                           	callstack 22
 23367   007E86  0E00               	movlw	0
 23368   007E88  0100               	movlb	0	; () banked
 23369   007E8A  6F68               	movwf	___lldiv@quotient& (0+255),b
 23370   007E8C  0E00               	movlw	0
 23371   007E8E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 23372   007E90  0E00               	movlw	0
 23373   007E92  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 23374   007E94  0E00               	movlw	0
 23375   007E96  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 23376   007E98                     
 23377                           ; BSR set to: 0
 23378   007E98  5164               	movf	___lldiv@divisor& (0+255),w,b
 23379   007E9A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 23380   007E9C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 23381   007E9E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 23382   007EA0  B4D8               	btfsc	status,2,c
 23383   007EA2  EF55  F03F         	goto	u18071
 23384   007EA6  EF57  F03F         	goto	u18070
 23385   007EAA                     u18071:
 23386   007EAA  EF8D  F03F         	goto	l2274
 23387   007EAE                     u18070:
 23388   007EAE                     
 23389                           ; BSR set to: 0
 23390   007EAE  0E01               	movlw	1
 23391   007EB0  6F6C               	movwf	___lldiv@counter& (0+255),b
 23392   007EB2  EF61  F03F         	goto	l15062
 23393   007EB6                     l15060:
 23394                           
 23395                           ; BSR set to: 0
 23396   007EB6  90D8               	bcf	status,0,c
 23397   007EB8  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 23398   007EBA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 23399   007EBC  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 23400   007EBE  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 23401   007EC0  2B6C               	incf	___lldiv@counter& (0+255),f,b
 23402   007EC2                     l15062:
 23403                           
 23404                           ; BSR set to: 0
 23405   007EC2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 23406   007EC4  EF66  F03F         	goto	u18081
 23407   007EC8  EF68  F03F         	goto	u18080
 23408   007ECC                     u18081:
 23409   007ECC  EF5B  F03F         	goto	l15060
 23410   007ED0                     u18080:
 23411   007ED0                     l15064:
 23412                           
 23413                           ; BSR set to: 0
 23414   007ED0  90D8               	bcf	status,0,c
 23415   007ED2  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 23416   007ED4  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 23417   007ED6  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 23418   007ED8  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 23419   007EDA                     
 23420                           ; BSR set to: 0
 23421   007EDA  5164               	movf	___lldiv@divisor& (0+255),w,b
 23422   007EDC  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 23423   007EDE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23424   007EE0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 23425   007EE2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23426   007EE4  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 23427   007EE6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23428   007EE8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 23429   007EEA  A0D8               	btfss	status,0,c
 23430   007EEC  EF7A  F03F         	goto	u18091
 23431   007EF0  EF7C  F03F         	goto	u18090
 23432   007EF4                     u18091:
 23433   007EF4  EF85  F03F         	goto	l15072
 23434   007EF8                     u18090:
 23435   007EF8                     
 23436                           ; BSR set to: 0
 23437   007EF8  5164               	movf	___lldiv@divisor& (0+255),w,b
 23438   007EFA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 23439   007EFC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23440   007EFE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 23441   007F00  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23442   007F02  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 23443   007F04  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23444   007F06  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 23445   007F08                     
 23446                           ; BSR set to: 0
 23447   007F08  8168               	bsf	___lldiv@quotient& (0+255),0,b
 23448   007F0A                     l15072:
 23449                           
 23450                           ; BSR set to: 0
 23451   007F0A  90D8               	bcf	status,0,c
 23452   007F0C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 23453   007F0E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 23454   007F10  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 23455   007F12  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 23456   007F14                     
 23457                           ; BSR set to: 0
 23458   007F14  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 23459   007F16  EF68  F03F         	goto	l15064
 23460   007F1A                     l2274:
 23461                           
 23462                           ; BSR set to: 0
 23463   007F1A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 23464   007F1E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 23465   007F22  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 23466   007F26  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 23467   007F2A                     
 23468                           ; BSR set to: 0
 23469   007F2A  0012               	return		;funcret
 23470   007F2C                     __end_of___lldiv:
 23471                           	callstack 0
 23472                           
 23473 ;; *************** function _can_init *****************
 23474 ;; Defined at:
 23475 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 23476 ;; Parameters:    Size  Location     Type
 23477 ;;  timing          2    0[BANK0 ] PTR const struct .
 23478 ;;		 -> main@can_setup(7), 
 23479 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
 23480 ;;		 -> can_msg_handler(1), 
 23481 ;; Auto vars:     Size  Location     Type
 23482 ;;		None
 23483 ;; Return value:  Size  Location     Type
 23484 ;;                  1    wreg      void 
 23485 ;; Registers used:
 23486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23487 ;; Tracked objects:
 23488 ;;		On entry : 0/0
 23489 ;;		On exit  : 0/0
 23490 ;;		Unchanged: 0/0
 23491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23495 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23496 ;;Total ram usage:        5 bytes
 23497 ;; Hardware stack levels used: 1
 23498 ;; Hardware stack levels required when called: 5
 23499 ;; This function calls:
 23500 ;;		Nothing
 23501 ;; This function is called by:
 23502 ;;		_main
 23503 ;; This function uses a non-reentrant model
 23504 ;;
 23505                           
 23506                           	psect	text83
 23507   006688                     __ptext83:
 23508                           	callstack 0
 23509   006688                     _can_init:
 23510                           	callstack 25
 23511   006688                     
 23512                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
 23513   006688  C062  F046         	movff	can_init@receive_callback,_can_rcv_cb
 23514   00668C  C063  F047         	movff	can_init@receive_callback+1,_can_rcv_cb+1
 23515   006690                     
 23516                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
 23517   006690  508F               	movf	143,w,c	;volatile
 23518   006692  0B1F               	andlw	-225
 23519   006694  0980               	iorlw	128
 23520   006696  6E8F               	movwf	143,c	;volatile
 23521   006698                     l16136:
 23522   006698  388E               	swapf	142,w,c	;volatile
 23523   00669A  32E8               	rrcf	wreg,f,c
 23524   00669C  0B07               	andlw	7
 23525   00669E  0A04               	xorlw	4
 23526   0066A0  A4D8               	btfss	status,2,c
 23527   0066A2  EF55  F033         	goto	u19851
 23528   0066A6  EF57  F033         	goto	u19850
 23529   0066AA                     u19851:
 23530   0066AA  EF4C  F033         	goto	l16136
 23531   0066AE                     u19850:
 23532   0066AE                     
 23533                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
 23534   0066AE  0E3F               	movlw	-193
 23535   0066B0  1691               	andwf	145,f,c	;volatile
 23536   0066B2                     
 23537                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
 23538   0066B2  0137               	movlb	55	; () banked
 23539   0066B4  9100               	bcf	0,0,b	;volatile
 23540   0066B6                     
 23541                           ; BSR set to: 55
 23542                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
 23543   0066B6  0100               	movlb	0	; () banked
 23544   0066B8  EE20 F001          	lfsr	2,1
 23545   0066BC  5160               	movf	can_init@timing& (0+255),w,b
 23546   0066BE  26D9               	addwf	fsr2l,f,c
 23547   0066C0  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23548   0066C2  22DA               	addwfc	fsr2h,f,c
 23549   0066C4  50DF               	movf	indf2,w,c
 23550   0066C6  6F64               	movwf	??_can_init& (0+255),b
 23551   0066C8  3B64               	swapf	??_can_init& (0+255),f,b
 23552   0066CA  4764               	rlncf	??_can_init& (0+255),f,b
 23553   0066CC  4764               	rlncf	??_can_init& (0+255),f,b
 23554   0066CE  0137               	movlb	55	; () banked
 23555   0066D0  5103               	movf	3,w,b	;volatile
 23556   0066D2  0100               	movlb	0	; () banked
 23557   0066D4  1964               	xorwf	??_can_init& (0+255),w,b
 23558   0066D6  0B3F               	andlw	-193
 23559   0066D8  1964               	xorwf	??_can_init& (0+255),w,b
 23560   0066DA  0137               	movlb	55	; () banked
 23561   0066DC  6F03               	movwf	3,b	;volatile
 23562   0066DE                     
 23563                           ; BSR set to: 55
 23564                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
 23565   0066DE  0060  F183  FFD9   	movff	can_init@timing,fsr2l
 23566   0066E4  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
 23567   0066EA  50DF               	movf	indf2,w,c
 23568   0066EC  0100               	movlb	0	; () banked
 23569   0066EE  6F64               	movwf	??_can_init& (0+255),b
 23570   0066F0  0137               	movlb	55	; () banked
 23571   0066F2  5103               	movf	3,w,b	;volatile
 23572   0066F4  0100               	movlb	0	; () banked
 23573   0066F6  1964               	xorwf	??_can_init& (0+255),w,b
 23574   0066F8  0BC0               	andlw	-64
 23575   0066FA  1964               	xorwf	??_can_init& (0+255),w,b
 23576   0066FC  0137               	movlb	55	; () banked
 23577   0066FE  6F03               	movwf	3,b	;volatile
 23578   006700                     
 23579                           ; BSR set to: 55
 23580                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
 23581   006700  0100               	movlb	0	; () banked
 23582   006702  EE20 F006          	lfsr	2,6
 23583   006706  5160               	movf	can_init@timing& (0+255),w,b
 23584   006708  26D9               	addwf	fsr2l,f,c
 23585   00670A  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23586   00670C  22DA               	addwfc	fsr2h,f,c
 23587   00670E  50DF               	movf	indf2,w,c
 23588   006710  6F64               	movwf	??_can_init& (0+255),b
 23589   006712  3364               	rrcf	??_can_init& (0+255),f,b
 23590   006714  3364               	rrcf	??_can_init& (0+255),f,b
 23591   006716  0137               	movlb	55	; () banked
 23592   006718  5104               	movf	4,w,b	;volatile
 23593   00671A  0100               	movlb	0	; () banked
 23594   00671C  1964               	xorwf	??_can_init& (0+255),w,b
 23595   00671E  0B7F               	andlw	-129
 23596   006720  1964               	xorwf	??_can_init& (0+255),w,b
 23597   006722  0137               	movlb	55	; () banked
 23598   006724  6F04               	movwf	4,b	;volatile
 23599   006726                     
 23600                           ; BSR set to: 55
 23601                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
 23602   006726  0100               	movlb	0	; () banked
 23603   006728  EE20 F002          	lfsr	2,2
 23604   00672C  5160               	movf	can_init@timing& (0+255),w,b
 23605   00672E  26D9               	addwf	fsr2l,f,c
 23606   006730  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23607   006732  22DA               	addwfc	fsr2h,f,c
 23608   006734  50DF               	movf	indf2,w,c
 23609   006736  6F64               	movwf	??_can_init& (0+255),b
 23610   006738  3B64               	swapf	??_can_init& (0+255),f,b
 23611   00673A  4764               	rlncf	??_can_init& (0+255),f,b
 23612   00673C  4764               	rlncf	??_can_init& (0+255),f,b
 23613   00673E  0137               	movlb	55	; () banked
 23614   006740  5104               	movf	4,w,b	;volatile
 23615   006742  0100               	movlb	0	; () banked
 23616   006744  1964               	xorwf	??_can_init& (0+255),w,b
 23617   006746  0BBF               	andlw	-65
 23618   006748  1964               	xorwf	??_can_init& (0+255),w,b
 23619   00674A  0137               	movlb	55	; () banked
 23620   00674C  6F04               	movwf	4,b	;volatile
 23621   00674E                     
 23622                           ; BSR set to: 55
 23623                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
 23624   00674E  0100               	movlb	0	; () banked
 23625   006750  EE20 F003          	lfsr	2,3
 23626   006754  5160               	movf	can_init@timing& (0+255),w,b
 23627   006756  26D9               	addwf	fsr2l,f,c
 23628   006758  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23629   00675A  22DA               	addwfc	fsr2h,f,c
 23630   00675C  50DF               	movf	indf2,w,c
 23631   00675E  6F64               	movwf	??_can_init& (0+255),b
 23632   006760  4764               	rlncf	??_can_init& (0+255),f,b
 23633   006762  4764               	rlncf	??_can_init& (0+255),f,b
 23634   006764  4764               	rlncf	??_can_init& (0+255),f,b
 23635   006766  0137               	movlb	55	; () banked
 23636   006768  5104               	movf	4,w,b	;volatile
 23637   00676A  0100               	movlb	0	; () banked
 23638   00676C  1964               	xorwf	??_can_init& (0+255),w,b
 23639   00676E  0BC7               	andlw	-57
 23640   006770  1964               	xorwf	??_can_init& (0+255),w,b
 23641   006772  0137               	movlb	55	; () banked
 23642   006774  6F04               	movwf	4,b	;volatile
 23643   006776                     
 23644                           ; BSR set to: 55
 23645                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
 23646   006776  0100               	movlb	0	; () banked
 23647   006778  EE20 F005          	lfsr	2,5
 23648   00677C  5160               	movf	can_init@timing& (0+255),w,b
 23649   00677E  26D9               	addwf	fsr2l,f,c
 23650   006780  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23651   006782  22DA               	addwfc	fsr2h,f,c
 23652   006784  50DF               	movf	indf2,w,c
 23653   006786  6F64               	movwf	??_can_init& (0+255),b
 23654   006788  0137               	movlb	55	; () banked
 23655   00678A  5104               	movf	4,w,b	;volatile
 23656   00678C  0100               	movlb	0	; () banked
 23657   00678E  1964               	xorwf	??_can_init& (0+255),w,b
 23658   006790  0BF8               	andlw	-8
 23659   006792  1964               	xorwf	??_can_init& (0+255),w,b
 23660   006794  0137               	movlb	55	; () banked
 23661   006796  6F04               	movwf	4,b	;volatile
 23662   006798                     
 23663                           ; BSR set to: 55
 23664                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
 23665   006798  0100               	movlb	0	; () banked
 23666   00679A  EE20 F004          	lfsr	2,4
 23667   00679E  5160               	movf	can_init@timing& (0+255),w,b
 23668   0067A0  26D9               	addwf	fsr2l,f,c
 23669   0067A2  5161               	movf	(can_init@timing+1)& (0+255),w,b
 23670   0067A4  22DA               	addwfc	fsr2h,f,c
 23671   0067A6  50DF               	movf	indf2,w,c
 23672   0067A8  6F64               	movwf	??_can_init& (0+255),b
 23673   0067AA  0137               	movlb	55	; () banked
 23674   0067AC  5105               	movf	5,w,b	;volatile
 23675   0067AE  0100               	movlb	0	; () banked
 23676   0067B0  1964               	xorwf	??_can_init& (0+255),w,b
 23677   0067B2  0BF8               	andlw	-8
 23678   0067B4  1964               	xorwf	??_can_init& (0+255),w,b
 23679   0067B6  0137               	movlb	55	; () banked
 23680   0067B8  6F05               	movwf	5,b	;volatile
 23681   0067BA                     
 23682                           ; BSR set to: 55
 23683                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
 23684   0067BA  8F05               	bsf	5,7,b	;volatile
 23685   0067BC                     
 23686                           ; BSR set to: 55
 23687                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
 23688   0067BC  9D05               	bcf	5,6,b	;volatile
 23689   0067BE                     
 23690                           ; BSR set to: 55
 23691                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
 23692   0067BE  0E00               	movlw	0
 23693   0067C0  6FB8               	movwf	184,b	;volatile
 23694   0067C2                     
 23695                           ; BSR set to: 55
 23696                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
 23697   0067C2  0E00               	movlw	0
 23698   0067C4  6FB9               	movwf	185,b	;volatile
 23699   0067C6                     
 23700                           ; BSR set to: 55
 23701                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
 23702   0067C6  0E00               	movlw	0
 23703   0067C8  6FBC               	movwf	188,b	;volatile
 23704   0067CA                     
 23705                           ; BSR set to: 55
 23706                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
 23707   0067CA  0E00               	movlw	0
 23708   0067CC  6FBD               	movwf	189,b	;volatile
 23709   0067CE                     
 23710                           ; BSR set to: 55
 23711                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
 23712   0067CE  8A80               	bsf	128,5,c	;volatile
 23713   0067D0                     
 23714                           ; BSR set to: 55
 23715                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
 23716   0067D0  8C80               	bsf	128,6,c	;volatile
 23717   0067D2                     
 23718                           ; BSR set to: 55
 23719                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
 23720   0067D2  8480               	bsf	128,2,c	;volatile
 23721   0067D4                     
 23722                           ; BSR set to: 55
 23723                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
 23724   0067D4  0139               	movlb	57	; () banked
 23725   0067D6  8F95               	bsf	149,7,b	;volatile
 23726   0067D8                     
 23727                           ; BSR set to: 57
 23728                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
 23729   0067D8  9D95               	bcf	149,6,b	;volatile
 23730   0067DA                     
 23731                           ; BSR set to: 57
 23732                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
 23733   0067DA  8B95               	bsf	149,5,b	;volatile
 23734   0067DC                     
 23735                           ; BSR set to: 57
 23736                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
 23737   0067DC  9995               	bcf	149,4,b	;volatile
 23738   0067DE                     
 23739                           ; BSR set to: 57
 23740                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
 23741   0067DE  9795               	bcf	149,3,b	;volatile
 23742   0067E0                     
 23743                           ; BSR set to: 57
 23744                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
 23745   0067E0  9595               	bcf	149,2,b	;volatile
 23746   0067E2                     
 23747                           ; BSR set to: 57
 23748                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
 23749   0067E2  8395               	bsf	149,1,b	;volatile
 23750   0067E4                     
 23751                           ; BSR set to: 57
 23752                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
 23753   0067E4  8195               	bsf	149,0,b	;volatile
 23754   0067E6                     
 23755                           ; BSR set to: 57
 23756                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
 23757   0067E6  0E1F               	movlw	-225
 23758   0067E8  168F               	andwf	143,f,c	;volatile
 23759   0067EA                     l16192:
 23760   0067EA  388E               	swapf	142,w,c	;volatile
 23761   0067EC  32E8               	rrcf	wreg,f,c
 23762   0067EE  0B07               	andlw	7
 23763   0067F0  0900               	iorlw	0
 23764   0067F2  A4D8               	btfss	status,2,c
 23765   0067F4  EFFE  F033         	goto	u19861
 23766   0067F8  EF00  F034         	goto	u19860
 23767   0067FC                     u19861:
 23768   0067FC  EFF5  F033         	goto	l16192
 23769   006800                     u19860:
 23770   006800  0012               	return		;funcret
 23771   006802                     __end_of_can_init:
 23772                           	callstack 0
 23773                           
 23774 ;; *************** function _can_generate_timing_params *****************
 23775 ;; Defined at:
 23776 ;;		line 7 in file "canlib/util/timing_util.c"
 23777 ;; Parameters:    Size  Location     Type
 23778 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
 23779 ;;  timing          2    4[BANK0 ] PTR struct .
 23780 ;;		 -> main@can_setup(7), 
 23781 ;; Auto vars:     Size  Location     Type
 23782 ;;		None
 23783 ;; Return value:  Size  Location     Type
 23784 ;;                  1    wreg      _Bool 
 23785 ;; Registers used:
 23786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23787 ;; Tracked objects:
 23788 ;;		On entry : 0/0
 23789 ;;		On exit  : 0/0
 23790 ;;		Unchanged: 0/0
 23791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23792 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23794 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23795 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23796 ;;Total ram usage:       10 bytes
 23797 ;; Hardware stack levels used: 1
 23798 ;; Hardware stack levels required when called: 5
 23799 ;; This function calls:
 23800 ;;		Nothing
 23801 ;; This function is called by:
 23802 ;;		_main
 23803 ;; This function uses a non-reentrant model
 23804 ;;
 23805                           
 23806                           	psect	text84
 23807   006122                     __ptext84:
 23808                           	callstack 0
 23809   006122                     _can_generate_timing_params:
 23810                           	callstack 25
 23811   006122                     
 23812                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
 23813   006122  EF3A  F031         	goto	l16280
 23814   006126                     l16230:
 23815                           
 23816                           ; BSR set to: 0
 23817                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
 23818   006126  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 23819   00612C  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 23820   006132  0E07               	movlw	7
 23821   006134  6EDF               	movwf	indf2,c
 23822   006136                     
 23823                           ; BSR set to: 0
 23824                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
 23825   006136  EE20 F001          	lfsr	2,1
 23826   00613A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23827   00613C  26D9               	addwf	fsr2l,f,c
 23828   00613E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23829   006140  22DA               	addwfc	fsr2h,f,c
 23830   006142  0E03               	movlw	3
 23831   006144  6EDF               	movwf	indf2,c
 23832   006146                     
 23833                           ; BSR set to: 0
 23834                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
 23835   006146  EE20 F006          	lfsr	2,6
 23836   00614A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23837   00614C  26D9               	addwf	fsr2l,f,c
 23838   00614E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23839   006150  22DA               	addwfc	fsr2h,f,c
 23840   006152  0E01               	movlw	1
 23841   006154  6EDF               	movwf	indf2,c
 23842   006156                     
 23843                           ; BSR set to: 0
 23844                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
 23845   006156  EE20 F002          	lfsr	2,2
 23846   00615A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23847   00615C  26D9               	addwf	fsr2l,f,c
 23848   00615E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23849   006160  22DA               	addwfc	fsr2h,f,c
 23850   006162  6ADF               	clrf	indf2,c
 23851   006164                     
 23852                           ; BSR set to: 0
 23853                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
 23854   006164  EE20 F003          	lfsr	2,3
 23855   006168  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23856   00616A  26D9               	addwf	fsr2l,f,c
 23857   00616C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23858   00616E  22DA               	addwfc	fsr2h,f,c
 23859   006170  0E04               	movlw	4
 23860   006172  6EDF               	movwf	indf2,c
 23861   006174                     
 23862                           ; BSR set to: 0
 23863                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
 23864   006174  EE20 F005          	lfsr	2,5
 23865   006178  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23866   00617A  26D9               	addwf	fsr2l,f,c
 23867   00617C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23868   00617E  22DA               	addwfc	fsr2h,f,c
 23869   006180  6ADF               	clrf	indf2,c
 23870   006182                     
 23871                           ; BSR set to: 0
 23872                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
 23873   006182  EE20 F004          	lfsr	2,4
 23874   006186  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23875   006188  26D9               	addwf	fsr2l,f,c
 23876   00618A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23877   00618C  22DA               	addwfc	fsr2h,f,c
 23878   00618E  0E04               	movlw	4
 23879   006190  6EDF               	movwf	indf2,c
 23880   006192  EF8A  F031         	goto	l234
 23881   006196                     l16246:
 23882                           
 23883                           ; BSR set to: 0
 23884                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
 23885   006196  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 23886   00619C  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 23887   0061A2  0E01               	movlw	1
 23888   0061A4  6EDF               	movwf	indf2,c
 23889   0061A6                     
 23890                           ; BSR set to: 0
 23891                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
 23892   0061A6  EE20 F001          	lfsr	2,1
 23893   0061AA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23894   0061AC  26D9               	addwf	fsr2l,f,c
 23895   0061AE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23896   0061B0  22DA               	addwfc	fsr2h,f,c
 23897   0061B2  0E03               	movlw	3
 23898   0061B4  6EDF               	movwf	indf2,c
 23899   0061B6                     
 23900                           ; BSR set to: 0
 23901                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
 23902   0061B6  EE20 F006          	lfsr	2,6
 23903   0061BA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23904   0061BC  26D9               	addwf	fsr2l,f,c
 23905   0061BE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23906   0061C0  22DA               	addwfc	fsr2h,f,c
 23907   0061C2  0E01               	movlw	1
 23908   0061C4  6EDF               	movwf	indf2,c
 23909   0061C6                     
 23910                           ; BSR set to: 0
 23911                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
 23912   0061C6  EE20 F002          	lfsr	2,2
 23913   0061CA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23914   0061CC  26D9               	addwf	fsr2l,f,c
 23915   0061CE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23916   0061D0  22DA               	addwfc	fsr2h,f,c
 23917   0061D2  6ADF               	clrf	indf2,c
 23918   0061D4                     
 23919                           ; BSR set to: 0
 23920                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
 23921   0061D4  EE20 F003          	lfsr	2,3
 23922   0061D8  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23923   0061DA  26D9               	addwf	fsr2l,f,c
 23924   0061DC  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23925   0061DE  22DA               	addwfc	fsr2h,f,c
 23926   0061E0  0E04               	movlw	4
 23927   0061E2  6EDF               	movwf	indf2,c
 23928   0061E4                     
 23929                           ; BSR set to: 0
 23930                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
 23931   0061E4  EE20 F005          	lfsr	2,5
 23932   0061E8  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23933   0061EA  26D9               	addwf	fsr2l,f,c
 23934   0061EC  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23935   0061EE  22DA               	addwfc	fsr2h,f,c
 23936   0061F0  6ADF               	clrf	indf2,c
 23937   0061F2                     
 23938                           ; BSR set to: 0
 23939                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
 23940   0061F2  EE20 F004          	lfsr	2,4
 23941   0061F6  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23942   0061F8  26D9               	addwf	fsr2l,f,c
 23943   0061FA  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23944   0061FC  22DA               	addwfc	fsr2h,f,c
 23945   0061FE  0E04               	movlw	4
 23946   006200  6EDF               	movwf	indf2,c
 23947   006202  EF8A  F031         	goto	l234
 23948   006206                     l16262:
 23949                           
 23950                           ; BSR set to: 0
 23951                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
 23952   006206  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 23953   00620C  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 23954   006212  6ADF               	clrf	indf2,c
 23955   006214                     
 23956                           ; BSR set to: 0
 23957                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
 23958   006214  EE20 F001          	lfsr	2,1
 23959   006218  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23960   00621A  26D9               	addwf	fsr2l,f,c
 23961   00621C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23962   00621E  22DA               	addwfc	fsr2h,f,c
 23963   006220  0E03               	movlw	3
 23964   006222  6EDF               	movwf	indf2,c
 23965   006224                     
 23966                           ; BSR set to: 0
 23967                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
 23968   006224  EE20 F006          	lfsr	2,6
 23969   006228  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23970   00622A  26D9               	addwf	fsr2l,f,c
 23971   00622C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23972   00622E  22DA               	addwfc	fsr2h,f,c
 23973   006230  0E01               	movlw	1
 23974   006232  6EDF               	movwf	indf2,c
 23975   006234                     
 23976                           ; BSR set to: 0
 23977                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
 23978   006234  EE20 F002          	lfsr	2,2
 23979   006238  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23980   00623A  26D9               	addwf	fsr2l,f,c
 23981   00623C  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23982   00623E  22DA               	addwfc	fsr2h,f,c
 23983   006240  6ADF               	clrf	indf2,c
 23984   006242                     
 23985                           ; BSR set to: 0
 23986                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
 23987   006242  EE20 F003          	lfsr	2,3
 23988   006246  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23989   006248  26D9               	addwf	fsr2l,f,c
 23990   00624A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 23991   00624C  22DA               	addwfc	fsr2h,f,c
 23992   00624E  0E04               	movlw	4
 23993   006250  6EDF               	movwf	indf2,c
 23994   006252                     
 23995                           ; BSR set to: 0
 23996                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
 23997   006252  EE20 F005          	lfsr	2,5
 23998   006256  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 23999   006258  26D9               	addwf	fsr2l,f,c
 24000   00625A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 24001   00625C  22DA               	addwfc	fsr2h,f,c
 24002   00625E  6ADF               	clrf	indf2,c
 24003   006260                     
 24004                           ; BSR set to: 0
 24005                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
 24006   006260  EE20 F004          	lfsr	2,4
 24007   006264  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 24008   006266  26D9               	addwf	fsr2l,f,c
 24009   006268  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 24010   00626A  22DA               	addwfc	fsr2h,f,c
 24011   00626C  0E04               	movlw	4
 24012   00626E  6EDF               	movwf	indf2,c
 24013   006270  EF8A  F031         	goto	l234
 24014   006274                     l16280:
 24015   006274  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
 24016   006278  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
 24017   00627C  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
 24018   006280  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
 24019                           
 24020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
 24021                           ; Switch size 1, requested type "simple"
 24022                           ; Number of cases is 2, Range of values is 0 to 2
 24023                           ; switch strategies available:
 24024                           ; Name         Instructions Cycles
 24025                           ; simple_byte            7     4 (average)
 24026                           ;	Chosen strategy is simple_byte
 24027   006284  0100               	movlb	0	; () banked
 24028   006286  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
 24029   006288  0A00               	xorlw	0	; case 0
 24030   00628A  B4D8               	btfsc	status,2,c
 24031   00628C  EF78  F031         	goto	l17790
 24032   006290  0A02               	xorlw	2	; case 2
 24033   006292  B4D8               	btfsc	status,2,c
 24034   006294  EF83  F031         	goto	l17792
 24035   006298  EF8A  F031         	goto	l234
 24036   00629C                     l17784:
 24037                           
 24038                           ; BSR set to: 0
 24039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24040                           ; Switch size 1, requested type "simple"
 24041                           ; Number of cases is 1, Range of values is 141 to 141
 24042                           ; switch strategies available:
 24043                           ; Name         Instructions Cycles
 24044                           ; simple_byte            4     3 (average)
 24045                           ;	Chosen strategy is simple_byte
 24046   00629C  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 24047   00629E  0A8D               	xorlw	141	; case 141
 24048   0062A0  B4D8               	btfsc	status,2,c
 24049   0062A2  EF55  F031         	goto	l17794
 24050   0062A6  EF8A  F031         	goto	l234
 24051   0062AA                     l17794:
 24052                           
 24053                           ; BSR set to: 0
 24054                           ; Switch size 1, requested type "simple"
 24055                           ; Number of cases is 1, Range of values is 128 to 128
 24056                           ; switch strategies available:
 24057                           ; Name         Instructions Cycles
 24058                           ; simple_byte            4     3 (average)
 24059                           ;	Chosen strategy is simple_byte
 24060   0062AA  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 24061   0062AC  0A80               	xorlw	128	; case 128
 24062   0062AE  B4D8               	btfsc	status,2,c
 24063   0062B0  EF03  F031         	goto	l16262
 24064   0062B4  EF8A  F031         	goto	l234
 24065   0062B8                     l17786:
 24066                           
 24067                           ; BSR set to: 0
 24068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24069                           ; Switch size 1, requested type "simple"
 24070                           ; Number of cases is 1, Range of values is 27 to 27
 24071                           ; switch strategies available:
 24072                           ; Name         Instructions Cycles
 24073                           ; simple_byte            4     3 (average)
 24074                           ;	Chosen strategy is simple_byte
 24075   0062B8  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 24076   0062BA  0A1B               	xorlw	27	; case 27
 24077   0062BC  B4D8               	btfsc	status,2,c
 24078   0062BE  EF63  F031         	goto	l17796
 24079   0062C2  EF8A  F031         	goto	l234
 24080   0062C6                     l17796:
 24081                           
 24082                           ; BSR set to: 0
 24083                           ; Switch size 1, requested type "simple"
 24084                           ; Number of cases is 1, Range of values is 0 to 0
 24085                           ; switch strategies available:
 24086                           ; Name         Instructions Cycles
 24087                           ; simple_byte            4     3 (average)
 24088                           ;	Chosen strategy is simple_byte
 24089   0062C6  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 24090   0062C8  0A00               	xorlw	0	; case 0
 24091   0062CA  B4D8               	btfsc	status,2,c
 24092   0062CC  EFCB  F030         	goto	l16246
 24093   0062D0  EF8A  F031         	goto	l234
 24094   0062D4                     l17788:
 24095                           
 24096                           ; BSR set to: 0
 24097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24098                           ; Switch size 1, requested type "simple"
 24099                           ; Number of cases is 1, Range of values is 108 to 108
 24100                           ; switch strategies available:
 24101                           ; Name         Instructions Cycles
 24102                           ; simple_byte            4     3 (average)
 24103                           ;	Chosen strategy is simple_byte
 24104   0062D4  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 24105   0062D6  0A6C               	xorlw	108	; case 108
 24106   0062D8  B4D8               	btfsc	status,2,c
 24107   0062DA  EF71  F031         	goto	l17798
 24108   0062DE  EF8A  F031         	goto	l234
 24109   0062E2                     l17798:
 24110                           
 24111                           ; BSR set to: 0
 24112                           ; Switch size 1, requested type "simple"
 24113                           ; Number of cases is 1, Range of values is 0 to 0
 24114                           ; switch strategies available:
 24115                           ; Name         Instructions Cycles
 24116                           ; simple_byte            4     3 (average)
 24117                           ;	Chosen strategy is simple_byte
 24118   0062E2  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 24119   0062E4  0A00               	xorlw	0	; case 0
 24120   0062E6  B4D8               	btfsc	status,2,c
 24121   0062E8  EF93  F030         	goto	l16230
 24122   0062EC  EF8A  F031         	goto	l234
 24123   0062F0                     l17790:
 24124                           
 24125                           ; BSR set to: 0
 24126                           ; Switch size 1, requested type "simple"
 24127                           ; Number of cases is 2, Range of values is 91 to 183
 24128                           ; switch strategies available:
 24129                           ; Name         Instructions Cycles
 24130                           ; simple_byte            7     4 (average)
 24131                           ;	Chosen strategy is simple_byte
 24132   0062F0  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 24133   0062F2  0A5B               	xorlw	91	; case 91
 24134   0062F4  B4D8               	btfsc	status,2,c
 24135   0062F6  EF4E  F031         	goto	l17784
 24136   0062FA  0AEC               	xorlw	236	; case 183
 24137   0062FC  B4D8               	btfsc	status,2,c
 24138   0062FE  EF5C  F031         	goto	l17786
 24139   006302  EF8A  F031         	goto	l234
 24140   006306                     l17792:
 24141                           
 24142                           ; BSR set to: 0
 24143                           ; Switch size 1, requested type "simple"
 24144                           ; Number of cases is 1, Range of values is 220 to 220
 24145                           ; switch strategies available:
 24146                           ; Name         Instructions Cycles
 24147                           ; simple_byte            4     3 (average)
 24148                           ;	Chosen strategy is simple_byte
 24149   006306  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 24150   006308  0ADC               	xorlw	220	; case 220
 24151   00630A  B4D8               	btfsc	status,2,c
 24152   00630C  EF6A  F031         	goto	l17788
 24153   006310  EF8A  F031         	goto	l234
 24154   006314                     l234:
 24155                           
 24156                           ; BSR set to: 0
 24157   006314  0012               	return		;funcret
 24158   006316                     __end_of_can_generate_timing_params:
 24159                           	callstack 0
 24160                           
 24161 ;; *************** function _SYSTEM_Initialize *****************
 24162 ;; Defined at:
 24163 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;		None
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;		None
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1    wreg      void 
 24170 ;; Registers used:
 24171 ;;		wreg, status,2, cstack
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/0
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24181 ;;Total ram usage:        0 bytes
 24182 ;; Hardware stack levels used: 1
 24183 ;; Hardware stack levels required when called: 6
 24184 ;; This function calls:
 24185 ;;		_OSCILLATOR_Initialize
 24186 ;;		_PIN_MANAGER_Initialize
 24187 ;;		_PMD_Initialize
 24188 ;;		_SPI1_Initialize
 24189 ;; This function is called by:
 24190 ;;		_main
 24191 ;; This function uses a non-reentrant model
 24192 ;;
 24193                           
 24194                           	psect	text85
 24195   008CB6                     __ptext85:
 24196                           	callstack 0
 24197   008CB6                     _SYSTEM_Initialize:
 24198                           	callstack 24
 24199   008CB6                     
 24200                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 24201   008CB6  ECC7  F045         	call	_PMD_Initialize	;wreg free
 24202                           
 24203                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 24204   008CBA  EC3A  F043         	call	_PIN_MANAGER_Initialize	;wreg free
 24205                           
 24206                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 24207   008CBE  EC44  F046         	call	_OSCILLATOR_Initialize	;wreg free
 24208                           
 24209                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
 24210   008CC2  EC37  F046         	call	_SPI1_Initialize	;wreg free
 24211   008CC6  0012               	return		;funcret
 24212   008CC8                     __end_of_SYSTEM_Initialize:
 24213                           	callstack 0
 24214                           
 24215 ;; *************** function _SPI1_Initialize *****************
 24216 ;; Defined at:
 24217 ;;		line 66 in file "mcc_generated_files/spi1.c"
 24218 ;; Parameters:    Size  Location     Type
 24219 ;;		None
 24220 ;; Auto vars:     Size  Location     Type
 24221 ;;		None
 24222 ;; Return value:  Size  Location     Type
 24223 ;;                  1    wreg      void 
 24224 ;; Registers used:
 24225 ;;		wreg, status,2
 24226 ;; Tracked objects:
 24227 ;;		On entry : 0/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24235 ;;Total ram usage:        0 bytes
 24236 ;; Hardware stack levels used: 1
 24237 ;; Hardware stack levels required when called: 5
 24238 ;; This function calls:
 24239 ;;		Nothing
 24240 ;; This function is called by:
 24241 ;;		_SYSTEM_Initialize
 24242 ;; This function uses a non-reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text86
 24246   008C6E                     __ptext86:
 24247                           	callstack 0
 24248   008C6E                     _SPI1_Initialize:
 24249                           	callstack 24
 24250   008C6E                     
 24251                           ;mcc_generated_files/spi1.c: 69:     SPI1CON0 = 0x02;
 24252   008C6E  0E02               	movlw	2
 24253   008C70  013D               	movlb	61	; () banked
 24254   008C72  6F14               	movwf	20,b	;volatile
 24255                           
 24256                           ;mcc_generated_files/spi1.c: 71:     SPI1CON1 = 0x40;
 24257   008C74  0E40               	movlw	64
 24258   008C76  6F15               	movwf	21,b	;volatile
 24259                           
 24260                           ;mcc_generated_files/spi1.c: 73:     SPI1CON2 = 0x00;
 24261   008C78  0E00               	movlw	0
 24262   008C7A  6F16               	movwf	22,b	;volatile
 24263                           
 24264                           ;mcc_generated_files/spi1.c: 75:     SPI1CLK = 0x00;
 24265   008C7C  0E00               	movlw	0
 24266   008C7E  6F1C               	movwf	28,b	;volatile
 24267                           
 24268                           ;mcc_generated_files/spi1.c: 77:     SPI1BAUD = 0x00;
 24269   008C80  0E00               	movlw	0
 24270   008C82  6F19               	movwf	25,b	;volatile
 24271   008C84                     
 24272                           ; BSR set to: 61
 24273                           ;mcc_generated_files/spi1.c: 78:     TRISCbits.TRISC3 = 0;
 24274   008C84  96C4               	bcf	196,3,c	;volatile
 24275   008C86                     
 24276                           ; BSR set to: 61
 24277   008C86  0012               	return		;funcret
 24278   008C88                     __end_of_SPI1_Initialize:
 24279                           	callstack 0
 24280                           
 24281 ;; *************** function _PMD_Initialize *****************
 24282 ;; Defined at:
 24283 ;;		line 72 in file "mcc_generated_files/mcc.c"
 24284 ;; Parameters:    Size  Location     Type
 24285 ;;		None
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;		None
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      void 
 24290 ;; Registers used:
 24291 ;;		wreg, status,2
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used: 1
 24303 ;; Hardware stack levels required when called: 5
 24304 ;; This function calls:
 24305 ;;		Nothing
 24306 ;; This function is called by:
 24307 ;;		_SYSTEM_Initialize
 24308 ;; This function uses a non-reentrant model
 24309 ;;
 24310                           
 24311                           	psect	text87
 24312   008B8E                     __ptext87:
 24313                           	callstack 0
 24314   008B8E                     _PMD_Initialize:
 24315                           	callstack 24
 24316   008B8E                     
 24317                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 24318   008B8E  0E00               	movlw	0
 24319   008B90  0139               	movlb	57	; () banked
 24320   008B92  6FC0               	movwf	192,b	;volatile
 24321                           
 24322                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 24323   008B94  0E00               	movlw	0
 24324   008B96  6FC1               	movwf	193,b	;volatile
 24325                           
 24326                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 24327   008B98  0E00               	movlw	0
 24328   008B9A  6FC2               	movwf	194,b	;volatile
 24329                           
 24330                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 24331   008B9C  0E00               	movlw	0
 24332   008B9E  6FC3               	movwf	195,b	;volatile
 24333                           
 24334                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 24335   008BA0  0E00               	movlw	0
 24336   008BA2  6FC4               	movwf	196,b	;volatile
 24337                           
 24338                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 24339   008BA4  0E00               	movlw	0
 24340   008BA6  6FC5               	movwf	197,b	;volatile
 24341                           
 24342                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
 24343   008BA8  0E00               	movlw	0
 24344   008BAA  6FC6               	movwf	198,b	;volatile
 24345                           
 24346                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
 24347   008BAC  0E00               	movlw	0
 24348   008BAE  6FC7               	movwf	199,b	;volatile
 24349   008BB0                     
 24350                           ; BSR set to: 57
 24351   008BB0  0012               	return		;funcret
 24352   008BB2                     __end_of_PMD_Initialize:
 24353                           	callstack 0
 24354                           
 24355 ;; *************** function _PIN_MANAGER_Initialize *****************
 24356 ;; Defined at:
 24357 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24358 ;; Parameters:    Size  Location     Type
 24359 ;;		None
 24360 ;; Auto vars:     Size  Location     Type
 24361 ;;		None
 24362 ;; Return value:  Size  Location     Type
 24363 ;;                  1    wreg      void 
 24364 ;; Registers used:
 24365 ;;		wreg, status,2
 24366 ;; Tracked objects:
 24367 ;;		On entry : 0/0
 24368 ;;		On exit  : 0/0
 24369 ;;		Unchanged: 0/0
 24370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24375 ;;Total ram usage:        0 bytes
 24376 ;; Hardware stack levels used: 1
 24377 ;; Hardware stack levels required when called: 5
 24378 ;; This function calls:
 24379 ;;		Nothing
 24380 ;; This function is called by:
 24381 ;;		_SYSTEM_Initialize
 24382 ;; This function uses a non-reentrant model
 24383 ;;
 24384                           
 24385                           	psect	text88
 24386   008674                     __ptext88:
 24387                           	callstack 0
 24388   008674                     _PIN_MANAGER_Initialize:
 24389                           	callstack 24
 24390   008674                     
 24391                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 24392   008674  0E00               	movlw	0
 24393   008676  6EBA               	movwf	186,c	;volatile
 24394                           
 24395                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 24396   008678  0E00               	movlw	0
 24397   00867A  6EBB               	movwf	187,c	;volatile
 24398                           
 24399                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 24400   00867C  0E00               	movlw	0
 24401   00867E  6EBC               	movwf	188,c	;volatile
 24402                           
 24403                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDF;
 24404   008680  0EDF               	movlw	223
 24405   008682  6EC2               	movwf	194,c	;volatile
 24406   008684                     
 24407                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 24408   008684  68C3               	setf	195,c	;volatile
 24409                           
 24410                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD7;
 24411   008686  0ED7               	movlw	215
 24412   008688  6EC4               	movwf	196,c	;volatile
 24413                           
 24414                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC7;
 24415   00868A  0EC7               	movlw	199
 24416   00868C  013A               	movlb	58	; () banked
 24417   00868E  6F60               	movwf	96,b	;volatile
 24418   008690                     
 24419                           ; BSR set to: 58
 24420                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
 24421   008690  6950               	setf	80,b	;volatile
 24422                           
 24423                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xDF;
 24424   008692  0EDF               	movlw	223
 24425   008694  6F40               	movwf	64,b	;volatile
 24426                           
 24427                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 24428   008696  0E00               	movlw	0
 24429   008698  6F81               	movwf	129,b	;volatile
 24430                           
 24431                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 24432   00869A  0E00               	movlw	0
 24433   00869C  6F51               	movwf	81,b	;volatile
 24434                           
 24435                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 24436   00869E  0E00               	movlw	0
 24437   0086A0  6F41               	movwf	65,b	;volatile
 24438                           
 24439                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 24440   0086A2  0E00               	movlw	0
 24441   0086A4  6F61               	movwf	97,b	;volatile
 24442                           
 24443                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 24444   0086A6  0E00               	movlw	0
 24445   0086A8  6F42               	movwf	66,b	;volatile
 24446                           
 24447                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 24448   0086AA  0E00               	movlw	0
 24449   0086AC  6F52               	movwf	82,b	;volatile
 24450                           
 24451                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 24452   0086AE  0E00               	movlw	0
 24453   0086B0  6F62               	movwf	98,b	;volatile
 24454   0086B2                     
 24455                           ; BSR set to: 58
 24456                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 24457   0086B2  6943               	setf	67,b	;volatile
 24458   0086B4                     
 24459                           ; BSR set to: 58
 24460                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 24461   0086B4  6953               	setf	83,b	;volatile
 24462   0086B6                     
 24463                           ; BSR set to: 58
 24464                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 24465   0086B6  6963               	setf	99,b	;volatile
 24466   0086B8                     
 24467                           ; BSR set to: 58
 24468                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 24469   0086B8  6944               	setf	68,b	;volatile
 24470   0086BA                     
 24471                           ; BSR set to: 58
 24472                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 24473   0086BA  6954               	setf	84,b	;volatile
 24474   0086BC                     
 24475                           ; BSR set to: 58
 24476                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 24477   0086BC  6964               	setf	100,b	;volatile
 24478                           
 24479                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 24480   0086BE  0E08               	movlw	8
 24481   0086C0  6F84               	movwf	132,b	;volatile
 24482                           
 24483                           ;mcc_generated_files/pin_manager.c: 115:     SPI1SCKPPS = 0x13;
 24484   0086C2  0E13               	movlw	19
 24485   0086C4  6FE0               	movwf	224,b	;volatile
 24486                           
 24487                           ;mcc_generated_files/pin_manager.c: 116:     RC3PPS = 0x1E;
 24488   0086C6  0E1E               	movlw	30
 24489   0086C8  6F13               	movwf	19,b	;volatile
 24490                           
 24491                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x1F;
 24492   0086CA  0E1F               	movlw	31
 24493   0086CC  6F15               	movwf	21,b	;volatile
 24494                           
 24495                           ;mcc_generated_files/pin_manager.c: 118:     SPI1SDIPPS = 0x14;
 24496   0086CE  0E14               	movlw	20
 24497   0086D0  6FE1               	movwf	225,b	;volatile
 24498   0086D2                     
 24499                           ; BSR set to: 58
 24500   0086D2  0012               	return		;funcret
 24501   0086D4                     __end_of_PIN_MANAGER_Initialize:
 24502                           	callstack 0
 24503                           
 24504 ;; *************** function _OSCILLATOR_Initialize *****************
 24505 ;; Defined at:
 24506 ;;		line 58 in file "mcc_generated_files/mcc.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;		None
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;		None
 24511 ;; Return value:  Size  Location     Type
 24512 ;;                  1    wreg      void 
 24513 ;; Registers used:
 24514 ;;		wreg, status,2
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/0
 24517 ;;		On exit  : 0/0
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24524 ;;Total ram usage:        0 bytes
 24525 ;; Hardware stack levels used: 1
 24526 ;; Hardware stack levels required when called: 5
 24527 ;; This function calls:
 24528 ;;		Nothing
 24529 ;; This function is called by:
 24530 ;;		_SYSTEM_Initialize
 24531 ;; This function uses a non-reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text89
 24535   008C88                     __ptext89:
 24536                           	callstack 0
 24537   008C88                     _OSCILLATOR_Initialize:
 24538                           	callstack 24
 24539   008C88                     
 24540                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x70;
 24541   008C88  0E70               	movlw	112
 24542   008C8A  0139               	movlb	57	; () banked
 24543   008C8C  6FD9               	movwf	217,b	;volatile
 24544                           
 24545                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 24546   008C8E  0E00               	movlw	0
 24547   008C90  6FDB               	movwf	219,b	;volatile
 24548                           
 24549                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 24550   008C92  0E00               	movlw	0
 24551   008C94  6FDD               	movwf	221,b	;volatile
 24552                           
 24553                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
 24554   008C96  0E02               	movlw	2
 24555   008C98  6FDF               	movwf	223,b	;volatile
 24556                           
 24557                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 24558   008C9A  0E00               	movlw	0
 24559   008C9C  6FDE               	movwf	222,b	;volatile
 24560   008C9E                     
 24561                           ; BSR set to: 57
 24562   008C9E  0012               	return		;funcret
 24563   008CA0                     __end_of_OSCILLATOR_Initialize:
 24564                           	callstack 0
 24565                           
 24566 ;; *************** function _SET_ACCEL_I2C_ADDR *****************
 24567 ;; Defined at:
 24568 ;;		line 16 in file "main.c"
 24569 ;; Parameters:    Size  Location     Type
 24570 ;;  addr            1    wreg     unsigned char 
 24571 ;; Auto vars:     Size  Location     Type
 24572 ;;  addr            1    0[BANK0 ] unsigned char 
 24573 ;; Return value:  Size  Location     Type
 24574 ;;                  1    wreg      void 
 24575 ;; Registers used:
 24576 ;;		wreg, status,2, status,0
 24577 ;; Tracked objects:
 24578 ;;		On entry : 0/0
 24579 ;;		On exit  : 0/0
 24580 ;;		Unchanged: 0/0
 24581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;Total ram usage:        1 bytes
 24587 ;; Hardware stack levels used: 1
 24588 ;; Hardware stack levels required when called: 5
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		_main
 24593 ;; This function uses a non-reentrant model
 24594 ;;
 24595                           
 24596                           	psect	text90
 24597   008C50                     __ptext90:
 24598                           	callstack 0
 24599   008C50                     _SET_ACCEL_I2C_ADDR:
 24600                           	callstack 25
 24601                           
 24602                           ; BSR set to: 57
 24603                           ;incstack = 0
 24604                           ;SET_ACCEL_I2C_ADDR@addr stored from wreg
 24605   008C50  0100               	movlb	0	; () banked
 24606   008C52  6F60               	movwf	SET_ACCEL_I2C_ADDR@addr& (0+255),b
 24607   008C54                     
 24608                           ;main.c: 17:     LATC2 = (addr == 0x19);
 24609   008C54  0E19               	movlw	25
 24610   008C56  0100               	movlb	0	; () banked
 24611   008C58  1960               	xorwf	SET_ACCEL_I2C_ADDR@addr& (0+255),w,b
 24612   008C5A  B4D8               	btfsc	status,2,c
 24613   008C5C  EF32  F046         	goto	u20181
 24614   008C60  EF35  F046         	goto	u20180
 24615   008C64                     u20181:
 24616   008C64  84BC               	bsf	16316,2,c	;volatile
 24617   008C66  EF36  F046         	goto	u20195
 24618   008C6A                     u20180:
 24619   008C6A  94BC               	bcf	16316,2,c	;volatile
 24620   008C6C                     u20195:
 24621   008C6C  0012               	return		;funcret
 24622   008C6E                     __end_of_SET_ACCEL_I2C_ADDR:
 24623                           	callstack 0
 24624                           
 24625 ;; *************** function _ADCC_Initialize *****************
 24626 ;; Defined at:
 24627 ;;		line 45 in file "adcc.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;		None
 24630 ;; Auto vars:     Size  Location     Type
 24631 ;;		None
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  1    wreg      void 
 24634 ;; Registers used:
 24635 ;;		wreg, status,2
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/0
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24645 ;;Total ram usage:        0 bytes
 24646 ;; Hardware stack levels used: 1
 24647 ;; Hardware stack levels required when called: 5
 24648 ;; This function calls:
 24649 ;;		Nothing
 24650 ;; This function is called by:
 24651 ;;		_main
 24652 ;; This function uses a non-reentrant model
 24653 ;;
 24654                           
 24655                           	psect	text91
 24656   008612                     __ptext91:
 24657                           	callstack 0
 24658   008612                     _ADCC_Initialize:
 24659                           	callstack 25
 24660   008612                     
 24661                           ;adcc.c: 49:     ADLTHL = 0x0;
 24662   008612  0E00               	movlw	0
 24663   008614  013E               	movlb	62	; () banked
 24664   008616  6FDE               	movwf	222,b	;volatile
 24665                           
 24666                           ;adcc.c: 51:     ADLTHH = 0x0;
 24667   008618  0E00               	movlw	0
 24668   00861A  6FDF               	movwf	223,b	;volatile
 24669                           
 24670                           ;adcc.c: 53:     ADUTHL = 0x0;
 24671   00861C  0E00               	movlw	0
 24672   00861E  6FE0               	movwf	224,b	;volatile
 24673                           
 24674                           ;adcc.c: 55:     ADUTHH = 0x0;
 24675   008620  0E00               	movlw	0
 24676   008622  6FE1               	movwf	225,b	;volatile
 24677                           
 24678                           ;adcc.c: 57:     ADSTPTL = 0x0;
 24679   008624  0E00               	movlw	0
 24680   008626  6FE4               	movwf	228,b	;volatile
 24681                           
 24682                           ;adcc.c: 59:     ADSTPTH = 0x0;
 24683   008628  0E00               	movlw	0
 24684   00862A  6FE5               	movwf	229,b	;volatile
 24685                           
 24686                           ;adcc.c: 61:     ADACCU = 0x0;
 24687   00862C  0E00               	movlw	0
 24688   00862E  6FEA               	movwf	234,b	;volatile
 24689                           
 24690                           ;adcc.c: 63:     ADRPT = 0x0;
 24691   008630  0E00               	movlw	0
 24692   008632  6FEC               	movwf	236,b	;volatile
 24693                           
 24694                           ;adcc.c: 65:     ADPCH = 0x0;
 24695   008634  0E00               	movlw	0
 24696   008636  6FF1               	movwf	241,b	;volatile
 24697                           
 24698                           ;adcc.c: 67:     ADACQL = 0x1;
 24699   008638  0E01               	movlw	1
 24700   00863A  6FF3               	movwf	243,b	;volatile
 24701                           
 24702                           ;adcc.c: 69:     ADACQH = 0x0;
 24703   00863C  0E00               	movlw	0
 24704   00863E  6FF4               	movwf	244,b	;volatile
 24705                           
 24706                           ;adcc.c: 71:     ADCAP = 0x0;
 24707   008640  0E00               	movlw	0
 24708   008642  6FF5               	movwf	245,b	;volatile
 24709                           
 24710                           ;adcc.c: 73:     ADPREL = 0x0;
 24711   008644  0E00               	movlw	0
 24712   008646  6FF6               	movwf	246,b	;volatile
 24713                           
 24714                           ;adcc.c: 75:     ADPREH = 0x0;
 24715   008648  0E00               	movlw	0
 24716   00864A  6FF7               	movwf	247,b	;volatile
 24717                           
 24718                           ;adcc.c: 77:     ADCON1 = 0x0;
 24719   00864C  0E00               	movlw	0
 24720   00864E  6FF9               	movwf	249,b	;volatile
 24721                           
 24722                           ;adcc.c: 79:     ADCON2 = 0x10;
 24723   008650  0E10               	movlw	16
 24724   008652  6FFA               	movwf	250,b	;volatile
 24725                           
 24726                           ;adcc.c: 81:     ADCON3 = 0x0;
 24727   008654  0E00               	movlw	0
 24728   008656  6FFB               	movwf	251,b	;volatile
 24729                           
 24730                           ;adcc.c: 83:     ADSTAT = 0x0;
 24731   008658  0E00               	movlw	0
 24732   00865A  6FFC               	movwf	252,b	;volatile
 24733                           
 24734                           ;adcc.c: 85:     ADREF = 0x0;
 24735   00865C  0E00               	movlw	0
 24736   00865E  6FFD               	movwf	253,b	;volatile
 24737                           
 24738                           ;adcc.c: 87:     ADACT = 0x0;
 24739   008660  0E00               	movlw	0
 24740   008662  6FFE               	movwf	254,b	;volatile
 24741                           
 24742                           ;adcc.c: 89:     ADCLK = 0x1F;
 24743   008664  0E1F               	movlw	31
 24744   008666  6FFF               	movwf	255,b	;volatile
 24745                           
 24746                           ;adcc.c: 91:     ADCON0 = 0x84;
 24747   008668  0E84               	movlw	132
 24748   00866A  6FF8               	movwf	248,b	;volatile
 24749   00866C                     
 24750                           ; BSR set to: 62
 24751                           ;adcc.c: 94:     PIR1bits.ADIF = 0;
 24752   00866C  0139               	movlb	57	; () banked
 24753   00866E  95A1               	bcf	161,2,b	;volatile
 24754   008670                     
 24755                           ; BSR set to: 57
 24756                           ;adcc.c: 97:     PIR1bits.ADTIF = 0;
 24757   008670  97A1               	bcf	161,3,b	;volatile
 24758   008672                     
 24759                           ; BSR set to: 57
 24760   008672  0012               	return		;funcret
 24761   008674                     __end_of_ADCC_Initialize:
 24762                           	callstack 0
 24763                           
 24764 ;; *************** function _interrupt_handler *****************
 24765 ;; Defined at:
 24766 ;;		line 247 in file "main.c"
 24767 ;; Parameters:    Size  Location     Type
 24768 ;;		None
 24769 ;; Auto vars:     Size  Location     Type
 24770 ;;		None
 24771 ;; Return value:  Size  Location     Type
 24772 ;;                  1    wreg      void 
 24773 ;; Registers used:
 24774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 24775 ;; Tracked objects:
 24776 ;;		On entry : 0/0
 24777 ;;		On exit  : 0/0
 24778 ;;		Unchanged: 0/0
 24779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24784 ;;Total ram usage:        2 bytes
 24785 ;; Hardware stack levels used: 1
 24786 ;; Hardware stack levels required when called: 4
 24787 ;; This function calls:
 24788 ;;		_can_handle_interrupt
 24789 ;;		_timer0_handle_interrupt
 24790 ;; This function is called by:
 24791 ;;		Interrupt level 2
 24792 ;; This function uses a non-reentrant model
 24793 ;;
 24794                           
 24795                           	psect	text92
 24796   0087E2                     __ptext92:
 24797                           	callstack 0
 24798   0087E2                     _interrupt_handler:
 24799                           	callstack 12
 24800                           
 24801                           ; BSR set to: 57
 24802                           ;incstack = 0
 24803   0087E2  006F FFE8  F02B    	movff	pclath,??_interrupt_handler
 24804   0087E8  006F FFEC  F02C    	movff	pclatu,??_interrupt_handler+1
 24805   0087EE                     
 24806                           ;main.c: 248:     if (PIR5) {
 24807   0087EE  0139               	movlb	57	; () banked
 24808   0087F0  51A5               	movf	165,w,b	;volatile
 24809   0087F2  B4D8               	btfsc	status,2,c
 24810   0087F4  EFFE  F043         	goto	i2u1478_41
 24811   0087F8  EF00  F044         	goto	i2u1478_40
 24812   0087FC                     i2u1478_41:
 24813   0087FC  EF02  F044         	goto	i2l12954
 24814   008800                     i2u1478_40:
 24815   008800                     
 24816                           ; BSR set to: 57
 24817                           ;main.c: 249:         can_handle_interrupt();
 24818   008800  EC94  F02F         	call	_can_handle_interrupt	;wreg free
 24819   008804                     i2l12954:
 24820                           
 24821                           ;main.c: 254:     if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
 24822   008804  0139               	movlb	57	; () banked
 24823   008806  AF93               	btfss	147,7,b	;volatile
 24824   008808  EF08  F044         	goto	i2u1479_41
 24825   00880C  EF0A  F044         	goto	i2u1479_40
 24826   008810                     i2u1479_41:
 24827   008810  EF15  F044         	goto	i2l2213
 24828   008814                     i2u1479_40:
 24829   008814                     
 24830                           ; BSR set to: 57
 24831   008814  AFA3               	btfss	163,7,b	;volatile
 24832   008816  EF0F  F044         	goto	i2u1480_41
 24833   00881A  EF11  F044         	goto	i2u1480_40
 24834   00881E                     i2u1480_41:
 24835   00881E  EF15  F044         	goto	i2l2213
 24836   008822                     i2u1480_40:
 24837   008822                     
 24838                           ; BSR set to: 57
 24839                           ;main.c: 255:         timer0_handle_interrupt();
 24840   008822  ECB4  F045         	call	_timer0_handle_interrupt	;wreg free
 24841   008826                     
 24842                           ;main.c: 256:         PIR3bits.TMR0IF = 0;
 24843   008826  0139               	movlb	57	; () banked
 24844   008828  9FA3               	bcf	163,7,b	;volatile
 24845   00882A                     i2l2213:
 24846                           
 24847                           ; BSR set to: 57
 24848   00882A  0060  F0B3  FFFB   	movff	??_interrupt_handler+1,pclatu
 24849   008830  0060  F0AF  FFFA   	movff	??_interrupt_handler,pclath
 24850   008836  0011               	retfie		f
 24851   008838                     __end_of_interrupt_handler:
 24852                           	callstack 0
 24853                           
 24854 ;; *************** function _timer0_handle_interrupt *****************
 24855 ;; Defined at:
 24856 ;;		line 52 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;		None
 24859 ;; Auto vars:     Size  Location     Type
 24860 ;;		None
 24861 ;; Return value:  Size  Location     Type
 24862 ;;                  1    wreg      void 
 24863 ;; Registers used:
 24864 ;;		wreg, status,2, status,0
 24865 ;; Tracked objects:
 24866 ;;		On entry : 0/0
 24867 ;;		On exit  : 0/0
 24868 ;;		Unchanged: 0/0
 24869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24874 ;;Total ram usage:        0 bytes
 24875 ;; Hardware stack levels used: 1
 24876 ;; This function calls:
 24877 ;;		Nothing
 24878 ;; This function is called by:
 24879 ;;		_interrupt_handler
 24880 ;; This function uses a non-reentrant model
 24881 ;;
 24882                           
 24883                           	psect	text93
 24884   008B68                     __ptext93:
 24885                           	callstack 0
 24886   008B68                     _timer0_handle_interrupt:
 24887                           	callstack 15
 24888   008B68                     
 24889                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 56:     internal_count += 64;
 24890   008B68  0E40               	movlw	64
 24891   008B6A  264E               	addwf	timer0_handle_interrupt@internal_count^0,f,c
 24892                           
 24893                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 57:     if (internal_count > 125) {
 24894   008B6C  0E7D               	movlw	125
 24895   008B6E  644E               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
 24896   008B70  EFBC  F045         	goto	i2u535_41
 24897   008B74  EFBE  F045         	goto	i2u535_40
 24898   008B78                     i2u535_41:
 24899   008B78  EFC6  F045         	goto	i2l125
 24900   008B7C                     i2u535_40:
 24901   008B7C                     
 24902                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 58:         internal_count -= 125;
 24903   008B7C  0E7D               	movlw	125
 24904   008B7E  5E4E               	subwf	timer0_handle_interrupt@internal_count^0,f,c
 24905                           
 24906                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 59:         millis_counter++;
 24907   008B80  0E01               	movlw	1
 24908   008B82  263E               	addwf	_millis_counter^0,f,c	;volatile
 24909   008B84  0E00               	movlw	0
 24910   008B86  223F               	addwfc	(_millis_counter+1)^0,f,c	;volatile
 24911   008B88  2240               	addwfc	(_millis_counter+2)^0,f,c	;volatile
 24912   008B8A  2241               	addwfc	(_millis_counter+3)^0,f,c	;volatile
 24913   008B8C                     i2l125:
 24914   008B8C  0012               	return		;funcret
 24915   008B8E                     __end_of_timer0_handle_interrupt:
 24916                           	callstack 0
 24917                           
 24918 ;; *************** function _can_handle_interrupt *****************
 24919 ;; Defined at:
 24920 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 24921 ;; Parameters:    Size  Location     Type
 24922 ;;		None
 24923 ;; Auto vars:     Size  Location     Type
 24924 ;;  rcvd_msg       11   31[COMRAM] struct .
 24925 ;;  rcvd_msg       11   20[COMRAM] struct .
 24926 ;; Return value:  Size  Location     Type
 24927 ;;                  1    wreg      void 
 24928 ;; Registers used:
 24929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/0
 24932 ;;		On exit  : 0/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24936 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24938 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24939 ;;Total ram usage:       26 bytes
 24940 ;; Hardware stack levels used: 1
 24941 ;; Hardware stack levels required when called: 3
 24942 ;; This function calls:
 24943 ;;		NULL
 24944 ;;		_can_msg_handler
 24945 ;;		i2_memcpy
 24946 ;; This function is called by:
 24947 ;;		_interrupt_handler
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text94
 24952   005F28                     __ptext94:
 24953                           	callstack 0
 24954   005F28                     _can_handle_interrupt:
 24955                           	callstack 12
 24956   005F28                     
 24957                           ;canlib/pic18f26k83/pic18f26k83_can.c: 124:     if (COMSTATbits.RXB0OVFL || COMSTATbits.
      +                          RXB1OVFL) {
 24958   005F28  BE90               	btfsc	144,7,c	;volatile
 24959   005F2A  EF99  F02F         	goto	i2u1264_41
 24960   005F2E  EF9B  F02F         	goto	i2u1264_40
 24961   005F32                     i2u1264_41:
 24962   005F32  EFA2  F02F         	goto	i2l86
 24963   005F36                     i2u1264_40:
 24964   005F36  AC90               	btfss	144,6,c	;volatile
 24965   005F38  EFA0  F02F         	goto	i2u1265_41
 24966   005F3C  EFA2  F02F         	goto	i2u1265_40
 24967   005F40                     i2u1265_41:
 24968   005F40  EFA4  F02F         	goto	i2l84
 24969   005F44                     i2u1265_40:
 24970   005F44                     i2l86:
 24971                           
 24972                           ;canlib/pic18f26k83/pic18f26k83_can.c: 125:         COMSTATbits.RXB0OVFL = 0;
 24973   005F44  9E90               	bcf	144,7,c	;volatile
 24974                           
 24975                           ;canlib/pic18f26k83/pic18f26k83_can.c: 126:         COMSTATbits.RXB1OVFL = 0;
 24976   005F46  9C90               	bcf	144,6,c	;volatile
 24977   005F48                     i2l84:
 24978                           
 24979                           ;canlib/pic18f26k83/pic18f26k83_can.c: 129:     if (TXB0CONbits.TXREQ && TXB0CONbits.TXE
      +                          RR && PIR5bits.IRXIF) {
 24980   005F48  0137               	movlb	55	; () banked
 24981   005F4A  A7E0               	btfss	224,3,b	;volatile
 24982   005F4C  EFAA  F02F         	goto	i2u1266_41
 24983   005F50  EFAC  F02F         	goto	i2u1266_40
 24984   005F54                     i2u1266_41:
 24985   005F54  EFBF  F02F         	goto	i2l87
 24986   005F58                     i2u1266_40:
 24987   005F58                     
 24988                           ; BSR set to: 55
 24989   005F58  A9E0               	btfss	224,4,b	;volatile
 24990   005F5A  EFB1  F02F         	goto	i2u1267_41
 24991   005F5E  EFB3  F02F         	goto	i2u1267_40
 24992   005F62                     i2u1267_41:
 24993   005F62  EFBF  F02F         	goto	i2l87
 24994   005F66                     i2u1267_40:
 24995   005F66                     
 24996                           ; BSR set to: 55
 24997   005F66  0139               	movlb	57	; () banked
 24998   005F68  AFA5               	btfss	165,7,b	;volatile
 24999   005F6A  EFB9  F02F         	goto	i2u1268_41
 25000   005F6E  EFBB  F02F         	goto	i2u1268_40
 25001   005F72                     i2u1268_41:
 25002   005F72  EFBF  F02F         	goto	i2l87
 25003   005F76                     i2u1268_40:
 25004   005F76                     
 25005                           ; BSR set to: 57
 25006                           ;canlib/pic18f26k83/pic18f26k83_can.c: 131:         TXB0CONbits.TXREQ = 0;
 25007   005F76  0137               	movlb	55	; () banked
 25008   005F78  97E0               	bcf	224,3,b	;volatile
 25009                           
 25010                           ;canlib/pic18f26k83/pic18f26k83_can.c: 132:         return;
 25011   005F7A  EF90  F030         	goto	i2l88
 25012   005F7E                     i2l87:
 25013                           
 25014                           ;canlib/pic18f26k83/pic18f26k83_can.c: 137:     if (PIR5bits.RXB0IF) {
 25015   005F7E  0139               	movlb	57	; () banked
 25016   005F80  A1A5               	btfss	165,0,b	;volatile
 25017   005F82  EFC5  F02F         	goto	i2u1269_41
 25018   005F86  EFC7  F02F         	goto	i2u1269_40
 25019   005F8A                     i2u1269_41:
 25020   005F8A  EF0E  F030         	goto	i2l89
 25021   005F8E                     i2u1269_40:
 25022   005F8E                     
 25023                           ; BSR set to: 57
 25024                           ;canlib/pic18f26k83/pic18f26k83_can.c: 138:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 139:         rcvd_msg.sid = (((uint16_t)RXB0SIDH) << 3) | (RXB0SID
      +                          L >> 5);
 25025   005F8E  006F FE08  F011    	movff	16258,??_can_handle_interrupt	;volatile
 25026   005F94  0E05               	movlw	5
 25027   005F96  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 25028   005F98                     i2u1270_45:
 25029   005F98  90D8               	bcf	status,0,c
 25030   005F9A  3211               	rrcf	??_can_handle_interrupt^0,f,c
 25031   005F9C  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 25032   005F9E  EFCC  F02F         	goto	i2u1270_45
 25033   005FA2  5011               	movf	??_can_handle_interrupt^0,w,c
 25034   005FA4  006F FE04  F013    	movff	16257,??_can_handle_interrupt+2	;volatile
 25035   005FAA  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 25036   005FAC  90D8               	bcf	status,0,c
 25037   005FAE  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25038   005FB0  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25039   005FB2  90D8               	bcf	status,0,c
 25040   005FB4  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25041   005FB6  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25042   005FB8  90D8               	bcf	status,0,c
 25043   005FBA  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25044   005FBC  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25045   005FBE  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 25046   005FC0  6E15               	movwf	can_handle_interrupt@rcvd_msg^0,c
 25047   005FC2  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 25048   005FC4  6E16               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
 25049                           
 25050                           ;canlib/pic18f26k83/pic18f26k83_can.c: 140:         rcvd_msg.data_len = RXB0DLCbits.DLC;
 25051   005FC6  5085               	movf	133,w,c	;volatile
 25052   005FC8  0B0F               	andlw	15
 25053   005FCA  6E17               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
 25054   005FCC                     
 25055                           ; BSR set to: 57
 25056                           ;canlib/pic18f26k83/pic18f26k83_can.c: 141:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB0D0, rcvd_msg.data_len);
 25057   005FCC  0E18               	movlw	low (can_handle_interrupt@rcvd_msg+3)
 25058   005FCE  6E01               	movwf	i2memcpy@d1^0,c
 25059   005FD0  6A02               	clrf	(i2memcpy@d1+1)^0,c
 25060   005FD2  0E86               	movlw	134
 25061   005FD4  6E03               	movwf	i2memcpy@s1^0,c
 25062   005FD6  0E3F               	movlw	63
 25063   005FD8  6E04               	movwf	(i2memcpy@s1+1)^0,c
 25064   005FDA  C017  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
 25065   005FDE  6A06               	clrf	(i2memcpy@n+1)^0,c
 25066   005FE0  EC98  F043         	call	i2_memcpy	;wreg free
 25067   005FE4                     
 25068                           ;canlib/pic18f26k83/pic18f26k83_can.c: 144:         if (((void*)0) != can_rcv_cb) {
 25069   005FE4  5046               	movf	_can_rcv_cb^0,w,c
 25070   005FE6  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 25071   005FE8  B4D8               	btfsc	status,2,c
 25072   005FEA  EFF9  F02F         	goto	i2u1271_41
 25073   005FEE  EFFB  F02F         	goto	i2u1271_40
 25074   005FF2                     i2u1271_41:
 25075   005FF2  EF09  F030         	goto	i2l11188
 25076   005FF6                     i2u1271_40:
 25077   005FF6                     
 25078                           ;canlib/pic18f26k83/pic18f26k83_can.c: 145:             can_rcv_cb(&rcvd_msg);
 25079   005FF6  0E15               	movlw	low can_handle_interrupt@rcvd_msg
 25080   005FF8  6E0A               	movwf	can_msg_handler@msg^0,c
 25081   005FFA  D802               	call	i2u1272_48
 25082   005FFC  EF09  F030         	goto	i2u1272_49
 25083   006000                     i2u1272_48:
 25084   006000  0005               	push	
 25085   006002  6EFA               	movwf	pclath,c
 25086   006004  5046               	movf	_can_rcv_cb^0,w,c
 25087   006006  6EFD               	movwf	tosl,c
 25088   006008  5047               	movf	(_can_rcv_cb+1)^0,w,c
 25089   00600A  6EFE               	movwf	tosh,c
 25090   00600C  6AFF               	clrf	tosu,c
 25091   00600E  50FA               	movf	pclath,w,c
 25092   006010  0012               	return		;indir
 25093   006012                     i2u1272_49:
 25094   006012                     i2l11188:
 25095                           
 25096                           ;canlib/pic18f26k83/pic18f26k83_can.c: 148:         PIR5bits.RXB0IF = 0;
 25097   006012  0139               	movlb	57	; () banked
 25098   006014  91A5               	bcf	165,0,b	;volatile
 25099   006016                     
 25100                           ; BSR set to: 57
 25101                           ;canlib/pic18f26k83/pic18f26k83_can.c: 149:         RXB0CONbits.RXFUL = 0;
 25102   006016  9E80               	bcf	128,7,c	;volatile
 25103   006018  EF90  F030         	goto	i2l88
 25104   00601C                     i2l89:
 25105                           
 25106                           ; BSR set to: 57
 25107   00601C  A3A5               	btfss	165,1,b	;volatile
 25108   00601E  EF13  F030         	goto	i2u1273_41
 25109   006022  EF15  F030         	goto	i2u1273_40
 25110   006026                     i2u1273_41:
 25111   006026  EF5E  F030         	goto	i2l92
 25112   00602A                     i2u1273_40:
 25113   00602A                     
 25114                           ; BSR set to: 57
 25115                           ;canlib/pic18f26k83/pic18f26k83_can.c: 153:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 154:         rcvd_msg.sid = (((uint16_t)RXB1SIDH) << 3) | (RXB1SID
      +                          L >> 5);
 25116   00602A  006D FFC8  F011    	movff	14322,??_can_handle_interrupt	;volatile
 25117   006030  0E05               	movlw	5
 25118   006032  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 25119   006034                     i2u1274_45:
 25120   006034  90D8               	bcf	status,0,c
 25121   006036  3211               	rrcf	??_can_handle_interrupt^0,f,c
 25122   006038  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 25123   00603A  EF1A  F030         	goto	i2u1274_45
 25124   00603E  5011               	movf	??_can_handle_interrupt^0,w,c
 25125   006040  006D FFC4  F013    	movff	14321,??_can_handle_interrupt+2	;volatile
 25126   006046  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 25127   006048  90D8               	bcf	status,0,c
 25128   00604A  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25129   00604C  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25130   00604E  90D8               	bcf	status,0,c
 25131   006050  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25132   006052  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25133   006054  90D8               	bcf	status,0,c
 25134   006056  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 25135   006058  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 25136   00605A  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 25137   00605C  6E20               	movwf	can_handle_interrupt@rcvd_msg_753^0,c
 25138   00605E  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 25139   006060  6E21               	movwf	(can_handle_interrupt@rcvd_msg_753+1)^0,c
 25140                           
 25141                           ;canlib/pic18f26k83/pic18f26k83_can.c: 155:         rcvd_msg.data_len = RXB1DLCbits.DLC;
 25142   006062  0137               	movlb	55	; () banked
 25143   006064  51F5               	movf	245,w,b	;volatile
 25144   006066  0B0F               	andlw	15
 25145   006068  6E22               	movwf	(can_handle_interrupt@rcvd_msg_753+2)^0,c
 25146   00606A                     
 25147                           ; BSR set to: 55
 25148                           ;canlib/pic18f26k83/pic18f26k83_can.c: 156:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB1D0, rcvd_msg.data_len);
 25149   00606A  0E23               	movlw	low (can_handle_interrupt@rcvd_msg_753+3)
 25150   00606C  6E01               	movwf	i2memcpy@d1^0,c
 25151   00606E  6A02               	clrf	(i2memcpy@d1+1)^0,c
 25152   006070  0EF6               	movlw	246
 25153   006072  6E03               	movwf	i2memcpy@s1^0,c
 25154   006074  0E37               	movlw	55
 25155   006076  6E04               	movwf	(i2memcpy@s1+1)^0,c
 25156   006078  C022  F005         	movff	can_handle_interrupt@rcvd_msg_753+2,i2memcpy@n
 25157   00607C  6A06               	clrf	(i2memcpy@n+1)^0,c
 25158   00607E  EC98  F043         	call	i2_memcpy	;wreg free
 25159   006082                     
 25160                           ;canlib/pic18f26k83/pic18f26k83_can.c: 159:         if (((void*)0) != can_rcv_cb) {
 25161   006082  5046               	movf	_can_rcv_cb^0,w,c
 25162   006084  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 25163   006086  B4D8               	btfsc	status,2,c
 25164   006088  EF48  F030         	goto	i2u1275_41
 25165   00608C  EF4A  F030         	goto	i2u1275_40
 25166   006090                     i2u1275_41:
 25167   006090  EF58  F030         	goto	i2l11204
 25168   006094                     i2u1275_40:
 25169   006094                     
 25170                           ;canlib/pic18f26k83/pic18f26k83_can.c: 160:             can_rcv_cb(&rcvd_msg);
 25171   006094  0E20               	movlw	low can_handle_interrupt@rcvd_msg_753
 25172   006096  6E0A               	movwf	can_msg_handler@msg^0,c
 25173   006098  D802               	call	i2u1276_48
 25174   00609A  EF58  F030         	goto	i2u1276_49
 25175   00609E                     i2u1276_48:
 25176   00609E  0005               	push	
 25177   0060A0  6EFA               	movwf	pclath,c
 25178   0060A2  5046               	movf	_can_rcv_cb^0,w,c
 25179   0060A4  6EFD               	movwf	tosl,c
 25180   0060A6  5047               	movf	(_can_rcv_cb+1)^0,w,c
 25181   0060A8  6EFE               	movwf	tosh,c
 25182   0060AA  6AFF               	clrf	tosu,c
 25183   0060AC  50FA               	movf	pclath,w,c
 25184   0060AE  0012               	return		;indir
 25185   0060B0                     i2u1276_49:
 25186   0060B0                     i2l11204:
 25187                           
 25188                           ;canlib/pic18f26k83/pic18f26k83_can.c: 163:         PIR5bits.RXB1IF = 0;
 25189   0060B0  0139               	movlb	57	; () banked
 25190   0060B2  93A5               	bcf	165,1,b	;volatile
 25191   0060B4                     
 25192                           ; BSR set to: 57
 25193                           ;canlib/pic18f26k83/pic18f26k83_can.c: 164:         RXB1CONbits.RXFUL = 0;
 25194   0060B4  0137               	movlb	55	; () banked
 25195   0060B6  9FF0               	bcf	240,7,b	;volatile
 25196                           
 25197                           ;canlib/pic18f26k83/pic18f26k83_can.c: 165:     }
 25198   0060B8  EF90  F030         	goto	i2l88
 25199   0060BC                     i2l92:
 25200                           
 25201                           ; BSR set to: 57
 25202   0060BC  A5A5               	btfss	165,2,b	;volatile
 25203   0060BE  EF63  F030         	goto	i2u1277_41
 25204   0060C2  EF65  F030         	goto	i2u1277_40
 25205   0060C6                     i2u1277_41:
 25206   0060C6  EF68  F030         	goto	i2l95
 25207   0060CA                     i2u1277_40:
 25208   0060CA                     
 25209                           ; BSR set to: 57
 25210                           ;canlib/pic18f26k83/pic18f26k83_can.c: 170:         PIR5bits.TXB0IF = 0;
 25211   0060CA  95A5               	bcf	165,2,b	;volatile
 25212                           
 25213                           ;canlib/pic18f26k83/pic18f26k83_can.c: 171:         return;
 25214   0060CC  EF90  F030         	goto	i2l88
 25215   0060D0                     i2l95:
 25216                           
 25217                           ; BSR set to: 57
 25218   0060D0  A7A5               	btfss	165,3,b	;volatile
 25219   0060D2  EF6D  F030         	goto	i2u1278_41
 25220   0060D6  EF6F  F030         	goto	i2u1278_40
 25221   0060DA                     i2u1278_41:
 25222   0060DA  EF72  F030         	goto	i2l97
 25223   0060DE                     i2u1278_40:
 25224   0060DE                     
 25225                           ; BSR set to: 57
 25226                           ;canlib/pic18f26k83/pic18f26k83_can.c: 173:         PIR5bits.TXB1IF = 0;
 25227   0060DE  97A5               	bcf	165,3,b	;volatile
 25228                           
 25229                           ;canlib/pic18f26k83/pic18f26k83_can.c: 174:         return;
 25230   0060E0  EF90  F030         	goto	i2l88
 25231   0060E4                     i2l97:
 25232                           
 25233                           ; BSR set to: 57
 25234   0060E4  A9A5               	btfss	165,4,b	;volatile
 25235   0060E6  EF77  F030         	goto	i2u1279_41
 25236   0060EA  EF79  F030         	goto	i2u1279_40
 25237   0060EE                     i2u1279_41:
 25238   0060EE  EF7C  F030         	goto	i2l99
 25239   0060F2                     i2u1279_40:
 25240   0060F2                     
 25241                           ; BSR set to: 57
 25242                           ;canlib/pic18f26k83/pic18f26k83_can.c: 176:         PIR5bits.TXB2IF = 0;
 25243   0060F2  99A5               	bcf	165,4,b	;volatile
 25244                           
 25245                           ;canlib/pic18f26k83/pic18f26k83_can.c: 177:         return;
 25246   0060F4  EF90  F030         	goto	i2l88
 25247   0060F8                     i2l99:
 25248                           
 25249                           ; BSR set to: 57
 25250   0060F8  AFA5               	btfss	165,7,b	;volatile
 25251   0060FA  EF81  F030         	goto	i2u1280_41
 25252   0060FE  EF83  F030         	goto	i2u1280_40
 25253   006102                     i2u1280_41:
 25254   006102  EF86  F030         	goto	i2l101
 25255   006106                     i2u1280_40:
 25256   006106                     
 25257                           ; BSR set to: 57
 25258                           ;canlib/pic18f26k83/pic18f26k83_can.c: 181:         PIR5bits.IRXIF = 0;
 25259   006106  9FA5               	bcf	165,7,b	;volatile
 25260                           
 25261                           ;canlib/pic18f26k83/pic18f26k83_can.c: 182:         return;
 25262   006108  EF90  F030         	goto	i2l88
 25263   00610C                     i2l101:
 25264                           
 25265                           ; BSR set to: 57
 25266   00610C  ABA5               	btfss	165,5,b	;volatile
 25267   00610E  EF8B  F030         	goto	i2u1281_41
 25268   006112  EF8D  F030         	goto	i2u1281_40
 25269   006116                     i2u1281_41:
 25270   006116  EF90  F030         	goto	i2l98
 25271   00611A                     i2u1281_40:
 25272   00611A                     
 25273                           ; BSR set to: 57
 25274                           ;canlib/pic18f26k83/pic18f26k83_can.c: 186:         PIR5bits.ERRIF = 0;
 25275   00611A  9BA5               	bcf	165,5,b	;volatile
 25276                           
 25277                           ;canlib/pic18f26k83/pic18f26k83_can.c: 187:         return;
 25278   00611C  EF90  F030         	goto	i2l88
 25279   006120                     i2l98:
 25280   006120                     i2l88:
 25281   006120  0012               	return		;funcret
 25282   006122                     __end_of_can_handle_interrupt:
 25283                           	callstack 0
 25284                           
 25285 ;; *************** function i2_memcpy *****************
 25286 ;; Defined at:
 25287 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 25288 ;; Parameters:    Size  Location     Type
 25289 ;;  d1              2    0[COMRAM] PTR void 
 25290 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 25291 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 25292 ;;  s1              2    2[COMRAM] PTR const void 
 25293 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 25294 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 25295 ;;  n               2    4[COMRAM] unsigned int 
 25296 ;; Auto vars:     Size  Location     Type
 25297 ;;  s               2    8[COMRAM] PTR const unsigned char 
 25298 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(100), SD_SendCmd@address(4), 
 25299 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 25300 ;;  d               2    6[COMRAM] PTR unsigned char 
 25301 ;;		 -> tx_pool(100), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 25302 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 25303 ;;  tmp             1   10[COMRAM] unsigned char 
 25304 ;; Return value:  Size  Location     Type
 25305 ;;                  2    0[COMRAM] PTR void 
 25306 ;; Registers used:
 25307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25308 ;; Tracked objects:
 25309 ;;		On entry : 0/0
 25310 ;;		On exit  : 0/0
 25311 ;;		Unchanged: 0/0
 25312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25313 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25314 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25316 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25317 ;;Total ram usage:       11 bytes
 25318 ;; Hardware stack levels used: 1
 25319 ;; This function calls:
 25320 ;;		Nothing
 25321 ;; This function is called by:
 25322 ;;		_can_handle_interrupt
 25323 ;; This function uses a non-reentrant model
 25324 ;;
 25325                           
 25326                           	psect	text95
 25327   008730                     __ptext95:
 25328                           	callstack 0
 25329   008730                     i2_memcpy:
 25330                           	callstack 14
 25331   008730  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 25332   008734  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 25333   008738  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 25334   00873C  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 25335   008740  EFB7  F043         	goto	i2l11102
 25336   008744                     i2l11094:
 25337   008744  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 25338   00874A  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 25339   008750  50DF               	movf	indf2,w,c
 25340   008752  6E0B               	movwf	i2memcpy@tmp^0,c
 25341   008754  4A09               	infsnz	i2memcpy@s^0,f,c
 25342   008756  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 25343   008758  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 25344   00875E  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 25345   008764  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 25346   00876A  4A07               	infsnz	i2memcpy@d^0,f,c
 25347   00876C  2A08               	incf	(i2memcpy@d+1)^0,f,c
 25348   00876E                     i2l11102:
 25349   00876E  0605               	decf	i2memcpy@n^0,f,c
 25350   008770  A0D8               	btfss	status,0,c
 25351   008772  0606               	decf	(i2memcpy@n+1)^0,f,c
 25352   008774  2805               	incf	i2memcpy@n^0,w,c
 25353   008776  E106               	bnz	i2u1259_41
 25354   008778  2806               	incf	(i2memcpy@n+1)^0,w,c
 25355   00877A  A4D8               	btfss	status,2,c
 25356   00877C  EFC2  F043         	goto	i2u1259_41
 25357   008780  EFC4  F043         	goto	i2u1259_40
 25358   008784                     i2u1259_41:
 25359   008784  EFA2  F043         	goto	i2l11094
 25360   008788                     i2u1259_40:
 25361   008788  0012               	return		;funcret
 25362   00878A                     __end_ofi2_memcpy:
 25363                           	callstack 0
 25364                           
 25365 ;; *************** function _can_msg_handler *****************
 25366 ;; Defined at:
 25367 ;;		line 175 in file "main.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;  msg             1    9[COMRAM] PTR const struct .
 25370 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;  dest_id         2   14[COMRAM] int 
 25373 ;;  msg_type        2   12[COMRAM] unsigned short 
 25374 ;;  cmd_type        2    0        int 
 25375 ;; Return value:  Size  Location     Type
 25376 ;;                  1    wreg      void 
 25377 ;; Registers used:
 25378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25379 ;; Tracked objects:
 25380 ;;		On entry : 0/0
 25381 ;;		On exit  : 0/0
 25382 ;;		Unchanged: 0/0
 25383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25385 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25387 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25388 ;;Total ram usage:        7 bytes
 25389 ;; Hardware stack levels used: 1
 25390 ;; Hardware stack levels required when called: 2
 25391 ;; This function calls:
 25392 ;;		_BLUE_LED_OFF
 25393 ;;		_BLUE_LED_ON
 25394 ;;		_GREEN_LED_OFF
 25395 ;;		_GREEN_LED_ON
 25396 ;;		_RED_LED_OFF
 25397 ;;		_RED_LED_ON
 25398 ;;		_get_board_unique_id
 25399 ;;		_get_message_type
 25400 ;;		_get_reset_board_id
 25401 ;; This function is called by:
 25402 ;;		_main
 25403 ;;		_can_handle_interrupt
 25404 ;; This function uses a non-reentrant model
 25405 ;;
 25406                           
 25407                           	psect	text96
 25408   007C52                     __ptext96:
 25409                           	callstack 0
 25410   007C52                     _can_msg_handler:
 25411                           	callstack 12
 25412   007C52                     
 25413                           ;main.c: 176:     seen_can_message = 1;
 25414   007C52  0E01               	movlw	1
 25415   007C54  6E48               	movwf	_seen_can_message^0,c	;volatile
 25416   007C56                     
 25417                           ;main.c: 177:     uint16_t msg_type = get_message_type(msg);
 25418   007C56  C00A  F001         	movff	can_msg_handler@msg,get_message_type@msg
 25419   007C5A  ECD4  F044         	call	_get_message_type	;wreg free
 25420   007C5E  C001  F00D         	movff	?_get_message_type,can_msg_handler@msg_type
 25421   007C62  C002  F00E         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
 25422   007C66                     
 25423                           ;main.c: 181:     if (get_board_unique_id(msg) == 0x0C) {
 25424   007C66  C00A  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
 25425   007C6A  ECEA  F045         	call	_get_board_unique_id	;wreg free
 25426   007C6E  0A0C               	xorlw	12
 25427   007C70  A4D8               	btfss	status,2,c
 25428   007C72  EF3D  F03E         	goto	i2u1256_41
 25429   007C76  EF3F  F03E         	goto	i2u1256_40
 25430   007C7A                     i2u1256_41:
 25431   007C7A  EF6F  F03E         	goto	i2l11082
 25432   007C7E                     i2u1256_40:
 25433   007C7E  EF90  F03E         	goto	i2l2192
 25434   007C82                     i2l11070:
 25435                           
 25436                           ;main.c: 187:             BLUE_LED_ON();
 25437   007C82  EC90  F046         	call	_BLUE_LED_ON	;wreg free
 25438                           
 25439                           ;main.c: 188:             GREEN_LED_ON();
 25440   007C86  EC8C  F046         	call	_GREEN_LED_ON	;wreg free
 25441                           
 25442                           ;main.c: 189:             RED_LED_ON();
 25443   007C8A  EC88  F046         	call	_RED_LED_ON	;wreg free
 25444                           
 25445                           ;main.c: 190:             break;
 25446   007C8E  EF90  F03E         	goto	i2l2192
 25447   007C92                     i2l11072:
 25448                           
 25449                           ;main.c: 193:             BLUE_LED_OFF();
 25450   007C92  EC92  F046         	call	_BLUE_LED_OFF	;wreg free
 25451                           
 25452                           ;main.c: 194:             GREEN_LED_OFF();
 25453   007C96  EC8E  F046         	call	_GREEN_LED_OFF	;wreg free
 25454                           
 25455                           ;main.c: 195:             RED_LED_OFF();
 25456   007C9A  EC8A  F046         	call	_RED_LED_OFF	;wreg free
 25457                           
 25458                           ;main.c: 196:             break;
 25459   007C9E  EF90  F03E         	goto	i2l2192
 25460   007CA2                     i2l11074:
 25461                           
 25462                           ;main.c: 199:             dest_id = get_reset_board_id(msg);
 25463   007CA2  C00A  F005         	movff	can_msg_handler@msg,get_reset_board_id@msg
 25464   007CA6  EC46  F044         	call	_get_reset_board_id	;wreg free
 25465   007CAA  C005  F00F         	movff	?_get_reset_board_id,can_msg_handler@dest_id
 25466   007CAE  C006  F010         	movff	?_get_reset_board_id+1,can_msg_handler@dest_id+1
 25467   007CB2                     
 25468                           ;main.c: 200:             if (dest_id == 0x0C || dest_id == 0) {
 25469   007CB2  0E0C               	movlw	12
 25470   007CB4  180F               	xorwf	can_msg_handler@dest_id^0,w,c
 25471   007CB6  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 25472   007CB8  B4D8               	btfsc	status,2,c
 25473   007CBA  EF61  F03E         	goto	i2u1257_41
 25474   007CBE  EF63  F03E         	goto	i2u1257_40
 25475   007CC2                     i2u1257_41:
 25476   007CC2  EF6C  F03E         	goto	i2l2200
 25477   007CC6                     i2u1257_40:
 25478   007CC6  500F               	movf	can_msg_handler@dest_id^0,w,c
 25479   007CC8  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 25480   007CCA  A4D8               	btfss	status,2,c
 25481   007CCC  EF6A  F03E         	goto	i2u1258_41
 25482   007CD0  EF6C  F03E         	goto	i2u1258_40
 25483   007CD4                     i2u1258_41:
 25484   007CD4  EF90  F03E         	goto	i2l2192
 25485   007CD8                     i2u1258_40:
 25486   007CD8                     i2l2200:
 25487   007CD8  00FF               	reset		;# 
 25488   007CDA  EF90  F03E         	goto	i2l2192
 25489   007CDE                     i2l11082:
 25490   007CDE  C00D  F00B         	movff	can_msg_handler@msg_type,??_can_msg_handler
 25491   007CE2  C00E  F00C         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
 25492                           
 25493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25494                           ; Switch size 1, requested type "simple"
 25495                           ; Number of cases is 2, Range of values is 1 to 7
 25496                           ; switch strategies available:
 25497                           ; Name         Instructions Cycles
 25498                           ; simple_byte            7     4 (average)
 25499                           ;	Chosen strategy is simple_byte
 25500   007CE6  500C               	movf	(??_can_msg_handler+1)^0,w,c
 25501   007CE8  0A01               	xorlw	1	; case 1
 25502   007CEA  B4D8               	btfsc	status,2,c
 25503   007CEC  EF7E  F03E         	goto	i2l17800
 25504   007CF0  0A06               	xorlw	6	; case 7
 25505   007CF2  B4D8               	btfsc	status,2,c
 25506   007CF4  EF85  F03E         	goto	i2l17802
 25507   007CF8  EF90  F03E         	goto	i2l2192
 25508   007CFC                     i2l17800:
 25509                           
 25510                           ; Switch size 1, requested type "simple"
 25511                           ; Number of cases is 1, Range of values is 96 to 96
 25512                           ; switch strategies available:
 25513                           ; Name         Instructions Cycles
 25514                           ; simple_byte            4     3 (average)
 25515                           ;	Chosen strategy is simple_byte
 25516   007CFC  500B               	movf	??_can_msg_handler^0,w,c
 25517   007CFE  0A60               	xorlw	96	; case 96
 25518   007D00  B4D8               	btfsc	status,2,c
 25519   007D02  EF51  F03E         	goto	i2l11074
 25520   007D06  EF90  F03E         	goto	i2l2192
 25521   007D0A                     i2l17802:
 25522                           
 25523                           ; Switch size 1, requested type "simple"
 25524                           ; Number of cases is 2, Range of values is 192 to 224
 25525                           ; switch strategies available:
 25526                           ; Name         Instructions Cycles
 25527                           ; simple_byte            7     4 (average)
 25528                           ;	Chosen strategy is simple_byte
 25529   007D0A  500B               	movf	??_can_msg_handler^0,w,c
 25530   007D0C  0AC0               	xorlw	192	; case 192
 25531   007D0E  B4D8               	btfsc	status,2,c
 25532   007D10  EF49  F03E         	goto	i2l11072
 25533   007D14  0A20               	xorlw	32	; case 224
 25534   007D16  B4D8               	btfsc	status,2,c
 25535   007D18  EF41  F03E         	goto	i2l11070
 25536   007D1C  EF90  F03E         	goto	i2l2192
 25537   007D20                     i2l2192:
 25538   007D20  0012               	return		;funcret
 25539   007D22                     __end_of_can_msg_handler:
 25540                           	callstack 0
 25541                           
 25542 ;; *************** function _get_reset_board_id *****************
 25543 ;; Defined at:
 25544 ;;		line 490 in file "canlib/can_common.c"
 25545 ;; Parameters:    Size  Location     Type
 25546 ;;  msg             1    4[COMRAM] PTR const struct .
 25547 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 25548 ;; Auto vars:     Size  Location     Type
 25549 ;;  msg_type        2    7[COMRAM] unsigned short 
 25550 ;; Return value:  Size  Location     Type
 25551 ;;                  2    4[COMRAM] int 
 25552 ;; Registers used:
 25553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25554 ;; Tracked objects:
 25555 ;;		On entry : 0/0
 25556 ;;		On exit  : 0/0
 25557 ;;		Unchanged: 0/0
 25558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25563 ;;Total ram usage:        5 bytes
 25564 ;; Hardware stack levels used: 1
 25565 ;; Hardware stack levels required when called: 1
 25566 ;; This function calls:
 25567 ;;		_get_message_type
 25568 ;; This function is called by:
 25569 ;;		_can_msg_handler
 25570 ;; This function uses a non-reentrant model
 25571 ;;
 25572                           
 25573                           	psect	text97
 25574   00888C                     __ptext97:
 25575                           	callstack 0
 25576   00888C                     _get_reset_board_id:
 25577                           	callstack 12
 25578   00888C                     
 25579                           ;canlib/can_common.c: 491:     if (!msg) { return -1; }
 25580   00888C  5005               	movf	get_reset_board_id@msg^0,w,c
 25581   00888E  A4D8               	btfss	status,2,c
 25582   008890  EF4C  F044         	goto	i2u1078_41
 25583   008894  EF4E  F044         	goto	i2u1078_40
 25584   008898                     i2u1078_41:
 25585   008898  EF52  F044         	goto	i2l9984
 25586   00889C                     i2u1078_40:
 25587   00889C                     i2l9982:
 25588   00889C  6805               	setf	?_get_reset_board_id^0,c
 25589   00889E  6806               	setf	(?_get_reset_board_id+1)^0,c
 25590   0088A0  EF6F  F044         	goto	i2l363
 25591   0088A4                     i2l9984:
 25592                           
 25593                           ;canlib/can_common.c: 493:     uint16_t msg_type = get_message_type(msg);
 25594   0088A4  C005  F001         	movff	get_reset_board_id@msg,get_message_type@msg
 25595   0088A8  ECD4  F044         	call	_get_message_type	;wreg free
 25596   0088AC  C001  F008         	movff	?_get_message_type,get_reset_board_id@msg_type
 25597   0088B0  C002  F009         	movff	?_get_message_type+1,get_reset_board_id@msg_type+1
 25598   0088B4                     
 25599                           ;canlib/can_common.c: 494:     if (msg_type == 0x160) {
 25600   0088B4  0E60               	movlw	96
 25601   0088B6  1808               	xorwf	get_reset_board_id@msg_type^0,w,c
 25602   0088B8  E106               	bnz	i2u1079_41
 25603   0088BA  0409               	decf	(get_reset_board_id@msg_type+1)^0,w,c
 25604   0088BC  A4D8               	btfss	status,2,c
 25605   0088BE  EF63  F044         	goto	i2u1079_41
 25606   0088C2  EF65  F044         	goto	i2u1079_40
 25607   0088C6                     i2u1079_41:
 25608   0088C6  EF4E  F044         	goto	i2l9982
 25609   0088CA                     i2u1079_40:
 25610   0088CA                     
 25611                           ;canlib/can_common.c: 495:         return msg->data[3];
 25612   0088CA  5005               	movf	get_reset_board_id@msg^0,w,c
 25613   0088CC  6ED9               	movwf	fsr2l,c
 25614   0088CE  6ADA               	clrf	fsr2h,c
 25615   0088D0  0E06               	movlw	6
 25616   0088D2  26D9               	addwf	fsr2l,f,c
 25617   0088D4  50DF               	movf	indf2,w,c
 25618   0088D6  6E07               	movwf	??_get_reset_board_id^0,c
 25619   0088D8  5007               	movf	??_get_reset_board_id^0,w,c
 25620   0088DA  6E05               	movwf	?_get_reset_board_id^0,c
 25621   0088DC  6A06               	clrf	(?_get_reset_board_id+1)^0,c
 25622   0088DE                     i2l363:
 25623   0088DE  0012               	return		;funcret
 25624   0088E0                     __end_of_get_reset_board_id:
 25625                           	callstack 0
 25626                           
 25627 ;; *************** function _get_message_type *****************
 25628 ;; Defined at:
 25629 ;;		line 584 in file "canlib/can_common.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;  msg             1    0[COMRAM] PTR const struct .
 25632 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 25633 ;; Auto vars:     Size  Location     Type
 25634 ;;		None
 25635 ;; Return value:  Size  Location     Type
 25636 ;;                  2    0[COMRAM] unsigned short 
 25637 ;; Registers used:
 25638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25639 ;; Tracked objects:
 25640 ;;		On entry : 0/0
 25641 ;;		On exit  : 0/0
 25642 ;;		Unchanged: 0/0
 25643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25648 ;;Total ram usage:        4 bytes
 25649 ;; Hardware stack levels used: 1
 25650 ;; This function calls:
 25651 ;;		Nothing
 25652 ;; This function is called by:
 25653 ;;		_get_reset_board_id
 25654 ;;		_can_msg_handler
 25655 ;;		_get_fill_info
 25656 ;;		_get_general_cmd_type
 25657 ;;		_get_actuator_id
 25658 ;;		_get_curr_actuator_state
 25659 ;;		_get_req_actuator_state
 25660 ;;		_get_req_actuator_state_analog
 25661 ;;		_get_curr_arm_state
 25662 ;;		_get_req_arm_state
 25663 ;;		_get_timestamp
 25664 ;;		_is_sensor_data
 25665 ;;		_get_imu_data
 25666 ;;		_get_state_est_data
 25667 ;;		_get_analog_data
 25668 ;;		_get_temp_data
 25669 ;;		_get_altitude_data
 25670 ;;		_get_pyro_voltage_data
 25671 ;;		_get_gps_time
 25672 ;;		_get_gps_lat
 25673 ;;		_get_gps_lon
 25674 ;;		_get_gps_alt
 25675 ;;		_get_gps_info
 25676 ;;		_get_state_est_calibration_msg
 25677 ;;		_message_debug_level
 25678 ;; This function uses a non-reentrant model
 25679 ;;
 25680                           
 25681                           	psect	text98
 25682   0089A8                     __ptext98:
 25683                           	callstack 0
 25684   0089A8                     _get_message_type:
 25685                           	callstack 12
 25686   0089A8                     
 25687                           ;canlib/can_common.c: 584: uint16_t get_message_type(const can_msg_t *msg);canlib/can_co
      +                          mmon.c: 585: {;canlib/can_common.c: 587:     if (!msg) { return 0; }
 25688   0089A8  5001               	movf	get_message_type@msg^0,w,c
 25689   0089AA  A4D8               	btfss	status,2,c
 25690   0089AC  EFDA  F044         	goto	i2u1004_41
 25691   0089B0  EFDC  F044         	goto	i2u1004_40
 25692   0089B4                     i2u1004_41:
 25693   0089B4  EFE2  F044         	goto	i2l9572
 25694   0089B8                     i2u1004_40:
 25695   0089B8  0E00               	movlw	0
 25696   0089BA  6E02               	movwf	(?_get_message_type+1)^0,c
 25697   0089BC  0E00               	movlw	0
 25698   0089BE  6E01               	movwf	?_get_message_type^0,c
 25699   0089C0  EFF1  F044         	goto	i2l416
 25700   0089C4                     i2l9572:
 25701                           
 25702                           ;canlib/can_common.c: 589:     return (msg->sid & 0x7E0);
 25703   0089C4  5001               	movf	get_message_type@msg^0,w,c
 25704   0089C6  6ED9               	movwf	fsr2l,c
 25705   0089C8  6ADA               	clrf	fsr2h,c
 25706   0089CA  006F FF78  F003    	movff	postinc2,??_get_message_type
 25707   0089D0  006F FF74  F004    	movff	postdec2,??_get_message_type+1
 25708   0089D6  0EE0               	movlw	224
 25709   0089D8  1403               	andwf	??_get_message_type^0,w,c
 25710   0089DA  6E01               	movwf	?_get_message_type^0,c
 25711   0089DC  0E07               	movlw	7
 25712   0089DE  1404               	andwf	(??_get_message_type+1)^0,w,c
 25713   0089E0  6E02               	movwf	(?_get_message_type+1)^0,c
 25714   0089E2                     i2l416:
 25715   0089E2  0012               	return		;funcret
 25716   0089E4                     __end_of_get_message_type:
 25717                           	callstack 0
 25718                           
 25719 ;; *************** function _get_board_unique_id *****************
 25720 ;; Defined at:
 25721 ;;		line 592 in file "canlib/can_common.c"
 25722 ;; Parameters:    Size  Location     Type
 25723 ;;  msg             1    0[COMRAM] PTR const struct .
 25724 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 25725 ;; Auto vars:     Size  Location     Type
 25726 ;;		None
 25727 ;; Return value:  Size  Location     Type
 25728 ;;                  1    wreg      unsigned char 
 25729 ;; Registers used:
 25730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25731 ;; Tracked objects:
 25732 ;;		On entry : 0/0
 25733 ;;		On exit  : 0/0
 25734 ;;		Unchanged: 0/0
 25735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25736 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25740 ;;Total ram usage:        1 bytes
 25741 ;; Hardware stack levels used: 1
 25742 ;; This function calls:
 25743 ;;		Nothing
 25744 ;; This function is called by:
 25745 ;;		_can_msg_handler
 25746 ;; This function uses a non-reentrant model
 25747 ;;
 25748                           
 25749                           	psect	text99
 25750   008BD4                     __ptext99:
 25751                           	callstack 0
 25752   008BD4                     _get_board_unique_id:
 25753                           	callstack 13
 25754   008BD4                     
 25755                           ;canlib/can_common.c: 592: uint8_t get_board_unique_id(const can_msg_t *msg);canlib/can_
      +                          common.c: 593: {;canlib/can_common.c: 595:     if (!msg) { return 0; }
 25756   008BD4  5001               	movf	get_board_unique_id@msg^0,w,c
 25757   008BD6  A4D8               	btfss	status,2,c
 25758   008BD8  EFF0  F045         	goto	i2u1080_41
 25759   008BDC  EFF2  F045         	goto	i2u1080_40
 25760   008BE0                     i2u1080_41:
 25761   008BE0  EFF5  F045         	goto	i2l10000
 25762   008BE4                     i2u1080_40:
 25763   008BE4  0E00               	movlw	0
 25764   008BE6  EFFA  F045         	goto	i2l420
 25765   008BEA                     i2l10000:
 25766                           
 25767                           ;canlib/can_common.c: 597:     return ((uint8_t) (msg->sid & 0x1F));
 25768   008BEA  5001               	movf	get_board_unique_id@msg^0,w,c
 25769   008BEC  6ED9               	movwf	fsr2l,c
 25770   008BEE  6ADA               	clrf	fsr2h,c
 25771   008BF0  50DF               	movf	indf2,w,c
 25772   008BF2  0B1F               	andlw	31
 25773   008BF4                     i2l420:
 25774   008BF4  0012               	return		;funcret
 25775   008BF6                     __end_of_get_board_unique_id:
 25776                           	callstack 0
 25777                           
 25778 ;; *************** function _RED_LED_ON *****************
 25779 ;; Defined at:
 25780 ;;		line 60 in file "./common.h"
 25781 ;; Parameters:    Size  Location     Type
 25782 ;;		None
 25783 ;; Auto vars:     Size  Location     Type
 25784 ;;		None
 25785 ;; Return value:  Size  Location     Type
 25786 ;;                  1    wreg      void 
 25787 ;; Registers used:
 25788 ;;		None
 25789 ;; Tracked objects:
 25790 ;;		On entry : 0/0
 25791 ;;		On exit  : 0/0
 25792 ;;		Unchanged: 0/0
 25793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25798 ;;Total ram usage:        0 bytes
 25799 ;; Hardware stack levels used: 1
 25800 ;; This function calls:
 25801 ;;		Nothing
 25802 ;; This function is called by:
 25803 ;;		_can_msg_handler
 25804 ;; This function uses a non-reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text100
 25808   008D10                     __ptext100:
 25809                           	callstack 0
 25810   008D10                     _RED_LED_ON:
 25811                           	callstack 13
 25812   008D10                     
 25813                           ;./common.h: 61:     LATA4 = 0;
 25814   008D10  98BA               	bcf	16314,4,c	;volatile
 25815   008D12  0012               	return		;funcret
 25816   008D14                     __end_of_RED_LED_ON:
 25817                           	callstack 0
 25818                           
 25819 ;; *************** function _RED_LED_OFF *****************
 25820 ;; Defined at:
 25821 ;;		line 64 in file "./common.h"
 25822 ;; Parameters:    Size  Location     Type
 25823 ;;		None
 25824 ;; Auto vars:     Size  Location     Type
 25825 ;;		None
 25826 ;; Return value:  Size  Location     Type
 25827 ;;                  1    wreg      void 
 25828 ;; Registers used:
 25829 ;;		None
 25830 ;; Tracked objects:
 25831 ;;		On entry : 0/0
 25832 ;;		On exit  : 0/0
 25833 ;;		Unchanged: 0/0
 25834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25839 ;;Total ram usage:        0 bytes
 25840 ;; Hardware stack levels used: 1
 25841 ;; This function calls:
 25842 ;;		Nothing
 25843 ;; This function is called by:
 25844 ;;		_can_msg_handler
 25845 ;; This function uses a non-reentrant model
 25846 ;;
 25847                           
 25848                           	psect	text101
 25849   008D14                     __ptext101:
 25850                           	callstack 0
 25851   008D14                     _RED_LED_OFF:
 25852                           	callstack 13
 25853   008D14                     
 25854                           ;./common.h: 65:     LATA4 = 1;
 25855   008D14  88BA               	bsf	16314,4,c	;volatile
 25856   008D16  0012               	return		;funcret
 25857   008D18                     __end_of_RED_LED_OFF:
 25858                           	callstack 0
 25859                           
 25860 ;; *************** function _GREEN_LED_ON *****************
 25861 ;; Defined at:
 25862 ;;		line 48 in file "./common.h"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;		None
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;		None
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      void 
 25869 ;; Registers used:
 25870 ;;		None
 25871 ;; Tracked objects:
 25872 ;;		On entry : 0/0
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;Total ram usage:        0 bytes
 25881 ;; Hardware stack levels used: 1
 25882 ;; This function calls:
 25883 ;;		Nothing
 25884 ;; This function is called by:
 25885 ;;		_can_msg_handler
 25886 ;; This function uses a non-reentrant model
 25887 ;;
 25888                           
 25889                           	psect	text102
 25890   008D18                     __ptext102:
 25891                           	callstack 0
 25892   008D18                     _GREEN_LED_ON:
 25893                           	callstack 13
 25894   008D18                     
 25895                           ;./common.h: 49:     LATA3 = 0;
 25896   008D18  96BA               	bcf	16314,3,c	;volatile
 25897   008D1A  0012               	return		;funcret
 25898   008D1C                     __end_of_GREEN_LED_ON:
 25899                           	callstack 0
 25900                           
 25901 ;; *************** function _GREEN_LED_OFF *****************
 25902 ;; Defined at:
 25903 ;;		line 52 in file "./common.h"
 25904 ;; Parameters:    Size  Location     Type
 25905 ;;		None
 25906 ;; Auto vars:     Size  Location     Type
 25907 ;;		None
 25908 ;; Return value:  Size  Location     Type
 25909 ;;                  1    wreg      void 
 25910 ;; Registers used:
 25911 ;;		None
 25912 ;; Tracked objects:
 25913 ;;		On entry : 0/0
 25914 ;;		On exit  : 0/0
 25915 ;;		Unchanged: 0/0
 25916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25921 ;;Total ram usage:        0 bytes
 25922 ;; Hardware stack levels used: 1
 25923 ;; This function calls:
 25924 ;;		Nothing
 25925 ;; This function is called by:
 25926 ;;		_can_msg_handler
 25927 ;; This function uses a non-reentrant model
 25928 ;;
 25929                           
 25930                           	psect	text103
 25931   008D1C                     __ptext103:
 25932                           	callstack 0
 25933   008D1C                     _GREEN_LED_OFF:
 25934                           	callstack 13
 25935   008D1C                     
 25936                           ;./common.h: 53:     LATA3 = 1;
 25937   008D1C  86BA               	bsf	16314,3,c	;volatile
 25938   008D1E  0012               	return		;funcret
 25939   008D20                     __end_of_GREEN_LED_OFF:
 25940                           	callstack 0
 25941                           
 25942 ;; *************** function _BLUE_LED_ON *****************
 25943 ;; Defined at:
 25944 ;;		line 36 in file "./common.h"
 25945 ;; Parameters:    Size  Location     Type
 25946 ;;		None
 25947 ;; Auto vars:     Size  Location     Type
 25948 ;;		None
 25949 ;; Return value:  Size  Location     Type
 25950 ;;                  1    wreg      void 
 25951 ;; Registers used:
 25952 ;;		None
 25953 ;; Tracked objects:
 25954 ;;		On entry : 0/0
 25955 ;;		On exit  : 0/0
 25956 ;;		Unchanged: 0/0
 25957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25962 ;;Total ram usage:        0 bytes
 25963 ;; Hardware stack levels used: 1
 25964 ;; This function calls:
 25965 ;;		Nothing
 25966 ;; This function is called by:
 25967 ;;		_can_msg_handler
 25968 ;; This function uses a non-reentrant model
 25969 ;;
 25970                           
 25971                           	psect	text104
 25972   008D20                     __ptext104:
 25973                           	callstack 0
 25974   008D20                     _BLUE_LED_ON:
 25975                           	callstack 13
 25976   008D20                     
 25977                           ;./common.h: 37:     LATA2 = 0;
 25978   008D20  94BA               	bcf	16314,2,c	;volatile
 25979   008D22  0012               	return		;funcret
 25980   008D24                     __end_of_BLUE_LED_ON:
 25981                           	callstack 0
 25982                           
 25983 ;; *************** function _BLUE_LED_OFF *****************
 25984 ;; Defined at:
 25985 ;;		line 40 in file "./common.h"
 25986 ;; Parameters:    Size  Location     Type
 25987 ;;		None
 25988 ;; Auto vars:     Size  Location     Type
 25989 ;;		None
 25990 ;; Return value:  Size  Location     Type
 25991 ;;                  1    wreg      void 
 25992 ;; Registers used:
 25993 ;;		None
 25994 ;; Tracked objects:
 25995 ;;		On entry : 0/0
 25996 ;;		On exit  : 0/0
 25997 ;;		Unchanged: 0/0
 25998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26003 ;;Total ram usage:        0 bytes
 26004 ;; Hardware stack levels used: 1
 26005 ;; This function calls:
 26006 ;;		Nothing
 26007 ;; This function is called by:
 26008 ;;		_can_msg_handler
 26009 ;; This function uses a non-reentrant model
 26010 ;;
 26011                           
 26012                           	psect	text105
 26013   008D24                     __ptext105:
 26014                           	callstack 0
 26015   008D24                     _BLUE_LED_OFF:
 26016                           	callstack 13
 26017   008D24                     
 26018                           ;./common.h: 41:     LATA2 = 1;
 26019   008D24  84BA               	bsf	16314,2,c	;volatile
 26020   008D26  0012               	return		;funcret
 26021   008D28                     __end_of_BLUE_LED_OFF:
 26022                           	callstack 0
 26023                           
 26024                           ;
 26025                           ; H/W Interrupt Vector Table @ 0x8
 26026                           ;
 26027                           
 26028                           	psect	ivt0x8
 26029   000008                     __pivt0x8:
 26030                           	callstack 0
 26031   000008                     ivt0x8_base:
 26032                           	callstack 0
 26033                           
 26034                           ; high-priority vector
 26035   000008  EFF1  F043         	goto	_interrupt_handler
 26036   000018                     	org	16
 26037                           
 26038                           ; low-priority vector
 26039   000018  00FF               	reset	
 26040                           
 26041                           	psect	rparam
 26042   000000                     
 26043                           	psect	config
 26044                           
 26045                           ;Config register CONFIG1L @ 0x300000
 26046                           ;	External Oscillator Selection
 26047                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 26048                           ;	Reset Oscillator Selection
 26049                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 26050   300000                     	org	3145728
 26051   300000  FA                 	db	250
 26052                           
 26053                           ;Config register CONFIG1H @ 0x300001
 26054                           ;	Clock out Enable bit
 26055                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 26056                           ;	PRLOCKED One-Way Set Enable bit
 26057                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 26058                           ;	Clock Switch Enable bit
 26059                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 26060                           ;	Fail-Safe Clock Monitor Enable bit
 26061                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 26062   300001                     	org	3145729
 26063   300001  FF                 	db	255
 26064                           
 26065                           ;Config register CONFIG2L @ 0x300002
 26066                           ;	MCLR Enable bit
 26067                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 26068                           ;	Power-up timer selection bits
 26069                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 26070                           ;	Multi-vector enable bit
 26071                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 26072                           ;	IVTLOCK bit One-way set enable bit
 26073                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 26074                           ;	Low Power BOR Enable bit
 26075                           ;	LPBOREN = OFF, ULPBOR disabled
 26076                           ;	Brown-out Reset Enable bits
 26077                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 26078   300002                     	org	3145730
 26079   300002  F7                 	db	247
 26080                           
 26081                           ;Config register CONFIG2H @ 0x300003
 26082                           ;	Brown-out Reset Voltage Selection bits
 26083                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 26084                           ;	ZCD Disable bit
 26085                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 26086                           ;	PPSLOCK bit One-Way Set Enable bit
 26087                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 26088                           ;	Stack Full/Underflow Reset Enable bit
 26089                           ;	STVREN = ON, Stack full/underflow will cause Reset
 26090                           ;	Debugger Enable bit
 26091                           ;	DEBUG = OFF, Background debugger disabled
 26092                           ;	Extended Instruction Set Enable bit
 26093                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 26094   300003                     	org	3145731
 26095   300003  FF                 	db	255
 26096                           
 26097                           ;Config register CONFIG3L @ 0x300004
 26098                           ;	WDT Period selection bits
 26099                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 26100                           ;	WDT operating mode
 26101                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 26102   300004                     	org	3145732
 26103   300004  9F                 	db	159
 26104                           
 26105                           ;Config register CONFIG3H @ 0x300005
 26106                           ;	WDT Window Select bits
 26107                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 26108                           ;	WDT input clock selector
 26109                           ;	WDTCCS = SC, Software Control
 26110   300005                     	org	3145733
 26111   300005  FF                 	db	255
 26112                           
 26113                           ;Config register CONFIG4L @ 0x300006
 26114                           ;	Boot Block Size selection bits
 26115                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 26116                           ;	Boot Block enable bit
 26117                           ;	BBEN = OFF, Boot block disabled
 26118                           ;	Storage Area Flash enable bit
 26119                           ;	SAFEN = OFF, SAF disabled
 26120                           ;	Application Block write protection bit
 26121                           ;	WRTAPP = OFF, Application Block not write protected
 26122   300006                     	org	3145734
 26123   300006  FF                 	db	255
 26124                           
 26125                           ;Config register CONFIG4H @ 0x300007
 26126                           ;	Boot Block Write Protection bit
 26127                           ;	WRTB = OFF, Boot Block not write-protected
 26128                           ;	Configuration Register Write Protection bit
 26129                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 26130                           ;	Data EEPROM Write Protection bit
 26131                           ;	WRTD = OFF, Data EEPROM not write-protected
 26132                           ;	SAF Write protection bit
 26133                           ;	WRTSAF = OFF, SAF not Write Protected
 26134                           ;	Low Voltage Programming Enable bit
 26135                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 26136   300007                     	org	3145735
 26137   300007  FF                 	db	255
 26138                           
 26139                           ;Config register CONFIG5L @ 0x300008
 26140                           ;	PFM and Data EEPROM Code Protection bit
 26141                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 26142   300008                     	org	3145736
 26143   300008  FF                 	db	255
 26144                           
 26145                           ;Config register CONFIG5H @ 0x300009
 26146                           ;	unspecified, using default values
 26147   300009                     	org	3145737
 26148   300009  FF                 	db	255
 26149                           tosu	equ	0x3FFF
 26150                           tosh	equ	0x3FFE
 26151                           tosl	equ	0x3FFD
 26152                           stkptr	equ	0x3FFC
 26153                           pclatu	equ	0x3FFB
 26154                           pclath	equ	0x3FFA
 26155                           pcl	equ	0x3FF9
 26156                           tblptru	equ	0x3FF8
 26157                           tblptrh	equ	0x3FF7
 26158                           tblptrl	equ	0x3FF6
 26159                           tablat	equ	0x3FF5
 26160                           prodh	equ	0x3FF4
 26161                           prodl	equ	0x3FF3
 26162                           indf0	equ	0x3FEF
 26163                           postinc0	equ	0x3FEE
 26164                           postdec0	equ	0x3FED
 26165                           preinc0	equ	0x3FEC
 26166                           plusw0	equ	0x3FEB
 26167                           fsr0h	equ	0x3FEA
 26168                           fsr0l	equ	0x3FE9
 26169                           wreg	equ	0x3FE8
 26170                           indf1	equ	0x3FE7
 26171                           postinc1	equ	0x3FE6
 26172                           postdec1	equ	0x3FE5
 26173                           preinc1	equ	0x3FE4
 26174                           plusw1	equ	0x3FE3
 26175                           fsr1h	equ	0x3FE2
 26176                           fsr1l	equ	0x3FE1
 26177                           bsr	equ	0x3FE0
 26178                           indf2	equ	0x3FDF
 26179                           postinc2	equ	0x3FDE
 26180                           postdec2	equ	0x3FDD
 26181                           preinc2	equ	0x3FDC
 26182                           plusw2	equ	0x3FDB
 26183                           fsr2h	equ	0x3FDA
 26184                           fsr2l	equ	0x3FD9
 26185                           status	equ	0x3FD8

Data Sizes:
    Strings     46
    Constant    263
    Data        9
    BSS         1282
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      87
    BANK0           160    160     160
    BANK1           256    179     218
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    build_board_stat_msg@error_data	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_msg_handler@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_send@message	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    can_send_fp$0	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK1[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> bw(BANK1[2]), putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 

    FatFs@ff$F2407	PTR struct .[1] size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_mount@path(BANK0[2]), f_open@path(BANK1[2]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_chdir@fs(COMRAM[2]), f_mount@fs(BANK0[2]), f_open@fs(BANK1[2]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_board_unique_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 
		 -> f_open@path(BANK1[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_11(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_message_type@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    get_reset_board_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    i2c_read@data	PTR unsigned char  size(1) Largest target is 9
		 -> i2c_read_reg16@data(COMRAM[2]), i2c_read_reg8@data(BANK0[1]), read_flow_sensor_data@data(COMRAM[9]), 

    i2c_read_reg8@value	PTR unsigned char  size(2) Largest target is 4095
		 -> data_ready@status(COMRAM[1]), fxls_get_prod_rev@res(BANK0[1]), fxls_get_whoami@res(BANK0[1]), fxls_init@buf_config1(BANK0[1]), 
		 -> fxls_init@int_en(BANK0[1]), fxls_init@int_pin_sel(BANK0[1]), fxls_init@sens_config1(BANK0[1]), fxls_init@sens_config2(BANK0[1]), 
		 -> fxls_init@sens_config3(BANK0[1]), fxls_init@sys_mode(BANK0[1]), fxls_read_accel_data@x_lsb(COMRAM[1]), fxls_read_accel_data@x_msb(COMRAM[1]), 
		 -> fxls_read_accel_data@y_lsb(COMRAM[1]), fxls_read_accel_data@y_msb(COMRAM[1]), fxls_read_accel_data@z_lsb(COMRAM[1]), fxls_read_accel_data@z_msb(COMRAM[1]), 
		 -> RAM(DATA[4095]), 

    i2c_write@data	PTR const unsigned char  size(1) Largest target is 3
		 -> i2c_read_reg16@reg(COMRAM[1]), i2c_read_reg8@reg(BANK0[1]), i2c_write_reg16@data(COMRAM[3]), i2c_write_reg8@data(BANK0[2]), 
		 -> read_flow_sensor_data@start_cmd(COMRAM[2]), read_flow_sensor_data@stop_cmd(COMRAM[2]), 

    info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), pb$fp(COMRAM[3]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    ioInfo$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[100]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 100
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[100]), txb_heartbeat@msg_sent(COMRAM[11]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S1056$0$0	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), txb_heartbeat@msg_sent(COMRAM[11]), 

    S1056$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1056$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2136$3$0	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    S2136$4$0	PTR void  size(2) Largest target is 0

    S2136$5$0	PTR void  size(2) Largest target is 0

    S2136$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S2136$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S2136$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S2136$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S2136$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S2136$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    S2136$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S2136$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S2367$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2374$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2383$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2393$fp	PTR struct . size(2) Largest target is 0

    S3656SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    S978$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorRead@info(BANK0[13]), 

    SD_SPI_AsyncReadTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorWrite@info(BANK0[13]), 

    SD_SPI_AsyncWriteTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), NULL(NULL[0]), 

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[100]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(COMRAM[11]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@buf(BANK1[4]), STR_9(CODE[12]), 
		 -> NULL(NULL[0]), 

    spiMaster$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    spiMaster$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK2[100]), 

    validate$3131	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK0[2]), f_read@fs(COMRAM[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK1[2]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_reset_board_id
    _get_reset_board_id->_get_message_type

Critical Paths under _main in BANK0

    _txb_init->_srb_init
    _srb_init->___lwdiv
    _f_write->_create_chain
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _ld_clust->_ld_word
    _dir_find->_dir_next
    _create_name->_mem_set
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _send_status_err->_build_board_stat_msg
    _can_send->_memcpy
    _build_board_stat_msg->_millis
    _fxls_init->_i2c_read_reg8
    _i2c_write_reg8->_i2c_write
    _fxls_get_whoami->_i2c_read_reg8
    _fxls_get_prod_rev->_i2c_read_reg8
    _i2c_read_reg8->_i2c_read
    _i2c_read_reg8->_i2c_write
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_send_status_ok
    _send_status_ok->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0 1621117
                                            164 BANK1     15    15      0
                    _ADCC_Initialize
                 _SET_ACCEL_I2C_ADDR
                  _SYSTEM_Initialize
         _can_generate_timing_params
                           _can_init
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
                  _fxls_get_prod_rev
                    _fxls_get_whoami
                          _fxls_init
                           _i2c_init
                             _millis
                    _send_status_err
                     _send_status_ok
                        _timer0_init
                           _txb_init
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    1904
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1420
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      19    19      0  764816
                                            145 BANK1     19    19      0
                    _BLUE_LED_TOGGLE
               _build_board_stat_msg
                           _can_send
                            _f_close
                             _f_open
                            _f_write
                             _millis
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8   87836
                                             23 BANK1     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5  602578
                                             65 BANK1     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10   57970
                                            148 BANK0     10     0     10
                                              0 BANK1     15    15      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4  209880
                                             51 BANK1     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2060
                                              7 BANK0     12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2  170784
                                            158 BANK0      2     2      0
                                             45 BANK1      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         22    18      4    4355
                                              8 BANK0     22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     307
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2  195407
                                             57 BANK1      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    1008
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4  169739
                                             45 BANK1     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             30    24      6   31380
                                            141 BANK0     16    10      6
                                              0 BANK1     10    10      0
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            30    26      4  115254
                                            154 BANK0      4     0      4
                                             23 BANK1     22    22      0
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (6) _dir_clear                                           18    12      6   24662
                                            104 BANK0     18    12      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (3) _clst2sect                                           12     6      6    2234
                                             12 BANK0     12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        29    23      6   59336
                                            148 BANK0      6     0      6
                                              0 BANK1     23    23      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             33    23     10   29410
                                            115 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6   27404
                                            115 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_close                                              5     3      2   65928
                                            122 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                              11     9      2   64396
                                            115 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4    1147
                                              2 BANK0     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   25589
                                            104 BANK0     11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _st_dword                                             6     0      6    1889
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _mem_set                                              8     2      6    1750
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                           5     2      3     245
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    1728
                                              4 BANK0      9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (5) _st_word                                              4     0      4    1033
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BLUE_LED_TOGGLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_err                                     11    11      0    8091
                                             23 BANK0     11    11      0
                     _RED_LED_TOGGLE
               _build_board_stat_msg
                           _can_send
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _can_send                                             4     2      2    2890
                                             11 BANK0      4     2      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5039
                                              8 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3606
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RED_LED_TOGGLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fxls_init                                           10    10      0    9167
                                             12 BANK0     10    10      0
                           _i2c_init
                      _i2c_read_reg8
                     _i2c_write_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_write_reg8                                       5     3      2    2891
                                              6 BANK0      5     3      2
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _fxls_get_whoami                                      1     1      0    5804
                                             12 BANK0      1     1      0
                           _i2c_init
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _fxls_get_prod_rev                                    1     1      0    5804
                                             12 BANK0      1     1      0
                           _i2c_init
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_read_reg8                                        6     3      3    5705
                                              6 BANK0      6     3      3
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            6     4      2    1461
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             6     4      2     921
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5   67514
                                            135 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   65606
                                            122 BANK0     13     8      5
                                              0 BANK1     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1250
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     892
                                              0 BANK0     13    11      2
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          2     2      0      74
                                              0 BANK0      2     2      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                      2     2      0    7954
                                             84 BANK0      2     2      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_MediaInitialize                              50    50      0    7883
                                             34 BANK0     50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     996
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_DelayMilliseconds                             5     5      0      96
                                              1 BANK0      5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (4) _check_fs                                             7     1      6   25395
                                            115 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   22470
                                            104 BANK0     11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2   10333
                                             85 BANK0     19    17      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8    9623
                                             75 BANK0     10     2      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorWrite                                  27    19      8    7299
                                             48 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncWriteTasks                              14    13      1    6165
                                             34 BANK0     14    13      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           10     2      8    9115
                                             72 BANK0     10     2      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorRead                                   27    19      8    7601
                                             45 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncReadTasks                               11    10      1    6479
                                             34 BANK0     11    10      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     407
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeBlock                                   6     2      4     390
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SD_SendCmd                                          23    18      5    5084
                                             11 BANK0     23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6    2428
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SDSLOW_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SDFAST_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (6) _SPI1_Open                                            2     2      0     155
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6    1045
                                              0 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1210
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     541
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6     862
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_ACCEL_I2C_ADDR                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _interrupt_handler                                   2     2      0    4912
                                             42 COMRAM     2     2      0
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (16) _timer0_handle_interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _can_handle_interrupt                               26    26      0    4912
                                             16 COMRAM    26    26      0
                                NULL *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (17) i2_memcpy                                           11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (17) _can_msg_handler                                     9     8      1    4415
                                              9 COMRAM     7     6      1
                       _BLUE_LED_OFF
                        _BLUE_LED_ON
                      _GREEN_LED_OFF
                       _GREEN_LED_ON
                        _RED_LED_OFF
                         _RED_LED_ON
                _get_board_unique_id
                   _get_message_type
                 _get_reset_board_id
 ---------------------------------------------------------------------------------
 (18) _get_reset_board_id                                  5     3      2    2109
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (19) _get_message_type                                    4     2      2    1944
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) _get_board_unique_id                                 1     0      1     120
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (18) _RED_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _RED_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_ON                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_OFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_Initialize
   _SET_ACCEL_I2C_ADDR
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _can_generate_timing_params
   _can_init
   _f_close
     _f_sync
       _disk_write
         _SD_SPI_SectorWrite
           _SDFAST_open *
             _SPI1_Open
           _SDSLOW_open *
             _SPI1_Open
           _SD_SPI_AsyncWriteTasks *
             _SD_SendCmd
               _SPI1_ExchangeByte *
               _memcpy *
             _SPI1_ExchangeBlock *
             _SPI1_ExchangeByte *
           _SPI1_Close *
       _move_window
         _disk_read
           _SD_SPI_SectorRead
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_AsyncReadTasks *
               _SD_SendCmd
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
               _memset *
             _SPI1_Close *
         _sync_window
           _disk_write
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
         _disk_write
         _mem_set
         _st_dword
         _st_word
         _sync_window
       _validate
         _disk_status
           _SD_SPI_IsMediaInitialized
           _SD_SPI_IsMediaPresent
           _SD_SPI_IsWriteProtected
     _validate
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _ld_word
         _mem_cmp
         _move_window
       _disk_initialize
         _SD_SPI_MediaInitialize
           _SDFAST_open *
           _SDSLOW_open *
           _SD_SPI_DelayMilliseconds *
             _SPI1_ExchangeByte *
           _SD_SendCmd *
           _SPI1_Close *
           _SPI1_ExchangeByte *
           ___lmul *
       _disk_status
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
     _get_ldnumber
   _f_open
     _clst2sect
       ___lmul
     _dir_register
       _dir_alloc
         _dir_next
           _clst2sect
           _create_chain
             _get_fat
               _ld_dword
               _ld_word
               _move_window
             _put_fat
               _ld_dword
               _move_window
               _st_dword
               _st_word
           _dir_clear
             _clst2sect
             _disk_write
             _mem_set
             _sync_window
           _get_fat
         _dir_sdi
           _clst2sect
           _get_fat
         _move_window
       _mem_cpy
       _mem_set
       _move_window
     _disk_read
     _find_volume
     _follow_path
       _create_name
         _chk_chr
         _dbc_1st
         _dbc_2nd
         _mem_set
       _dir_find
         _dir_next
         _dir_sdi
         _mem_cmp
         _move_window
       _dir_sdi
       _ld_clust
         _ld_word
     _get_fat
     _ld_clust
     _ld_dword
     _mem_set
     _move_window
     _remove_chain
       _get_fat
       _put_fat
     _st_clust
     _st_dword
   _f_write
     _clst2sect
     _create_chain
     _disk_read
     _disk_write
     _mem_cpy
     _validate
   _fxls_get_prod_rev
     _i2c_init
     _i2c_read_reg8
       _i2c_read
       _i2c_write
   _fxls_get_whoami
     _i2c_init
     _i2c_read_reg8
   _fxls_init
     _i2c_init
     _i2c_read_reg8
     _i2c_write_reg8
       _i2c_write
   _i2c_init
   _millis
   _send_status_err
     _RED_LED_TOGGLE
     _build_board_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _can_send
       _memcpy
     _millis
   _send_status_ok
     _BLUE_LED_TOGGLE
     _build_board_stat_msg
     _can_send
     _f_close
     _f_open
     _f_write
     _millis
   _timer0_init
   _txb_init
     _srb_init
       ___lwdiv

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     NULL(Fake) *
     _can_msg_handler *
       _BLUE_LED_OFF
       _BLUE_LED_ON
       _GREEN_LED_OFF
       _GREEN_LED_ON
       _RED_LED_OFF
       _RED_LED_ON
       _get_board_unique_id
       _get_message_type
       _get_reset_board_id
         _get_message_type
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     455      81       27.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhlh    1F7      0       0      54        0.0%
BITBIGSFRlhhhll    19C      0       0      72        0.0%
BITBIGSFRlhhhlh    162      0       0      44        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      DA       7       85.2%
BITBIGSFRlhl        B2      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhhhlh     80      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      57       1       91.6%
BITBIGSFRlhhhlh     5B      0       0      56        0.0%
BITBIGSFRlhhhlh     4D      0       0      49        0.0%
BITBIGSFRlhhhlh     31      0       0      64        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhlh     2A      0       0      61        0.0%
BITBIGSFRlhhhlh     29      0       0      53        0.0%
BITBIGSFRhhll       26      0       0      39        0.0%
BITBIGSFRlhhhll     22      0       0      76        0.0%
BITBIGSFRlhhhlh     1C      0       0      58        0.0%
BITBIGSFRlhhhlh     1A      0       0      68        0.0%
BITBIGSFRlhhhlh     11      0       0      67        0.0%
BITBIGSFRhhlhh       D      0       0      37        0.0%
BITBIGSFRlhhhlh      B      0       0      55        0.0%
BITBIGSFRlhhhlh      B      0       0      60        0.0%
BITBIGSFRlhhhlh      B      0       0      59        0.0%
BITBIGSFRlhhhlh      B      0       0      70        0.0%
BITBIGSFRlhhhll      9      0       0      74        0.0%
BITBIGSFRlhhhhh      7      0       0      40        0.0%
BITBIGSFRhhlhl       5      0       0      38        0.0%
BITBIGSFRlhhhlh      4      0       0      47        0.0%
BITBIGSFRlhhhlh      2      0       0      50        0.0%
BITBIGSFRlhhhlh      2      0       0      51        0.0%
BITBIGSFRlhhhlh      2      0       0      57        0.0%
BITBIGSFRlhhhll      2      0       0      73        0.0%
BITBIGSFRlhhhll      2      0       0      75        0.0%
BITBIGSFRlhhhhl      2      0       0      41        0.0%
BITBIGSFRlhhl        2      0       0      77        0.0%
BITBIGSFRll          2      0       0      79        0.0%
BITBIGSFRlhhhlh      1      0       0      63        0.0%
BITBIGSFRlhhhlh      1      0       0      48        0.0%
BITBIGSFRlhhhlh      1      0       0      45        0.0%
BITBIGSFRlhhhlh      1      0       0      46        0.0%
BITBIGSFRlhhhlh      1      0       0      52        0.0%
BITBIGSFRlhhhlh      1      0       0      62        0.0%
BITBIGSFRlhhhlh      1      0       0      65        0.0%
BITBIGSFRlhhhlh      1      0       0      66        0.0%
BITBIGSFRlhhhlh      1      0       0      69        0.0%
BITBIGSFRlhhhlh      1      0       0      43        0.0%
BITBIGSFRlhhhll      1      0       0      71        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     235      80        0.0%
DATA                 0      0     68A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 28 14:46:27 2024

                SD_SPI_SectorWrite@result 009A                        ??_get_message_type 0003  
                       _SPI1_ExchangeByte 8B42                              srb_init@pool 0069  
                             get_fat@clst 00D5                  SD_SPI_SectorWrite@status 009B  
           SD_SPI_MediaInitialize@timeout 00B2                        _SPI1_ExchangeBlock 7DE0  
                            create_name@c 007D                              create_name@d 0072  
                            create_name@i 0077                              create_name@p 0075  
                        get_ldnumber@path 0060            SD_SPI_MediaInitialize@response 00AD  
                                      l71 6800                                        l75 74C0  
                      ?_SPI1_ExchangeByte 0001                                        _bw 01D8  
   timer0_handle_interrupt@internal_count 004E                            ??_dir_register 00FE  
                 ??_SD_SPI_IsMediaPresent 0060                          disk_write@sector 00AD  
                           create_name@dp 0068                             create_name@ni 0073  
                           create_name@si 007B                            create_chain@cs 0113  
                          create_chain@fs 0111                     build_board_stat_msg@i 0075  
                                     l203 8154                                       l116 8B1A  
                                     l119 8C12                                       l234 6314  
                                     l183 8A8E                                       l248 8A56  
                                     l292 75C8                                       l802 8926  
                                     l811 8548                                       l820 84E0  
                                     l653 8672                 SD_SPI_AsyncReadTasks@info 0082  
                                     l903 64DE                                       l824 8BBA  
                                     l912 5CF8                                       l825 8BD2  
                                     l762 8CF8                                       l922 4BEA  
                                     l915 5CFC                                       l852 89A6  
                                     l940 4F8E                                       l909 7C50  
                                     l861 80D2                                       l925 4F7E  
                                     l759 8CF0                                       l855 7DDE  
                                     l927 4BF6                                       l919 7B7C  
                                     l872 8A1C                                       l793 8332  
                                     l961 3874                                       l945 342E  
                                     l858 8AC4                                       l970 5886  
                                     l867 81D4                                       l891 8CDE  
                                     l964 3902                                       l878 7FBA  
                                     l879 7FC2                                       l887 82BE  
                                     l895 8CD2                                       l993 33DE  
                                     l898 64DA                                       l995 2F5A  
                     ?_SPI1_ExchangeBlock 0060                                       _Fil 0497  
                                     _buf 01CE                                       _ctx 01B7  
                     ??_SPI1_ExchangeByte 0060                              disk_read@res 00B1  
                          ??_create_chain 0100              write_timestamp_3bytes@output 0064  
                                     tosl 3FFD                                       wreg 3FE8  
                 __end_of_fxls_get_whoami 8C32                get_reset_board_id@msg_type 0008  
                 SPI1_ExchangeBlock@block 0060                    main@last_status_millis 01A8  
              SD_SPI_AsyncReadTasks@bData 008C                            create_name@sfn 0079  
                         create_chain@obj 00F4                           create_chain@ncl 010D  
                         create_chain@scl 0109                           create_chain@res 0108  
                             ld_clust@dir 0069                  ??_write_timestamp_3bytes 0066  
                          ??_GREEN_LED_ON 0001                                      l1102 888A  
                                    l1016 338E                                      l1201 6C42  
                                    l1017 33CE                                      l1025 6D9A  
                                    l1042 5390                                      l1106 6686  
                                    l1211 0ED0                                      l2011 77AC  
                                    l2003 7736                                      l1019 33C6  
                                    l2012 77D0                                      l1116 78D2  
                                    l1126 42B2                                      l1310 2708  
                                    l1302 224A                                      l2023 8B40  
                                    l2032 85AE                                      l1048 5252  
                                    l1304 222A                                      l1251 0860  
                                    l1075 4658                                      l1067 4724  
                                    l2204 7146                                      l1245 06B2  
                                    l2141 8D02                                      l1093 6AE0  
                                    l1173 5598                                      l2205 7158  
                                    l2222 7284                                      l1094 6AE2  
                                    l1182 5644                                      l1175 5582  
                                    l1256 0C06                                      l2208 8968  
                                    l1272 7394                                      l2225 8C4E  
                                    l1273 73AE                                      l2162 8C6C  
                                    l1186 6972                                      l1098 804C  
                                    l1362 1560                                      l1611 1F3E  
                                    l1195 6964                                      l1267 7360  
                                    l1363 124C                                      l1355 1722  
                                    l2228 8C30                                      l1284 272C  
                                    l1605 83A0                                      l1621 1838  
                                    l1277 7AA0                                      l1551 8D0E  
                                    l2159 8D06                                      l1391 5F26  
                                    l1295 204C                                      l1296 203A  
                                    l1384 16DA                                      l2184 5A58  
                                    l2281 7F2A                                      l1289 2708  
                                    l1810 8CC6                                      l2274 7F1A  
                                    l2258 8468                                      l1563 701E  
                                    l2259 8478                                      l1651 1B50  
                                    l1572 6FCA                                      l1564 6F8E  
                                    l1580 6EDC                                      l1813 8C9E  
                                    l1717 2DF2                                      l1581 6E4C  
                                    l1397 87E0                                      l1910 8CFE  
                                    l1903 8C86                                      l1816 8BB0  
                                    l1680 4774                                      l1648 1AD2  
                                    l1913 8B52                                      l1921 7E20  
                                    l1745 2D00                                      l1762 3D8A  
                                    l1754 3908                                      l1738 2C26  
                                    l1594 8CB4                                      l1907 79C0  
                                    l1915 8B62                                      l1771 3DF2  
                                    l1916 8B66                                      l1773 3E08  
                                    l1925 7E84                                      l1589 6E88  
                                    l1597 8D0A                                      l1678 4B76  
                                    l1873 86D2                                      l2745 824A  
                                    l2930 8610                                      l2738 8242  
                                    l2924 872E                                      l1978 8AF4  
                                    l1994 76A8                                      l1986 7642  
                                    l1995 76CC                                      STR_1 FFD0  
                                    STR_2 FFD0                                      STR_3 FFFA  
                                    STR_4 FFFA                                      STR_5 FFF4  
                                    STR_6 FFF4                                      STR_7 FFEA  
                                    STR_8 FFEB                                      STR_9 FFDF  
                                    _LATA 3FBA                                      _LATB 3FBB  
                                    _LATC 3FBC                                      _PMD0 39C0  
                                    _PMD1 39C1                                      _PMD2 39C2  
                                    _PMD3 39C3                                      _PMD4 39C4  
                                    _PMD5 39C5                                      _PMD6 39C6  
                                    _PMD7 39C7                                      _PIR5 39A5  
                                    i2l92 60BC                                      i2l84 5F48  
                                    i2l86 5F44                                      i2l95 60D0  
                                    i2l87 5F7E                                      i2l88 6120  
                                    i2l97 60E4                                      i2l89 601C  
                                    i2l98 6120                                      i2l99 60F8  
                                    _WPUA 3A41                                      _WPUB 3A51  
                                    _WPUC 3A61                                      _WPUE 3A81  
                                    _Fsid 01C0              __end_of_build_board_stat_msg 75CA  
                             ?_RED_LED_ON 0001                             _i2c_read_reg8 854A  
       SD_SPI_MediaInitialize@CSDResponse 008D                                      _main 5888  
                            find_volume@i 0135                                      fsr0h 3FEA  
                                    fsr1h 3FE2                                      indf0 3FEF  
                                    fsr2h 3FDA                                      fsr0l 3FE9  
                                    indf1 3FE7                                      indf2 3FDF  
                                    fsr1l 3FE1                                      fsr2l 3FD9  
                    ??_SPI1_ExchangeBlock 0064                               ld_dword@ptr 0060  
                           disk_ioctl@cmd 0060                             disk_read@buff 00A8  
                           disk_read@pdrv 00B0                                      prodh 3FF4  
                                    prodl 3FF3                            ??_get_ldnumber 0062  
                        ??_RED_LED_TOGGLE 0060                                      start 001A  
               __end_of_SPI1_ExchangeByte 8B68                              ?_follow_path 0133  
                            ___param_bank 0000                           create_name@path 006A  
                        create_chain@clst 00F6                           ??_GREEN_LED_OFF 0001  
                       i2c_write_reg8@reg 0066                         i2c_write_reg8@val 0067  
                             _sync_window 6316                              ?_SDFAST_open 0001  
           __end_of_OSCILLATOR_Initialize 8CA0                                     l14000 3400  
                                   l13300 8B46                                     l14020 3500  
                                   l14012 34C0                                     l14004 3436  
                                   l14100 2EE6                                     l13310 79B8  
                                   l13302 8B4C                                     l14022 3538  
                                   l14014 34E4                                     l14006 3448  
                                   l13304 78D8                                     l13320 3924  
                                   l15000 6B3C                                     l14040 3670  
                                   l14032 35D2                                     l14024 354A  
                                   l14016 34E8                                     l14008 34AC  
                                   l14120 2FB2                                     l14104 2EFC  
                                   l14112 2F6A                                     l14200 6C60  
                                   l13306 78E8                                     l13314 79BE  
                                   l13330 3A4C                                     l13322 3974  
                                   l13410 277C                                     l13402 2738  
                                   l15010 6B74                                     l14050 3752  
                                   l14042 3696                                     l14034 35F6  
                                   l14026 355A                                     l14018 34F6  
                                   l14130 3064                                     l14122 2FE6  
                                   l14114 2F8C                                     l14106 2F18  
                                   l14210 6CD8                                     l13308 79B4  
                                   l13340 3B2C                                     l13332 3AA2  
                                   l13324 39AA                                     l13500 2B5E  
                                   l13420 27FE                                     l13412 2780  
                                   l13404 2744                                     l15012 6B92  
                                   l15004 6B42                                     l14300 18C8  
                                   l14060 37EE                                     l14052 3768  
                                   l14044 3700                                     l14036 3604  
                                   l14028 35BE                                     l14140 30F0  
                                   l14132 307C                                     l14124 2FFE  
                                   l14108 2F2C                                     l14220 6D26  
                                   l14212 6CE6                                     l14204 6C66  
                                   l15100 56F4                                     l13350 3B8A  
                                   l13342 3B32                                     l13334 3AB6  
                                   l13326 39E0                                     l13318 390A  
                                   l13510 2C12                                     l13502 2B6E  
                                   l13430 286E                                     l13422 2810  
                                   l13414 27B6                                     l13406 275A  
                                   l15022 6C08                                     l15014 6BB0  
                                   l15006 6B6E                                     l14230 8350  
                                   l14310 1926                                     l14062 38C0  
                                   l14054 37DA                                     l14038 3644  
                                   l14150 3160                                     l14142 311A  
                                   l14134 309C                                     l14126 3028  
                                   l14118 2FA2                                     l14222 6D70  
                                   l14214 6CEE                                     l14206 6C92  
                                   l15102 5704                                     l13360 3C4A  
                                   l13352 3BC6                                     l13344 3B42  
                                   l13336 3AEA                                     l13328 3A16  
                                   l13520 2C5E                                     l13504 2B84  
                                   l13432 2880                                     l13440 2894  
                                   l13416 27CC                                     l13424 2826  
                                   l13408 2774                                     l13600 6DC6  
                                   l15016 6BCE                                     l14232 8384  
                                   l14312 195E                                     l14072 8D0C  
                                   l14080 8D08                                     l14240 82EC  
                                   l15040 72F0                                     l15032 7286  
                                   l14048 3714                                     l14152 316C  
                                   l14144 312A                                     l14136 30B2  
                                   l14128 3038                                     l14216 6CFA  
                                   l14208 6CB8                                     l15200 554A  
                                   l15120 5788                                     l15112 5752  
                                   l16000 161A                                     l13290 86E8  
                                   l13370 3DBE                                     l13362 3C5A  
                                   l13354 3BF8                                     l13346 3B54  
                                   l13338 3AF4                                     l13522 2C6C  
                                   l13506 2B94                                     l13450 28CE  
                                   l13442 28A2                                     l13434 288E  
                                   l13426 2836                                     l13418 27D8  
                                   l13610 6E4E                                     l13602 6DE8  
                                   l15018 6C02                                     l14226 8338  
                                   l14410 1C68                                     l14402 1C04  
                                   l14330 19E4                                     l14322 198C  
                                   l14314 196C                                     l14242 8300  
                                   l14250 8320                                     l14234 82C4  
                                   l15050 73AC                                     l15042 732C  
                                   l15034 728C                                     l14066 38D6  
                                   l14170 3222                                     l14154 3196  
                                   l14162 31C4                                     l14138 30D6  
                                   l14146 313A                                     l14090 2E4A  
                                   l14218 6D04                                     l15210 5590  
                                   l15202 5558                                     l15106 570A  
                                   l16010 168E                                     l16002 1622  
                                   l15060 7EB6                                     l13292 86F8  
                                   l13372 3DF4                                     l13364 3C70  
                                   l13356 3C08                                     l13348 3B86  
                                   l13380 7DF2                                     l13508 2BA6  
                                   l13540 2C88                                     l13460 2980  
                                   l13452 2906                                     l13428 2848  
                                   l13620 6E84                                     l13612 6E5C  
                                   l13604 6E04                                     l15028 6C40  
                                   l14228 834A                                     l14420 1C9C  
                                   l14412 1C6C                                     l14404 1C42  
                                   l14340 1A46                                     l14332 19F8  
                                   l14324 19CA                                     l14316 1982  
                                   l14308 1900                                     l14260 1742  
                                   l14076 8CA0                                     l14252 832E  
                                   l14244 8304                                     l14236 82CE  
                                   l15300 01F6                                     l16100 8AF0  
                                   l15044 735C                                     l15036 729E  
                                   l14068 3900                                     l14180 329C  
                                   l14172 3242                                     l14164 31F0  
                                   l14156 31A6                                     l14148 3150  
                                   l14092 2E60                                     l14084 2DF4  
                                   l15220 5642                                     l15140 5884  
                                   l15108 5736                                     l16012 16B6  
                                   l16004 1636                                     l15070 7F08  
                                   l15062 7EC2                                     l15054 7E86  
                                   l13294 86FC                                     l13358 3C40  
                                   l13366 3C78                                     l13382 7E30  
                                   l13710 4928                                     l13550 2CBA  
                                   l13518 2C28                                     l13470 2A1A  
                                   l13462 2988                                     l13454 293A  
                                   l13446 28A8                                     l13622 6E8A  
                                   l13614 6E6C                                     l13606 6E46  
                                   l14430 1E9E                                     l14422 1D28  
                                   l14414 1C6E                                     l14406 1C46  
                                   l14350 1A62                                     l14342 1A4E  
                                   l14334 1A0C                                     l14270 179C  
                                   l14262 1786                                     l14246 8318  
                                   l14238 82E2                                     l15310 02CC  
                                   l15302 0238                                     l15230 0052  
                                   l16102 8B20                                     l15046 7370  
                                   l15038 72BC                                     l16030 87D0  
                                   l16022 878A                                     l14190 332A  
                                   l14182 32AC                                     l14094 2E8A  
                                   l14086 2E0C                                     l14510 4FA8  
                                   l15150 7814                                     l15214 55AA  
                                   l15206 556A                                     l15134 57D4  
                                   l15126 578E                                     l15118 576C  
                                   l16006 163E                                     l16014 16FE  
                                   l15072 7F0A                                     l15064 7ED0  
                                   l15056 7E98                                     l13392 8CF2  
                                   l13296 870E                                     l13288 86D4  
                                   l13368 3CAA                                     l13384 7E62  
                                   l13376 7DE0                                     l13720 49BC  
                                   l13712 4944                                     l13704 48EA  
                                   l13640 473C                                     l13632 4726  
                                   l13800 7000                                     l13552 2CF0  
                                   l13528 2C74                                     l13480 2AAE  
                                   l13472 2A50                                     l13464 29CA  
                                   l13456 294E                                     l13448 28BC  
                                   l13624 6EBE                                     l14440 1EFE  
                                   l14432 1EB2                                     l14424 1DF2  
                                   l14416 1C7E                                     l14408 1C56  
                                   l14360 1ABA                                     l14352 1A6A  
                                   l14336 1A10                                     l14328 19E0  
                                   l14344 1A56                                     l14280 1802  
                                   l14272 179E                                     l14256 1724  
                                   l15320 02F6                                     l15304 0254  
                                   l15224 001E                                     l16120 8588  
                                   l16112 854E                                     l16104 8B2A  
                                   l15048 737C                                     l16024 879A  
                                   l14192 3378                                     l14184 32C4  
                                   l14168 320C                                     l14088 2E24  
                                   l14096 2E9E                                     l14600 437C  
                                   l15152 7848                                     l15160 78D0  
                                   l15144 77D2                                     l15208 557A  
                                   l15136 5822                                     l15128 57C0  
                                   l15080 5646                                     l16008 1658  
                                   l16016 1710                                     l16200 8C10  
                                   l15074 7F14                                     l15066 7EDA  
                                   l15058 7EAE                                     l13298 8712  
                                   l13378 7DEC                                     l13386 7E68  
                                   l13722 4A28                                     l13714 494C  
                                   l13706 4900                                     l13650 47BC  
                                   l13642 4752                                     l13634 472A  
                                   l13802 7006                                     l13570 2D60  
                                   l13554 2D02                                     l13546 2C9A  
                                   l13482 2ABE                                     l13474 2A98  
                                   l13466 29DC                                     l13458 2964  
                                   l13618 6E74                                     l13626 6EC4  
                                   l13810 8488                                     l14434 1EB4  
                                   l14426 1E4E                                     l14418 1C86  
                                   l14362 1ACC                                     l14354 1A90  
                                   l14346 1A5C                                     l14338 1A36  
                                   l14290 1870                                     l14282 1814  
                                   l14274 17D2                                     l14266 178C  
                                   l14258 1740                                     l15410 077C  
                                   l15402 06EA                                     l15330 0384  
                                   l15322 0334                                     l15306 0268  
                                   l15314 02D6                                     l15250 00DE  
                                   l15242 008E                                     l15234 0058  
                                   l15226 002E                                     l16114 8562  
                                   l16106 8B2E                                     l16130 8D04  
                                   l14450 8BB6                                     l16026 87AA  
                                   l14194 33A2                                     l14186 32F4  
                                   l14178 326A                                     l14098 2ECA  
                                   l14602 43B6                                     l14610 443A  
                                   l14522 4FF4                                     l14514 4FA8  
                                   l14506 4F90                                     l15154 7858  
                                   l15146 77EA                                     l15218 55C8  
                                   l15170 53EE                                     l15138 5848  
                                   l15090 56AE                                     l15082 565E  
                                   l16018 1720                                     l16140 66B2  
                                   l16132 6688                                     l15068 7EF8  
                                   l14460 7F2C                                     l13388 8CEA  
                                   l13740 4A6A                                     l13724 4A3E  
                                   l13716 4966                                     l13708 4912  
                                   l13652 47C0                                     l13644 4762  
                                   l13804 701C                                     l13572 2D62  
                                   l13556 2D38                                     l13548 2CB0  
                                   l13492 2AD2                                     l13476 2AA8  
                                   l13468 29E4                                     l13396 272E  
                                   l13628 6EDA                                     l13820 84DE  
                                   l13812 84BC                                     l13900 7B84  
                                   l14436 1EC4                                     l14444 1F04  
                                   l14428 1E88                                     l14380 1B8A  
                                   l14364 1AD0                                     l14356 1A98  
                                   l14348 1A5E                                     l14292 1888  
                                   l14284 1826                                     l14276 17D4  
                                   l14268 1792                                     l15420 07FE  
                                   l15412 07DE                                     l15404 075A  
                                   l15340 03C6                                     l15332 0394  
                                   l15324 034C                                     l15316 02DE  
                                   l15308 028E                                     l15260 0114  
                                   l15252 00EC                                     l15244 00A6  
                                   l15236 0076                                     l15228 0042  
                                   l16124 859C                                     l16108 8B32  
                                   l15076 8A1E                                     l14700 5AC4  
                                   l16028 87C0                                     l14196 33B2  
                                   l14188 3306                                     l14620 4518  
                                   l14612 44B4                                     l14604 4420  
                                   l14540 5118                                     l14532 5094  
                                   l14524 503C                                     l14516 4FC0  
                                   l15156 7886                                     l15148 7804  
                                   l15172 5424                                     l15180 5484  
                                   l15164 5392                                     l15084 567A  
                                   l16070 8690                                     l16230 6126  
                                   l16150 674E                                     l16142 66B6  
                                   l16134 6690                                     l14470 7F90  
                                   l14462 7F3C                                     l13590 85EE  
                                   l13742 4A80                                     l13726 4A4E  
                                   l13718 49AA                                     l13670 4832  
                                   l13662 480C                                     l13654 47E6  
                                   l13646 478E                                     l13638 4730  
                                   l13830 852E                                     l13574 2D98  
                                   l13494 2AE8                                     l13398 2732  
                                   l13814 84C6                                     l13910 7C24  
                                   l13902 7BB4                                     l14438 1EC8  
                                   l14390 1BC4                                     l14382 1B9A  
                                   l14374 1B52                                     l14366 1AD4  
                                   l14358 1AA8                                     l14294 18B0  
                                   l14286 183A                                     l14278 17DC  
                                   l15430 085C                                     l15422 081C  
                                   l15342 03D6                                     l15326 0358  
                                   l15318 02F0                                     l15334 03AE  
                                   l15270 0152                                     l15254 00FE  
                                   l15246 00AA                                     l15238 0088  
                                   l16118 8576                                     l14454 8BC0  
                                   l14710 5C08                                     l14702 5AD4  
                                   l15510 5D40                                     l14198 6C44  
                                   l14630 4578                                     l14622 4534  
                                   l14614 44F6                                     l14534 50AA  
                                   l14542 5150                                     l14526 5054  
                                   l14518 4FEE                                     l15158 78BE  
                                   l15182 54A4                                     l15174 542A  
                                   l15166 53AA                                     l15086 56A8  
                                   l15078 5646                                     l16214 8A58  
                                   l16080 86BA                                     l16072 86B2  
                                   l16064 8B8E                                     l16240 6174  
                                   l16232 6136                                     l16160 67BE  
                                   l16152 6776                                     l16144 66DE  
                                   l16136 6698                                     l14472 7FA8  
                                   l14464 7F3C                                     l13592 85F4  
                                   l13760 4AF4                                     l13744 4A82  
                                   l13680 48B0                                     l13672 484A  
                                   l13664 481E                                     l13656 47F8  
                                   l13648 4792                                     l13824 84E6  
                                   l13576 2DA8                                     l13568 2D4A  
                                   l13496 2AF2                                     l13584 2DB0  
                                   l13808 847E                                     l13840 6316  
                                   l13912 7C28                                     l13904 7BC4  
                                   l13920 8420                                     l14384 1BAC  
                                   l14376 1B5C                                     l14368 1B08  
                                   l14296 18C2                                     l14288 186E  
                                   l15440 098E                                     l15424 0820  
                                   l15360 0496                                     l15352 040C  
                                   l15336 03C0                                     l15328 0380  
                                   l15272 0160                                     l15256 010E  
                                   l15248 00C6                                     l15264 011A  
                                   l15600 76F8                                     l16128 8D00  
                                   l14456 8BD0                                     l14712 5C6A  
                                   l14704 5AE4                                     l15512 5D5A  
                                   l15520 5DCC                                     l15504 5CFE  
                                   l14640 45E8                                     l14616 4512  
                                   l14560 5234                                     l14552 51EC  
                                   l14544 519C                                     l14528 5070  
                                   l14480 8276                                     l15192 5508  
                                   l15184 54B4                                     l15176 544C  
                                   l15168 53CC                                     l16216 8A68  
                                   l16330 8612                                     l16082 86BC  
                                   l16074 86B4                                     l16066 8674  
                                   l16250 61B6                                     l16242 6182  
                                   l16234 6146                                     l16170 67D0  
                                   l16162 67C2                                     l16154 6798  
                                   l16146 6700                                     l16138 66AE  
                                   l14466 7F88                                     l13586 85B0  
                                   l13762 4B2A                                     l13754 4ACE  
                                   l13746 4AB8                                     l13738 4A5A  
                                   l13682 48BE                                     l13674 4854  
                                   l13658 4806                                     l13770 4B34  
                                   l13594 8CFA                                     l13826 84F0  
                                   l13834 8538                                     l13498 2B26  
                                   l13818 84D0                                     l13850 642C  
                                   l13842 631C                                     l13906 7BD4  
                                   l13914 7C4E                                     l13922 842E  
                                   l14386 1BBE                                     l14378 1B82  
                                   l14298 18C6                                     l15426 083C  
                                   l15418 07FA                                     l15370 04F2  
                                   l15362 04B4                                     l15354 0434  
                                   l15346 03DC                                     l15266 0128  
                                   l16090 8ACA                                     l13930 89EC  
                                   l14714 5CB4                                     l14706 5B02  
                                   l15530 5E80                                     l15522 5DCC  
                                   l15514 5DB4                                     l15506 5D16  
                                   l14650 4608                                     l14626 453A  
                                   l14562 5280                                     l14554 5206  
                                   l14546 51C8                                     l14730 69C6  
                                   l14722 6974                                     l14482 82A6  
                                   l14474 824C                                     l14810 3E0A  
                                   l14802 6658                                     l15194 5518  
                                   l15186 54DA                                     l15178 546E  
                                   l15098 56C4                                     l16332 866C  
                                   l16084 8C88                                     l16076 86B6  
                                   l16068 8684                                     l16252 61C6  
                                   l16236 6156                                     l16228 6122  
                                   l16180 67DC                                     l16172 67D2  
                                   l16164 67C6                                     l16156 67BA  
                                   l16148 6726                                     l13860 899E  
                                   l14468 7F8C                                     l13588 85BC  
                                   l13764 4B2E                                     l13756 4ADC  
                                   l13748 4AC6                                     l13676 488E  
                                   l13780 6F46                                     l13772 6EDE  
                                   l13836 8546                                     l13828 8524  
                                   l13596 6D9C                                     l13852 644A  
                                   l13844 6338                                     l13908 7C1A  
                                   l13924 843E                                     l14388 1BC2  
                                   l14396 1BFC                                     l15452 09E0  
                                   l15436 0874                                     l15428 0840  
                                   l15372 0532                                     l15364 04D0  
                                   l15356 044A                                     l15284 018C  
                                   l15276 0166                                     l15268 013C  
                                   l16340 79DE                                     l16092 8AD8  
                                   l15620 777C                                     l15612 774A  
                                   l15604 7714                                     l16500 7172  
                                   l13932 89FE                                     l14708 5B1E  
                                   l14716 5CC4                                     l15532 5EB6  
                                   l15524 5E00                                     l15508 5D26  
                                   l15540 5F24                                     l13940 7AF2  
                                   l14644 45EE                                     l14636 4590  
                                   l14628 4564                                     l14580 42CC  
                                   l14572 530C                                     l14548 51E6  
                                   l14564 52C2                                     l14740 6A78  
                                   l14732 69FA                                     l14724 698C  
                                   l14476 8250                                     l14900 4138  
                                   l14820 3E66                                     l14812 3E22  
                                   l14804 6672                                     l15196 5528  
                                   l15188 54F4                                     l16334 8670  
                                   l16078 86B8                                     l16086 8C6E  
                                   l16270 6242                                     l16262 6206  
                                   l16254 61D4                                     l16246 6196  
                                   l16238 6164                                     l16190 67E6  
                                   l16182 67DE                                     l16174 67D4  
                                   l16166 67CA                                     l16158 67BC  
                                   l13758 4AF2                                     l13678 489E  
                                   l13790 6FAE                                     l13782 6F88  
                                   l13774 6EF0                                     l13598 6DAE  
                                   l13846 6392                                     l13854 64D4  
                                   l13926 8448                                     l13918 840E  
                                   l15462 0A8E                                     l15454 0A1E  
                                   l15446 09BC                                     l15438 097C  
                                   l15390 064E                                     l15382 05E0  
                                   l15374 0562                                     l15358 0470  
                                   l15294 01D4                                     l15286 019E  
                                   l15278 0178                                     l16350 7A24  
                                   l16342 79EE                                     l16094 8AE2  
                                   l15614 7758                                     l15606 7718  
                                   l15550 75E0                                     l16510 71AC  
                                   l16502 7176                                     l15710 7564  
                                   l15702 7514                                     l13870 8A90  
                                   l13934 8A04                                     l14718 5CF2  
                                   l15534 5ED8                                     l15526 5E10  
                                   l15518 5DBA                                     l13950 4B90  
                                   l14670 4722                                     l14638 45D0  
                                   l14582 430C                                     l14574 538E  
                                   l14566 52E6                                     l14750 6ACA  
                                   l14726 69AE                                     l14478 8254  
                                   l14486 8CD4                                     l14910 418A  
                                   l14902 4152                                     l14830 3EE6  
                                   l14822 3E94                                     l14814 3E30  
                                   l15198 5538                                     l16088 8C84  
                                   l16272 6252                                     l16264 6214  
                                   l16256 61E4                                     l16248 61A6  
                                   l16280 6274                                     l16192 67EA  
                                   l16184 67E0                                     l16176 67D8  
                                   l16168 67CE                                     l13688 48C4  
                                   l13776 6F08                                     l13848 63A2  
                                   l14680 890C                                     l13864 7D22  
                                   l15480 0CDE                                     l15464 0AFE  
                                   l15456 0A6C                                     l15392 0676  
                                   l15384 0614                                     l15376 0580  
                                   l15296 01DC                                     l15288 01BE  
                                   l16360 7A80                                     l16352 7A32  
                                   l16336 79C2                                     l16096 8AE6  
                                   l15624 7798                                     l15608 7728  
                                   l15616 775A                                     l15560 7604  
                                   l15552 75E2                                     l15544 75CE  
                                   l16520 71D2                                     l16512 71AE  
                                   l16504 7184                                     l15712 758E  
                                   l15704 7528                                     l13872 8AA2  
                                   l13928 89E4                                     l13880 804E  
                                   l15536 5F04                                     l15528 5E38  
                                   l13952 4BAC                                     l13944 7B06  
                                   l13936 7AA2                                     l14664 467E  
                                   l14656 4628                                     l14592 4330  
                                   l14752 6ADC                                     l14744 6A98  
                                   l14736 6A0E                                     l14728 69BE  
                                   l14488 8CD4                                     l14496 8CC8  
                                   l14920 41D2                                     l14912 418E  
                                   l14840 3F34                                     l14832 3EF8  
                                   l14824 3EB6                                     l14816 3E4C  
                                   l14760 8002                                     l15800 226A  
                                   l15720 1F40                                     l15640 8202  
                                   l15632 81D6                                     l17400 58AA  
                                   l16274 6260                                     l16266 6224  
                                   l16258 61F2                                     l16186 67E2  
                                   l16178 67DA                                     l13858 896A  
                                   l13698 48D6                                     l13794 6FB6  
                                   l13786 6F90                                     l13778 6F2A  
                                   l14674 88E4                                     l13866 7DCE  
                                   l15490 0DCA                                     l15482 0D08  
                                   l15474 0C76                                     l15466 0B10  
                                   l15394 068C                                     l16354 7A44  
                                   l16346 79F4                                     l16338 79CA  
                                   l16098 8AEC                                     l15626 779C  
                                   l15618 776E                                     l15554 75E8  
                                   l15546 75D8                                     l16530 7202  
                                   l16522 71D8                                     l16514 71B0  
                                   l16506 7196                                     l15714 7592  
                                   l15706 7544                                     l13874 8AA8  
                                   l14770 8870                                     l13890 8098  
                                   l13882 8060                                     l15538 5F14  
                                   l13970 4D2C                                     l13962 4C84  
                                   l13954 4BD6                                     l13938 7AB0  
                                   l14666 46C0                                     l14594 4348  
                                   l14578 42B4                                     l14746 6AA0  
                                   l14738 6A44                                     l14690 8156  
                                   l14498 8CC8                                     l14922 41E2  
                                   l14914 41A8                                     l14930 4210  
                                   l14850 3F7A                                     l14834 3F00  
                                   l14826 3EBA                                     l14818 3E5E  
                                   l14762 803C                                     l15810 2356  
                                   l15802 229A                                     l15730 1F5A  
                                   l15722 1F54                                     l16194 8BF6  
                                   l15650 8236                                     l15642 8210  
                                   l15634 81E0                                     l17410 58BA  
                                   l17402 58AE                                     l16268 6234  
                                   l16188 67E4                                     l13796 6FC6  
                                   l13788 6F9E                                     l14676 88EE  
                                   l14684 8916                                     l15492 0E08  
                                   l15484 0D4C                                     l15476 0CBC  
                                   l15468 0BC0                                     l15396 06D2  
                                   l16364 7A86                                     l16356 7A52  
                                   l16348 7A12                                     l15628 77B2  
                                   l15580 7694                                     l15564 7620  
                                   l15556 75F4                                     l15572 7656  
                                   l15548 75DE                                     l16540 7246  
                                   l16532 7210                                     l16524 71E6  
                                   l16516 71B2                                     l16508 71A8  
                                   l15716 75B6                                     l15708 7558  
                                   l15660 73E2                                     l13876 8AAE  
                                   l13892 80AA                                     l13884 8066  
                                   l13980 4DB2                                     l13972 4D64  
                                   l13964 4CB4                                     l13956 4BFE  
                                   l13948 4B78                                     l14668 46E6  
                                   l14588 4330                                     l14748 6ABA  
                                   l14692 817A                                     l14940 4268  
                                   l14932 4234                                     l14924 41F2  
                                   l14908 4178                                     l14860 3FBC  
                                   l14852 3F82                                     l14836 3F12  
                                   l14844 3F3A                                     l14828 3ECC  
                                   l14772 64E0                                     l14756 7FC4  
                                   l15820 23C4                                     l15812 237C  
                                   l15804 22B2                                     l15740 1FAC  
                                   l15732 1F5E                                     l15900 101E  
                                   l16196 8BFE                                     l15652 823C  
                                   l15644 8216                                     l15636 81F2  
                                   l17420 591E                                     l17412 58BE  
                                   l17404 58B0                                     l13798 6FCC  
                                   l14686 8924                                     l14678 8902  
                                   l15486 0D5C                                     l15494 0E88  
                                   l15478 0CCC                                     l16366 7A9E  
                                   l16358 7A70                                     l15590 76DC  
                                   l15582 7698                                     l15574 766A  
                                   l15566 7624                                     l15558 75F8  
                                   l16550 8C14                                     l16542 724A  
                                   l16534 7222                                     l16526 71F8  
                                   l16518 71C0                                     l15670 746A  
                                   l15662 7406                                     l15654 73B0  
                                   l13878 8AC0                                     l14766 8838  
                                   l13894 80AE                                     l13886 8074  
                                   l13990 4EF8                                     l13974 4D72  
                                   l13966 4CB8                                     l13958 4C10  
                                   l14598 434E                                     l14694 81B2  
                                   l14942 4278                                     l14926 41F6  
                                   l14870 3FFC                                     l14862 3FC0  
                                   l14854 3F94                                     l14846 3F5E  
                                   l14838 3F24                                     l14790 65A2  
                                   l14782 6532                                     l14774 64F8  
                                   l14758 7FE4                                     l15830 2492  
                                   l15822 23EA                                     l15814 238E  
                                   l15806 22C2                                     l15750 1FF4  
                                   l15742 1FBC                                     l15734 1F7C  
                                   l15726 1F5A                                     l15910 10F6  
                                   l15902 1088                                     l16198 8C0E  
                                   l15646 822C                                     l15638 81FA  
                                   l17430 5930                                     l17422 5924  
                                   l17414 58DC                                     l17406 58B6  
                                   l14960 683A                                     l15496 0E9A  
                                   l15488 0D8C                                     l15592 76E2  
                                   l15584 76AE                                     l15576 7678  
                                   l15568 7634                                     l16560 8C38  
                                   l16552 8C1A                                     l16544 7258  
                                   l16536 7226                                     l16528 71FE  
                                   l15672 748C                                     l15664 740C  
                                   l14768 8852                                     l13896 80BC  
                                   l13888 8086                                     l13984 4E2C  
                                   l13976 4D82                                     l14696 81B8  
                                   l14944 4288                                     l14928 4208  
                                   l14880 4088                                     l14872 4000  
                                   l14848 3F6E                                     l14792 65B2  
                                   l14784 6566                                     l14776 651A  
                                   l15840 252A                                     l15832 24B6  
                                   l15824 23FA                                     l15816 239C  
                                   l15808 233E                                     l15760 2048  
                                   l15752 2006                                     l15744 1FCA  
                                   l15736 1F8C                                     l15920 119A  
                                   l15912 1128                                     l15904 109A  
                                   l15648 8234                                     l15680 80EC  
                                   l17440 593C                                     l17432 5934  
                                   l17424 5928                                     l17416 58F2  
                                   l17408 58B8                                     l13898 7B7E  
                                   l14970 685C                                     l14962 6842  
                                   l14954 6802                                     l15498 0EB8  
                                   l15594 76E4                                     l16562 8C4A  
                                   l16554 8C2C                                     l16546 7272  
                                   l16538 7234                                     l15690 74D4  
                                   l15674 74BC                                     l15666 743E  
                                   l15658 73C4                                     l16570 8964  
                                   l13986 4E76                                     l13978 4DA2  
                                   l13994 4F54                                     l14698 81BC  
                                   l14946 4294                                     l14938 424A  
                                   l14882 409C                                     l14890 40C6  
                                   l14874 402E                                     l14866 3FD4  
                                   l14858 3F9A                                     l14794 65BA  
                                   l14778 652A                                     l15850 2588  
                                   l15842 2546                                     l15834 24DE  
                                   l15826 241C                                     l15818 23B0  
                                   l15770 20EE                                     l15762 205C  
                                   l15754 2016                                     l15746 1FCE  
                                   l15738 1F94                                     l15930 11DC  
                                   l15922 11AA                                     l15914 1168  
                                   l15906 10BC                                     l15682 8106  
                                   l17450 59CC                                     l17442 593E  
                                   l17434 5936                                     l17426 592A  
                                   l17418 5918                                     l16492 8CB6  
                                   l14980 68B8                                     l14972 686C  
                                   l14964 6858                                     l14956 6808  
                                   l15596 76E6                                     l15588 76D2  
                                   l16548 7276                                     l15668 7468  
                                   l15676 8AF6                                     l13996 33E0  
                                   l14948 429C                                     l14892 40D6  
                                   l14876 4060                                     l14868 3FE6  
                                   l14796 65E4                                     l14788 657A  
                                   l15860 2636                                     l15852 25AC  
                                   l15844 254A                                     l15836 250A  
                                   l15828 244C                                     l15780 2194  
                                   l15772 2116                                     l15764 206A  
                                   l15756 201C                                     l15748 1FE4  
                                   l15940 12CC                                     l15908 10E0  
                                   l16580 7078                                     l16572 7020  
                                   l15684 8134                                     l17460 5AA4  
                                   l17452 5A16                                     l17444 5940  
                                   l17436 5938                                     l17428 592C  
                                   l16494 8C54                                     l14990 6940  
                                   l14982 68D8                                     l14974 687E  
                                   l14966 685C                                     l14958 6828  
                                   l15598 76EC                                     l16558 8C32  
                                   l15694 74EA                                     l16566 8928  
                                   l13998 33E6                                     l14894 40F8  
                                   l14878 4072                                     l14798 660A  
                                   l15862 2698                                     l15854 25BC  
                                   l15838 2526                                     l15846 255A  
                                   l15790 2222                                     l15782 21A4  
                                   l15774 2128                                     l15766 20B6  
                                   l15758 2032                                     l15950 1334  
                                   l15934 11E2                                     l15926 11B0  
                                   l15918 1184                                     l16590 7154  
                                   l16582 707C                                     l16574 7052  
                                   l15686 8144                                     l15678 80D4  
                                   l17462 5AB8                                     l17454 5A2A  
                                   l17446 596A                                     l17438 593A  
                             ?_SPI1_Close 0001                                     l14992 6958  
                                   l14984 68FC                                     l14976 6890  
                                   l16496 715A                                     l15688 74C2  
                                   l16568 8958                                     l14896 4112  
                                   l14888 40B2                                     l15864 26FE  
                                   l15856 25EA                                     l15848 256A  
                                   l15792 2238                                     l15784 21C4  
                                   l15776 213E                                     l15768 20C8  
                                   l15960 1370                                     l15952 134C  
                                   l15936 1228                                     l15928 11CC  
                                   l15880 0F14                                     l15872 0ED2  
                                   l16584 7080                                     l16576 7060  
                                   l17448 5994                                     l17456 5A2E  
                                   l14986 691E                                     l14978 6898  
                                   l16498 7160                                     l15698 7500  
                                   l14898 4134                                     l15866 271A  
                                   l15858 262E                                     l15794 2246  
                                   l15778 2162                                     l15786 2204  
                                   l15970 1436                                     l15962 1390  
                                   l15946 12E2                                     l15938 1266  
                                   l15882 0F34                                     l15874 0EDA  
                                   l16586 7084                                     l16578 7074  
                                   l17458 5A5A                                     l17394 5888  
                                   l14996 6AE4                                     l14988 6938  
                                   l15868 272A                                     l15796 225A  
                                   l15788 2214                                     l15980 14A0  
                                   l15964 13A2                                     l15948 12F4  
                                   l15876 0EEA                                     l16588 70AE  
                                   l17396 5890                                     l14998 6B10  
                                   l15798 2268                                     l15982 14D6  
                                   l15990 153A                                     l15966 13D0  
                                   l15958 1360                                     l15894 0F5A  
                                   l15886 0F3A                                     l15878 0F04  
                                   l17398 5896                                     l15992 1594  
                                   l15984 1524                                     l15976 144C  
                                   l15968 13F4                                     l15896 0FC0  
                                   l15888 0F54                                     l15994 15AA  
                                   l15978 1470                                     l15898 0FE4  
                                   l15996 15B2                                     l17790 62F0  
                                   l15998 1608                                     l17784 629C  
                                   l17792 6306                                     l17786 62B8  
                                   l17794 62AA                                     l17788 62D4  
                                   l17796 62C6                                     l17798 62E2  
                                   _ADACT 3EFE                                     _ADCAP 3EF5  
                                   ?_main 0001                                     _ADCLK 3EFF  
                                   _ADCNT 3EEB                                     _ADPCH 3EF1  
                                   _ADREF 3EFD                                     STR_10 FFEA  
                                   STR_11 FFEB                                     _ADRPT 3EEC  
                         __end_of_dbc_2nd 8CD4          SPI1_Open@spi1UniqueConfiguration 0061  
                         __end_of_dbc_1st 8CE0                      __end_of_BLUE_LED_OFF 8D28  
                         __end_of___lldiv 7F2C                                     u20200 70AE  
                                   u20201 70AA                                     u21020 596A  
                                   u21021 5966                                     u21030 5994  
                                   u21031 5990                                     u21040 5A16  
                                   u21041 5A12                                     u21050 5A58  
                                   u21051 5A54                                     u20180 8C6A  
                                   u21060 5AA4                                     u20181 8C64  
                                   u21061 5AA0                                     u15000 3C70  
                                   u15001 3C6C                                     u15010 3CAA  
                                   u20195 8C6C                                     u15011 3CA6  
                                   u15100 7E30                                     _LATA2 1FDD2  
                                   u15101 7E2C                                     _LATA3 1FDD3  
                                   u15110 7E62                                     _LATA4 1FDD4  
                                   _LATB3 1FDDB                                     u15120 7E84  
                                   _LATC2 1FDE2                                     u15121 7E80  
                                   u16010 4D28                                     u15211 2864  
                                   u15131 2750                                     u16011 4D24  
                                   u15028 3CCA                                     u15220 2880  
                                   u15140 2774                                     u16020 4D72  
                                   u16100 34BC                                     _LATC6 1FDE6  
                                   u15029 3CDE                                     u15117 7E50  
                                   u15221 287C                                     u15205 2838  
                                   u15141 2770                                     u16021 4D6E  
                                   u16005 4CF0                                     u16101 34B8  
                                   u15070 3DF2                                     u15038 3D02  
                                   u15230 28BC                                     u15150 27A0  
                                   u16110 34F6                                     u15071 3DEE  
                                   u15039 3D16                                     u15231 28B8  
                                   u16111 34F2                                     u15048 3D3A  
                                   u15320 2A98                                     u15240 28CE  
                                   u15160 27CC                                     u16200 8CB4  
                                   u16040 4E28                                     u15081 3DFE  
                                   u15049 3D4E                                     u15321 2A94  
                                   u15241 28CA                                     u15161 27C8  
                                   u16041 4E24                                     u15058 3D72  
                                   u15090 7E1C                                     u15330 2AE8  
                                   u16050 4EC2                                     u16130 35CE  
                                   u16210 2E24                               i2c_read@len 0061  
                                   u15059 3D86                                     u15331 2AE4  
                                   u15171 27F4                                     u15155 2796  
                                   u16035 4D8E                                     u16131 35CA  
                                   u16211 2E20                                     u17020 7F78  
                                   u15068 3DAA                                     u15420 2CB0  
                                   u15308 2A3A                                     u15180 2810  
                                   u16060 4EF4                                     u16140 3604  
                                   u16300 307C                                     u16220 2E60  
                                   u17100 5070                                     u15069 3DBE  
                                   u15421 2CAC                                     u15309 2A50  
                                   u15181 280C                                     u16061 4EF0  
                                   u16141 3600                                     u16125 3592  
                                   u16301 3078                                     u16221 2E5C  
                                   u17101 506C                                     u17030 7FA8  
                                   u15318 2A70                                     u15190 2836  
                                   u15510 6E46                                     u16150 3664  
                                   u16070 3400                                     u16310 3098  
                                   u16230 2E8A                                     u17110 50AA  
                                   u17031 7FA4                                     u15319 2A86  
                                   u15191 2832                                     u15511 6E42  
                                   u16055 4EB8                                     u16071 33FC  
                                   u16311 3094                                     u16231 2E86  
                                   u17111 50A6                                     u17040 7FBA  
                                   u15440 2D00                                     u15408 2BFC  
                                   u15360 2B6E                                     u15280 29DC  
                                   u15520 6E6C                                     u18000 6C3C  
                                   u17008 1EEA                                     u16160 3710  
                                   u16080 342A                                     u16400 323E  
                                   u16320 30B2                                     u16240 2EE6  
                                   u17200 532C                                     u17120 50F0  
                                   u17041 7FB6                                     u15097 7E0E  
                                   u15601 47AE                                     u15441 2CFC  
                                   u15409 2C12                                     u15361 2B6A  
                                   u15281 29D8                                     u15521 6E68  
                                   u18001 6C38                                     u17009 1EFE  
                                   u16161 370C                                     u16081 3426  
                                   u16401 323A                                     u16321 30AE  
                                   u16241 2EE2                                     u14810 872E  
                                   u15418 2C48                                     u15370 2B84  
                                   u15258 28EE                                     u15530 6E84  
                                   u17018 1F26                                     u18010 729E  
                                   u16170 37B4                                     u16410 3266  
                                   u16330 30F0                                     u16250 2F18  
                                   u17210 4330                                     u17130 5114  
                                   u17050 8276                                     u17027 7F6A  
                                   u14811 872A                                     u15611 47DC  
                                   u15419 2C5E                                     u15371 2B80  
                                   u15259 2902                                     u15531 6E80  
                                   u17019 1F3A                                     u18011 729A  
                                   u16155 365A                                     u16411 3262  
                                   u16331 30EC                                     u16251 2F14  
                                   u17211 432C                                     u17131 5110  
                                   u17051 8272                                     u14820 8B62  
                                   u14900 3AB6                                     u15620 47F8  
                                   u15380 2BA6                                     u15348 2B12  
                                   u15268 2926                                     u15508 6E24  
                                   u18020 72BC                                     u16180 37EA  
                                   u16420 32AC                                     u16340 311A  
                                   u16260 2F56                                     u16500 6D98  
                                   u17300 4534                                     u17220 4348  
                                   u17060 82A6                                     u18100 567A  
                                   u14821 8B5E                                     u14901 3AB2  
                                   u15621 47F4                                     u15381 2BA2  
                                   u15349 2B26                                     u15269 293A  
                                   u15509 6E36                                     u18021 72B8  
                                   u16181 37E6                                     u16421 32A8  
                                   u16341 3116                                     u16261 2F52  
                                   u16501 6D92                                     u17301 4530  
                                   u17221 4344                                     u17205 5322  
                                   u17125 50E6                                     u17061 82A2  
                                   u18101 5676                                     u14830 78E8  
                                   u15470 85EE                                     u15630 484A  
                                   u15438 2CDA                                     u15358 2B46  
                                   u15278 29B8                                     u15550 6EDA  
                                   u16190 8CB2                                     u18030 72F0  
                                   u16430 32C4                                     u16350 3150  
                                   u16270 2F8C                                     u16510 6D9A  
                                   u17310 4564                                     u17230 437C  
                                   u17150 51E6                                     u17070 4FC0  
                                   u18110 56A8                                     u14831 78E4  
                                   u15631 4846                                     u15439 2CEE  
                                   u15359 2B5C                                     u15279 29CA  
                                   u15551 6ED6                                     u16191 8CAC  
                                   u18031 72EC                                     u16175 37AA  
                                   u16095 3480                                     u16431 32C0  
                                   u16351 314C                                     u16271 2F88  
                                   u17311 4560                                     u17231 4378  
                                   u17151 51E2                                     u17071 4FBC  
                                   u18111 56A4                                     u15480 8610  
                                   u15720 4A3E                                     u15800 6FC6  
                                   u19000 7746                                     u18040 732C  
                                   u16440 3306                                     u16360 3196  
                                   u16280 2FE6                                     u17320 4578  
                                   u17240 43B6                                     u17160 5206  
                                   u17080 4FEE                                     u17400 81D4  
                                   u18200 7814                                     u18120 56C4  
                                   u15481 860C                                     u15721 4A3A  
                                   u15561 4748                                     u15801 6FC2  
                                   u16601 17F8                                     u19001 7742  
                                   u18041 7328                                     u16441 3302  
                                   u16361 3192                                     u16281 2FE2  
                                   u17321 4574                                     u17241 43B2  
                                   u17161 5202                                     u17145 5178  
                                   u17081 4FEA                                     u17401 81D0  
                                   u18201 7810                                     u18121 56C0  
                                   u14930 3B42                                     u15730 4A6A  
                                   u15650 489E                                     u15570 4762  
                                   u15458 2D22                                     u15298 2A04  
                                   u16530 83A0                                     u16610 1814  
                                   u19010 776E                                     u17410 5AE4  
                                   u18050 735C                                     u16450 3378  
                                   u16370 31C0                                     u16290 3028  
                                   u17330 45E8                                     u17250 43FC  
                                   u17170 5230                                     u17090 5054  
                                   u18210 7858                                     u18130 5704  
                                   u14931 3B3E                                     u15731 4A66  
                                   u15651 489A                                     u15571 475E  
                                   u15459 2D38                                     u15299 2A1A  
                                   u16531 839C                                     u16611 1810  
                                   u19011 776A                                     u17411 5AE0  
                                   u18051 7358                                     u16451 3374  
                                   u16371 31BC                                     u16291 3024  
                                   u17331 45E4                                     u17171 522C  
                                   u17091 5050                                     u18211 7854  
                                   u18131 5700                                     u14940 3B54  
                                   u15708 49DC                                     u15660 48B0  
                                   u15820 701C                                     u15468 2D82  
                                   u15548 6EAC                                     u15900 7BD4  
                                   u16700 196C                                     u16620 1826  
                                   u16540 82E2                                     u19020 7794  
                                   u19100 73E2                                     u17420 5B02  
                                   u18060 7370                                     u16460 33B2  
                                   u16380 3208                                     u17340 4604  
                                   u17260 4420                                     u17180 5280  
                                   u17500 6ACA                                     u18300 5558  
                                   u18220 53CC                                     u18140 574E  
                                   u14941 3B50                                     u15477 85DC  
                                   u15709 49F2                                     u15661 48AC  
                                   u15821 7018                                     u15469 2D98  
                                   u15549 6EBE                                     u15901 7BD0  
                                   u16701 1968                                     u16621 1822  
                                   u16541 82DE                                     u19021 7790  
                                   u19101 73DE                                     u17421 5AFE  
                                   u18061 736C                                     u16461 33AE  
                                   u16381 3204                                     u17341 4600  
                                   u17261 441C                                     u17181 527C  
                                   u17501 6AC6                                     u18301 5554  
                                   u18221 53C8                                     u18141 574A  
                                   u18070 7EAE                                     u14950 3B86  
                                   u14918 3AD6                                     u15718 4A12  
                                   u15670 4900                                     u15590 478E  
                                   u15398 2BC6                                     u15830 84BC  
                                   u15910 7C1A                                     u16630 1838  
                                   u16550 8300                                     u19030 77AC  
                                   u19110 7402                                     u17430 5B1E  
                                   u16390 3222                                     u16470 6C60  
                                   u17350 4624                                     u17270 4480  
                                   u17190 5308                                     u17510 6ADC  
                                   u18310 5566                                     u18230 53EE  
                                   u18150 5768                                     u18071 7EAA  
                                   u14951 3B82                                     u14919 3AEA  
                                   u15719 4A28                                     u15671 48FC  
                                   u15591 478A                                     u15399 2BDC  
                                   u15495 6DD0                                     u15831 84B8  
                                   u15911 7C16                                     u16711 19C0  
                                   u16631 1834                                     u16551 82FC  
                                   u19031 77A8                                     u19111 73FE  
                                   u17431 5B1A                                     u16391 321E  
                                   u16471 6C5C                                     u17351 4620  
                                   u17255 43F2                                     u17191 5304  
                                   u17511 6AD8                                     u18311 5562  
                                   u18231 53EA                                     u18151 5764  
                                   u18080 7ED0                                     u14928 3B14  
                                   u14848 3944                                     u15648 4874  
                                   u15840 8524                                     u16528 8370  
                                   u15920 842E                                     u16800 1ACC  
                                   u16720 19DC                                     u16560 8318  
                                   u18400 010E                                     u19040 77CE  
                                   u17440 5CF2                                     u16480 6D26  
                                   u17360 4654                                     u17280 44B4  
                                   u17600 3E94                                     u17520 8002  
                                   u18320 5590                                     u18240 544C  
                                   u18160 5788                                     u19200 1FBC  
                                   u18081 7ECC                                     u14929 3B28  
                                   u14849 3974                                     u15649 488A  
                                   u15585 4764                                     u15841 8520  
                                   u16529 8384                                     u15921 842A  
                                   u16801 1AC8                                     u16721 19D8  
                                   u16561 8314                                     u18401 010A  
                                   u19041 77C8                                     u17441 5CEE  
                                   u16481 6D22                                     u17361 4650  
                                   u17281 44B0                                     u17601 3E90  
                                   u17521 7FFE                                     u18321 558C  
                                   u18241 5448                                     u18161 5784  
                                   u19201 1FB8                                     u18090 7EF8  
                                   u14970 3BF8                                     u14858 3994  
                                   u15690 49BC                                     u15818 6FEE  
                                   u15850 6338                                     u15930 8468  
                                   u16730 19F8                                     u17370 8902  
                                   u18410 0160                                     u19050 77D0  
                                   u19130 74D4                                     u17530 8870  
                                   u16490 6D70                                     u17290 4512  
                                   u17450 69BE                                     u17610 3ECC  
                                   u18330 55A6                                     u18250 546E  
                                   u18170 57D0                                     u19210 1FCA  
                                   u18091 7EF4                                     u14971 3BF4  
                                   u14859 39AA                                     u15691 49B8  
                                   u15819 7000                                     u15851 6334  
                                   u15931 8464                                     u16731 19F4  
                                   u16651 18A6                                     u17371 88FE  
                                   u18411 015C                                     u19131 74D0  
                                   u17531 886C                                     u16491 6D6C  
                                   u17291 450E                                     u17275 4476  
                                   u17451 69BA                                     u17611 3EC8  
                                   u18331 55A2                                     u18251 546A  
                                   u18171 57CC                                     u19211 1FC6  
                                   u14868 39CA                                     u15748 4AA2  
                                   u15780 6F88                                     u15860 6392  
                                   u16900 1C56                                     u16740 1A0C  
                                   u16660 18C2                                     u16580 1786  
                                   u18500 03AE                                     u18420 0178  
                                   u19140 74E6                                     u15940 8A1C  
                                   u17460 6A0A                                     u17380 817A  
                                   u17700 402E                                     u17620 3EE2  
                                   u17540 652A                                     u18340 55C4  
                                   u18260 54A4                                     u18180 5822  
                                   u19300 21A4                                     u19220 1FE4  
                                   u19060 81F2                                     u14869 39E0  
                                   u15749 4AB8                                     u15781 6F84  
                                   u15765 6F12                                     u15861 638E  
                                   u16901 1C52                                     u16741 1A08  
                                   u16661 18BE                                     u16581 1782  
                                   u18501 03AA                                     u18421 0174  
                                   u19141 74E2                                     u19125 7458  
                                   u15941 8A18                                     u17461 6A06  
                                   u17381 8176                                     u17701 402A  
                                   u17621 3EDE                                     u17541 6526  
                                   u18341 55C0                                     u18261 54A0  
                                   u18181 581E                                     u19301 21A0  
                                   u19221 1FE0                                     u19061 81EE  
                                   u14990 3C5A                                     u14878 3A00  
                                   u15758 4B14                                     u15790 6FAE  
                                   u15870 642C                                     u16910 1C68  
                                   u16830 1B4C                                     u18510 03C0  
                                   u18430 0188                                     u18350 0052  
                                   u19150 74FC                                     u15950 7AF2  
                                   u17470 6A44                                     u17390 81B0  
                                   u17710 405C                                     u17630 3F12  
                                   u17550 6576                                     u18270 5504  
                                   u18190 5884                                     u19310 2214  
                                   u19230 1FF4                                     u19070 8210  
                                   u14991 3C56                                     u14879 3A16  
                                   u15759 4B2A                                     u15791 6FAA  
                                   u15871 6428                                     u16911 1C64  
                                   u16831 1B48                                     u16751 1A2C  
                                   u18511 03BC                                     u18431 0184  
                                   u18351 004E                                     u19151 74F8  
                                   u15951 7AEE                                     u17471 6A40  
                                   u17711 4058                                     u17631 3F0E  
                                   u17551 6572                                     u18271 5500  
                                   u18191 5880                                     u19311 2210  
                                   u19231 1FF0                                     u19071 820C  
                                   u14968 3BAA                                     u14888 3A36  
                                   u15688 4996                                     u15880 644A  
                                   u16920 1C7E                                     u16760 1A46  
                                   u16648 185A                                     u18600 068C  
                                   u18520 03D6                                     u18440 01D0  
                                   u18360 0088                                     u19160 7510  
                                   u15960 4BAC                                     u17480 6A78  
                                   u17800 41CE                                     u17720 4072  
                                   u17640 3F24                                     u17560 65B2  
                                   u18280 5538                                     u19320 2222  
                                   u19240 2006                                     u19080 822C  
                                   u14969 3BBE                                     u14889 3A4C  
                                   u15689 49AA                                     u15881 6446  
                                   u16921 1C7A                                     u16841 1B78  
                                   u16761 1A42                                     u16681 191C  
                                   u16649 186E                                     u18601 0688  
                                   u18521 03D2                                     u18441 01CC  
                                   u18361 0084                                     u19161 750C  
                                   u15961 4BA8                                     u17481 6A74  
                                   u17801 41CA                                     u17721 406E  
                                   u17641 3F20                                     u17561 65AE  
                                   u18281 5534                                     u19321 221E  
                                   u19241 2002                                     u19081 8228  
                                   u14898 3A6C                                     u15778 6F66  
                                   u15890 7BB4                                     u16930 1C9C  
                                   u16850 1B9A                                     u16818 1AF6  
                                   u16690 195E                                     u16578 1762  
                                   u18610 06E6                                     u18530 0408  
                                   u18450 01F2                                     u18370 00C6  
                                   u19170 75B6                                     u19090 73C0  
                                   u15970 4BD6                                     u17490 6A94  
                                   u17810 41E2                                     u17730 4088  
                                   u17650 3F34                                     u17570 660A  
                                   u18290 554A                                     u19410 2526  
                                   u19330 2238                                     u19250 2032  
                                   u14899 3AA2                                     u15779 6F78  
                                   u15891 7BB0                                     u16931 1C98  
                                   u16851 1B96                                     u16819 1B08  
                                   u16771 1A86                                     u16691 195A  
                                   u16579 1776                                     u18611 06E2  
                                   u18531 0404                                     u18451 01EE  
                                   u18371 00C2                                     u19171 75B2  
                                   u19091 73BC                                     u15971 4BD2  
                                   u17491 6A90                                     u17811 41DE  
                                   u17731 4084                                     u17651 3F30  
                                   u17571 6606                                     u18291 5546  
                                   u19411 2522                                     u19331 2234  
                                   u19251 202E                           __end_of___lwdiv 824C  
                                   u14988 3C28                                     u16860 1BAC  
                                   u16828 1B28                                     u16780 1AA8  
                                   u17900 68B8                                     u18700 09B8  
                                   u18540 044A                                     u18460 0254  
                                   u18380 00EC                                     u17820 41F2  
                                   u17740 409C                                     u17660 3F6E  
                                   u17580 6654                                     u19500 271A  
                                   u19420 2546                                     u19340 2246  
                                   u19260 2048                                     u19180 1F54  
                                   u14989 3C3C                                     u16861 1BA8  
                                   u16829 1B3C                                     u16781 1AA4  
                                   u17901 68B4                                     u18701 09B4  
                                   u18541 0446                                     u18461 0250  
                                   u18381 00E8                                     u17397 81A2  
                                   u17821 41EE                                     u17741 4098  
                                   u17661 3F6A                                     u17581 6650  
                                   u19501 2716                                     u19421 2542  
                                   u19405 2472                                     u19341 2242  
                                   u19261 2044                                     u19181 1F50  
                                   u16950 1D9E                                     u16870 1BBE  
                                   u16790 1ABA                                     u16678 18EA  
                                   u16598 17BE                                     u17910 68D8  
                                   u18710 09DC                                     u18630 0778  
                                   u18550 04D0                                     u18470 02F0  
                                   u18390 00FE                                     u15990 4C80  
                                   u17830 4246                                     u17750 40AE  
                                   u17670 3FD0                                     u17590 6682  
                                   u19430 256A                                     u19350 225A  
                                   u19270 205C                                     u19190 1F8C  
                                   u19510 0F14                                     u16871 1BBA  
                                   u16791 1AB6                                     u16679 18FC  
                                   u16599 17D2                                     u17911 68D4  
                                   u18711 09D8                                     u18631 0774  
                                   u18551 04CC                                     u18471 02EC  
                                   u18391 00FA                                     u15991 4C7C  
                                   u17831 4242                                     u17751 40AA  
                                   u17671 3FCC                                     u17591 667E  
                                   u19431 2566                                     u19351 2256  
                                   u19271 2058                                     u19191 1F88  
                                   u19511 0F10                                     u17920 68FC  
                                   u18800 0D8C                                     u18640 07F6  
                                   u18560 04EE                                     u18480 034C  
                                   u17840 4268                                     u17760 40D6  
                                   u17680 3FE6                                     u19440 2588  
                                   u19360 2268                                     u19280 206A  
                                   u19600 1180                                     u19520 0F34  
                                   u16945 1CFC                                     u17921 68F8  
                                   u18801 0D88                                     u18641 07F2  
                                   u18625 0708                                     u18561 04EA  
                                   u18481 0348                                     u15985 4C48  
                                   u17841 4264                                     u17761 40D2  
                                   u17681 3FE2                                     u19441 2584  
                                   u19361 2264                                     u19281 2066  
                                   u19601 117C                                     u19521 0F30  
                                   u17930 6938                                     u18810 0DCA  
                                   u18730 0A8A                                     u18650 081C  
                                   u18570 0580                                     u18490 0394  
                                   u17850 4288                                     u17770 4112  
                                   u17690 3FF8                                     u19450 25BC  
                                   u19370 22C2                                     u19290 213E  
                                   u19610 119A                                     u19530 0F54  
                                   u16955 1D94                                     u17931 6934  
                                   u18811 0DC6                                     u18731 0A86  
                                   u18651 0818                                     u18571 057C  
                                   u18491 0390                                     u17851 4284  
                                   u17771 410E                                     u17691 3FF4  
                                   u19451 25B8                                     u19371 22BE  
                                   u19291 213A                                     u19611 1196  
                                   u19531 0F50                                     u17940 6B3C  
                                   u17860 683A                                     u18820 0E08  
                                   u18740 0B10                                     u18660 083C  
                                   u18580 05DC                                     u18900 7642  
                                   u17780 4152                                     u19460 25EA  
                                   u19380 23FA                                     u19700 1436  
                                   u19620 11CC                                     u19540 0FC0  
                                   u17941 6B38                                     u16965 1DC4  
                                   u17861 6836                                     u18821 0E04  
                                   u18741 0B0C                                     u18725 0A46  
                                   u18661 0838                                     u18581 05D8  
                                   u18901 763E                                     u17781 414E  
                                   u19461 25E6                                     u19381 23F6  
                                   u19701 1432                                     u19621 11C8  
                                   u19541 0FBC                                     u17950 6B6E  
                                   u16990 1EC4                                     u16974 1DE6  
                                   u17870 686C                                     u18750 0C3E  
                                   u18670 085C                                     u18590 064A  
                                   u18910 7652                                     u18830 5D26  
                                   u17790 4174                                     u19470 262E  
                                   u19390 241C                                     u19630 1228  
                                   u19550 101E                                     u17951 6B6A  
                                   u16991 1EC0                                     u16975 1DE2  
                                   u17871 6868                                     u18671 0858  
                                   u18591 0646                                     u18911 764E  
                                   u18831 5D22                                     u17791 4170  
                                   u19471 262A                                     u19391 2418  
                                   u19631 1224                                     u19551 101A  
                                   u17960 6B92                                     u16984 1E26  
                                   u16888 1BE6                                     u17880 687E  
                                   u18760 0C72                                     u18680 0870  
                                   u18920 766A                                     u18840 5D40  
                                   u19480 2656                                     u19720 14A0  
                                   u19640 1266                                     u19560 1052  
                                   u17961 6B8E                                     u16985 1E20  
                                   u16889 1BF8                                     u17881 687A  
                                   u18761 0C6E                                     u18681 086C  
                                   u18921 7666                                     u18841 5D3C  
                                   u19721 149C                                     u19641 1262  
                                   u17970 6BB0                                     u16898 1C2C  
                                   u17890 6890                                     u18770 0CDE  
                                   u18690 098E                                     u18930 7690  
                                   u18850 5D5A                                     u19490 26FE  
                                   u19730 14D6                                     u19650 12CC  
                                   u19570 109A                                     u17971 6BAC  
                                   u16899 1C40                                     u17891 688C  
                                   u18771 0CDA                                     u18755 0C34  
                                   u18691 098A                                     u18931 768C  
                                   u18851 5D56                                     u19491 26FA  
                                   u19731 14D2                                     u19715 1456  
                                   u19651 12C8                                     u19571 1096  
                                   u17980 6BCE                                     u18780 0D08  
                                   u19900 7A24                                     u18940 76A8  
                                   u18860 5DB4                                     u19740 1524  
                                   u19660 134C                                     u19580 10BC  
                                   u17981 6BCA                                     u18781 0D04  
                                   u19901 7A20                                     u18941 76A4  
                                   u18861 5DB0                                     u19485 264C  
                                   u19741 1520                                     u19661 1348  
                                   u19581 10B8                                     u19565 1048  
                                   u17990 6C02                                     u18790 0D4C  
                                   u19910 7A44                                     u18950 76CA  
                                   u19830 8572                                     u18870 5E10  
                                   u19750 15AA                                     u19590 10F6  
                                   u17991 6BFE                                     u18791 0D48  
                                   u19911 7A40                                     u18951 76C4  
                                   u19831 856E                                     u18871 5E0C  
                                   u19751 15A6                                     u19591 10F2  
                                   u19920 7A80                                     u18960 76CC  
                                   u18880 761C                                     u19840 8598  
                                   u19760 168E                                     u19680 13A2  
                                   u19921 7A7C                                     u18881 7618  
                                   u19841 8594                                     u19761 168A  
                                   u19681 139E                                     u19850 66AE  
                                   u18970 7710                                     u18890 7634  
                                   u19770 1710                                     u19690 13D0  
                                   u19851 66AA                                     u18971 770C  
                                   u18891 7630                                     u19771 170C  
                                   u19691 13CC                                     u19675 137C  
                                   u19860 6800                                     u18980 7728  
                                   u19780 87AA                                     i2l101 610C  
                                   u19861 67FC                                     u18981 7724  
                                   u19781 87A6                                     u18990 7736  
                                   u19790 87D0                                     u18991 7732  
                                   u19791 87CC                                     u19890 79EE  
                                   u19891 79EA                                     i2l125 8B8C  
                                   i2l420 8BF4                                     i2l416 89E2  
                                   i2l363 88DE                                     _OSCEN 39DD  
                                   _TRISA 3FC2                                     _TRISB 3FC3  
                                   _TRISC 3FC4                           __end_of_f_close 87E2  
                                   _FatFs 0264                           __end_of_chk_chr 82C0  
           SD_SPI_SectorRead@sector_count 0093                                     _ExCvt FEC9  
                     ___lmul@multiplicand 0064                           __end_of_f_mount 7AA2  
                              i2memcpy@d1 0001                                i2memcpy@s1 0003  
                         __end_of_dir_sdi 5392                     _SD_SPI_AsyncReadTasks 4726  
                         __end_of_f_write 1724                           __end_of_get_fat 4F90  
                            ?_RED_LED_OFF 0001                  ??_SD_SPI_AsyncWriteTasks 0083  
                         __end_of_ld_word 89A8                           __end_of_mem_cmp 7FC4  
                         __end_of_mem_cpy 81D6                           __end_of_mem_set 8A1E  
                           find_volume@br 0100                             find_volume@fs 0138  
                           find_volume@pt 011A                            disk_ioctl@buff 0061  
                                   pclath 3FFA                                     pclatu 3FFB  
                          disk_read@count 00AE                                     tablat 3FF5  
                          disk_ioctl@pdrv 0063                            ?_i2c_read_reg8 0066  
                                   plusw0 3FEB                                     plusw1 3FE3  
                                   plusw2 3FDB                           __end_of_put_fat 3904  
                                   status 3FD8                           __end_of_st_word 8AC6  
                         __end_of_sync_fs 5CFE                          __end_ofi2_memcpy 878A  
                           get_ldnumber@i 0064                             disk_write@res 00B4  
                             ?_SD_SendCmd 006B                       _get_board_unique_id 8BD4  
                         __initialization 83A2                       disk_initialize@pdrv 00B4  
                           main@can_setup 01AC                       disk_initialize@stat 00B5  
                            __end_of_main 5AC4                          __end_of_i2c_init 8AF6  
                        __end_of_i2c_read 77D2                     i2c_write_reg16@F22833 01BB  
        can_generate_timing_params@timing 0064                                    ??_main 01A4  
                           __activetblptr 0003                       get_message_type@msg 0001  
                       srb_init@pool_size 006B                              ?_SDSLOW_open 0001  
                      i2c_write_reg8@data 0069                      ?_get_board_unique_id 0001  
                        ?_fxls_get_whoami 0001                   _SD_SPI_IsWriteProtected 8D08  
                                  _ADACCH 3EE9                                    _ADACCL 3EE8  
                                  _ADACCU 3EEA                                    _ADACQH 3EF4  
                                  _ADACQL 3EF3                                    _ADCON0 3EF8  
                                  _ADCON1 3EF9                                    _ADCON2 3EFA  
                                  _ADCON3 3EFB                                    _ADERRH 3EE3  
                                  _ADERRL 3EE2                                    _ADLTHH 3EDF  
                                  _ADLTHL 3EDE                                    _ADRESH 3EF0  
                                  _ADRESL 3EEF                                    _ADPREH 3EF7  
                                  _ADPREL 3EF6                             SD_SendCmd@cmd 007C  
                                  _ADSTAT 3EFC                                    _ADUTHH 3EE1  
                                  _ADUTHL 3EE0                                    _ANSELA 3A40  
                                  _ANSELB 3A50                                    _ANSELC 3A60  
                            i2c_read@data 0060                        SD_SPI_SectorRead@i 0099  
                                  _RC1PPS 3A11                                    _RC3PPS 3A13  
                                  _RC5PPS 3A15                                    _ODCONA 3A42  
                                  _ODCONB 3A52                                    _ODCONC 3A62  
                                  i2l2200 7CD8                                    i2l2213 882A  
                                  i2l2135 8D22                                    i2l2144 8D1A  
                                  i2l2153 8D12                                    i2l2138 8D26  
                                  i2l2147 8D1E                                    i2l2156 8D16  
                                  i2l2192 7D20                                    i2l6000 8B7C  
                                  i2l5310 8D20                                    i2l5312 8D24  
                                  i2l5320 8D14                                    i2l5314 8D18  
                                  i2l5316 8D1C                                    i2l2924 8788  
                                  i2l5318 8D10                                    _INLVLA 3A44  
                                  _INLVLB 3A54                                    _INLVLC 3A64  
                                  _INLVLE 3A84                                    i2l5998 8B68  
                                  i2l9572 89C4                                    i2l9566 89A8  
                                  i2l9568 89B8                                    i2l9980 888C  
                                  i2l9982 889C                                    i2l9984 88A4  
                                  i2l9994 8BD4                                    i2l9986 88B4  
                                  i2l9996 8BE4                                    i2l9988 88CA  
                                  _OSCFRQ 39DF           SD_SPI_AsyncWriteTasks@data_byte 004A  
                                  _RXB0D0 3F86                                    _RXB1D0 37F6  
                                  _TXB0D0 37E6                          __end_of_can_init 6802  
                                  _TRISA2 1FE12                                    _TRISA3 1FE13  
                                  _TRISC0 1FE20                                    _TRISA4 1FE14  
                                  _TRISC1 1FE21                                    _TRISB3 1FE1B  
                                  _TRISC2 1FE22                                    _TRISC6 1FE26  
                        __end_of_can_send 74C2                      __end_of_dir_register 78D4  
                        __end_of_check_fs 6C44                   ?_SD_SPI_MediaInitialize 0001  
      build_board_stat_msg@error_data_len 006F                            can_init@timing 0060  
 can_generate_timing_params@can_frequency 0060                          __end_of_dir_find 6688  
                       __end_of_SPI1_Open 79C2                          __end_of_dir_next 4726  
                            ?_move_window 00C8                      __end_of_create_chain 33E0  
                             i2memcpy@tmp 000B                          __end_of_ld_clust 804E  
                        __end_of_ld_dword 7DE0                                    ___lmul 840E  
                               ??_dbc_2nd 0062                                 ??_dbc_1st 0062  
                               ??___lldiv 0068                                    _f_open 1F40  
                            ?_timer0_init 0001                                    _ioInfo 002D  
                               ??___lwdiv 0064                      __end_of_GREEN_LED_ON 8D1C  
                                  _f_sync 5CFE                                    _memcpy 86D4  
                                  _memset 85B0                                 ??_f_close 00DC  
                          find_volume@fmt 0137                                    _millis 8AF6  
                                  clear_0 83CC                                    clear_1 83DE  
                                  clear_2 83EA                                    clear_3 83F6  
                          find_volume@rfs 00DC                                 ??_chk_chr 0064  
                          find_volume@vol 0120                   SD_SendCmd@address_bytes 0078  
                                  isa$std 0001                                 ??_f_mount 00EC  
                               ??_dir_sdi 00F3                                 ??_f_write 011F  
                               ??_get_fat 00D9                      _build_board_stat_msg 74C2  
                            _can_send_rdy 0000                                 ??_ld_word 0062  
    SD_SPI_DelayMilliseconds@milliseconds 0063                     ??_get_board_unique_id 0002  
                         _ADCC_Initialize 8612                                 ??_mem_cmp 0066  
                               ??_mem_cpy 0066                                 ??_mem_set 0066  
                          _PMD_Initialize 8B8E                          __end_of_validate 73B0  
                            __pdataCOMRAM 004F                    ?_SD_SPI_AsyncReadTasks 0082  
                    __end_of_get_ldnumber 6974                ?_SD_SPI_IsMediaInitialized 0001  
                            __mediumconst FEC8                           disk_read@sector 00AA  
                        __end_of_srb_init 8156                                    tblptrh 3FF7  
                                  tblptrl 3FF6                                    tblptru 3FF8  
                        __end_of_st_clust 888C                            _i2c_write_reg8 8B1C  
                        __end_of_st_dword 80D4                                 ??_put_fat 00DD  
                               ??_st_word 0064                          __end_of_txb_init 8A90  
              __end_of_get_reset_board_id 88E0                           ??_i2c_read_reg8 0069  
                               ??_sync_fs 00CA        SD_SPI_AsyncWriteTasks@WriteTimeout 003A  
                       _SYSTEM_Initialize 8CB6                              i2c_write@len 0061  
          __end_of_SD_SPI_MediaInitialize 1F40                                __accesstop 0060  
          build_board_stat_msg@error_data 006D                   __end_of__initialization 8408  
          build_board_stat_msg@error_code 006C                            get_ldnumber@tc 0066  
                          disk_write@buff 00AB                            get_ldnumber@tp 006B  
                          get_ldnumber@tt 0067                            _SPI1_ReadBlock 0000  
                          disk_write@pdrv 00B3                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 0001                        fxls_get_whoami@res 006C  
                           __end_of_ExCvt FF49                            __pcstackCOMRAM 0001  
                  can_msg_handler@dest_id 000F                    _write_timestamp_3bytes 8A1E  
                     ??_SYSTEM_Initialize 0060                        _SD_SPI_SectorWrite 6D9C  
                   i2c_write_reg8@address 0068                              txb_init@pool 006F  
                       ??_SPI1_Initialize 0060                  ?_timer0_handle_interrupt 0001  
                   ?_build_board_stat_msg 0068                    __end_of_PMD_Initialize 8BB2  
                          _sdmmc_cmdtable FF49                     SPI1_ExchangeByte@data 0060  
                     ?_SD_SPI_SectorWrite 0090                         __end_of_i2c_write 76CE  
                      _spi1_configuration FFC1             __end_of_SD_SPI_IsMediaPresent 8D10  
               ??_SD_SPI_IsWriteProtected 0060                    __end_of_i2c_write_reg8 8B42  
                               ?i2_memcpy 0001                          _seen_can_message 0048  
       __end_of_SD_SPI_IsMediaInitialized 8CB6             SD_SPI_AsyncWriteTasks@command 0049  
                              _can_rcv_cb 0046                 __end_of_SYSTEM_Initialize 8CC8  
                              __pbssBANK1 01B3                                __pbssBANK2 0200  
              __end_of_SET_ACCEL_I2C_ADDR 8C6E                                 ?_i2c_init 0001  
                               ?_i2c_read 0060                              ??_RED_LED_ON 0001  
                          _send_status_ok 7020                          _mediaInformation 004F  
                    ??_SD_SPI_SectorWrite 0098                              _BLUE_LED_OFF 8D24  
                          _SPI1_WriteByte 0000                                   IVTBASEH 3FD6  
                                 IVTBASEL 3FD5                                   IVTBASEU 3FD7  
                        _find_volume$3100 0114                          _find_volume$3099 0110  
                  get_board_unique_id@msg 0001                   _buf@can_tx_buffer$F1072 01C4  
                  _SD_SPI_AsyncWriteTasks 272E                                   ?___lmul 0060  
                                 _I2C1CLK 3D7B                                   _I2C1CNT 3D6C  
                                 _I2C1ERR 3D76                                   _I2C1PIR 3D79  
                                 _I2C1RXB 3D6A                                   _I2C1TXB 3D6B  
                 __end_of_ADCC_Initialize 8674                                   ?_f_open 0141  
                  __end_of_sdmmc_cmdtable FF99                                   ?_f_sync 00D3  
                       ??_disk_initialize 00B4                                   _ADFLTRH 3EE7  
                                 _ADFLTRL 3EE6                                   ?_memcpy 0060  
                                 ?_memset 0060                         ??_BLUE_LED_TOGGLE 0060  
                            ?_sync_window 00B5                            ___lmul@product 0068  
                                 ?_millis 0060                                   _ADPREVH 3EEE  
                                 _ADPREVL 3EED                                   _ADSTPTH 3EE5  
                                 _ADSTPTL 3EE4                              ??_SPI1_Close 0060  
                         ?_PMD_Initialize 0001                                   _ANSELC0 1D300  
                                 _CLKRCLK 3CE6                                   _CLKRCON 3CE5  
                                 i2l10000 8BEA                                 ?_can_init 0060  
                                 i2l11100 876A                                   i2l11102 876E  
                      __end_of_RED_LED_ON 8D14                                   i2l11200 6082  
                                 i2l11202 6094                                   i2l11060 7C56  
                                 i2l11220 6106                                   i2l11212 60DE  
                                 i2l11204 60B0                                   i2l11070 7C82  
                                 i2l11062 7C66                                   i2l11206 60B4  
                                 i2l11072 7C92                                   i2l11064 7C66  
                                 i2l11224 611A                                   i2l11216 60F2  
                                 i2l11208 60CA                                   i2l11074 7CA2  
                                 i2l11082 7CDE                                   i2l11066 7C66  
                                 i2l11058 7C52                                   i2l11170 5F28  
                                 i2l11076 7CB2                                   i2l11092 8730  
                                 i2l11180 5F8E                                   i2l11172 5F36  
                                 i2l11078 7CC6                                   i2l11094 8744  
                                 i2l11190 6016                                   i2l11182 5FCC  
                                 i2l11174 5F58                                   i2l11096 8754  
                                 i2l11184 5FE4                                   i2l11176 5F66  
                                 i2l11098 8758                                   i2l11186 5FF6  
                                 i2l11178 5F76                                   i2l11196 602A  
                                 i2l11188 6012                                   i2l11198 606A  
                               ?_can_send 006B                                   i2l12950 87EE  
                                 i2l12960 8826                                   i2l12952 8800  
       SD_SPI_AsyncReadTasks@blockCounter 0044                                   i2l12954 8804  
                                 i2l12956 8814                                   i2l12958 8822  
                                 i2l17800 7CFC                                   i2l17802 7D0A  
                         ?_i2c_write_reg8 0066                                 ?_check_fs 00D3  
                              _disk_ioctl 8BB2                                ??i2_memcpy 0007  
               ?_SD_SPI_DelayMilliseconds 0001                                   _OSCCON1 39D9  
                                 _OSCCON3 39DB                            follow_path@res 0140  
                              _disk_write 847A                                   _SPI1CLK 3D1C  
                                 _SPI1RXB 3D10                                   _SPI1TXB 3D11  
              SD_SPI_AsyncWriteTasks@info 0082                                   _OSCTUNE 39DE  
                                 _SLRCONA 3A43                                   _SLRCONB 3A53  
                                 _SLRCONC 3A63                            remove_chain@fs 010D  
                               ?_dir_find 012D                                 ?_dir_next 00FA  
         SD_SPI_SectorRead@sector_address 008D                       SD_SPI_SectorWrite@i 009C  
                               ?_ld_clust 0067                                 ?_ld_dword 0060  
                  __end_of_send_status_ok 715A                                ??_i2c_init 0060  
                              ??_i2c_read 0062                             ?_remove_chain 00F4  
                                 _CurrVol 004C                         ??_send_status_err 0077  
                            ??_SD_SendCmd 0070                        __end_of_SPI1_Close 8D00  
                       __end_of_dir_clear 6D9C                         __end_of_dir_alloc 6AE4  
                                 __Hparam 0000                         __end_of_clst2sect 7B7E  
                                 __Lparam 0000                                 ?_validate 0062  
         write_timestamp_3bytes@timestamp 0060                         __end_of_disk_read 854A  
                               ?_srb_init 0067                              _f_write$3415 012B  
                              f_close@res 00DE                                 ?_st_clust 0064  
                                 _dbc_2nd 8CC8                                   _dbc_1st 8CD4  
                               ?_st_dword 0060                                   ___lldiv 7E86  
                              check_fs@fs 00D3                                   ___lwdiv 81D6  
                  ??_build_board_stat_msg 0072                                 ?_txb_init 006F  
                       send_status_ok@buf 0191                                   _f_close 878A  
                                 __pcinit 83A2                                   _chk_chr 824C  
                                 __ramtop 1000                              _get_fat$2577 00E1  
                                 _f_mount 79C2                           i2c_read@address 0063  
                   __end_of_GREEN_LED_OFF 8D20                                   __ptext0 5888  
                                 __ptext1 8A58                                   __ptext2 80D4  
                                 __ptext3 81D6                                   __ptext4 8BF6  
                                 __ptext5 7020                                   __ptext6 0ED2  
                                 __ptext7 1F40                                   __ptext8 5646  
                                 __ptext9 5392                                   _dir_sdi 4F90  
                                 _f_write 0ED2                               validate@obj 0062  
                                 _get_fat 4B78                               validate@res 006C  
                             validate@rfs 0064                                chk_chr@chr 0062  
                            _dir_register 77D2                                chk_chr@str 0060  
                                 _ld_word 896A                                   _mem_cmp 7F2C  
                                 _mem_cpy 8156                                ??_can_init 0064  
                   _OSCILLATOR_Initialize 8C88                                   _mem_set 89E4  
                              ??_can_send 006D                               _I2C1ERRbits 3D76  
                              ??_check_fs 00D9                           find_volume@mode 00DE  
                         find_volume@path 00DA                     SD_SPI_SectorRead@info 009B  
                         find_volume@nrsv 0122                           find_volume@stat 0128  
                ??_PIN_MANAGER_Initialize 0060                               _I2C1PIRbits 3D79  
                            _create_chain 2DF4                        __end_of_SD_SendCmd 3E0A  
                              ??_dir_find 00FE                build_board_stat_msg@output 0070  
                                 _put_fat 33E0                                ??_dir_next 0117  
                       __end_of_fxls_init 7286                                   _st_word 8A90  
                                 _tx_pool 0200                                ??_ld_clust 006B  
                         i2c_read@timeout 0064                                   _sync_fs 5AC4  
                              ??_ld_dword 0064                      end_of_initialization 8408  
                         ?_send_status_ok 0001                              _GREEN_LED_ON 8D18  
                              f_open@clst 0162                                f_open@mode 0145  
                              f_open@path 0143                            ??_remove_chain 0100  
                                 memcpy@d 0067                                   memcpy@n 0064  
                                 memcpy@s 0069                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                               i2u1004_40 89B8                                 i2u1004_41 89B4  
                       __end_of_spiMaster FFC1                           disk_status@pdrv 0060  
                               i2u1080_40 8BE4                                 i2u1080_41 8BE0  
                         disk_status@stat 0061                                 i2u1078_40 889C  
                               i2u1078_41 8898                                 i2u1270_45 5F98  
                               i2u1079_40 88CA                                 i2u1271_40 5FF6  
                               i2u1079_41 88C6                                 i2u1271_41 5FF2  
                               i2u1256_40 7C7E                                 i2u1280_40 6106  
                               i2u1264_40 5F36                                 i2u1256_41 7C7A  
                               i2u1280_41 6102                                 i2u1264_41 5F32  
                               i2u1257_40 7CC6                                 i2u1281_40 611A  
                               i2u1273_40 602A                                 i2u1272_48 6000  
                               i2u1265_40 5F44                                 i2u1257_41 7CC2  
                               i2u1281_41 6116                                 i2u1273_41 6026  
                               i2u1272_49 6012                                 i2u1265_41 5F40  
                               i2u1258_40 7CD8                                 i2u1266_40 5F58  
                               i2u1258_41 7CD4                                 i2u1266_41 5F54  
                               i2u1274_45 6034                                 i2u1259_40 8788  
                               i2u1275_40 6094                                 i2u1267_40 5F66  
                               i2u1259_41 8784                                 i2u1275_41 6090  
                               i2u1267_41 5F62                                 i2u1268_40 5F76  
                               i2u1268_41 5F72                                 i2u1277_40 60CA  
                               i2u1276_48 609E                                 i2u1269_40 5F8E  
                               i2u1277_41 60C6                                 i2u1276_49 60B0  
                               i2u1269_41 5F8A                                 i2u1278_40 60DE  
                               i2u1278_41 60DA                                 i2u1279_40 60F2  
                               i2u1279_41 60EE                                 i2u1480_40 8822  
                               i2u1480_41 881E                             ??_BLUE_LED_ON 0001  
                               i2u1478_40 8800                                 i2u1478_41 87FC  
                               i2u1479_40 8814                                 i2u1479_41 8810  
                         ___lldiv@divisor 0064                                f_mount@cfs 00EF  
                              f_mount@res 00EC                                f_mount@opt 00EB  
                              f_mount@vol 00F1                           ___lldiv@counter 006C  
                            _get_ldnumber 6802                                ??_validate 0066  
                               _SPI1TCNTL 3D12                                ??_srb_init 006F  
                                 postdec1 3FE5                                   postdec2 3FDD  
                                 postinc0 3FEE                                   postinc1 3FE6  
                                 postinc2 3FDE                                ??_st_clust 006C  
                          move_window@res 00D2                                ??_st_dword 0066  
                        ?_ADCC_Initialize 0001                                 _SPI1_Open 78D4  
                              ??_txb_init 0077                                dir_clear@n 00D8  
                              dir_alloc@n 0136                          remove_chain@clst 00F6  
                              dir_find@dp 012D                                dir_find@fs 012F  
                 ??_SD_SPI_AsyncReadTasks 0083          SD_SPI_SectorWrite@sector_address 0090  
                              dir_sdi@csz 0100                                dir_sdi@ofs 00EF  
                        _get_message_type 89A8                                dir_next@dp 00FA  
            SD_SPI_MediaInitialize@c_size 00A9                                dir_next@fs 0127  
                             ?_disk_ioctl 0060        SD_SPI_AsyncWriteTasks@blockCounter 0042  
                           i2c_write@data 0060                                f_write@btw 011B  
                              f_write@res 0131               ??_SD_SPI_IsMediaInitialized 0060  
                             ?_disk_write 00AB                                 _TRISCbits 3FC4  
                             srb_init@ctx 0067                         ??_can_msg_handler 000B  
                              get_fat@obj 00D3                                get_fat@val 00E5  
                         get_ldnumber@vol 0069                           disk_write@count 00B1  
                          _FatFs@ff$F2407 01C2                    SPI1_ExchangeBlock@data 0064  
                           ??_create_name 006C                                ld_clust@cl 006F  
                              ld_clust@fs 0067                           _SPI1_Initialize 8C6E  
                           ??_find_volume 00DF                   ?_write_timestamp_3bytes 0060  
                              ld_dword@rv 0069                             ??_disk_status 0060  
            __end_of_can_handle_interrupt 6122                        _get_reset_board_id 888C  
             __end_of_get_board_unique_id 8BF6                                ?_SPI1_Open 0001  
                     __end_of_BLUE_LED_ON 8D24                            __end_of___lmul 847A  
                             st_clust@dir 0066                           can_send@message 006B  
                          __end_of_f_open 272E                             __pidataCOMRAM 8CE0  
                     ?_get_reset_board_id 0005                            __end_of_f_sync 5F28  
                               i2memcpy@d 0007                                 i2memcpy@n 0005  
                               i2memcpy@s 0009                               _ECANCONbits 3F91  
                          __end_of_memcpy 8730                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 8612                            __end_of_millis 8B1C  
                              ld_word@ptr 0060                       start_initialization 83A2  
                             st_dword@val 0062                               st_dword@ptr 0060  
                 can_msg_handler@msg_type 000D                                 _i2c_write 75CA  
                              mem_cmp@cnt 0064                                mem_cmp@dst 0060  
                              ivt0x8_base 0008                                mem_cmp@src 0062  
                             _CANSTATbits 3F8E                        can_msg_handler@msg 000A  
                              mem_cpy@cnt 0064                               put_fat@clst 00D5  
                              mem_cpy@dst 0060                      ??_get_reset_board_id 0007  
                   __end_of_i2c_read_reg8 85B0                                mem_cpy@src 0062  
          __end_of_write_timestamp_3bytes 8A58                           _disk_initialize 88E0  
                 ?_SD_SPI_AsyncWriteTasks 0082                                mem_set@cnt 0064  
                              mem_set@dst 0060                                mem_set@val 0062  
                         _BLUE_LED_TOGGLE 8D00                 _SD_SPI_IsMediaInitialized 8CA0  
                    i2c_write_reg8@F22827 01BE                             ??_follow_path 0137  
                    fxls_init@buf_config1 0070                       __end_of_create_name 42B4  
      __end_of_can_generate_timing_params 6316                _can_generate_timing_params 6122  
                        ??_PMD_Initialize 0060          __end_of_SD_SPI_DelayMilliseconds 83A2  
                                ??___lmul 0068                        _SET_ACCEL_I2C_ADDR 8C50  
                                ??_f_open 0146                                  ??_f_sync 00D5  
                     __end_of_find_volume 0ED2                       __end_of_disk_status 8334  
                                ??_memcpy 0066                          ??_i2c_write_reg8 0068  
                                ??_memset 0066                             ??_SDFAST_open 0062  
                                ??_millis 0064                        SD_SendCmd@response 007D  
                              memset@dest 0060                      __end_of_remove_chain 5888  
                     ?_SET_ACCEL_I2C_ADDR 0001                               __pbssBIGRAM 0264  
                           _SPI1_ReadByte 0000                               __pbssCOMRAM 002D  
          SD_SPI_AsyncWriteTasks@response 0087                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             ??_RED_LED_OFF 0001  
                   _SD_SPI_IsMediaPresent 8D0C                         _SD_SPI_SectorRead 6EDE  
                             _BRGCON1bits 3703                               _BRGCON2bits 3704  
                             _BRGCON3bits 3705                                ?_i2c_write 0060  
                         _send_status_err 8928                   __end_of_SPI1_Initialize 8C88  
                   fxls_init@sens_config1 006F                     fxls_init@sens_config2 0074  
                   fxls_init@sens_config3 0073                     fxls_init@sens_config4 006E  
                            check_fs@sect 00D5                        ?_SD_SPI_SectorRead 008D  
                         _SPI1_WriteBlock 0000            __end_of_SD_SPI_AsyncWriteTasks 2DF4  
                       _fxls_get_prod_rev 8C32                      ??_SET_ACCEL_I2C_ADDR 0060  
                     ??_SD_SPI_SectorRead 0095                        ?_fxls_get_prod_rev 0001  
                             _BLUE_LED_ON 8D20             build_board_stat_msg@timestamp 0068  
         SD_SPI_DelayMilliseconds@timeout 0064                     get_reset_board_id@msg 0005  
                        ___lwdiv@dividend 0060                    _PIN_MANAGER_Initialize 8674  
                       ??_fxls_get_whoami 006C                             __pmediumconst FEC8  
                               __ptext100 8D10                                 __ptext101 8D14  
                               __ptext102 8D18                                 __ptext103 8D1C  
                               __ptext104 8D20                                 __ptext105 8D24  
                               _dir_clear 6C44                                  ?_dbc_2nd 0060  
                               _dir_alloc 6974                                  ?_dbc_1st 0060  
                                ?___lldiv 0060                                  _I2C1ADB1 3D6E  
                     ??_fxls_get_prod_rev 006C                                  ?___lwdiv 0060  
                               _clst2sect 7AA2                               ??_SPI1_Open 0060  
                                _I2C1CON0 3D73                                  _I2C1CON1 3D74  
                                _I2C1CON2 3D75                  ?_SD_SPI_IsWriteProtected 0001  
                                ?_f_close 00DA                            _RED_LED_TOGGLE 8D04  
                               _disk_read 84E2                                  ?_chk_chr 0060  
                           follow_path@dp 0133                             follow_path@fs 013D  
                           follow_path@ns 013F                             _validate$3131 006A  
                     __end_of_follow_path 5646                                  ?_f_mount 00E7  
                                ?_dir_sdi 00ED                                  ?_f_write 0117  
                                ?_get_fat 00D3                         _interrupt_handler 87E2  
                           ??_SDSLOW_open 0062                                  ?_ld_word 0060  
                                ?_mem_cmp 0060                                  ?_mem_cpy 0060  
                                ?_mem_set 0060                 __end_of_SD_SPI_SectorRead 7020  
                             _COMSTATbits 3F90                          ??_send_status_ok 0100  
                      ?_interrupt_handler 0001                                  _CANRXPPS 3AED  
                     __end_of_SDFAST_open 8CF2                  ??_SD_SPI_MediaInitialize 0082  
                               f_close@fp 00DA                                 f_close@fs 00DC  
                    _can_handle_interrupt 5F28                            i2c_init@clkdiv 0060  
                                ?_put_fat 00D3                          ___lwdiv@quotient 0065  
                                ?_st_word 0060                   __end_of_disk_initialize 8928  
                 __end_of_BLUE_LED_TOGGLE 8D04                                  ?_sync_fs 00C8  
               __end_of_fxls_get_prod_rev 8C50                         find_volume@fasize 012D  
                  SET_ACCEL_I2C_ADDR@addr 0060  SD_SPI_AsyncWriteTasks@preEraseBlockCount 008C  
                     ??_interrupt_handler 002B                __end_of_SPI1_ExchangeBlock 7E86  
                     __end_of_RED_LED_OFF 8D18                   SD_SPI_SectorRead@buffer 0091  
                               _fxls_init 715A                               _create_name 3E0A  
                                _LATAbits 3FBA                         find_volume@szbfat 0116  
                               f_open@bcs 0156                                 f_open@ofs 015E  
                               f_open@res 0168                         find_volume@sysect 011C  
                 SD_SPI_SectorRead@result 0097                                  _PIE3bits 3993  
                                _PIE5bits 3995                  __end_of_get_message_type 89E4  
                 SD_SPI_SectorRead@status 0098            SD_SPI_SectorWrite@sector_count 0096  
                            _SPI1CON0bits 3D14                      fxls_init@int_pin_sel 0072  
                             _find_volume 001E                               _disk_status 82C0  
                           ??_move_window 00CE                                 f_mount@fs 00E7  
                               f_mount@rp 00ED                           follow_path@path 0135  
                           _I2C1STAT1bits 3D78                                  _PIR1bits 39A1  
                                _PIR2bits 39A2                                  _SPI1BAUD 3D19  
                                _PIR3bits 39A3                                  i2u535_40 8B7C  
                                i2u535_41 8B78                                  _SPI1CON0 3D14  
                                _SPI1CON1 3D15                                  _SPI1CON2 3D16  
                                _PIR5bits 39A5             SD_SPI_AsyncReadTasks@response 0087  
                               _spiMaster FF99                      i2c_read_reg8@address 0069  
                           move_window@fs 00C8                                  _RXB0SIDH 3F81  
                                _RXB0SIDL 3F82                                  _RXB1SIDH 37F1  
                                _RXB1SIDL 37F2                    __end_of_RED_LED_TOGGLE 8D08  
                           ??_timer0_init 0060                                ?_dir_clear 00C8  
                               dir_find@c 0131                                ?_dir_alloc 012D  
                         remove_chain@obj 00F4                           remove_chain@res 010C  
                                _TXB0SIDH 37E1                                  _TXB0SIDL 37E2  
                         remove_chain@nxt 0108                                ?_clst2sect 006C  
                                _RXM0SIDH 37B8                                  _RXM0SIDL 37B9  
                               f_sync@dir 00D6                                  _RXM1SIDH 37BC  
                                _RXM1SIDL 37BD                                 f_sync@res 00D5  
                               dir_sdi@dp 00ED                                 dir_sdi@fs 0108  
                         _can_msg_handler 7C52                                ?_disk_read 00A8  
               __end_of_interrupt_handler 8838                                 f_write@cc 0134  
                               f_write@bw 011D                                 f_write@fp 0117  
                               f_write@fs 0140               SD_SPI_MediaInitialize@count 00A8  
             SD_SPI_MediaInitialize@index 00A6                                 get_fat@bc 00E9  
                               get_fat@fs 00EB                                 get_fat@wc 00E3  
                _SD_SPI_DelayMilliseconds 8334                                _ADCON0bits 3EF8  
                              _ADCON1bits 3EF9                                _ADCON2bits 3EFA  
                              _ADCON3bits 3EFB                   __end_of_send_status_err 896A  
           __end_of_SD_SPI_AsyncReadTasks 4B78                              ??_disk_ioctl 0063  
                    i2c_read_reg8@success 006A                    ?_SD_SPI_IsMediaPresent 0001  
                                i2_memcpy 8730                              ??_disk_write 00B3  
                   ?_can_handle_interrupt 0001                      srb_init@element_size 006D  
                 _timer0_handle_interrupt 8B68                               ??_i2c_write 0062  
                              st_clust@cl 0068                                st_clust@fs 0064  
                        ?_SPI1_Initialize 0001                               _INTCON0bits 3FD2  
                       ___lmul@multiplier 0060                       __end_of_SDSLOW_open 8CFA  
                               copy_data0 83B6                                _CANCONbits 3F8F  
                               ld_word@rv 0065                                  _i2c_init 8AC6  
                                _i2c_read 76CE                                ?_fxls_init 0001  
                       SD_SendCmd@address 006B             send_status_err@board_stat_msg 0077  
                              put_fat@res 00F3                                put_fat@val 00D9  
                       move_window@sector 00CA              send_status_ok@board_stat_msg 0199  
                         dir_next@stretch 00FC                                _ADSTATbits 3EFC  
                                __Hrparam 0000                                 memcpy@tmp 0066  
         __end_of_SD_SPI_IsWriteProtected 8D0C                                  __Lrparam 0000  
        can_handle_interrupt@rcvd_msg_753 0020                               _follow_path 5392  
                      __end_of_disk_ioctl 8BD4                           ?_RED_LED_TOGGLE 0001  
                      __end_of_disk_write 84E2                         SD_SendCmd@timeout 0076  
                 ??_OSCILLATOR_Initialize 0060                                st_word@val 0062  
                              st_word@ptr 0060                                _CIOCONbits 3700  
                     __end_of_move_window 7C52                               _SDFAST_open 8CEA  
            ??_can_generate_timing_params 0066                                 millis@res 0064  
                       txb_init@pool_size 0071                       __end_of_timer0_init 8C14  
                                dbc_2nd@c 0062                                  _can_init 6688  
                                _can_send 73B0                                  dbc_1st@c 0062  
             _SD_SPI_MediaInitialize$6394 00A1                                  _check_fs 6AE4  
                              _T0CON0bits 3FB8                     SD_SendCmd@longTimeout 0072  
                              _T0CON1bits 3FB9                        send_status_ok@time 0195  
                            _I2C1CON0bits 3D73                                  __pivt0x8 0008  
                         ___lwdiv@divisor 0062                           dir_register@res 013D  
                             _RED_LED_OFF 8D14                             dir_clear@ibuf 00D0  
                           dir_clear@clst 00CA                           ___lwdiv@counter 0064  
                           dir_clear@sect 00D2                                  __ptext10 7FC4  
                                __ptext11 64E0                                  __ptext20 42B4  
                                __ptext12 3E0A                                  __ptext21 6C44  
                                __ptext13 8CC8                                  __ptext30 804E  
                                __ptext22 7AA2                                  __ptext14 8CD4  
                                __ptext31 89E4                                  __ptext23 2DF4  
                                __ptext15 824C                                  __ptext40 8A1E  
                                __ptext32 8BB2                                  __ptext24 33E0  
                                __ptext16 77D2                                  __ptext41 8D04  
                                __ptext33 8838                                  __ptext25 4B78  
                                __ptext17 8156                                  __ptext50 79C2  
                                __ptext42 715A                                  __ptext34 8A90  
                                __ptext26 878A                                  __ptext18 6974  
                                __ptext51 001E                                  __ptext43 8B1C  
                                __ptext35 8D00                                  __ptext27 5CFE  
                                __ptext19 4F90                                  __ptext60 840E  
                                __ptext52 7D22                                  __ptext44 8C14  
                                __ptext36 8928                                  __ptext28 7286  
                                __ptext61 8334                                  __ptext53 6802  
                                __ptext45 8C32                                  __ptext37 8AF6  
                                __ptext29 5AC4                                  __ptext70 8CFA  
                                __ptext62 6AE4                                  __ptext54 82C0  
                                __ptext46 854A                                  __ptext38 73B0  
                                __ptext71 4726                                  __ptext63 7B7E  
                                __ptext55 8D08                                  __ptext47 75CA  
                                __ptext39 74C2                                  __ptext80 7F2C  
                                __ptext72 85B0                                  __ptext64 6316  
                                __ptext56 8D0C                                  __ptext48 76CE  
                                __ptext81 896A                                  __ptext73 7DE0  
                                __ptext65 847A                                  __ptext57 8CA0  
                                __ptext49 8AC6                                  __ptext90 8C50  
                                __ptext82 7E86                                  __ptext74 3904  
                                __ptext66 6D9C                                  __ptext58 88E0  
                                __ptext91 8612                                  __ptext83 6688  
                                __ptext75 86D4                                  __ptext67 272E  
                                __ptext59 1724                                  __ptext92 87E2  
                                __ptext84 6122                                  __ptext76 8B42  
                                __ptext68 84E2                                  _dir_find 64E0  
                                __ptext93 8B68                                  __ptext85 8CB6  
                                __ptext77 8CEA                                  __ptext69 6EDE  
                                __ptext94 5F28                                  __ptext86 8C6E  
                                __ptext78 8CF2                                  __ptext95 8730  
                                __ptext87 8B8E                                  __ptext79 78D4  
                                __ptext96 7C52                                  __ptext88 8674  
                                __ptext97 888C                                  __ptext89 8C88  
                                __ptext98 89A8                                  __ptext99 8BD4  
                                _dir_next 42B4                             dir_alloc@nent 012F  
                        ?_disk_initialize 0001                                  _ld_clust 7FC4  
                        ?_BLUE_LED_TOGGLE 0001                                  _ld_dword 7D22  
                          sync_window@res 00C7                                sync_fs@res 00D2  
                            _remove_chain 5646                             ?_BLUE_LED_OFF 0001  
                        find_volume@bsect 0131                          find_volume@nclst 0129  
 SD_SPI_AsyncReadTasks@longTimeoutCounter 01B3                          find_volume@tsect 0124  
                                f_open@dj 0169                                  f_open@cl 015A  
                                f_open@fp 0141                                  f_open@fs 0166  
                                f_open@dw 014E                                  f_open@sc 0152  
                 __end_of_can_msg_handler 7D22                                  _validate 7286  
                                isa$xinst 0000                                  _srb_init 80D4  
                can_init@receive_callback 0062                                  f_sync@fp 00D3  
                                f_sync@fs 00D8               ?_can_generate_timing_params 0060  
                       fxls_init@sys_mode 0075                               ??_dir_clear 00CE  
                             ??_dir_alloc 0131                                  _st_clust 8838  
                                _st_dword 804E                               ??_clst2sect 0072  
                           ??_sync_window 00B7                                  _txb_init 8A58  
                             ??_disk_read 00B0               SPI1_ExchangeBlock@blockSize 0062  
                          _millis_counter 003E                               _RXB0DLCbits 3F85  
                        ?_send_status_err 0001                               _RXB1DLCbits 37F5  
                           _GREEN_LED_OFF 8D1C                               _RXB0CONbits 3F80  
               ??_timer0_handle_interrupt 0001                               _SDSLOW_open 8CF2  
                             _RXB1CONbits 37F0                                  mem_cmp@d 0068  
                                mem_cmp@r 006C                                  mem_cmp@s 006A  
                  ??_can_handle_interrupt 0011                                 put_fat@bc 00F1  
                                mem_cpy@d 0066                                 put_fat@fs 00D3  
                                mem_cpy@s 0068                                  mem_set@d 0066  
                                memcpy@d1 0060                                  memcpy@s1 0062  
                    txb_init@can_tx_ready 0075                             clst2sect@clst 006E  
                                intlevel2 0000                           _fxls_get_whoami 8C14  
                          dir_register@dp 0139                            dir_register@fs 013B  
            can_handle_interrupt@rcvd_msg 0015                               ??_fxls_init 006C  
                              _RED_LED_ON 8D10                            ??_BLUE_LED_OFF 0001  
                            dir_clear@szb 00D6                          ___lldiv@dividend 0060  
                 ?_PIN_MANAGER_Initialize 0001                              dir_alloc@res 0138  
                             _TXB0DLCbits 37E5                             sync_window@fs 00B5  
    SD_SPI_AsyncReadTasks@SingleBlockRead 004B                               f_mount@path 00E9  
                             _TXB0CONbits 37E0                                 sync_fs@fs 00C8  
                            ?_BLUE_LED_ON 0001                               _move_window 7B7E  
                  _SD_SPI_MediaInitialize 1724                                _SPI1SDIPPS 3AE1  
                              _SPI1SCKPPS 3AE0                        i2c_read_reg8@value 0067  
                     txb_init@can_send_fp 0073                               _timer0_init 8BF6  
                           _overflow_flag 004D                                  put_fat@p 00EF  
                              _SPI1_Close 8CFA                            ?_GREEN_LED_OFF 0001  
       SD_SPI_MediaInitialize@c_size_mult 00A5                             ?_dir_register 0139  
         SD_SPI_MediaInitialize@block_len 00A7                               dir_clear@fs 00C8  
                         fxls_init@int_en 0071                               dir_alloc@dp 012D  
                             dir_alloc@fs 0134                          ___lldiv@quotient 0068  
                     __end_of_sync_window 64E0                               dir_find@res 0132  
                       remove_chain@pclst 00FA                          i2c_write@address 0063  
                           ?_create_chain 00F4                         i2c_read_reg8@data 006B  
                            dir_next@clst 0129                          _create_name$2961 006E  
                        _create_name$2966 0070                             ?_GREEN_LED_ON 0001  
                             clst2sect@fs 006C                               dir_sdi@clst 0104  
              __end_of_SD_SPI_SectorWrite 6EDE            __end_of_PIN_MANAGER_Initialize 86D4  
                       ??_ADCC_Initialize 0060                          i2c_read_reg8@reg 0066  
                            ?_create_name 0068                               dir_next@ofs 0123  
                            f_write@csect 0132                          i2c_write@timeout 0064  
         __end_of_timer0_handle_interrupt 8B8E                              f_write@wbuff 012F  
                            _put_fat$2606 00EB                              _put_fat$2607 00ED  
                    fxls_get_prod_rev@res 006C                               f_write@buff 0119  
                             f_write@clst 013A                                _SD_SendCmd 3904  
                             f_write@sect 0136                              ?_find_volume 00DA  
                             f_write@wcnt 013E                             ?_get_ldnumber 0060  
                SD_SPI_SectorWrite@buffer 0094                         ?_get_message_type 0001  
                            ?_disk_status 0001                __end_of_spi1_configuration FFD0  
              ??_SD_SPI_DelayMilliseconds 0061                          ?_can_msg_handler 000A  
                  SD_SPI_SectorWrite@info 009E  
